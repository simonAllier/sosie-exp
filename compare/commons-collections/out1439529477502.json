{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.countMatches":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":52,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":150,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":144,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":129,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":176,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":173,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":169,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":31,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":85,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":131,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":2,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":1,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":168,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":47},"transformations":[{"failures":[],"tindex":"d3043b4c-4243-11e5-b9a7-05e99cd113f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"d304625d-4243-11e5-b9a7-6f6b0a203161","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"entry","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:412","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[],"tindex":"d304625e-4243-11e5-b9a7-f76f76adf799","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:274","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0],"tindex":"d304625f-4243-11e5-b9a7-f38a17214165","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:827","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"d3046260-4243-11e5-b9a7-47c3e1e0a83a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(org.apache.commons.collections4.OrderedMap<? extends K, ? extends V>));\n    return org.apache.commons.collections4.OrderedMap<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:66","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.UnmodifiableOrderedMap<K, V>(org.apache.commons.collections4.OrderedMap<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"d3046261-4243-11e5-b9a7-d53497cff656","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantFactory:55","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory))"},"variableMap":{"org.apache.commons.collections4.functors.ConstantFactory.NULL_INSTANCE":"org.apache.commons.collections4.functors.ExceptionFactory.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"status":-2},{"failures":[1,2,3,4],"tindex":"d3046262-4243-11e5-b9a7-2fce54bc996f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-1},{"failures":[5,6],"tindex":"d3048973-4243-11e5-b9a7-cd47c982d864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[],"tindex":"d3048974-4243-11e5-b9a7-c9111592b2b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"status":0},{"failures":[],"tindex":"d3048975-4243-11e5-b9a7-195843751c65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:507","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"added","h":"added","right":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"d3048976-4243-11e5-b9a7-93799e1bc7b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:276","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\");\n} "},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149],"tindex":"d3048977-4243-11e5-b9a7-692eb177262c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:566","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[150,151],"tindex":"d304b088-4243-11e5-b9a7-878b4ea3d5e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"d304b089-4243-11e5-b9a7-8f47c600b738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:177","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    this.java.util.Map<K, V>[][int].clear();\n}"},"status":-2},{"failures":[],"tindex":"d304b08a-4243-11e5-b9a7-ed29d4584825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":0},{"failures":[],"tindex":"d304b08b-4243-11e5-b9a7-55218ad35d7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:426","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"left","root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:507","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"d304b08c-4243-11e5-b9a7-2b8f8802c050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1004","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.ValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"status":-2},{"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"d304b08d-4243-11e5-b9a7-b569116f6547","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:83","type":"CtAssignmentImpl","sourcecode":"char = 0"},"variableMap":{"k":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:85","type":"CtAssignmentImpl","sourcecode":"char = java.lang.String.charAt(int)"},"status":-1},{"failures":[],"tindex":"d304d79e-4243-11e5-b9a7-b344e9b2f246","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"status":-2},{"failures":[177],"tindex":"d304d79f-4243-11e5-b9a7-c5237febc149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1822","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    return int <= 0;\n} else {\n    return int < 0;\n}"},"variableMap":{"ret":"index","forceInclusive":"result","toInclusive":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}