{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":132,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":64,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":125,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKey":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":115,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutNullValue":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":81,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":9,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":56,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":0,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":49,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":42,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":5,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSimpleSerialization":137,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":2,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":144,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":59,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":58,"org.apache.commons.collections4.map.PredicatedMapTest.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":68,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":129,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":139,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":22,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKey":55,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":40,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":143,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":95,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":111,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":140,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":102,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":24,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":110,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":103,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":11,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":73,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":86,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":70,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":104,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":52,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":109,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":19,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":117,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testFullMapIterator":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKey":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":124,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":87,"org.apache.commons.collections4.map.PredicatedMapTest.testSimpleSerialization":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":119,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":62,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":26,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":45,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":113},"transformations":[{"failures":[0],"tindex":"ef9fe195-24d3-11e5-9919-b9752b9ccf48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"efa008a6-24d3-11e5-9919-5f2457a7ae94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:100","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) == false) {\n    throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"));\n} "},"status":-1},{"failures":[],"tindex":"efa008a7-24d3-11e5-9919-75bfdad2330c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"map","delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"efa008a8-24d3-11e5-9919-ede1577c149d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130],"tindex":"efa008a9-24d3-11e5-9919-d38e3f3fa6a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:176","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.put(V, K)"},"status":-1},{"failures":[],"tindex":"efa02fba-24d3-11e5-9919-db7c3ebdaa7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:556","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"efa02fbb-24d3-11e5-9919-5372f9bd61e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:295","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"efa02fbc-24d3-11e5-9919-e97ceb4b2fc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[131,132,133,134],"tindex":"efa02fbd-24d3-11e5-9919-7bcfccf59382","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"efa02fbe-24d3-11e5-9919-aff0c3a020c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"match":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:211","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"efa056cf-24d3-11e5-9919-efcf1b791152","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:495","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) && (org.apache.commons.collections4.CollectionUtils.isSubCollection(java.util.Collection<?>, java.util.Collection<?>))"},"variableMap":{"a":"iterable","b":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-2},{"failures":[],"tindex":"efa056d0-24d3-11e5-9919-ff2f4eca1f27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:216","type":"CtIfImpl","sourcecode":"if (boolean == false) {\n    return false;\n} "},"variableMap":{"removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:308","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"efa056d1-24d3-11e5-9919-99d5adadefc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:103","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[135,136,137,138],"tindex":"efa056d2-24d3-11e5-9919-773fd4b5780f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:116","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"efa056d3-24d3-11e5-9919-85554937fdcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:190","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(E)"},"status":-2},{"failures":[],"tindex":"efa056d4-24d3-11e5-9919-b9bf0b3c0af1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[139,140,141,142,143],"tindex":"efa07de5-24d3-11e5-9919-ad677cbdcd48","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:181","type":"CtAssignmentImpl","sourcecode":"int[][(1 + int)] = int"},"variableMap":{"start1":"i","offset":"i","vDown":"keys"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:119","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[144,145,146,147],"tindex":"efa07de6-24d3-11e5-9919-614f8584cf05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[148],"tindex":"efa07de7-24d3-11e5-9919-e1c6756c8675","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1366","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:583","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"efa07de8-24d3-11e5-9919-99ee663fb93c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:147","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}