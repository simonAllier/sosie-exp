{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":28,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":76,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":72,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":30,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":73,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":27,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":74,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":33,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":6,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":22,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":2,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":67,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":5,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":68,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":9,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":69,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":44,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":1,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":26,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":13,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":24,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":77,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":32,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":20,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":70,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":21,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":59,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":3,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":60,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":16,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":40,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":17,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":35,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":47,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":49,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":10,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":75,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":25,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":36,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":7,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":18,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":61,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":62,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":31,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":51,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":63,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":66,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":78,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":4,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":15,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":23,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":50,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":38,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":46,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":57,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":14},"transformations":[{"failures":[0,1,2],"tindex":"b9218d43-2e16-11e5-a339-db1ec632bb13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)"},"status":-1},{"failures":[3,4,5,6,7,8],"tindex":"b9218d44-2e16-11e5-a339-157f895b0a86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"i","vDown":"vUp","delta":"delta","end2":"start1","this":"this","i":"delta","end1":"delta","k":"end2","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[],"tindex":"b921b455-2e16-11e5-a339-7f1cf4dd5c1d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:266","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"b921b456-2e16-11e5-a339-815ad3c717eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:489","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":-2},{"failures":[],"tindex":"b921b457-2e16-11e5-a339-d3dc54a0befa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-1},{"failures":[],"tindex":"b921b458-2e16-11e5-a339-8560c4b3b6b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:107","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.next()"},"status":-2},{"failures":[],"tindex":"b921db69-2e16-11e5-a339-3f536dafd497","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:127","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"b921db6a-2e16-11e5-a339-555281f4adba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure"},"variableMap":{"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE":"org.apache.commons.collections4.functors.NOPClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":-2},{"failures":[],"tindex":"b921db6b-2e16-11e5-a339-d38a13f3fb28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b922027c-2e16-11e5-a339-83f1537398b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"status":-2},{"failures":[9],"tindex":"b922027d-2e16-11e5-a339-3fa01d0437ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1278","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Enumeration<?>.nextElement();\n} else {\n    java.util.Enumeration<?>.nextElement();\n}"},"variableMap":{"i":"i","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1276","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<?>.hasMoreElements()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Enumeration<?>.nextElement();\n    } else {\n        java.util.Enumeration<?>.nextElement();\n    }\n}"},"status":-1},{"failures":[],"tindex":"b922027e-2e16-11e5-a339-b7953f0d0abc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"b922027f-2e16-11e5-a339-6f506e2afa8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl","sourcecode":"return ((this) == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))"},"variableMap":{"this":"key4","object":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:695","type":"CtReturnImpl","sourcecode":"return ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 5) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(4)))))"},"status":-2},{"failures":[10,11],"tindex":"b9222990-2e16-11e5-a339-933def8970f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:70","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.this(new java.util.ArrayList<java.util.Comparator<E>>(), new java.util.BitSet())"},"variableMap":{"this":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.this(java.util.Comparator<E>, false)"},"status":-1},{"failures":[],"tindex":"b9222991-2e16-11e5-a339-67e7fd92f06e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode()"},"status":0},{"failures":[12],"tindex":"b9222992-2e16-11e5-a339-9dfb9e404644","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:407","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"b9222993-2e16-11e5-a339-d1136b98459e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"b9222994-2e16-11e5-a339-e5a61aefbc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"variableMap":{"coll":"coll","values":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77],"tindex":"b9222995-2e16-11e5-a339-c501b0a9132c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} "},"status":-1},{"failures":[78],"tindex":"b92250a6-2e16-11e5-a339-77ced3889ac5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}