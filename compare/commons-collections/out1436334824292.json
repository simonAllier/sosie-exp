{"failureDictionary":{"org.apache.commons.collections4.map.CompositeMapTest.testGet":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":8,"org.apache.commons.collections4.CollectionUtilsTest.union":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":2,"org.apache.commons.collections4.map.SingletonMapTest.testMapPut":39,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":6,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testEqualsAndHashCode":40,"org.apache.commons.collections4.CollectionUtilsTest.intersection":29,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":16,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":7,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":17,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":11,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":3,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":21,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":14,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":34,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":23,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":41,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":10,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":19,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":31,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":1,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":15,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":13,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":35,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":5,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":32,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":30,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":42,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":27,"org.apache.commons.collections4.CollectionUtilsTest.get":26,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":12,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":36},"transformations":[{"failures":[],"tindex":"b1585ae3-2535-11e5-9693-7b5aeeb7fd29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:111","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[0,1],"tindex":"b158f724-2535-11e5-9693-bd32f0b0a463","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"b158f725-2535-11e5-9693-8d6f1e724d80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"b1591e36-2535-11e5-9693-35f92de3563c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"rightChild","rightChild":"rightChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"b1594547-2535-11e5-9693-2d2c2fb92187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"b1596c58-2535-11e5-9693-5f26f2d479e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:222","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"b1596c59-2535-11e5-9693-4fbcf9eee334","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\")"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"b159936a-2535-11e5-9693-256bd7248f70","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[],"tindex":"b159936b-2535-11e5-9693-192add4d13a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":0},{"failures":[33,34,35,36,37,38,39,40],"tindex":"b159ba7c-2535-11e5-9693-d1d2cb2d1646","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:123","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getKey().hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"status":-1},{"failures":[],"tindex":"b159e18d-2535-11e5-9693-b520cc8aff3b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1174","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])))"},"status":-2},{"failures":[41,42],"tindex":"b159e18e-2535-11e5-9693-cdee25012fba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:560","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-1},{"failures":[],"tindex":"b15a089f-2535-11e5-9693-6bb9d13cc450","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:608","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.size()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:139","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.size()"},"status":-2},{"failures":[],"tindex":"b15a08a0-2535-11e5-9693-5b6880a32949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:731","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet()"},"status":-2},{"failures":[],"tindex":"b15a2fb1-2535-11e5-9693-a147bbd1413a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"b15a56c2-2535-11e5-9693-2dd62fa0e910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"b15a56c3-2535-11e5-9693-0510ce1961a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:252","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"b15a7dd4-2535-11e5-9693-e5e85d9d607c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"b159936b-2535-11e5-9693-192add4d13a8","diffs":[{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.functors.FalsePredicate()"],"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.AbstractQuantifierPredicate.org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.functors.FalsePredicate()","org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(org.apache.commons.collections4.Predicate[]) -> org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.functors.FalsePredicate()"],"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.AbstractQuantifierPredicate.org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.FalsePredicate.<T> org.apache.commons.collections4.Predicate falsePredicate()","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.functors.FalsePredicate()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.iterators.FilterListIterator.org.apache.commons.collections4.iterators.FilterListIterator(org.apache.commons.collections4.Predicate)_this.predicate = predicate"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.FalsePredicate_org.apache.commons.collections4.functors.FalsePredicate().b"],"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":["org.apache.commons.collections4.functors.FalsePredicate_<T>_org.apache.commons.collections4.Predicate_falsePredicate().b","org.apache.commons.collections4.functors.FalsePredicate_org.apache.commons.collections4.functors.FalsePredicate().b","org.apache.commons.collections4.functors.AnyPredicate_org.apache.commons.collections4.functors.AnyPredicate(org.apache.commons.collections4.Predicate[]).b","org.apache.commons.collections4.functors.AbstractQuantifierPredicate_org.apache.commons.collections4.functors.AbstractQuantifierPredicate(org.apache.commons.collections4.Predicate[]).b"]},"type":"branch"}]}]}