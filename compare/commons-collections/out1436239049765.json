{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":138,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":149,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":40,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":174,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":143,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutNullValue":158,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":184,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":165,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":169,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":164,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":163,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":11,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":112,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":66,"org.apache.commons.collections4.CollectionUtilsTest.get":74,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":166,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":183,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":175,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":13,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":180,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":26,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":95,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":114,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":47,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":82,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":160,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":176,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":44,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":48,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":150,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":162,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":161,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":57,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKey":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":146,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":167,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":25,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":88,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":104,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":35,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutNullKey":157,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":133,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":186,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":63,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":79,"org.apache.commons.collections4.map.LRUMapTest.testLRU":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testNextKey":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":36,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":131,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":90,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":185,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":134,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":130,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":113,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":22,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":128,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":8,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":46,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":119,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":178,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":108,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":177,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":71,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":96,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":101,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":3,"org.apache.commons.collections4.comparators.ReverseComparatorTest.testRandomListSort":124,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":173,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":105,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":141},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"b340be2d-2456-11e5-8add-fdff6ca447f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"b340e53e-2456-11e5-8add-6bc8feb62562","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"status":-2},{"failures":[],"tindex":"b340e53f-2456-11e5-8add-7bd2cf7d7862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1066","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"b340e540-2456-11e5-8add-cd34e703229d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:150","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()) ^ (org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.(getValue()) == null ? 0 : org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue().hashCode())"},"status":-2},{"failures":[],"tindex":"b340e541-2456-11e5-8add-8be8a97cae97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:164","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K K = ((K)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"b3410c52-2456-11e5-8add-1519cc98a43e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:231","type":"CtReturnImpl","sourcecode":"return K"},"status":-2},{"failures":[],"tindex":"b3410c53-2456-11e5-8add-6bc81a8fff6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"variableMap":{"org.apache.commons.collections4.functors.NOPClosure.INSTANCE":"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure"},"status":0},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"b3410c54-2456-11e5-8add-cf41eeffd0ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.ListOrderedSet.OrderedSetIterator<E>(java.util.List<E>.listIterator() , org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"b3410c55-2456-11e5-8add-873564a5ce79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"mapSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":0},{"failures":[74,75,76],"tindex":"b3410c56-2456-11e5-8add-677d9d547204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:327","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"nCopies":"i","size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1180","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"b3410c57-2456-11e5-8add-9bc8a8da198f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"status":-2},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"b3410c58-2456-11e5-8add-8b8940115859","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-1},{"failures":[120,121,122],"tindex":"b3413369-2456-11e5-8add-9b6598f521c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-1},{"failures":[],"tindex":"b341336a-2456-11e5-8add-69dde0380117","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:123","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E>[] == null) {\n    return null;\n} "},"variableMap":{"closures":"closures"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:126","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>[])(org.apache.commons.collections4.Closure<? super E>[].clone()))"},"status":-2},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165],"tindex":"b341336b-2456-11e5-8add-c57f3c448e77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:76","type":"CtReturnImpl","sourcecode":"return java.util.Comparator<E>.compare(E, E)"},"status":-1},{"failures":[],"tindex":"b341336c-2456-11e5-8add-4742fa06320a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b341336d-2456-11e5-8add-1fac084a4227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:439","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,4,10,11,13,14,15,17,18,20,23,24,37,43,44],"tindex":"b341336e-2456-11e5-8add-511f6a2e2aba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"current","current":"current","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:668","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[188],"tindex":"b3415a7f-2456-11e5-8add-09b5ceee8215","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:154","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"b3410c55-2456-11e5-8add-873564a5ce79","diffs":[{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1"]},"type":"branch"}]}]}