{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":123,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":212,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":92,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":137,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":164,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":103,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullStream":183,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":172,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":211,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":191,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":176,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":124,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":207,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":97,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":206,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":147,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":91,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":89,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":200,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":87,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":41,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":33,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":52,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":106,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":32,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":90,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":157,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":199,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":132,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":38,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":111,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":190,"org.apache.commons.collections4.map.HashedMapTest.testValuesClearChangesMap":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":101,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":112,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":136,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":202,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":85,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":181,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":189,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":193,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":114,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":209,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":44,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":217,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":156,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":155,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":152,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":154,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":153,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":150,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.HashedMapTest.testValuesRetainAll":76,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":78,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":180,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":113,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":63,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":213,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":169,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":141,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":46,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":166,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":216,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":58,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":170,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":210,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":37,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":163,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":115,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":218,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":117,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":116,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":205,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":99,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":160,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveAll":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":138,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":195,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":201,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":208,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":178,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":22,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":110,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":192,"org.apache.commons.collections4.map.LRUMapTest.testLRU":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":144,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":125,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":196,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":109,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":158,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":173,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":64,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":214,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":188,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":197,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":50,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":185,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":186,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":81,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":145,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":94,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":17},"transformations":[{"failures":[],"tindex":"35d00498-2357-11e5-a876-05f58676ea33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:555","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"35d27599-2357-11e5-a876-b7524edc02a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"35d29caa-2357-11e5-a876-97b52bae693b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:274","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"35d29cab-2357-11e5-a876-89f353592667","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>"},"status":-2},{"failures":[],"tindex":"35d29cac-2357-11e5-a876-7dd1b204c9b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:437","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse = new org.apache.commons.collections4.bidimap.TreeBidiMap.Inverse();\n} "},"variableMap":{"inverse":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"35d2c3bd-2357-11e5-a876-51ea5981c0d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-1},{"failures":[],"tindex":"35d3fc3e-2357-11e5-a876-5377a794d3f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.ListOrderedSet.OrderedSetIterator<E>(java.util.List<E>.listIterator() , org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"35d4234f-2357-11e5-a876-91d4bf872a47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[122,123,124,125],"tindex":"35d42350-2357-11e5-a876-35777d43e5f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:677","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"35d42351-2357-11e5-a876-8b992016628c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:305","type":"CtInvocationImpl","sourcecode":"super.listIterator(int)"},"status":-2},{"failures":[],"tindex":"35d42352-2357-11e5-a876-e1a65a211119","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:759","type":"CtWhileImpl","sourcecode":"while (true) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"left","left":"right","right":"parent","bitIndex":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"35d47173-2357-11e5-a876-4b39fd82c7a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:58","type":"CtReturnImpl","sourcecode":"return java.util.Queue<E>"},"variableMap":{"tmpQueue":"queue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.QueueUtils:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue.predicatedQueue(java.util.Queue<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"35d47174-2357-11e5-a876-e192c4dc3208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:232","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"35d49885-2357-11e5-a876-515d04eff169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"root","e":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:92","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"35d49886-2357-11e5-a876-5d0e0b1923a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:334","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"35d49887-2357-11e5-a876-f767aa04f05a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)"},"status":-2},{"failures":[],"tindex":"35d4bf98-2357-11e5-a876-0ba367afa22c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:668","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.bidimap.AbstractDualBidiMap.MapEntry.this.getKey()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:57","type":"CtLocalVariableImpl","sourcecode":"final K K = this.K"},"status":-2},{"failures":[126,127,128,129,130,131,132,133,134,135],"tindex":"35d4bf99-2357-11e5-a876-f3e4a99fecf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:862","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"35d66d4a-2357-11e5-a876-191655bf5c9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1601","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"status":-2},{"failures":[],"tindex":"35d6945b-2357-11e5-a876-bfdc3ba592e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:326","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int"},"status":-2},{"failures":[],"tindex":"35d6945c-2357-11e5-a876-215a1d047d45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:718","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next()"},"status":-2},{"failures":[],"tindex":"35d6945d-2357-11e5-a876-db5be972a0dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1383","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext()"},"status":-2},{"failures":[],"tindex":"35d6945e-2357-11e5-a876-456d1e51a5c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((org.apache.commons.collections4.Bag<E>)(decorated()))"},"status":-2},{"failures":[],"tindex":"35d6945f-2357-11e5-a876-cbdd073902a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:77","type":"CtIfImpl","sourcecode":"if ((java.util.Queue<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Queue<E>.toArray()));\n    java.util.Queue<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":0},{"failures":[136,137],"tindex":"35d69460-2357-11e5-a876-4d5752742891","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ConstantFactory<T>(T)"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146],"tindex":"35d6bb71-2357-11e5-a876-79730cddbe58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:622","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"35d6bb72-2357-11e5-a876-f31ef3a11cac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"hasNext","beforeFirst":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1384","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object));\n    boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(\", \");\n    } \n}"},"status":0},{"failures":[],"tindex":"35d6bb73-2357-11e5-a876-71a41bf7aeee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-2},{"failures":[147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"35d6bb74-2357-11e5-a876-13aa49c05792","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:308","type":"CtAssignmentImpl","sourcecode":"E[][(int)++] = null"},"status":-1},{"failures":[167,168,169],"tindex":"35d6bb75-2357-11e5-a876-95882c6419cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"variableMap":{"startIndex":"cacheSize","index":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:143","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[170,171,172,173,174,175,176,177,178,179],"tindex":"35d6bb76-2357-11e5-a876-d1b154832000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"i","maxElements":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:300","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":-1},{"failures":[],"tindex":"35d6e287-2357-11e5-a876-71037851ebc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:340","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"35d6e288-2357-11e5-a876-63371abc0b77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-2},{"failures":[180,181,182,183,184,185,186,187,188],"tindex":"35d730a9-2357-11e5-a876-d540fd6dd246","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), true)"},"status":-1},{"failures":[],"tindex":"35d730aa-2357-11e5-a876-0157ed72d17d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[189,190,191,192,193,194,195,196,197,198,199,200,201],"tindex":"35d757bb-2357-11e5-a876-8be3608f4807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:468","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet())"},"status":-1},{"failures":[],"tindex":"35d757bc-2357-11e5-a876-23973986b64c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:390","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"35d757bd-2357-11e5-a876-17d9f05fdc8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[189,190,192,193,194,195,197,198,199,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216],"tindex":"35d757be-2357-11e5-a876-61a6164c53f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:103","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Collection<E>.size()"},"status":-1},{"failures":[],"tindex":"35d757bf-2357-11e5-a876-e1f2934b1c78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyListIterator:57","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.org.apache.commons.collections4.ResettableListIterator))"},"status":-2},{"failures":[],"tindex":"35d757c0-2357-11e5-a876-e30e0e564e26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:89","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.util.EmptyStackException();\n} else {\n    return java.util.ArrayList<E>.get((int - 1));\n}"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:125","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.remove((int - 1))"},"status":-3},{"failures":[],"tindex":"35d77ed1-2357-11e5-a876-c1637762a738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key1","hashCode":"hashCode","key3":"key3","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"35d77ed2-2357-11e5-a876-e38be800856a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:249","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[217,218,219,220,221,222,223,224,225,226],"tindex":"35d77ed3-2357-11e5-a876-73033b7dbf13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1034","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"35d77ed4-2357-11e5-a876-1de6730c7dba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:164","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":0},{"failures":[],"tindex":"35d77ed5-2357-11e5-a876-8b962748d7ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"35d77ed6-2357-11e5-a876-d10b81707d6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[217],"tindex":"35d7a5e7-2357-11e5-a876-ff75b5f0506b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:894","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1027","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"35d7a5e8-2357-11e5-a876-3f9416de65e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"35d7a5e9-2357-11e5-a876-43f8ad093f55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1975","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey()"},"variableMap":{"delegate":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:253","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}