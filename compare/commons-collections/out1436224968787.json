{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":76,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":32,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":62,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":66,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":21},"transformations":[{"failures":[],"tindex":"edbea916-2435-11e5-bb8f-ed9135c96001","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"edc0a4e7-2435-11e5-bb8f-57181bb5a90f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1348","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"parent=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1386","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[0,1],"tindex":"edc18f48-2435-11e5-bb8f-cd3a31a95501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:124","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.retainAll(java.util.Set<E>)"},"variableMap":{"set":"item","list":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:288","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[2],"tindex":"edc18f49-2435-11e5-bb8f-6d92feee3197","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"status":-1},{"failures":[3],"tindex":"edc2a0ba-2435-11e5-bb8f-e72e79f848b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} "},"variableMap":{"predicate":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"edc2c7cb-2435-11e5-bb8f-7fc6533272e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()"},"status":-2},{"failures":[4],"tindex":"edc2c7cc-2435-11e5-bb8f-bdbdfc0e99f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-1},{"failures":[],"tindex":"edc2c7cd-2435-11e5-bb8f-a55e1990be28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:515","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":-2},{"failures":[],"tindex":"edc315ee-2435-11e5-bb8f-bf1cdac61ac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:333","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--"},"status":-2},{"failures":[],"tindex":"edc315ef-2435-11e5-bb8f-bf098c9c8b21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:712","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"edc33d00-2435-11e5-bb8f-cbcfcfcc18d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:196","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"edc33d01-2435-11e5-bb8f-7f9a4271f155","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[],"tindex":"edc33d02-2435-11e5-bb8f-63bc79e16d6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1026","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(java.util.Iterator<? extends E>.next())"},"status":-2},{"failures":[37],"tindex":"edc36413-2435-11e5-bb8f-9b70c949ed65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"changed","removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:316","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"edc36414-2435-11e5-bb8f-056b98c99f6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"edc36415-2435-11e5-bb8f-27302c8a39fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:308","type":"CtReturnImpl","sourcecode":"return java.util.Collections.singleton(java.util.Map.Entry<K, V>)"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"edc38b26-2435-11e5-bb8f-dfeab6f1693c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == null) {\n    return super.createNode(E);\n} "},"status":-1},{"failures":[],"tindex":"edc38b27-2435-11e5-bb8f-836db433a5c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"edc38b28-2435-11e5-bb8f-ab93acfb4bcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>"},"status":-2},{"failures":[],"tindex":"edc3b239-2435-11e5-bb8f-ed0e0fc58203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1509","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"edc0a4e7-2435-11e5-bb8f-57181bb5a90f","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.org.apache.commons.collections4.map.AbstractHashedMap$KeySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.Flat3Map.V put(K,V)_delegateMap.put(key, value)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"]},"type":"variable"}]}]}