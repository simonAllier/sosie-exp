{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testSampleMappings":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":40,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorNonCloned":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":23,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testSize":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":42,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructors":16,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetIndexed":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":1,"org.apache.commons.collections4.map.LRUMapTest.testLRU":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":27,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testConstructorsByArray":18,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":28,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEqualsAfterSerialization":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":36,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":59,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":56,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":6,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysArrayConstructorCloned":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":50,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testGetKeysSimpleConstructor":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":45,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":54},"transformations":[{"failures":[],"tindex":"29834650-24f3-11e5-a082-99e0cb84407e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"variableMap":{"node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-2},{"failures":[],"tindex":"2983e291-24f3-11e5-a082-bf9e3f0f976a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[],"tindex":"2983e292-24f3-11e5-a082-d356a0b14ef8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer must not be null\")"},"status":-2},{"failures":[],"tindex":"298409a3-24f3-11e5-a082-a549301eaf10","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()"},"status":-2},{"failures":[],"tindex":"298409a4-24f3-11e5-a082-91cb5a93d79c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:119","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} else {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[],"tindex":"298430b5-24f3-11e5-a082-73b4846675e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:806","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"298457c6-24f3-11e5-a082-d9e0ff64755e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:243","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"298457c7-24f3-11e5-a082-f5f774428aa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:974","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"status":-2},{"failures":[],"tindex":"29847ed8-24f3-11e5-a082-771e73118f7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:193","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int - 1)]) + 1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"29847ed9-24f3-11e5-a082-412d2fdb77fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[9,10],"tindex":"2984a5ea-24f3-11e5-a082-35e0dc9496dc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:232","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"variableMap":{"this":"result","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"2984ccfb-24f3-11e5-a082-43669e1664c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set","subSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:193","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.add(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[],"tindex":"2984f40c-24f3-11e5-a082-81255541d200","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:299","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"status":-2},{"failures":[],"tindex":"2984f40d-24f3-11e5-a082-69377f5e0b52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"variableMap":{"start1":"start1","end2":"end1","end1":"start2","i":"end2","j":"end1","start2":"start2","script":"script","sequence1":"sequence2","sequence2":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"2985693e-24f3-11e5-a082-7158038779be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-2},{"failures":[11,12],"tindex":"2985693f-24f3-11e5-a082-f3763f4cd860","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[],"tindex":"29859050-24f3-11e5-a082-33930c1e4cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:134","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"2985b761-24f3-11e5-a082-b1b1cc8f2cb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:462","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object)"},"variableMap":{"total":"total","v":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:265","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"2985de72-24f3-11e5-a082-094c6530554a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1068","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[75,76,77,78,33],"tindex":"29860583-24f3-11e5-a082-6db7f34964d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:276","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}