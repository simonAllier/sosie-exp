{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":102,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":98,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":34,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":147,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":119,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":149,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":29,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":66,"org.apache.commons.collections4.map.SingletonMapTest.testNextKey":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":68,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":96,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":36,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":82,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":110,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":124,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":146,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":78,"org.apache.commons.collections4.ArrayStackTest.testSearch":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":148,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":81,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":126,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":42,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":50,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":138,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":37,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":59,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":127,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":16,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":54,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":141,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":30,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":137,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":99,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":57,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":94,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":107,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":144,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":73,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":46,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":80,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":114,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":33,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":145,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":91,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":39,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":129,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":21,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testGet":150,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":125,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":136,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":116,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":131,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":62,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":106,"org.apache.commons.collections4.CollectionUtilsTest.exists":83,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":112,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":90,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":111,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":52,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":113,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":104,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":48,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":139,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":133,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":120,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetClearChangesMap":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":32,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":18,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":63,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":44,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":86},"transformations":[{"failures":[0,1],"tindex":"21337d91-24f8-11e5-93e0-7bf150b03dfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1089","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.map.Flat3Map<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<?, ?>.getValue());\n}"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"2133f2c2-24f8-11e5-93e0-c9a6f1cb0554","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:953","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"dataElement","deletedNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-1},{"failures":[12,13,14,15,16],"tindex":"21355253-24f8-11e5-93e0-a9bcf1c812e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)"},"status":-1},{"failures":[],"tindex":"21357964-24f8-11e5-93e0-c32c05421a81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"21357965-24f8-11e5-93e0-63f89a102c3f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"2135a076-24f8-11e5-93e0-75c7f4d6a539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:489","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.decrementSize()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-1},{"failures":[],"tindex":"2135c787-24f8-11e5-93e0-cb71e6756539","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1023","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":0},{"failures":[76,77,78,79,80,81,82],"tindex":"2135c788-24f8-11e5-93e0-354f2b052f47","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"largestKey","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[],"tindex":"2135ee99-24f8-11e5-93e0-11c8980a7ba2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[83],"tindex":"213615aa-24f8-11e5-93e0-fd751dc88970","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:854","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[84,85],"tindex":"213615ab-24f8-11e5-93e0-9dd62f7799f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)"},"status":-1},{"failures":[],"tindex":"21363cbc-24f8-11e5-93e0-75707ba0641f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"convertedKey","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:280","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, V);\n    return V;\n} "},"status":-2},{"failures":[86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"213663cd-24f8-11e5-93e0-279e4f2f2f9e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:137","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(E)"},"status":-1},{"failures":[],"tindex":"21368ade-24f8-11e5-93e0-8d3a816165ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:116","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"21368adf-24f8-11e5-93e0-e5468e7bdce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1397","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[115,116,117],"tindex":"2136b1f0-24f8-11e5-93e0-affcdb65c044","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:120","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[118,119,120,121,49,50,51,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,52,137,138,139,140,141,142,53,54,143,55,144,145,56,57,146,147,58,59,60,61,62,148,149],"tindex":"2136d901-24f8-11e5-93e0-332d5553ab7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"current","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:464","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"2136d902-24f8-11e5-93e0-5ff40f04d7d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}"},"status":0},{"failures":[],"tindex":"21370013-24f8-11e5-93e0-bbea524beaa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-2},{"failures":[150],"tindex":"21372724-24f8-11e5-93e0-17dd56085227","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{  }, null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:73","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{ java.util.Map<K, V> , java.util.Map<K, V> }, null)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"2136d902-24f8-11e5-93e0-5ff40f04d7d0","diffs":[{"variables":{"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.parent = parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_e = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(parent.data[i]))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] data = parent.data","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.keyvalue.MultiKey.java.lang.String toString()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"]},"type":"graph"}]},{"transformation":"2135c787-24f8-11e5-93e0-cb71e6756539","diffs":[{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":["org.apache.commons.collections4.trie.KeyAnalyzer.boolean isNullBitKey(int)","org.apache.commons.collections4.trie.KeyAnalyzer.boolean isEqualBitKey(int)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lowerEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isNullBitKey(int)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lowerEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isValidBitIndex(int)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lowerEntry(K) -> org.apache.commons.collections4.trie.AbstractBitwiseTrie.int bitIndex(K,K)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry lowerEntry(K) -> org.apache.commons.collections4.trie.KeyAnalyzer.boolean isEqualBitKey(int)"]},"type":"graph"}]}]}