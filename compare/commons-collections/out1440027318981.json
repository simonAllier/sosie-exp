{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":28,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":2,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":58,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":64,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":8,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":30,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":12,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":50,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":41},"transformations":[{"failures":[],"tindex":"f3a9aef8-46ca-11e5-835c-c9430b30c215","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"length","expectedModCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"f3a9d609-46ca-11e5-835c-4585cabaf019","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-1},{"failures":[],"tindex":"f3a9d60a-46ca-11e5-835c-f75f85850d3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:320","type":"CtInvocationImpl","sourcecode":"java.util.Collection<E>.clear()"},"status":0},{"failures":[32,33,34,35],"tindex":"f3a9d60b-46ca-11e5-835c-915cae6509ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"f3a9d60c-46ca-11e5-835c-27b6264b385d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:157","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<K, V>"},"status":-2},{"failures":[],"tindex":"f3a9d60d-46ca-11e5-835c-d53c026f049d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"myCount","newCapacity":"myCount","proposedCapacity":"otherCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:384","type":"CtIfImpl","sourcecode":"if ((1 <= int) && (int <= int)) {\n    org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n} else {\n    org.apache.commons.collections4.Bag<E>.add(E, int);\n}"},"status":-2},{"failures":[],"tindex":"f3a9fd1e-46ca-11e5-835c-45ab9a5d7df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"f3a9fd1f-46ca-11e5-835c-25695f3ba88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:823","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<java.util.Map.Entry<K, V>>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"f3a9fd20-46ca-11e5-835c-6d3d63ebe88d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:164","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.addAll(java.util.List<? extends E>)"},"variableMap":{"result":"this","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:107","type":"CtInvocationImpl","sourcecode":"java.util.AbstractCollection<E>.addAll(java.util.Collection<? extends E>)"},"status":0},{"failures":[],"tindex":"f3a9fd21-46ca-11e5-835c-7b4c1a9aa80d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"ROOT\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>)"},"status":0},{"failures":[],"tindex":"f3a9fd22-46ca-11e5-835c-0fe4356801b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>)"},"status":0},{"failures":[],"tindex":"f3a9fd23-46ca-11e5-835c-0b6bc4ac2144","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":0},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"f3a9fd24-46ca-11e5-835c-5786c1a58bba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:452","type":"CtAssignmentImpl","sourcecode":"int = 2"},"variableMap":{"size":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[],"tindex":"f3aa2435-46ca-11e5-835c-25d9ec9f19fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"hashIndex","maxElements":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:322","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int)"},"status":-2},{"failures":[],"tindex":"f3aa2436-46ca-11e5-835c-0fd723a9e66f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n} else {\n    while (true) {\n        final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n        if (int == 0) {\n            throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n        } else if (int < 0) {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        } else {\n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n                break;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f3aa4b47-46ca-11e5-835c-57ec00690a4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())"},"status":-2},{"failures":[58],"tindex":"f3aa4b48-46ca-11e5-835c-8331e15475b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:721","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"ListIterator must not be null\");\n} "},"variableMap":{"listIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":-1},{"failures":[59],"tindex":"f3aa4b49-46ca-11e5-835c-d160df0fa669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure map must not be null\")"},"status":-1},{"failures":[60,61,62,63,64],"tindex":"f3aa4b4a-46ca-11e5-835c-afc7ef21a585","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:263","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    if (java.lang.Object != null) {\n        int ^= java.lang.Object.hashCode();\n    } \n}"},"status":-1},{"failures":[60,61,62,63],"tindex":"f3aa4b4b-46ca-11e5-835c-af2da718182f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:126","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion == null) {\n    throw new java.lang.IllegalArgumentException(\"Criterion must not be null.\");\n} "},"variableMap":{"criterion":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}