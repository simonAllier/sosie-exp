{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":139,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":102,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":67,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":46,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":120,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":45,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":73,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":53,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":15,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":61,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":80,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":156,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":99,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":137,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":0,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":129,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":79,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":147,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":159,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":103,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":111,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":119,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":40,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":81,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":123,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":94,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":160,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":95,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":135,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":150,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":27,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":154,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":93,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":145,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":142,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":101,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":65,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":47,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":51,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":122,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":148,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":4,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":157,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapClear":158,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":57,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":114,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":97,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":7,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":1,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":96,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":164,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":78,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":19,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":128,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":64,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":6,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":143,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":131,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":162,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":125,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":86,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":59,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":141},"transformations":[{"failures":[],"tindex":"45a0c51d-46e4-11e5-88c3-296d1278cc61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:246","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.compareTo(java.lang.Integer)"},"variableMap":{"position1":"lock","position2":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}"},"status":-2},{"failures":[],"tindex":"45a0ec2e-46e4-11e5-88c3-d107b5514e50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"45a0ec2f-46e4-11e5-88c3-63c162f579ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:236","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this)"},"status":-1},{"failures":[],"tindex":"45a11340-46e4-11e5-88c3-e35b8e033f8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[116,117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"45a11341-46e4-11e5-88c3-d314e1344723","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:297","type":"CtAssignmentImpl","sourcecode":"java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size())"},"status":-1},{"failures":[],"tindex":"45a11342-46e4-11e5-88c3-576cda05980c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"next","key2":"key1","key5":"key4","previous":"entry","hashCode":"hashCode","key3":"key5","key4":"key5","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"45a13a53-46e4-11e5-88c3-67329bda0192","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:86","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[129,130,131,132,133,134,135,136,137],"tindex":"45a13a54-46e4-11e5-88c3-6d44885a1b39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)"},"status":-1},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"tindex":"45a13a55-46e4-11e5-88c3-3f0f8f895cb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[],"tindex":"45a13a56-46e4-11e5-88c3-5b6ce5dac16d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"value","keys":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-2},{"failures":[],"tindex":"45a16167-46e4-11e5-88c3-bbd971c191e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"composite","i":"length","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"45a16168-46e4-11e5-88c3-af00df998844","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:163","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.nextIndex()"},"status":-2},{"failures":[],"tindex":"45a16169-46e4-11e5-88c3-3b562d7cf1d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:177","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == 0"},"status":-2},{"failures":[],"tindex":"45a1616a-46e4-11e5-88c3-b3d8db3ad4cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"status":-2},{"failures":[154,155,156,157],"tindex":"45a1616b-46e4-11e5-88c3-d77705d4edd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:831","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:370","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[158],"tindex":"45a1616c-46e4-11e5-88c3-85ee082309b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:118","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[159,160,161],"tindex":"45a1616d-46e4-11e5-88c3-a18434e7f8fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"removed","removed":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[162,163,164],"tindex":"45a1887e-46e4-11e5-88c3-3bf5065c039b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"45a1887f-46e4-11e5-88c3-89635023810a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"c","defaultValue":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-2},{"failures":[],"tindex":"45a18880-46e4-11e5-88c3-e12943ae03b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1134","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}