{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":53,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":20,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":80,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":85,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":39,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":6,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":62,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":66,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":17,"org.apache.commons.collections4.set.CompositeSetTest.testContains":81,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":48,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":82,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":63,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":83,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":35,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":14},"transformations":[{"failures":[],"tindex":"91852a47-415f-11e5-a2e6-15c9905c4b07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"status":-2},{"failures":[0],"tindex":"91855158-415f-11e5-a2e6-f7073a92fa34","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"91855159-415f-11e5-a2e6-3b7aefdc96b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)"},"status":-2},{"failures":[],"tindex":"9185786a-415f-11e5-a2e6-bfbcd712a74a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:703","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.FilterIterator<E>(java.util.Iterator<? extends E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"9185786b-415f-11e5-a2e6-f505a3738d92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"this":"this","oldNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeAfter(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"9185786c-415f-11e5-a2e6-5bb00a855e4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:274","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n        return null;\n    } \n    for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n            final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n            return V;\n        } \n    }\n    final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n}"},"status":-1},{"failures":[],"tindex":"9185786d-415f-11e5-a2e6-852e8d80b5f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:592","type":"CtAssignmentImpl","sourcecode":"K = K = K = null"},"status":0},{"failures":[41],"tindex":"91859f7e-415f-11e5-a2e6-856594221acc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:528","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"91859f7f-415f-11e5-a2e6-dd5fb0f8de92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"siblingNode","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"91859f80-415f-11e5-a2e6-b72a41e54151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"code","index":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[],"tindex":"91859f81-415f-11e5-a2e6-9f3f90b0000e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-2},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,42,43,44,45,79,46,47,48,49,50,80,81,82,83,84,51,52,53,54,85,55,56,57,58,59,60,61,62,86,63],"tindex":"9185c692-415f-11e5-a2e6-4bfcf99f06cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:389","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.remove(java.util.Set<E>)"},"variableMap":{"all":"all","set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:358","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.add(java.util.Set<E>)"},"status":-1},{"failures":[],"tindex":"9185c693-415f-11e5-a2e6-f7edb6d9e574","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:203","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:89","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-2},{"failures":[],"tindex":"9185c694-415f-11e5-a2e6-b507b206a718","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:258","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"9185c695-415f-11e5-a2e6-d959d5d34fcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"hash","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:282","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++"},"status":-2},{"failures":[],"tindex":"9185c696-415f-11e5-a2e6-391396a5922d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl","sourcecode":"return this.E[][this.int]"},"variableMap":{"array":"array","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:120","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(this.java.lang.Object, this.int)))"},"status":-2},{"failures":[],"tindex":"9185c697-415f-11e5-a2e6-cfb4419d23cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"variableMap":{"inverse":"reverseMap","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-2},{"failures":[],"tindex":"9185eda8-415f-11e5-a2e6-abc707c37a4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:188","type":"CtLocalVariableImpl","sourcecode":"E E = java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"9185eda9-415f-11e5-a2e6-47ce385138e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<? extends E>)"},"variableMap":{"list":"inputCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:212","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.selectRejected(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))"},"status":-2},{"failures":[87],"tindex":"9185edaa-415f-11e5-a2e6-4f73fececad0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:380","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"delegateMap":"delegateMap","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:383","type":"CtIfImpl","sourcecode":"if (int < 4) {\n    for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n        org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    }\n} else {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}