{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":90,"org.apache.commons.collections4.CollectionUtilsTest.union":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":99,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":0,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":66,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":2,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":64,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":15,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":31,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":67,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":85,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":139,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":40,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":109,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":37,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":142,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":29,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":35,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":112,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":111,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":21,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.CollectionUtilsTest.get":17,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":137,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":58,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":98,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":120,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":88,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":143,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":9,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":51,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":106,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":141,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":25,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":11,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":101,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":118,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":113,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":152,"org.apache.commons.collections4.CollectionUtilsTest.get1":123,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":128,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":27,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":135,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":59,"org.apache.commons.collections4.CollectionUtilsTest.intersection":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":108,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":154,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":45,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":47,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":132,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":133,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":49,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":53,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":23,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":16,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":129,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":4,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":117,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":153,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":150,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":8,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":147,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":115,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":146,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":149,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":144,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":39,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":119,"org.apache.commons.collections4.map.Flat3MapTest.testEmptyMapCompatibility":3,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":24,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":70,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":14,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":86,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":93,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":48,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":103,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":68},"transformations":[{"failures":[],"tindex":"b34c26e5-46e7-11e5-88a9-c9934281126c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:904","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[0,1,2,3,4,5,6],"tindex":"b34c26e6-46e7-11e5-88a9-0375c1ece061","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":-1},{"failures":[7],"tindex":"b34c4df7-46e7-11e5-88a9-f32b095d7338","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.FixedOrderComparator<?> org.apache.commons.collections4.comparators.FixedOrderComparator<?> = ((org.apache.commons.collections4.comparators.FixedOrderComparator<?>)(java.lang.Object));\n    return null == (java.util.Map<T, java.lang.Integer>) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>) : (java.util.Map<T, java.lang.Integer>.equals(org.apache.commons.collections4.comparators.FixedOrderComparator<?>.java.util.Map<?, java.lang.Integer>)) && (null == (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) ? null == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) : ((((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)) && ((int) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.int))) && ((boolean) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.boolean))) && ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == (org.apache.commons.collections4.comparators.FixedOrderComparator<?>.org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior));\n} "},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"b34c4df8-46e7-11e5-88a9-b7f5c5bc1e3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"b34c4df9-46e7-11e5-88a9-a3ab306cb024","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"b34c4dfa-46e7-11e5-88a9-63fcd9e065a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[39],"tindex":"b34c750b-46e7-11e5-88a9-b7ac51b2beef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:703","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[40,41],"tindex":"b34c750c-46e7-11e5-88a9-37405d51aa41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n} "},"variableMap":{"entry":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"b34c750d-46e7-11e5-88a9-8b5a22c098a5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"total","counter":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode()"},"status":-1},{"failures":[112,113,114,115,116,117,118,119,120,121],"tindex":"b34c750e-46e7-11e5-88a9-ad5b72a4a85d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>)"},"status":-1},{"failures":[],"tindex":"b34c9c1f-46e7-11e5-88a9-af2cea18757c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(int).getValue()"},"status":-2},{"failures":[],"tindex":"b34c9c20-46e7-11e5-88a9-73dd117aaefe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"status":-2},{"failures":[122,17,123],"tindex":"b34c9c21-46e7-11e5-88a9-f156b4542e09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"b34c9c22-46e7-11e5-88a9-d1ca137f4ed0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:300","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"entry","link":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:244","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":0},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"b34cc333-46e7-11e5-88a9-83afd19b5d7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1364","type":"CtOperatorAssignmentImpl","sourcecode":"int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode())"},"status":-1},{"failures":[141,142,143],"tindex":"b34cc334-46e7-11e5-88a9-f351862f4444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[144,145,146,147,148,149,150,151,152,153],"tindex":"b34cc335-46e7-11e5-88a9-15d56dd16b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:193","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == (int)"},"status":-1},{"failures":[154],"tindex":"b34cc336-46e7-11e5-88a9-dd7379c10337","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:156","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"b34cc337-46e7-11e5-88a9-f1fedf4d4295","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()"},"status":-2},{"failures":[50],"tindex":"b34cea48-46e7-11e5-88a9-eb1748ffeff0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"variableMap":{"oldCapacity":"size","newCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:376","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return ;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}