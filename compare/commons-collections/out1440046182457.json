{"failureDictionary":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":39,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":5,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":26,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":2,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":24,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":52,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":18,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":35,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":0,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":50,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":51,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":11,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":15,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":17,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":13,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":16,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":55,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":43,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":54,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":20,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":23},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"df2c00c3-46f6-11e5-a1f0-1f26e85c9ce5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:385","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"df2c00c4-46f6-11e5-a1f0-b12b8695165d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15],"tindex":"df2c00c5-46f6-11e5-a1f0-ff0bd3795489","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[16,17,18,19,20,21],"tindex":"df2c27d6-46f6-11e5-a1f0-d16e5d306751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:123","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"status":-1},{"failures":[22],"tindex":"df2c27d7-46f6-11e5-a1f0-9da3e6165f43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"status":-1},{"failures":[],"tindex":"df2c27d8-46f6-11e5-a1f0-5f7cd54b3a7c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":0},{"failures":[23,24,25,26,27,28,29],"tindex":"df2c27d9-46f6-11e5-a1f0-1939c607c987","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[30],"tindex":"df2c27da-46f6-11e5-a1f0-1ba61a85a58a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:290","type":"CtAssignmentImpl","sourcecode":"int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"variableMap":{"hashCode":"total","obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1335","type":"CtAssignmentImpl","sourcecode":"int = ((java.util.Map<?, ?>)(java.lang.Object)).size()"},"status":-1},{"failures":[31],"tindex":"df2c4eeb-46f6-11e5-a1f0-b5c1e5ad2618","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:160","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"df2c4eec-46f6-11e5-a1f0-01e42d675dc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:71","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"df2c4eed-46f6-11e5-a1f0-8db4568b359b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:125","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-2},{"failures":[32],"tindex":"df2c4eee-46f6-11e5-a1f0-7d461c4ce58e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[33],"tindex":"df2c4eef-46f6-11e5-a1f0-6b3805c3dab3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:290","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[34,35,36,37,38,39],"tindex":"df2c4ef0-46f6-11e5-a1f0-e5682eed4ddb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"df2c4ef1-46f6-11e5-a1f0-1f588c1578d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl","sourcecode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":-1},{"failures":[],"tindex":"df2c7502-46f6-11e5-a1f0-79cc94dab04d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:230","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"df2c7503-46f6-11e5-a1f0-7594fb8bf6e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[54],"tindex":"df2c7504-46f6-11e5-a1f0-7d7b83c1a284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:111","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> : java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey();\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"df2c7505-46f6-11e5-a1f0-f14891330e75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>)"},"status":0},{"failures":[55],"tindex":"df2c9c16-46f6-11e5-a1f0-e9377263f6bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:142","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Initial capacity must be a non negative number\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1196","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}