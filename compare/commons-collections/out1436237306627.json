{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":123,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":172,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":159,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":133,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":100,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.LinkedMapTest.testReset":69,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":23,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":106,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":181,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":68,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":30,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":124,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":197,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":103,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":201,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":35,"org.apache.commons.collections4.CollectionUtilsTest.get":25,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":171,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":163,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":207,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":169,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":162,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":137,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":77,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":173,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":204,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":193,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":134,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":17,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":58,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":186,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":213,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":33,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":78,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":157,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":177,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":63,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":196,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":214,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":36,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":110,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":132,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":180,"org.apache.commons.collections4.CollectionUtilsTest.intersection":28,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":128,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":217,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":95,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":127,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":200,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":191,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":114,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":167,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":166,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":168,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":24,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":152,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":94,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":91,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":208,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":206,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":218,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":44,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":209,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":38,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":141,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":179,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":37,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":178,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":195,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":199,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":32,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":112,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":147,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":99,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":164,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":148,"org.apache.commons.collections4.map.LinkedMapTest.testClone":146,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":184,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":49,"org.apache.commons.collections4.CollectionUtilsTest.union":27,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":210,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":215,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":126,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":143,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":144,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":104,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":54,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":8,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":101,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":190,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":86,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":93,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":160,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":51,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":216,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":151,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":47,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":149,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":80,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":81,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":131,"org.apache.commons.collections4.map.LRUMapTest.testClone":87,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":135,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":90,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":165,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":150,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":59,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":48,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":111,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":198,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":188,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":26,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":176,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":219,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":67,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":9,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":109,"org.apache.commons.collections4.map.LRUMapTest.testLRU":85,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":55,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":108,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":205,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":83,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":202,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":1,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":88,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":46,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":187,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":0,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":118,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":120,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":119,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":145,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":16,"org.apache.commons.collections4.map.LRUMapTest.testReset":56,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":136,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":189,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":117,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":6,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":96,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":71,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":89,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":174,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":64,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":192,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":194},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"a442fd7a-2452-11e5-8618-d35a69bbf531","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"delta","d":"end2","offset":"start2","vDown":"vUp","delta":"end2","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vDown","equator":"equator","end2":"start1","end1":"end2","start2":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"a443248b-2452-11e5-8618-c993d5c2ab12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:259","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[],"tindex":"a443248c-2452-11e5-8618-d384bd5ef623","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[],"tindex":"a443248d-2452-11e5-8618-27e05b51b390","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:116","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Constructor<? extends T>.newInstance(java.lang.Object[])"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14],"tindex":"a443248e-2452-11e5-8618-17398964d69a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:328","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"a443248f-2452-11e5-8618-279cfd6de7cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"variableMap":{"set":"value","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[15],"tindex":"a4432490-2452-11e5-8618-5b8df1b3a49d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set and List must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"a4432491-2452-11e5-8618-91a04405c61b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1},{"failures":[35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"a4434ba2-2452-11e5-8618-1f3df58c9857","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"a4434ba3-2452-11e5-8618-b1caafe130c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.IteratorChain<E>"},"status":-2},{"failures":[],"tindex":"a4434ba4-2452-11e5-8618-3b01c5c88145","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"a4434ba5-2452-11e5-8618-6718e95ac08a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:139","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"a4434ba6-2452-11e5-8618-37d3cf84e87d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"a4434ba7-2452-11e5-8618-63250a5759e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:425","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyOrderedMapIterator:46","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.OrderedMapIterator))"},"status":-1},{"failures":[84,85,56,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,57,58,59,60,61,62,63,106,64,107,108,109,110,111,112,65,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,66,134,135,67,136,68,137,138,139,140,141,142,143,144,145,69,146,147,148,149,150,151,152,153,154,155,70,71,72,73,74,75,76,156,77,157,158,159,160,161,162,78,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,79,184,185,80,186,81,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,82,208,209,210,211,83,212,213],"tindex":"a44372b8-2452-11e5-8618-1d9c0825e868","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"link":"header","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[214,215,216,217,218,219],"tindex":"a44372b9-2452-11e5-8618-5ff839db0b32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-1},{"failures":[],"tindex":"a44372ba-2452-11e5-8618-93bc397a3a72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"a44372bb-2452-11e5-8618-5b93fbae3e71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().values()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())"},"status":-2},{"failures":[],"tindex":"a44372bc-2452-11e5-8618-e11c57677a2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"childKey","defaultValue":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:994","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}