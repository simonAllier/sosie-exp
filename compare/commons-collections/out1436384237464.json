{"failureDictionary":{"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":36,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":15,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":41,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":7,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":81,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":0,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":48,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":22,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":59,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":23,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":32,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":60,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":53,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":20,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":83,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":51,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":13,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":17,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":29,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":31,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":24,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":37,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":86,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":63,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":68,"org.apache.commons.collections4.CollectionUtilsTest.get1":79,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":84},"transformations":[{"failures":[],"tindex":"bdddc806-25a8-11e5-af9e-fbf238b63202","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:56","type":"CtIfImpl","sourcecode":"if (java.util.SortedSet<E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.SortedSet<E>;\n} "},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"bdddef17-25a8-11e5-af9e-d52fa03adb52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:406","type":"CtReturnImpl","sourcecode":"return (long >= 0) && (long >= long)"},"status":-1},{"failures":[],"tindex":"bdddef18-25a8-11e5-af9e-9d78d9125b87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:198","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V>.isEmpty()) {\n    return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n} "},"status":0},{"failures":[],"tindex":"bdddef19-25a8-11e5-af9e-8bb74874c0d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[47],"tindex":"bdddef1a-25a8-11e5-af9e-c105475c0797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":-1},{"failures":[],"tindex":"bdddef1b-25a8-11e5-af9e-47ad168d2e52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":-2},{"failures":[],"tindex":"bdde162c-25a8-11e5-af9e-d52b8903e14d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:256","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>()"},"status":-2},{"failures":[],"tindex":"bdde162d-25a8-11e5-af9e-d1a6bd42b66e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2},{"failures":[48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"bdde162e-25a8-11e5-af9e-d5f602bc4fbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:162","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int)"},"status":-1},{"failures":[],"tindex":"bdde162f-25a8-11e5-af9e-1b7a0b4c8efa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"bdde1630-25a8-11e5-af9e-8701458d78c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:322","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"bdde1631-25a8-11e5-af9e-6bd52e01b233","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:193","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int - 1)]) + 1"},"status":-2},{"failures":[],"tindex":"bdde3d42-25a8-11e5-af9e-d3496016adc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:587","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.this.<V>lookup(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"key","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.this.<K>lookup(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[78,79],"tindex":"bdde3d43-25a8-11e5-af9e-f13517be5e08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[80,81,82],"tindex":"bdde3d44-25a8-11e5-af9e-0de26a8d39d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:284","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"bdde3d45-25a8-11e5-af9e-8332bb5797ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"bdde3d46-25a8-11e5-af9e-35ae784680b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"previous","entry":"previous","key2":"key4","hashCode":"hashCode","key3":"key5","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[83,84,85],"tindex":"bdde6457-25a8-11e5-af9e-bb96936570e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2404","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[86],"tindex":"bdde6458-25a8-11e5-af9e-23f40dbedda4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"bdde6459-25a8-11e5-af9e-55e4ba5260c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:333","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"bdddef18-25a8-11e5-af9e-9d78d9125b87","diffs":[{"nodes":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"edges":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_return entrySet","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()_entrySet = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this)","org.apache.commons.collections4.map.AbstractHashedMap.int size()_return size","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)_this.threshold = calculateThreshold(initialCapacity, loadFactor)"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().t1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.iterators.EmptyOrderedIterator_<E>_org.apache.commons.collections4.OrderedIterator_emptyOrderedIterator().b"]},"type":"branch"}]}]}