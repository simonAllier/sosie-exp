{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":33,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":46,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":26,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":55,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":20,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":5,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":60,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":57,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":23,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":47,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":10,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":15,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":53,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":25,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":3,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":6,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":49,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":65,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":42,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":18,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":34,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":36,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":29,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":64,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":17,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":2,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":28,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":63,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":58,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":56,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":43,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":44,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":9,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":13},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"8657664c-2534-11e5-882d-273ffd6f8cb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:554","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"86578d5d-2534-11e5-882d-db5f3e636c90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-2},{"failures":[36],"tindex":"86578d5e-2534-11e5-882d-9953eb9f3ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:123","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getKey()"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1063","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey())"},"status":-1},{"failures":[],"tindex":"86578d5f-2534-11e5-882d-9187881d79c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"8657b470-2534-11e5-882d-a59287da9fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:409","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<java.util.Set<E>>)"},"status":-2},{"failures":[37,38,39,40,41],"tindex":"8657b471-2534-11e5-882d-41eb3406950f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:148","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"8657b472-2534-11e5-882d-a5265479a854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:321","type":"CtReturnImpl","sourcecode":"return "},"status":0},{"failures":[],"tindex":"8657b473-2534-11e5-882d-993b2a8582c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"8657b474-2534-11e5-882d-e7fa48e7ee20","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":-2},{"failures":[],"tindex":"8657db85-2534-11e5-882d-9183e2dc2d03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:283","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"8657db86-2534-11e5-882d-c7e6519c8b4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50],"tindex":"8657db87-2534-11e5-882d-9d10d1984137","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"nextIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[51,52],"tindex":"8657db88-2534-11e5-882d-8346d261a9e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"8657db89-2534-11e5-882d-bf2e9a80bdcd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1142","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object);\n} "},"status":0},{"failures":[],"tindex":"8658029a-2534-11e5-882d-f3dabb4cf4ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:608","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"8658029b-2534-11e5-882d-8d15543905e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:124","type":"CtReturnImpl","sourcecode":"return ((this) == java.lang.Object) || ((null != java.lang.Object) && (java.lang.Object.getClass().equals(java.lang.Object.getClass())))"},"variableMap":{"this":"key","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"8658029c-2534-11e5-882d-db0c20bacb5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-2},{"failures":[],"tindex":"8658029d-2534-11e5-882d-35d4968b122d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:88","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().add(E, int);\n}"},"status":-2},{"failures":[],"tindex":"865829ae-2534-11e5-882d-151dea98df63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:175","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"865829af-2534-11e5-882d-07b3636333ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"8657b472-2534-11e5-882d-a5265479a854","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]}]}