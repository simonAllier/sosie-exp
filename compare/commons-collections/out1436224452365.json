{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":20,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":49,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":33,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":25,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":42,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":26,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":52,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":27,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":58,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":29,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":15,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":65,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":66,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":40,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":46,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":16,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":44,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":61,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":64,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":45,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":8},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"b686e09f-2434-11e5-87fb-d1c4cb06c7eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"xFormerLeftChild","rightChild":"xFormerLeftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1133","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20],"tindex":"b68707b0-2434-11e5-87fb-97117b9e9f57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"b68707b1-2434-11e5-87fb-ed7dfd5922f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:252","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<java.util.Map.Entry<K, V>>.addComposited(java.util.Map<K, V>[][int].entrySet())"},"status":-1},{"failures":[],"tindex":"b6872ec2-2434-11e5-87fb-09c49c14a1ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:440","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse"},"status":-2},{"failures":[],"tindex":"b6872ec3-2434-11e5-87fb-5db3e9676da6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()"},"status":0},{"failures":[],"tindex":"b6872ec4-2434-11e5-87fb-e13606e59172","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"h","root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:592","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"b6872ec5-2434-11e5-87fb-a100dcd1acc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[],"tindex":"b6872ec6-2434-11e5-87fb-07997e69d58b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[42],"tindex":"b6872ec7-2434-11e5-87fb-b935b348144f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:84","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.List<E>.toArray()))"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:985","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.lang.reflect.Array.newInstance(java.lang.Class<E>, java.util.List<E>.size())))"},"status":-1},{"failures":[],"tindex":"b6872ec8-2434-11e5-87fb-378f306f9237","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:906","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")"},"status":-2},{"failures":[],"tindex":"b68755d9-2434-11e5-87fb-531d786e94ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()"},"status":-2},{"failures":[],"tindex":"b68755da-2434-11e5-87fb-5feec372ac5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1096","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.remove(int)"},"variableMap":{"parent":"list","currentIndex":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:219","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(int)"},"status":0},{"failures":[43,44],"tindex":"b68755db-2434-11e5-87fb-71e0b21be021","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:101","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[45,46,47,48,29,32,39],"tindex":"b68755dc-2434-11e5-87fb-89eb4bfe4987","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b68755dd-2434-11e5-87fb-7962c14ebcb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.lang.Iterable<? extends O>, org.apache.commons.collections4.Predicate<? super O>, java.util.Collection<O>)"},"status":-2},{"failures":[],"tindex":"b68755de-2434-11e5-87fb-65bdfa651679","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"node","e":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1209","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"b68755df-2434-11e5-87fb-a522cecbfcfe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":0},{"failures":[49,50],"tindex":"b6877cf0-2434-11e5-87fb-d5134a33c2a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:165","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.CompositeSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}"},"status":-1},{"failures":[51,52,53,54],"tindex":"b6877cf1-2434-11e5-87fb-19bf85698d95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:999","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeFloat(float)"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"b6877cf2-2434-11e5-87fb-cbc29ed6004a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:673","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey()"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:992","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"b68755df-2434-11e5-87fb-a522cecbfcfe","diffs":[{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap_java.lang.String_toString().l3","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.String_toString().b","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.String_toString().t2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.String_toString().e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.String_toString().e1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString()"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()"],"org.apache.commons.collections4.map.Flat3Map.java.lang.String toString()":["org.apache.commons.collections4.map.Flat3Map.java.lang.String toString() -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String toString()","org.apache.commons.collections4.map.Flat3Map.java.lang.String toString() -> org.apache.commons.collections4.map.Flat3Map.java.lang.String toString()"]},"graph":"branch"}]}]}