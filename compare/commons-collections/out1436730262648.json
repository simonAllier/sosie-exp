{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":34,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":71,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":69,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":58,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":41,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":3,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":28,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":73,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":49,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":67,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":12,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":17,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":72,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":5,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":25,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":51,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":44,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":22,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":70,"org.apache.commons.collections4.CollectionUtilsTest.get":0,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":35,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":29,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":50,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":31,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testSimpleSerialization":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":68,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":62,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":64,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":23,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":26,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":66,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":27,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":16,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSimpleSerialization":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":54,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":32,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":39,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSimpleSerialization":75},"transformations":[{"failures":[0,1],"tindex":"64f6ad81-28ce-11e5-9955-b1d04bda1043","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1272","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1262","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object))"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12],"tindex":"64f6fba2-28ce-11e5-9955-dddce9edb5d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"64f6fba3-28ce-11e5-9955-31bfba4e1a6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:61","type":"CtIfImpl","sourcecode":"if ((((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null))) || (((java.lang.Class<?>[] != null) && (java.lang.Object[] != null)) && ((java.lang.Class<?>[].int) != (java.lang.Object[].int)))) {\n    throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\");\n} "},"variableMap":{"args":"result","paramTypes":"result","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:438","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    java.lang.Object[][int++] = E;\n}"},"status":-1},{"failures":[],"tindex":"64f722b4-28ce-11e5-9955-83ece8b99171","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"64f83425-28ce-11e5-9955-6bac2becf0e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1401","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:56","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableIterator<E>(java.util.Iterator<? extends E>)"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54],"tindex":"64f83426-28ce-11e5-9955-fde188da648a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:275","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"64f83427-28ce-11e5-9955-0530ae43243b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"value","expectedModCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[],"tindex":"64f85b38-28ce-11e5-9955-b1bcda06fc25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"64f85b39-28ce-11e5-9955-ef03737905ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"status":-1},{"failures":[],"tindex":"64f85b3a-28ce-11e5-9955-997dc5d3f64d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"status":-2},{"failures":[],"tindex":"64f85b3b-28ce-11e5-9955-615cf3091fb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1496","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"64f85b3c-28ce-11e5-9955-67b3cf1715e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"64f85b3d-28ce-11e5-9955-018e9e77d348","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1146","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"64f8824e-28ce-11e5-9955-a753eb025310","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"next","entry":"entry","key2":"key2","key5":"key3","previous":"next","hashCode":"hashCode","key3":"key3","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[72,73],"tindex":"64f8824f-28ce-11e5-9955-d3a1371fffd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")"},"status":-1},{"failures":[74,75,76,77,78,79],"tindex":"64f88250-28ce-11e5-9955-559937ce9fbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"64f88251-28ce-11e5-9955-21ab2b3f13b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkLocked()"},"status":0},{"failures":[],"tindex":"64f88252-28ce-11e5-9955-674e2ab3e4f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:388","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"64f8a963-28ce-11e5-9955-09df59e60f8f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"64f8a964-28ce-11e5-9955-9983ceec5786","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key1","length":"index","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"64f88251-28ce-11e5-9955-21ab2b3f13b1","diffs":[{"nodes":{"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":["org.apache.commons.collections4.comparators.ComparatorChain.void checkLocked()"]},"edges":{"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":["org.apache.commons.collections4.comparators.ComparatorChain.void addComparator(java.util.Comparator,boolean) -> org.apache.commons.collections4.comparators.ComparatorChain.void checkLocked()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":["org.apache.commons.collections4.comparators.ComparatorChain_void_checkLocked().e1","org.apache.commons.collections4.comparators.ComparatorChain_void_checkLocked().b"]},"type":"branch"}]}]}