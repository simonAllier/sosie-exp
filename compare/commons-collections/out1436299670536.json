{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":3,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":26,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":6,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":10,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":0,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":87,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":16,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":52,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testSet":24,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":83,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":4,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":34,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":84,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":13,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":55,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":22,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":17,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":8,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":12,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":71,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":47,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":39,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":54,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":73,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":38,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":82,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":20,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":51,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":58,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":29,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":72,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":36,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":15,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":44,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":64,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":28,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":14,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":1,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":57,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":62,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":45},"transformations":[{"failures":[0,1,2,3,4],"tindex":"d80c77ef-24e3-11e5-a1c8-c7f37ec2e910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:239","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"d80c9f00-24e3-11e5-a1c8-57c8ed468905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"index","modifications":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:538","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"));\n} "},"status":-1},{"failures":[],"tindex":"d80c9f01-24e3-11e5-a1c8-bf9781af1ab2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformedPredicate<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":0},{"failures":[],"tindex":"d80c9f02-24e3-11e5-a1c8-43c1f124ad2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:124","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"status":0},{"failures":[],"tindex":"d80cc613-24e3-11e5-a1c8-299474130aee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:283","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value has been returned yet\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-2},{"failures":[],"tindex":"d80cc614-24e3-11e5-a1c8-9fb9bf3a55c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()"},"status":-2},{"failures":[],"tindex":"d80cc615-24e3-11e5-a1c8-67a6a578ffb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:279","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"d80cc616-24e3-11e5-a1c8-8d22bf9a3882","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"variableMap":{"sub":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"status":-2},{"failures":[24,25],"tindex":"d80cc617-24e3-11e5-a1c8-2db498a1e8b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"PrototypeCloneFactory: The clone method must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"d80cc618-24e3-11e5-a1c8-290033b20da7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:90","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"d80cc619-24e3-11e5-a1c8-5b8d8d656723","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().first()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().last()"},"status":-1},{"failures":[],"tindex":"d80ced2a-24e3-11e5-a1c8-efc8cfd08e01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"variableMap":{"h":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1293","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0"},"status":-2},{"failures":[],"tindex":"d80ced2b-24e3-11e5-a1c8-a134906f76d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"hash3","index":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:538","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"d80ced2c-24e3-11e5-a1c8-7b79f7d2bd4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1174","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])))"},"status":-2},{"failures":[],"tindex":"d80ced2d-24e3-11e5-a1c8-f3250c26078d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:699","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"d80ced2e-24e3-11e5-a1c8-19d54dc5d410","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"status":-1},{"failures":[],"tindex":"d80ced2f-24e3-11e5-a1c8-758630ed6a69","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:701","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:459","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[81,82,83,84,85,86,87],"tindex":"d80d1440-24e3-11e5-a1c8-15829ac0a813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:120","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"d80d1441-24e3-11e5-a1c8-ab806e121557","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:605","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"d80d1442-24e3-11e5-a1c8-af319b915682","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"next","key2":"key1","previous":"next","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d80c9f01-24e3-11e5-a1c8-bf9781af1ab2","diffs":[{"branches":{"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":["org.apache.commons.collections4.functors.EqualPredicate_boolean_evaluate(T).e1","org.apache.commons.collections4.functors.NotNullPredicate_<T>_org.apache.commons.collections4.Predicate_notNullPredicate().b","org.apache.commons.collections4.functors.NotNullPredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.EqualPredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.TransformedPredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.TransformedPredicate_org.apache.commons.collections4.functors.TransformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.NotNullPredicate_org.apache.commons.collections4.functors.NotNullPredicate().b","org.apache.commons.collections4.functors.NOPTransformer_T_transform(T).b","org.apache.commons.collections4.functors.TruePredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.MapTransformer_O_transform(I).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":["org.apache.commons.collections4.functors.NOPTransformer.T transform(T)","org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.MapTransformer.O transform(I)","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate()","org.apache.commons.collections4.functors.NotNullPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NotNullPredicate.<T> org.apache.commons.collections4.Predicate notNullPredicate()","org.apache.commons.collections4.functors.EqualPredicate.boolean evaluate(T)"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":["org.apache.commons.collections4.functors.TransformedPredicate.<T> org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate()","org.apache.commons.collections4.functors.TransformedPredicate.<T> org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.TransformedPredicate.<T> org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.TransformedPredicate.<T> org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.TransformedPredicate.<T> org.apache.commons.collections4.Predicate transformedPredicate(org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.NotNullPredicate.<T> org.apache.commons.collections4.Predicate notNullPredicate()","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.NOPTransformer.T transform(T)","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.EqualPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.MapTransformer.O transform(I)","org.apache.commons.collections4.functors.TransformedPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.EqualPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.EqualPredicate.boolean evaluate(T)"]},"type":"graph"}]}]}