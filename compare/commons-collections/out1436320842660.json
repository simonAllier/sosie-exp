{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":18,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":32,"org.apache.commons.collections4.comparators.ComparatorChainTest.testListComparatorChain":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":47,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":33,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFirstKey":8,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":17,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":37,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":1,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":22,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":49,"org.apache.commons.collections4.comparators.ComparatorChainTest.testNoopComparatorChain":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":36},"transformations":[{"failures":[],"tindex":"23a49ed5-2515-11e5-923e-6b62a960feab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:154","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"23a51406-2515-11e5-923e-e7d0abd3887c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl","sourcecode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}"},"status":-2},{"failures":[],"tindex":"23a51407-2515-11e5-923e-3f2aca3e9ad5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-2},{"failures":[],"tindex":"23a53b18-2515-11e5-923e-357664bc8b8c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[0],"tindex":"23a56229-2515-11e5-923e-49277913edd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:346","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()"},"status":-1},{"failures":[],"tindex":"23a5622a-2515-11e5-923e-bf9eb8925f4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"left","predecessor":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[1,2],"tindex":"23a5b04b-2515-11e5-923e-2b8cebca80ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:875","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:109","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"23a5b04c-2515-11e5-923e-9fb072044273","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:588","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":0},{"failures":[],"tindex":"23a5d75d-2515-11e5-923e-89afce141b2a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"23a64c8e-2515-11e5-923e-697acefab966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"23a64c8f-2515-11e5-923e-9be753777072","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:68","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.AbstractMap<K, V>.entrySet()) {\n    java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\");\n}"},"status":0},{"failures":[3,4,5,6],"tindex":"23a673a0-2515-11e5-923e-5dbfbf3a0f0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:393","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0"},"status":-1},{"failures":[],"tindex":"23a673a1-2515-11e5-923e-11f8390a9cb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:499","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.ListOrderedMap<K, V>.keyList()"},"status":-2},{"failures":[],"tindex":"23a69ab2-2515-11e5-923e-299597623b71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[7],"tindex":"23a6c1c3-2515-11e5-923e-ebf3d99dc66e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1277","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[8],"tindex":"23a6c1c4-2515-11e5-923e-c19caa50095d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"23a6e8d5-2515-11e5-923e-1deb916d8cc9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.NodeCachingLinkedList<E>.this(org.apache.commons.collections4.list.NodeCachingLinkedList.int)"},"status":-1},{"failures":[53,54,55,56,57,58],"tindex":"23a70fe6-2515-11e5-923e-6767b963e1bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"comparatorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[],"tindex":"23a70fe7-2515-11e5-923e-9b7f6313b029","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"23a736f8-2515-11e5-923e-c5c04730ce9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"23a64c8f-2515-11e5-923e-9be753777072","diffs":[{"branches":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_findNext(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l3","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l14","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t7","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l13","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t6","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t10","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t3","org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_boolean_isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t11","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_firstEntry().e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e9","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e6","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e5","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e8","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e7","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e4","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e3","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e10","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_boolean_hasNext().b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e11","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e12","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_nextEntry().e2"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.boolean hasNext()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.java.util.Map$Entry next()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.java.util.Set entrySet()"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.boolean hasNext()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.java.util.Map$Entry next()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.java.util.Set entrySet()"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.boolean hasNext()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet$EntryIterator.java.util.Map$Entry next()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.java.util.Set entrySet()"]},"type":"graph"}]},{"transformation":"23a5b04c-2515-11e5-923e-9fb072044273","diffs":[{"variables":{"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)_this.collection = coll"],"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)_this.collection = coll"]},"type":"variable"}]}]}