{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testEqualsNull":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRetainAll":58,"org.apache.commons.collections4.list.TransformedListTest.testEqualsNull":2,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":33,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testEqualsNull":49,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":80,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":5,"org.apache.commons.collections4.set.TransformedSetTest.testEqualsNull":32,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":97,"org.apache.commons.collections4.list.FixedSizeListTest.testEqualsNull":4,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":105,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetRemoveAll":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":19,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testEqualsNull":44,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":86,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":39,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":22,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":100,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRetainAll":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":14,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":103,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":91,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":16,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testEqualsNull":48,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":18,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":76,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":96,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.list.FixedSizeListTest.testSimpleSerialization":75,"org.apache.commons.collections4.map.LRUMapTest.testClone":101,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRetainAll":54,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":29,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.list.UnmodifiableListTest.testSimpleSerialization":79,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testEqualsNull":51,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRemoveAll":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":89,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":109,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":3,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":23,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":87,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.HashedMapTest.testClone":102,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":106,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":95,"org.apache.commons.collections4.set.ListOrderedSetTest.testEqualsNull":42,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":9,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":1,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":37,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":108,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.list.UnmodifiableListTest.testEqualsNull":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":90,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEqualsNull":45,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":77,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":107,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":24,"org.apache.commons.collections4.queue.PredicatedQueueTest.testEqualsNull":50,"org.apache.commons.collections4.map.LRUMapTest.testLRU":104,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":43,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":82,"org.apache.commons.collections4.list.PredicatedListTest.testEqualsNull":12,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":93,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":0,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetRemoveAll":55,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":88,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":25,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":28,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testEqualsNull":40,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testEqualsNull":47,"org.apache.commons.collections4.list.GrowthListTest.testEqualsNull":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetRetainAll":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":21,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testSimpleSerialization":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":27,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":98,"org.apache.commons.collections4.set.PredicatedSetTest.testEqualsNull":34,"org.apache.commons.collections4.queue.TransformedQueueTest.testEqualsNull":52,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":7,"org.apache.commons.collections4.set.UnmodifiableSetTest.testEqualsNull":30,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetRemoveAll":53,"org.apache.commons.collections4.map.LinkedMapTest.testClone":99,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":72,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":92,"org.apache.commons.collections4.set.ListOrderedSet2Test.testEqualsNull":36,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":11,"org.apache.commons.collections4.set.TransformedSortedSetTest.testEqualsNull":38,"org.apache.commons.collections4.list.SetUniqueListTest.testEqualsNull":10,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":73},"transformations":[{"failures":[],"tindex":"0250d9e3-24e2-11e5-a32c-6da824295c57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:227","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doPut(K, V)"},"status":-2},{"failures":[0],"tindex":"025100f4-24e2-11e5-a32c-f761c48e9a78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:134","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().set(int, E)"},"status":-1},{"failures":[],"tindex":"025100f5-24e2-11e5-a32c-8f49a894e8fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:230","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"02512806-24e2-11e5-a32c-bd59192d03e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))"},"variableMap":{"key1":"object","key2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))"},"status":-1},{"failures":[],"tindex":"02512807-24e2-11e5-a32c-b53596af05eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:178","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71],"tindex":"02512808-24e2-11e5-a32c-e38009d1bc3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int)"},"status":-1},{"failures":[],"tindex":"02512809-24e2-11e5-a32c-95c9d3889997","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:140","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"0251280a-24e2-11e5-a32c-c37c939307a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"02514f1b-24e2-11e5-a32c-2d199af000d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"hashCode","key":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"02514f1c-24e2-11e5-a32c-ed0ca26604e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:226","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.get(K)"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"02514f1d-24e2-11e5-a32c-13a0db9c3a58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"02514f1e-24e2-11e5-a32c-758c19cf9ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[86,87,88,89,90,91,92,93,94,95,96],"tindex":"02514f1f-24e2-11e5-a32c-4da38616bedf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))"},"status":-1},{"failures":[],"tindex":"02517630-24e2-11e5-a32c-6799a3c16045","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:811","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[],"tindex":"02517631-24e2-11e5-a32c-6320caa6414e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"child","left":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:517","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[97],"tindex":"02517632-24e2-11e5-a32c-6b1936df842b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:211","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().putAll(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformMap(java.util.Map<? extends J, ? extends U>))"},"status":-1},{"failures":[],"tindex":"02517633-24e2-11e5-a32c-f7182eadb659","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:261","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[98,99,100,101,102],"tindex":"02517634-24e2-11e5-a32c-ebefc3d32488","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1288","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int]"},"status":-1},{"failures":[101,103,104,105,106,107,108,109,110,111],"tindex":"02517635-24e2-11e5-a32c-03e789836a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"modCount","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}