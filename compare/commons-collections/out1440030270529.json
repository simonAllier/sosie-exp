{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":62,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":76,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_KeyCollection":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":73,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":22,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":97,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":95,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":91,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":6,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":87,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapPut":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":79,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":13,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":86},"transformations":[{"failures":[],"tindex":"d2ecedef-46d1-11e5-a5f2-af76fd658232","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"variableMap":{"entry":"entry","hashCode":"hashCode","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:457","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d2ed1500-46d1-11e5-a5f2-d1d36ebe37cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"d2ed1501-46d1-11e5-a5f2-e3ac909e26b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:281","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"d2ed1502-46d1-11e5-a5f2-4346909806be","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:699","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"node":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1105","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"d2ed3c13-46d1-11e5-a5f2-a78be163ccc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:481","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key1","previous":"entry","hashCode":"hashCode","key3":"key1","key4":"key3","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"d2ed3c14-46d1-11e5-a5f2-73f5bf4723f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"ROOT\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:363","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('{')"},"status":0},{"failures":[21],"tindex":"d2ed3c15-46d1-11e5-a5f2-458fbd4f1f30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:242","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Policy must not be null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"d2ed3c16-46d1-11e5-a5f2-5fe83ea3e9b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)"},"status":-2},{"failures":[22,23,24,25,26,27,28],"tindex":"d2ed3c17-46d1-11e5-a5f2-b3eb832f94dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:476","type":"CtInvocationImpl","sourcecode":"super.remove(java.util.Map.Entry<java.lang.Object, java.lang.Long>.getKey())"},"status":-1},{"failures":[],"tindex":"d2ed3c18-46d1-11e5-a5f2-e308226ababd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-2},{"failures":[],"tindex":"d2ed6329-46d1-11e5-a5f2-d927aa28f05a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"variableMap":{"total":"cmp","this":"this","nodeCount":"cmp","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1287","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"d2ed632a-46d1-11e5-a5f2-9bc0bf8ae56c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"d2ed8a3b-46d1-11e5-a5f2-311ff709ad93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Map<K, V>.values())"},"status":-2},{"failures":[93],"tindex":"d2ed8a3c-46d1-11e5-a5f2-eb8fdc459297","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"result","changed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:390","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"d2ed8a3d-46d1-11e5-a5f2-61a305650512","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:168","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.AbstractMapBag.BagIterator<E>(this)"},"status":-2},{"failures":[],"tindex":"d2ed8a3e-46d1-11e5-a5f2-c7be0bc497b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<E>.previous();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":-2},{"failures":[94],"tindex":"d2ed8a3f-46d1-11e5-a5f2-253755e661f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().offer(E)"},"status":-1},{"failures":[95,96],"tindex":"d2ed8a40-46d1-11e5-a5f2-b5c785450be2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-1},{"failures":[97],"tindex":"d2edb151-46d1-11e5-a5f2-99f76f837e72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:875","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin()"},"variableMap":{"otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:87","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"d2edb152-46d1-11e5-a5f2-53ce7a1c20bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1343","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"value=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:371","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}