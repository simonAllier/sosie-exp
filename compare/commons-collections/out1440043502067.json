{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":45,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastValues":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":3,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":19,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRetainAll":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":4,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":75,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":74,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRetainAll":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":9,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains3":76,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":87,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":95,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveAll":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullValue":68,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastEntrySet":51,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":63,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveAll":85,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRetainAll":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesClearChangesMap":24,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":98,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullKey":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveAll":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":11,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesClearChangesMap":71,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutNullKey":67,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":42,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveAll":81,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":49,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":59,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":56,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRetainAll":82,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetClearChangesMap":72,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":106,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":48,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":43,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":64,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":97,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetClearChangesMap":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetClearChangesMap":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMakeMap":54,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutNullValue":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMakeMap":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":79,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":52},"transformations":[{"failures":[],"tindex":"a188a415-46f0-11e5-91af-87b3533d3e57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:288","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"a188cb26-46f0-11e5-91af-8d97e75ea964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:486","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[],"tindex":"a188cb27-46f0-11e5-91af-4f109021198a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"right","previous":"h","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a188cb28-46f0-11e5-91af-71cb73eccbbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"variableMap":{"currentNode":"node","this":"this","y":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"a188f239-46f0-11e5-91af-0f77b314981a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:447","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95],"tindex":"a188f23a-46f0-11e5-91af-e108eaf02e01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:178","type":"CtAssignmentImpl","sourcecode":"java.lang.ref.ReferenceQueue<java.lang.Object> = new java.lang.ref.ReferenceQueue<java.lang.Object>()"},"status":-1},{"failures":[],"tindex":"a189194b-46f0-11e5-91af-7dbfb5295f73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:198","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MultiMap<K, C>.clear()"},"status":0},{"failures":[96,97,98,99],"tindex":"a189194c-46f0-11e5-91af-e5a83aaef1a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a189194d-46f0-11e5-91af-4b1c9099117a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"hashCode","expectedModCount":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"status":0},{"failures":[],"tindex":"a189194e-46f0-11e5-91af-9ff19461e2d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()"},"status":-2},{"failures":[],"tindex":"a189194f-46f0-11e5-91af-ab7862f54125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"variableMap":{"this":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.lastKey()"},"status":-2},{"failures":[100,101,102,103,104],"tindex":"a1891950-46f0-11e5-91af-dd27bc85a012","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:128","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[105],"tindex":"a1894061-46f0-11e5-91af-e9c7a585c8f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a1894062-46f0-11e5-91af-a95aa60aa52b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"a1894063-46f0-11e5-91af-39a9281964c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))"},"status":-2},{"failures":[106],"tindex":"a1894064-46f0-11e5-91af-5f1ec7a37b40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:284","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:291","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.peek()"},"status":-1},{"failures":[],"tindex":"a1894065-46f0-11e5-91af-5dd2b6b21521","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:554","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 1;\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"a1896776-46f0-11e5-91af-6db9adf6368a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:582","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"p":"p","parent":"h","left":"p","h":"parent","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"a1896777-46f0-11e5-91af-8f05b84a91bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:224","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"a1896778-46f0-11e5-91af-6f18e273b645","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:539","type":"CtAssignmentImpl","sourcecode":"K = null"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}