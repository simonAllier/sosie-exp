{"failureDictionary":{"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":41,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":34,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEmptyMapCompatibility":128,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":150,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testRemove":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":23,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":55,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":84,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":124,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":119,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":18,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":107,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":36,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":160,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":31,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":42,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":19,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":33,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":85,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":37,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":87,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":115,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":143,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":138,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":126,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":7,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":135,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":52,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":27,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":24,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":64,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":70,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":61,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":22,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":89,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":3,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":145,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":157,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":113,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":35,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":146,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":48,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":91,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":81,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":159,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":14,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":62,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":45,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":104,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":156,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":153,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":133,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":132,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":117,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":5,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":44,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":127,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":94,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":6,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":130,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":111,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":51,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":97,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":66,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":99},"transformations":[{"failures":[0],"tindex":"1693c204-2533-11e5-8592-b9de00fcb8cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:156","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"1693e915-2533-11e5-8592-9bb7ec117fa7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"1693e916-2533-11e5-8592-bb135869bb0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1364","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\").append(\"null\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:398","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"status":-1},{"failures":[],"tindex":"1693e917-2533-11e5-8592-a5e5d2af3b28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:587","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.this.<V>lookup(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.this.<K>lookup(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"16941028-2533-11e5-8592-6b95966a3783","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:133","type":"CtReturnImpl","sourcecode":"return int != org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(size())"},"status":-1},{"failures":[],"tindex":"16941029-2533-11e5-8592-31909d08f381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[71,72,73],"tindex":"1694102a-2533-11e5-8592-ed96aa8e10a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:112","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[74],"tindex":"1694102b-2533-11e5-8592-ab91aab0d116","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"status":-1},{"failures":[],"tindex":"1694102c-2533-11e5-8592-2df323d864b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:291","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"1694102d-2533-11e5-8592-0b708688d743","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:480","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"pos":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:441","type":"CtOperatorAssignmentImpl","sourcecode":"int += E == null ? 0 : E.hashCode()"},"status":-1},{"failures":[],"tindex":"1694373e-2533-11e5-8592-9b93e3e6ef53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[97,98,99,100,101,102,103,104,105],"tindex":"1694373f-2533-11e5-8592-8de413623f69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1},{"failures":[106],"tindex":"16943740-2533-11e5-8592-4f314f021c34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[107,108,109],"tindex":"16943741-2533-11e5-8592-5b36a1e8ccd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"count","cacheSize":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:89","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().add(E, int)"},"status":-1},{"failures":[],"tindex":"16943742-2533-11e5-8592-6bde02c40cc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[],"tindex":"16945e53-2533-11e5-8592-3f3e203e288b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"collection","subSet":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"16945e54-2533-11e5-8592-891f65c87960","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:394","type":"CtReturnImpl","sourcecode":"return java.util.Set<java.util.Map.Entry<K, V>>"},"status":-2},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"16945e55-2533-11e5-8592-619a5976b30a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:102","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[110,112,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,160],"tindex":"16945e56-2533-11e5-8592-97078660dd8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"16948567-2533-11e5-8592-39c6b56875ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"16948567-2533-11e5-8592-39c6b56875ae","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues_<T>_T[]_toArray(T[]).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues_<T>_T[]_toArray(T[]).l1","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues_java.lang.Object[]_toArray().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValuesIterator.V next()"]},"type":"graph"}]}]}