{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":74,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":93,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":79,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":107,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":57,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":65,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":53,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":42,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":56,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":92,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":47,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":31,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":17,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":44,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":55,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsSelfHashCode":105,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":90,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":72,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":88,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":78,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":25,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":68,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSimpleSerialization":103,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":75,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":1,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":7,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":24,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":13,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":84,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":51,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":23,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":67,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":85,"org.apache.commons.collections4.list.TreeListTest.testListEquals":26,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":95,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":113,"org.apache.commons.collections4.comparators.ComparatorChainTest.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":43,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectHashCodeEqualsContract":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":39,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":19,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":33,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":40,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":28,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":62,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorIsSerializable":100,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":30,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":111,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":99,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":81,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":80,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":108,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":96,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEmptyListSort":98,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":37,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":36,"org.apache.commons.collections4.comparators.ComparatorChainTest.testObjectEqualsSelf":101,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":83,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":87,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":69,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":76,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":38,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":22,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":71,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":86,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":3,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":102,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":0,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":112},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"7be92c9e-2523-11e5-9fa8-7b3213cbc96f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:501","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.size())"},"status":-1},{"failures":[],"tindex":"7be97abf-2523-11e5-9fa8-231d1be2db9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"7be97ac0-2523-11e5-9fa8-95319b7b8638","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>"},"variableMap":{"decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag.predicatedBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"7be97ac1-2523-11e5-9fa8-0beb1269c250","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:635","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-2},{"failures":[],"tindex":"7be97ac2-2523-11e5-9fa8-5d008fe16d23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-2},{"failures":[22],"tindex":"7be9a1d3-2523-11e5-9fa8-096f0dc1a7a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:573","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[],"tindex":"7be9a1d4-2523-11e5-9fa8-fd758a88233e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:319","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>(this);\n} "},"status":-2},{"failures":[],"tindex":"7be9a1d5-2523-11e5-9fa8-eb660796e31b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1038","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"7be9a1d6-2523-11e5-9fa8-a16ab677c760","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:875","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin()"},"variableMap":{"otherTree":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? org.apache.commons.collections4.list.TreeList.AVLNode<E> : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)"},"status":-1},{"failures":[61],"tindex":"7be9c8e7-2523-11e5-9fa8-5d25890b6b26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported by this iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:154","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"7be9c8e8-2523-11e5-9fa8-d15610b49263","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1028","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"7be9c8e9-2523-11e5-9fa8-0b0f224d3629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"7be9effa-2523-11e5-9fa8-774dfa398fbb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"path","left":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:464","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"7be9effb-2523-11e5-9fa8-afb2834077e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","newNode":"n","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:281","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"7be9effc-2523-11e5-9fa8-3b21f2668524","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"reverse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:153","type":"CtIfImpl","sourcecode":"if (boolean == true) {\n    java.util.BitSet.set(((java.util.List<java.util.Comparator<E>>.size()) - 1));\n} "},"status":-1},{"failures":[107],"tindex":"7bea170d-2523-11e5-9fa8-bf611d9e4a89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:795","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 4) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"variableMap":{"key1":"key2","key2":"key1","key3":"key2","key4":"key1","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"7bea3e1e-2523-11e5-9fa8-a57cdeb0322a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:635","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-2},{"failures":[108,109],"tindex":"7bea3e1f-2523-11e5-9fa8-6f87b0cf3056","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[110,111,112,113],"tindex":"7bea3e20-2523-11e5-9fa8-0b88dbff8ad9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))"},"status":-1},{"failures":[],"tindex":"7bea3e21-2523-11e5-9fa8-d75106da5875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1322","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != (this)) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != (this))"},"variableMap":{"left":"entry","right":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:386","type":"CtReturnImpl","sourcecode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}