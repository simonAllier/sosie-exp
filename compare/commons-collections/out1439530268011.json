{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":74,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":22,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":70,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":50,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":90,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":31,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":58,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":78,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":84,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":33,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":18,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":73,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":27,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":26,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":82,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":72,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":65,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":83,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":14,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":35,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":15,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":57,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":68,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":85,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":80,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":61,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":43,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":19,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":49,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":60,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":45,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":12,"org.apache.commons.collections4.set.CompositeSetTest.testContains":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":40,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":86,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":64,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":47,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":63,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":13,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":52,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":81},"transformations":[{"failures":[],"tindex":"aa340284-4245-11e5-a5f0-f172426a314b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>"},"variableMap":{"tmpMap":"sm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-1},{"failures":[],"tindex":"aa340285-4245-11e5-a5f0-8fad00c9e8b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"aa342996-4245-11e5-a5f0-9de6160cdd08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:502","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"aa342997-4245-11e5-a5f0-f5bf924388ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:76","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"aa342998-4245-11e5-a5f0-b7dc1c6ef1be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"status":-1},{"failures":[],"tindex":"aa342999-4245-11e5-a5f0-7714f1537349","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:93","type":"CtReturnImpl","sourcecode":"return E.compareTo(E)"},"status":-2},{"failures":[],"tindex":"aa3450aa-4245-11e5-a5f0-55825f6e9e33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[12],"tindex":"aa3450ab-4245-11e5-a5f0-4fa5256f2b75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:160","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"aa3450ac-4245-11e5-a5f0-a1d07e2c5bd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:48","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"status":0},{"failures":[13],"tindex":"aa3450ad-4245-11e5-a5f0-9f1b6bb43bb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:52","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>"},"status":-1},{"failures":[],"tindex":"aa3450ae-4245-11e5-a5f0-89e2dcd74797","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:555","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"aa3450af-4245-11e5-a5f0-4955bdfcf80d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"aa3450b0-4245-11e5-a5f0-d1abe09d1e08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"aa3477c1-4245-11e5-a5f0-85850be94713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:569","type":"CtAssignmentImpl","sourcecode":"java.util.Map<?, ?> = java.util.Map<?, ?>"},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:242","type":"CtAssignmentImpl","sourcecode":"java.util.Map<? extends K, ? extends V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<? extends K, ? extends V>)"},"status":0},{"failures":[],"tindex":"aa3477c2-4245-11e5-a5f0-6b9ad9ce7172","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"valueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:315","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.ArrayList<E>.set(int, java.util.Iterator<? extends E>.next());\n    java.util.BitSet.set(int);\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"aa3477c3-4245-11e5-a5f0-399ec7dbb8fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:358","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"aa3477c4-4245-11e5-a5f0-b5ddf29ddfad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(K, V)"},"status":-2},{"failures":[87,88,89,90],"tindex":"aa3477c5-4245-11e5-a5f0-e596c38971ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set","subSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:379","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-1},{"failures":[91],"tindex":"aa3477c6-4245-11e5-a5f0-a90833e06624","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"header","previous":"next","insertBeforeNode":"header","nodeToInsert":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:519","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"aa349ed7-4245-11e5-a5f0-83e003b34e46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:800","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}