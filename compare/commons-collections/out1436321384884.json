{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":4,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":49,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains3":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":53,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":50,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastEntrySet":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":0,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":37,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":1,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":48,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testHashEntry":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastValues":12,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":43,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":24,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFailFastKeySet":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":23,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":62,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":29,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":5,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":13},"transformations":[{"failures":[],"tindex":"66d177b0-2516-11e5-bf24-7b4539766fa0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()"},"status":-2},{"failures":[],"tindex":"66d1c5d1-2516-11e5-bf24-4fe608bcd6f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:600","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object = null"},"status":0},{"failures":[0,1,2,3,4],"tindex":"66d1c5d2-2516-11e5-bf24-9f6956245c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"key2","type":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:249","type":"CtReturnImpl","sourcecode":"return (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 2) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))"},"status":-1},{"failures":[],"tindex":"66d1c5d3-2516-11e5-bf24-5541a870c3f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purge()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:519","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.checkCapacity()"},"status":-2},{"failures":[],"tindex":"66d1ece4-2516-11e5-bf24-7d71bc2da599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:55","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(java.util.Set<? extends E>))"},"status":-2},{"failures":[5,6],"tindex":"66d1ece5-2516-11e5-bf24-c39114346a03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"66d1ece6-2516-11e5-bf24-bbf483ebbc60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-1},{"failures":[],"tindex":"66d213f7-2516-11e5-bf24-ff656cecc1ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.isEmpty()) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"66d213f8-2516-11e5-bf24-0978c40452b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"status":0},{"failures":[37,38],"tindex":"66d213f9-2516-11e5-bf24-abb780263610","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:136","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<K>.size()) != 0) {\n    if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n        throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n    } \n    this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n} "},"status":-1},{"failures":[],"tindex":"66d213fa-2516-11e5-bf24-a9c3983c48b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:320","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48],"tindex":"66d23b0b-2516-11e5-bf24-3b349164b80c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"previousObjectSet","removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"66d23b0c-2516-11e5-bf24-9b90dd3fbcf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl","sourcecode":"return java.util.Collection<? extends E>.size()"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"66d23b0d-2516-11e5-bf24-db1a85feb001","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyValueSet(java.util.BitSet)) || org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyHasNext(java.util.ArrayList<java.util.Iterator<? extends E>>))"},"status":-1},{"failures":[61],"tindex":"66d2621e-2516-11e5-bf24-2f1cc4528c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:549","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[],"tindex":"66d2621f-2516-11e5-bf24-0da7f462657b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:194","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[62],"tindex":"66d26220-2516-11e5-bf24-e750dcd04165","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:380","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.StaticBucketMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"66d26221-2516-11e5-bf24-6d0602b5f7d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:232","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"66d28932-2516-11e5-bf24-2d07db7d8491","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)"},"status":-2},{"failures":[],"tindex":"66d28933-2516-11e5-bf24-71d744684c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1501","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:610","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof org.apache.commons.collections4.Bag<?>) {\n    return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O);\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"66d28933-2516-11e5-bf24-71d744684c7c","diffs":[{"branches":{"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().e2","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().e1","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_boolean_hasNext().b","org.apache.commons.collections4.bag.AbstractMapBag_java.util.Iterator_iterator().b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag).b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().t2"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)","org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.E next()"]},"edges":{"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator() -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.E next()"]},"type":"graph"}]},{"transformation":"66d213f7-2516-11e5-bf24-ff656cecc1ed","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap_boolean_isEmpty().b"],"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap_boolean_isEmpty().b"],"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap_boolean_isEmpty().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"],"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"],"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"]},"edges":{"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testPreviousKey":["org.apache.commons.collections4.bidimap.DualTreeBidiMap.K previousKey(K) -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"],"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.DualTreeBidiMap.K previousKey(K) -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"],"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":["org.apache.commons.collections4.bidimap.DualTreeBidiMap.K previousKey(K) -> org.apache.commons.collections4.bidimap.AbstractDualBidiMap.boolean isEmpty()"]},"type":"graph"}]},{"transformation":"66d1c5d1-2516-11e5-bf24-4fe608bcd6f9","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]}]}