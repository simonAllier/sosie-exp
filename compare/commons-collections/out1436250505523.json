{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":40,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":95,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":105,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":59,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":108,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":74,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":84,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":25,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":35,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":91,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":38,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":3,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":101,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":104,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":34,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":27,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":93,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":86,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":71,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":77,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":110,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":30,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":79,"org.apache.commons.collections4.map.HashedMapTest.testClone":73,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":68,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":17,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":0,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":19,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":78,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":44,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":48,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":60,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":65,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":61,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":21,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":12,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":37,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":114,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":10,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":51,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":62,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":23,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":113,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":45,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":112,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":15,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":83,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":11,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":66,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":4,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":6,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":9,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":7,"org.apache.commons.collections4.map.LinkedMapTest.testClone":100,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":109,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":80},"transformations":[{"failures":[],"tindex":"5f6dbde3-2471-11e5-b68a-2bc8ecd53510","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:559","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.LcsVisitor<E>.getSubSequence()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"5f6de4f4-2471-11e5-b68a-a909eca70680","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-1},{"failures":[],"tindex":"5f6e0c05-2471-11e5-b68a-832519249f99","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:401","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"5f6e0c06-2471-11e5-b68a-b30e3ea4eb5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[12,13],"tindex":"5f6e0c07-2471-11e5-b68a-e9f9d8816201","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"5f6e3318-2471-11e5-b68a-c30a9930b4f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1421","type":"CtLocalVariableImpl","sourcecode":"K K = ((K)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"stream":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:253","type":"CtLocalVariableImpl","sourcecode":"final K K = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"5f6e3319-2471-11e5-b68a-b559da6afa08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:184","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Integer java.lang.Integer = java.util.Map<T, java.lang.Integer>.put(T, java.lang.Integer.valueOf((int)++))"},"status":-2},{"failures":[],"tindex":"5f6e331a-2471-11e5-b68a-8d3a5ecf7bc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"5f6e5a2b-2471-11e5-b68a-a75be52fcae1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:266","type":"CtReturnImpl","sourcecode":"return !((java.util.Iterator<?>.hasNext()) || (java.util.Iterator<?>.hasNext()))"},"variableMap":{"it2":"currentIterator","it1":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"5f6e5a2c-2471-11e5-b68a-81832285b8fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:180","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"5f6e5a2d-2471-11e5-b68a-f32e9d90f5dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:634","type":"CtReturnImpl","sourcecode":"return ((V)((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<V>)(java.lang.Object)).get()))"},"variableMap":{"parent":"delegateMap","valueType":"key","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:439","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[109,110,111],"tindex":"5f6e813e-2471-11e5-b68a-319e21145ae7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:745","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"5f6e813f-2471-11e5-b68a-432f427581e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1431","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"5f6e8140-2471-11e5-b68a-832166281e56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:63","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>));\n    return java.util.Map<K, V>;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:199","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"status":-2},{"failures":[112,113,114],"tindex":"5f6ea851-2471-11e5-b68a-b76efe3d8e3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"comparatorIndex","index":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[],"tindex":"5f6ea852-2471-11e5-b68a-f349898449fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:145","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<E>)"},"variableMap":{"sub":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:326","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":0},{"failures":[],"tindex":"5f6ea853-2471-11e5-b68a-5b1a70c90c91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.Factory))"},"variableMap":{"org.apache.commons.collections4.functors.ExceptionFactory.INSTANCE":"org.apache.commons.collections4.functors.ConstantFactory.NULL_INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantFactory:55","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Factory<T>)(org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.Factory))"},"status":-2},{"failures":[],"tindex":"5f6ecf64-2471-11e5-b68a-0f0c6b1aa490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5f6ecf65-2471-11e5-b68a-1546f7cf6a29","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:512","type":"CtReturnImpl","sourcecode":"return false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"5f6ea852-2471-11e5-b68a-f349898449fa","diffs":[{"nodes":{"org.apache.commons.collections4.ListUtilsTest.testRetainAll":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean equals(java.lang.Object)","org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList(java.util.List)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()"],"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean contains(java.lang.Object)","org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList(java.util.List)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()"]},"edges":{"org.apache.commons.collections4.ListUtils.<E> java.util.List retainAll(java.util.Collection,java.util.Collection)":["org.apache.commons.collections4.ListUtils.<E> java.util.List retainAll(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.ListUtils.<E> java.util.List retainAll(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.list.UnmodifiableList.org.apache.commons.collections4.list.UnmodifiableList(java.util.List)","org.apache.commons.collections4.ListUtils.<E> java.util.List retainAll(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.list.AbstractSerializableListDecorator.org.apache.commons.collections4.list.AbstractSerializableListDecorator(java.util.List)","org.apache.commons.collections4.ListUtils.<E> java.util.List retainAll(java.util.Collection,java.util.Collection) -> org.apache.commons.collections4.list.AbstractListDecorator.org.apache.commons.collections4.list.AbstractListDecorator(java.util.List)"],"org.apache.commons.collections4.ListUtilsTest.testRetainAll":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean equals(java.lang.Object)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated() -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean equals(java.lang.Object) -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()"],"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated() -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()","org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean contains(java.lang.Object) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean contains(java.lang.Object)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean contains(java.lang.Object) -> org.apache.commons.collections4.list.AbstractListDecorator.java.util.List decorated()"]},"graph":"branch"}]}]}