{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":131,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":38,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":167,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":63,"org.apache.commons.collections4.TransformerUtilsTest.testStringValueTransformer":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":79,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":181,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":116,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":126,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":37,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":198,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":3,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":56,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyIterator":138,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":90,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":163,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":140,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":117,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":184,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":92,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":197,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":165,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":187,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":204,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":121,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":104,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":195,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":200,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":46,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":4,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":171,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":170,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":108,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":149,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":78,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":110,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":103,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":100,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":157,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":65,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":71,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":150,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":81,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":112,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":95,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":173,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":111,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":166,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":57,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":113,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":196,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":8,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":182,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":10,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":6,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":61,"org.apache.commons.collections4.CollectionUtilsTest.isFull":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":134,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":47,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterableNull":144,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":178,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":109,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":169,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":172,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":143,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":176,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":199,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":202,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":115,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":58,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":136,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":183,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":203,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testReverseListSort":147,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":179,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":130,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":152,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":2,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":162,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":174,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":124,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":101,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":118,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":16,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":59,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":190,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":193,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":194,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":191,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":88,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":192,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":18,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testRandomListSort":146,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":175,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":180,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":128,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testComparatorCompatibility":148,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":93,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":54,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":67,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":189,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":68,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":201,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":50,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":26,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":31,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemoveThenSet":137,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":39,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":205,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":0,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":159,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":99,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":20,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":94,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":114,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testRemove":139,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":70,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":15,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":45,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":106,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":96,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":133,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":160,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":142,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":24,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":154,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":43,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":153,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":155,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":158,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":156,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":123,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":120,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":32,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":188},"transformations":[{"failures":[0],"tindex":"a1bbab82-2515-11e5-b77d-f73f67b56fcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:448","type":"CtAssignmentImpl","sourcecode":"int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"a1bbd293-2515-11e5-b77d-f154c10d4f37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"a1bbd294-2515-11e5-b77d-59bee32f0bd5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"status":-1},{"failures":[],"tindex":"a1bbd295-2515-11e5-b77d-a95d112441f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"status":-2},{"failures":[],"tindex":"a1bbd296-2515-11e5-b77d-fd7fab7927c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[39],"tindex":"a1bbf9a7-2515-11e5-b77d-5b1fcd8204dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>.execute(E)"},"status":-1},{"failures":[40,41],"tindex":"a1bbf9a8-2515-11e5-b77d-2b13c28e93ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:346","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"a1bbf9a9-2515-11e5-b77d-1bf0e48ef498","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a1bbf9aa-2515-11e5-b77d-01bd3c13fc9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:215","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (((int) - (int)) > 1)) {\n    throw new java.lang.IllegalStateException(java.text.MessageFormat.format(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String, java.lang.Integer.valueOf(int)));\n} "},"status":0},{"failures":[61,61,62,63],"tindex":"a1bbf9ab-2515-11e5-b77d-7753d28ed36b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:87","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.Predicate<T>[])"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"a1bc20bc-2515-11e5-b77d-f5d3544e4ba3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:216","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":-1},{"failures":[136,137,138,139],"tindex":"a1bc20bd-2515-11e5-b77d-c5152b312edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"nextCalled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[140,141,142,143],"tindex":"a1bc20be-2515-11e5-b77d-df93f17d4133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:617","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"parent":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[144],"tindex":"a1bc20bf-2515-11e5-b77d-69f4adccd384","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl","sourcecode":"throw new java.lang.InternalError()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:922","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")"},"status":-1},{"failures":[],"tindex":"a1bc20c0-2515-11e5-b77d-a94b4fab3fd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:591","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"a1bc47d1-2515-11e5-b77d-23bf0b53978c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1382","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:594","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(':')"},"status":0},{"failures":[145,146,147,148],"tindex":"a1bc47d2-2515-11e5-b77d-f962a672f11e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.StringValueTransformer:64","type":"CtReturnImpl","sourcecode":"return java.lang.String.valueOf(T)"},"status":-1},{"failures":[149,150,151,152,153,154,155,156,157,158,159,160],"tindex":"a1bc47d3-2515-11e5-b77d-bb0312516fa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1003","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"status":-1},{"failures":[161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"a1bc47d4-2515-11e5-b77d-3df8c9a584ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().iterator())"},"status":-1},{"failures":[205],"tindex":"a1bc6ee5-2515-11e5-b77d-7536dddb9053","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a1bbd296-2515-11e5-b77d-fd7fab7927c6","diffs":[{"branches":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"}]},{"transformation":"a1bbf9aa-2515-11e5-b77d-01bd3c13fc9f","diffs":[{"catchs":{},"throws":{"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":["org.apache.commons.collections4.iterators.ListIteratorWrapper.void remove()"]},"type":"exception"}]},{"transformation":"a1bc47d1-2515-11e5-b77d-23bf0b53978c","diffs":[{"variables":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":["org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)_this.collection = coll"]},"type":"variable"}]}]}