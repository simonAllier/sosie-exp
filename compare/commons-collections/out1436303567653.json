{"failureDictionary":{"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":128,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":13,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":115,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":191,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":144,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":40,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":213,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":114,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":194,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":119,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":204,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":241,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":248,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":235,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":145,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveAll":121,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":231,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":36,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":41,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":167,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":162,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":116,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":60,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":80,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":228,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":135,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionSize":240,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":169,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":175,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapRemove":178,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRetainAll":208,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRetainAll":84,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":91,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":109,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":243,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":132,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.initializationError":212,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":197,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":171,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRetainAll":72,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":160,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":0,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":205,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":159,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":211,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRetainAll":153,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":224,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":117,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":37,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":7,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":54,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":176,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":149,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":136,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":44,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":234,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":218,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":111,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":9,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":181,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":214,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveAll":83,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":64,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":187,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":131,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":221,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":203,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":217,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":174,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":219,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnmodifiable":232,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":236,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":239,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":27,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":108,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":124,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex3":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":2,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":95,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":130,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":215,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":59,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":222,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalFullCollectionExists":245,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":26,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":161,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":226,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":192,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":182,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCanonicalEmptyCollectionExists":244,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":146,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveAll":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveAll":140,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":206,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":168,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":134,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":6,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapRemove":196,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":118,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRemoveChangesMap":139,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":46,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":190,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains3":200,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapRemove":210,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":199,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":97,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":5,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":227,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":223,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":133,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":86,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":96,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":100,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":17,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":166,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testFirstKey":189,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":18,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":238,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":129,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":94,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":42,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesRetainAll":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":216,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":151,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":150,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":137,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":90,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":12,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":158,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":220,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":99,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":87,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":229,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":113,"org.apache.commons.collections4.map.CompositeMapTest.testEmptyMapCompatibility":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":156,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesRetainAll":122,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":193,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":106,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":125,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":126,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":57,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":201,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":22,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":188},"transformations":[{"failures":[0,1,2,3],"tindex":"eae97c40-24ec-11e5-8408-ff26dce8c8ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))"},"status":-1},{"failures":[],"tindex":"eae97c41-24ec-11e5-8408-ef4d9140fa5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:91","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:143","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<? extends E> = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"eae9a352-24ec-11e5-8408-c3d7620c3321","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"variableMap":{"hashCode":"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY","dataSize":"org.apache.commons.collections4.trie.KeyAnalyzer.EQUAL_BIT_KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"status":0},{"failures":[4,5],"tindex":"eae9a353-24ec-11e5-8408-e51ccd353291","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:97","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    if (boolean) {\n        return false;\n    } \n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"eae9a354-24ec-11e5-8408-d3f315236733","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:109","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Predicate<? super I>[] org.apache.commons.collections4.Predicate<? super I>[] = new org.apache.commons.collections4.Predicate[int]"},"status":-2},{"failures":[6,7,8,9,10,11,12,13],"tindex":"eae9a355-24ec-11e5-8408-f198a3bd6298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-1},{"failures":[],"tindex":"eae9a356-24ec-11e5-8408-53ff39091141","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[],"tindex":"eae9a357-24ec-11e5-8408-4dc20e9a6d98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl","sourcecode":"return java.util.Collection<E>"},"status":-3},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"eae9a358-24ec-11e5-8408-a7d5aa06b95f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-1},{"failures":[],"tindex":"eae9ca69-24ec-11e5-8408-f5bda27fba50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":0},{"failures":[],"tindex":"eae9ca6a-24ec-11e5-8408-efc6b32d83e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"eae9ca6b-24ec-11e5-8408-e1bcd8c5607e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:273","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:138","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = java.lang.Boolean.booleanValue()"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"eae9ca6c-24ec-11e5-8408-fdc6e659b4b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:277","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this)"},"status":-1},{"failures":[155,156,157,158,159,160,161,162,163,164,75,76,77,78,79,81,165,82,85,166,167,168,169,144,145,146,147,148,150,170,151,154,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245],"tindex":"eae9f17d-24ec-11e5-8408-777670a3546e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:48","type":"CtReturnImpl","sourcecode":"return java.util.Collections.<E>emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSet<E>(java.util.Set<? extends E>)"},"status":-1},{"failures":[],"tindex":"eae9f17e-24ec-11e5-8408-353a0cff1dc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()"},"status":-2},{"failures":[],"tindex":"eae9f17f-24ec-11e5-8408-4bc5ef5c03bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"p","left":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:591","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[246,247,248,249],"tindex":"eae9f180-24ec-11e5-8408-f52122d637b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:473","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:676","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-1},{"failures":[],"tindex":"eae9f181-24ec-11e5-8408-39d68b9365e8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"eae9f182-24ec-11e5-8408-3b7dbd085176","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"eaea1893-24ec-11e5-8408-0571c3612eee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"variableMap":{"indexOfLargestMobileInteger":"count","keys":"element","largestKey":"count","length":"count","i":"count","direction":"element"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:622","type":"CtIfImpl","sourcecode":"if (O.equals(java.lang.Object)) {\n    int++;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"eae9ca6a-24ec-11e5-8408-efc6b32d83e9","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"}]}]}