{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":29,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":45,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":54,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":10,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":42,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":46,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":22,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":40,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":43,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":72,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":2,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":56,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":0,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":69,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":13,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":37,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":67,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":60,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":33,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":64,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":31,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":25,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":81,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":15,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":68},"transformations":[{"failures":[],"tindex":"429f613e-4231-11e5-ae37-8d44364084c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"object","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":0},{"failures":[0,1,2,3],"tindex":"429f884f-4231-11e5-ae37-21961aaa2473","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object);\n} "},"variableMap":{"delegateMap":"map","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:202","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"429f8850-4231-11e5-ae37-597dbe5b924a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[4,5,6,7],"tindex":"429f8851-4231-11e5-ae37-073d2c5c115b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:239","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"429f8852-4231-11e5-ae37-8135e768768e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:339","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79],"tindex":"429f8853-4231-11e5-ae37-f5cc3342bbf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"key","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"429fae64-4231-11e5-ae37-091fd9d2991a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:424","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"429fae65-4231-11e5-ae37-3753b7a81345","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:330","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, null)"},"status":-2},{"failures":[],"tindex":"429fae66-4231-11e5-ae37-3d4bd7e40ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:120","type":"CtLocalVariableImpl","sourcecode":"final int int = int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"status":-2},{"failures":[],"tindex":"429fae67-4231-11e5-ae37-35f45c36aca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:491","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"429fae68-4231-11e5-ae37-f5f401fa331d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[80,81,82,83],"tindex":"429fae69-4231-11e5-ae37-7de7e69a6e39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"429fd57a-4231-11e5-ae37-5f3a262b54f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:398","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator();\n} "},"status":-2},{"failures":[],"tindex":"429fd57b-4231-11e5-ae37-4f6155a4c15e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:101","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"429fd57c-4231-11e5-ae37-39e98e392112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:395","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[84,85],"tindex":"429fd57d-4231-11e5-ae37-9ba20d2b83d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapIterator<K, V>.remove()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1233","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next())"},"status":-1},{"failures":[],"tindex":"429fd57e-4231-11e5-ae37-9f7fac3ab75e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"429ffc8f-4231-11e5-ae37-396f78554a86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[86],"tindex":"429ffc90-4231-11e5-ae37-21ef4834e1b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:242","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Policy must not be null.\")"},"status":-1},{"failures":[],"tindex":"429ffc91-4231-11e5-ae37-1bb60374dde1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1385","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}