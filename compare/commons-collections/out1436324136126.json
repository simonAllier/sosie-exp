{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":87,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":153,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":145,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":184,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":45,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":4,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":174,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":60,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":173,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":168,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":10,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":40,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":152,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":35,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":151,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":143,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":3,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":67,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":104,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":66,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":191,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":164,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":69,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":81,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":181,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":121,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":119,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":30,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":170,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":123,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":149,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":51,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":96,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":37,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":186,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":38,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":25,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":185,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":29,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":155,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":133,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":122,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":165,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":172,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":89,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":192,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":91,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":132,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":98,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":188,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":100,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":179,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":171,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":161,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":157,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":134,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":124,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":55,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":54,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":125,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":163,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":183,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":21,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":190,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":58,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":117,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":6,"org.apache.commons.collections4.map.LRUMapTest.testLRU":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":116,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":83,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":160,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":33,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":141,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":169,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":187,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":176,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":159,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":177,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":128,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":5,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":175,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":162,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":166,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":101,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":22,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":56,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":139,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":136},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"cead6475-251c-11e5-9309-a595b2875392","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:296","type":"CtAssignmentImpl","sourcecode":"java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size())"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"cead8b86-251c-11e5-9309-65a68fbcea74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-1},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168],"tindex":"cead8b87-251c-11e5-9309-49e7e683d0b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:598","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.getKey())"},"variableMap":{"n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:280","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V"},"status":-1},{"failures":[],"tindex":"ceadb298-251c-11e5-9309-8b36f78110c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:100","type":"CtReturnImpl","sourcecode":"return boolean ? true : java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[169],"tindex":"ceadb299-251c-11e5-9309-bb917f46ed67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:284","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:291","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.peek()"},"status":-1},{"failures":[],"tindex":"ceadb29a-251c-11e5-9309-29d0789dd20c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1218","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString()"},"status":-2},{"failures":[],"tindex":"ceadb29b-251c-11e5-9309-955817c0a61a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"ceadb29c-251c-11e5-9309-83776005051a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:811","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this)"},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1289","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = null"},"status":0},{"failures":[170],"tindex":"ceadb29d-251c-11e5-9309-931abf90da03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[171,172,173,174,175,176],"tindex":"ceadd9ae-251c-11e5-9309-91149eca0932","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"d","d":"end2","offset":"d","vDown":"vUp","delta":"delta","this":"this","sequence1":"sequence2","sequence2":"sequence2","vUp":"vUp","equator":"equator","end2":"start2","end1":"delta","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"ceadd9af-251c-11e5-9309-73395967f97d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:79","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<T, T>[])"},"variableMap":{"cmds":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:769","type":"CtIfImpl","sourcecode":"if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"ceadd9b0-251c-11e5-9309-d9a014a2ac62","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:90","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableCollection(org.apache.commons.collections4.Trie<K, V>.values())"},"status":-2},{"failures":[],"tindex":"ceae00c1-251c-11e5-9309-5b8a4e3aa888","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:500","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey())"},"status":-2},{"failures":[],"tindex":"ceae00c2-251c-11e5-9309-5dd7da8a2e7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedSortedBag:86","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.SortedBag<E>)(super.decorated()))"},"status":-2},{"failures":[],"tindex":"ceae00c3-251c-11e5-9309-9b7dd702da67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)"},"status":-2},{"failures":[],"tindex":"ceae00c4-251c-11e5-9309-3196b68fd0f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1324","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[177,178,179,180,181,182,183,184,185,185,186,186,187,188],"tindex":"ceae00c5-251c-11e5-9309-a7fccd59dfdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:104","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> : java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>) {\n    org.apache.commons.collections4.Predicate<T>[][int] = org.apache.commons.collections4.Predicate<T>;\n    if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n    int++;\n}"},"status":-1},{"failures":[],"tindex":"ceae00c6-251c-11e5-9309-7bd7f6798dd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"ceae27d7-251c-11e5-9309-bd22eaec0b6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:209","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[189,190,191,192],"tindex":"ceae27d8-251c-11e5-9309-3f4f26039a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1202","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ceadb29c-251c-11e5-9309-83776005051a","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().e1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().e1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().e1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().e1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().e1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1"]},"type":"branch"}]}]}