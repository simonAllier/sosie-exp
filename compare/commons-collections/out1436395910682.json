{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":26,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":39,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":28,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":25,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":27,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":17,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":72,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":7,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":31,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":20,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":50,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":37,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":3,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":42,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":70,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":4,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":24,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":68,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":22,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":32,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":51,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":30,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":67,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":69,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":6,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":19,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":49,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":8,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":57,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":14,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":38,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":15,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":33,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":73,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":2,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":44,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":45,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":46,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":23,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":34,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":16,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":58,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":59,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":29,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":40,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":48,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":63,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":1,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":64,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":35,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":62,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":13,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":21,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":47,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":36,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":10,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":66,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":54,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":12},"transformations":[{"failures":[],"tindex":"eba8b249-25c3-11e5-9295-a14253af22ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[0],"tindex":"eba8d95a-25c3-11e5-9295-51b72ce98523","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1167","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-1},{"failures":[1,2,3,4,5,6,7],"tindex":"eba9006b-25c3-11e5-9295-a9463d1dea7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[8,9],"tindex":"eba9006c-25c3-11e5-9295-6b811d035e7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"eba9006d-25c3-11e5-9295-fb28b8d09960","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:385","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(java.util.Collection<V>.size())"},"variableMap":{"coll":"coll","values":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:263","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1)"},"status":-1},{"failures":[],"tindex":"eba9277e-25c3-11e5-9295-1fa67b5eb47e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[64],"tindex":"ebaa11df-25c3-11e5-9295-796fadfc477d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-1},{"failures":[],"tindex":"ebaa6000-25c3-11e5-9295-83958a1c1d02","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"ebaa6001-25c3-11e5-9295-a58f91d1e047","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"status":-2},{"failures":[],"tindex":"ebaa6002-25c3-11e5-9295-0befd22e4df9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[65,66,67],"tindex":"ebaa8713-25c3-11e5-9295-f34c1a3e0ec8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:196","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get((int + 1))"},"status":-1},{"failures":[68],"tindex":"ebaa8714-25c3-11e5-9295-2376089d46e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:117","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-1},{"failures":[],"tindex":"ebaa8715-25c3-11e5-9295-4f0d0b9e6c50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:298","type":"CtInvocationImpl","sourcecode":"java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear()"},"status":-2},{"failures":[],"tindex":"ebaa8716-25c3-11e5-9295-6f816b25a4a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","newNode":"n","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[69,70,71,72],"tindex":"ebab7177-25c3-11e5-9295-cbfdacc675d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} "},"variableMap":{"size":"index","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)"},"status":-1},{"failures":[],"tindex":"ebab7178-25c3-11e5-9295-d9f2b5ea6844","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"ebab9889-25c3-11e5-9295-0bade7a69c5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[73,74],"tindex":"ebab988a-25c3-11e5-9295-bf7b49ba8ba3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:53","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-1},{"failures":[],"tindex":"ebab988b-25c3-11e5-9295-bff1643d5cda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-2},{"failures":[],"tindex":"ebab988c-25c3-11e5-9295-33a1747e4247","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:218","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}