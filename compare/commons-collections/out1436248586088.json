{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":110,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":116,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":0,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":77,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":124,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetClearChangesMap":35,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":90,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":127,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":136,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":135,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":123,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":115,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":134,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":58,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetClearChangesMap":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":128,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":138,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":105,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":141,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":51,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":104},"transformations":[{"failures":[0],"tindex":"e75a97e9-246c-11e5-99c6-c1122ce012cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-1},{"failures":[1,2,3,4,5],"tindex":"e75a97ea-246c-11e5-99c6-db2db7b7f5cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:987","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[],"tindex":"e75abefb-246c-11e5-99c6-6704e343422a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:95","type":"CtLocalVariableImpl","sourcecode":"final int int = char ^ char"},"status":-2},{"failures":[6,7,8,9],"tindex":"e75abefc-246c-11e5-99c6-8338f6ba72c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"e75abefd-246c-11e5-99c6-b18b01ff6ad2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.clear()"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,1,61,2,62],"tindex":"e75abefe-246c-11e5-99c6-c907871e6b0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,46,47,88,48,49,50,51,89,52,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,3,118,119,120,121,122,4,5,123,124,53,54,55,56,57,58,59,125,60,126,1,127,128,61,2,129,130,131,132,133,134,135,136,137,138],"tindex":"e75abeff-246c-11e5-99c6-75e787763e63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-1},{"failures":[],"tindex":"e75ae610-246c-11e5-99c6-a57dcad3ef3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:568","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e75ae611-246c-11e5-99c6-29073ef8d79d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String)"},"variableMap":{"org.apache.commons.collections4.iterators.ListIteratorWrapper.UNSUPPORTED_OPERATION_MESSAGE":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1399","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))"},"status":-2},{"failures":[],"tindex":"e75ae612-246c-11e5-99c6-f13b433bf746","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"size","proposedCapacity":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"e75ae613-246c-11e5-99c6-336a929ea021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key5","next":"entry","entry":"entry","key2":"key1","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[],"tindex":"e75b0d24-246c-11e5-99c6-cf4ac7a48c5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"value1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:220","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[],"tindex":"e75b0d25-246c-11e5-99c6-b539393943d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:157","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e75b0d26-246c-11e5-99c6-03011806d0c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:973","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.print(\" = \");\n} "},"variableMap":{"label":"next","out":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:258","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    java.util.Set<java.lang.Object>.add(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e75b0d27-246c-11e5-99c6-418ff9218920","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-2},{"failures":[],"tindex":"e75b0d28-246c-11e5-99c6-1b5d74c2295c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:546","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Bag<?>.size()) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(size())) {\n    return false;\n} "},"variableMap":{"other":"other","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:549","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet()) {\n    if ((org.apache.commons.collections4.Bag<?>.getCount(E)) != org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(E))) {\n        return false;\n    } \n}"},"status":0},{"failures":[139,140],"tindex":"e75b3439-246c-11e5-99c6-ef585e97d19a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:501","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[141],"tindex":"e75b343a-246c-11e5-99c6-f95434e97dc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:163","type":"CtAssignmentImpl","sourcecode":"this.java.util.Map<K, V>[] = java.util.Map<K, V>[]"},"status":-1},{"failures":[],"tindex":"e75b343b-246c-11e5-99c6-6dc4c7c3fc9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:317","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[],"tindex":"e75b343c-246c-11e5-99c6-e31f2516a4d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:240","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e75b0d28-246c-11e5-99c6-1b5d74c2295c","diffs":[{"nodes":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)"]},"edges":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":[],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object)":["org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag.boolean equals(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractBagDecorator.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractSortedBagDecorator.org.apache.commons.collections4.SortedBag decorated()"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":[],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.org.apache.commons.collections4.Bag decorated()","org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.PredicatedBag.int getCount(java.lang.Object)"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag() -> org.apache.commons.collections4.bag.TransformedBag.org.apache.commons.collections4.Bag getBag()","org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object) -> org.apache.commons.collections4.bag.TransformedBag.int getCount(java.lang.Object)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_org.apache.commons.collections4.Bag_getBag().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractBagDecorator_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.PredicatedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"],"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":["org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.TransformedBag_org.apache.commons.collections4.Bag_getBag().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1"]},"type":"branch"}]}]}