{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":88,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":54,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":59,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":28,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":84,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":43,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":53,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":82,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":62,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":32,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":87,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":2,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":29,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":73,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":63,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":13,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":6,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":7,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":3,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":70,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":1,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":57,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":44,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":75,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":66,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":30,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":8,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":0,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":99,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":60,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":49,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":97,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":74,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":47,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":72,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":56,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":23,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":33,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":93,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":24,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":55,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":79,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":102,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":94,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":9,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":39,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":92,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":38,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":83,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":4,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":101,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":25,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":86,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":58,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":20,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":45,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":77,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":80,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":64,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":69,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":31,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":90,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":21,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":26,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":15,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":34,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":98,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":14,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":16,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":19,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":17,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":67,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":68,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":41,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":42,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":27,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":22},"transformations":[{"failures":[0,1,2,3,4,5,6,7],"tindex":"1326b2c4-24e2-11e5-9080-49ccf11873ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:287","type":"CtIfImpl","sourcecode":"if ((int < int) || (int > int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())));\n} "},"status":-1},{"failures":[8],"tindex":"1326d9d5-24e2-11e5-9080-91b12486bae3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"removeIndex","counter":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"status":-1},{"failures":[],"tindex":"1326d9d6-24e2-11e5-9080-4949f6bf61d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:507","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"root","h":"root","right":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:195","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"132700e7-24e2-11e5-9080-ef395bbc07ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:448","type":"CtReturnImpl","sourcecode":"return java.util.Map<O, java.lang.Integer>"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"132700e8-24e2-11e5-9080-6b311d7e73b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} "},"variableMap":{"nextObjectSet":"debug"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"1327eb49-24e2-11e5-9080-1b9fab9d9b1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"length","lengthInBits":"length","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"length","otherOffsetInBits":"length","otherLengthInBits":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1163","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n    if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n        throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n    } \n    java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n}"},"status":-2},{"failures":[],"tindex":"1327eb4a-24e2-11e5-9080-91b1e0809fd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1327eb4b-24e2-11e5-9080-094b931fdf9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerClosure:82","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super E, ?>"},"variableMap":{"iTransformer":"def"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.TransformerUtils.<I,O>switchTransformer(org.apache.commons.collections4.Predicate<I>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>[], org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"1328396c-24e2-11e5-9080-ff2e9256ded5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:268","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"1328607d-24e2-11e5-9080-b372dfa54db7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"bound"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} "},"status":-1},{"failures":[79,80,81,82],"tindex":"1328607e-24e2-11e5-9080-4bf184c5f42a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:173","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V))"},"status":-1},{"failures":[],"tindex":"1328607f-24e2-11e5-9080-e1be8179200b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"variableMap":{"delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.entrySet()"},"status":-2},{"failures":[83],"tindex":"1328fcc0-24e2-11e5-9080-dda1bc646d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:264","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 2 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n    case 1 :\n        if (java.lang.Object.equals(V)) {\n            return true;\n        } \n}"},"status":-1},{"failures":[],"tindex":"1328fcc1-24e2-11e5-9080-43fc00676fdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NotNullPredicate.INSTANCE":"org.apache.commons.collections4.functors.TruePredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[],"tindex":"1328fcc2-24e2-11e5-9080-e151bb93c811","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:543","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"1328fcc3-24e2-11e5-9080-7b2e5ed24099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"13294ae4-24e2-11e5-9080-df8f0b20d8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:184","type":"CtAssignmentImpl","sourcecode":"boolean = (int) == (int)"},"variableMap":{"wrappedIteratorIndex":"indexOfLargestMobileInteger","removeState":"tmpDirection","currentIndex":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:137","type":"CtAssignmentImpl","sourcecode":"boolean[][(int + int)] = boolean"},"status":-2},{"failures":[101,102],"tindex":"132971f5-24e2-11e5-9080-b7a4bf451c8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:116","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"132971f6-24e2-11e5-9080-db40af68e3e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}