{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.union":41,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.CollectionUtilsTest.intersection":42,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":37,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":15,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":14,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":3,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":1,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":35,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":34,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":21,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":47,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":28,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":48,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":12,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":43,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":38,"org.apache.commons.collections4.CollectionUtilsTest.get":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":9,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":17,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":5,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":4,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":6,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":29,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":18,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":2,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":31,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":11,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":44,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":32,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":27,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":45,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":33,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":13,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":25},"transformations":[{"failures":[],"tindex":"aea11b70-2447-11e5-b9a4-ad848f3a71c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:354","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(K)"},"status":-2},{"failures":[0,1],"tindex":"aea14281-2447-11e5-b9a4-8f2984c56fdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:436","type":"CtInvocationImpl","sourcecode":"super.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"aea14282-2447-11e5-b9a4-cda029e29ac5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:326","type":"CtIfImpl","sourcecode":"if (java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"aea14283-2447-11e5-b9a4-b9103c714afe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:340","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"aea16994-2447-11e5-b9a4-ff5f24c7d953","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":-1},{"failures":[12,13,14,15,16,17],"tindex":"aea16995-2447-11e5-b9a4-11c0f2847f7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vUp","start1":"start2","vDown":"vDown","delta":"delta","end2":"i","this":"this","i":"end1","end1":"delta","k":"end1","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26],"tindex":"aea16996-2447-11e5-b9a4-0d205b4cd28c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:897","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"aea16997-2447-11e5-b9a4-7d9c0faef76e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":0},{"failures":[],"tindex":"aea16998-2447-11e5-b9a4-65be6a8cd6cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext()"},"status":0},{"failures":[27],"tindex":"aea190a9-2447-11e5-b9a4-df3110c01133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-1},{"failures":[28],"tindex":"aea190aa-2447-11e5-b9a4-95f21f9ccb36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:143","type":"CtAssignmentImpl","sourcecode":"java.util.Collection<? extends E> = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"aea190ab-2447-11e5-b9a4-d9eda49525ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl","sourcecode":"return java.util.SortedSet<E>"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)"},"status":-2},{"failures":[],"tindex":"aea190ac-2447-11e5-b9a4-0fb7e9d78939","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:57","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String)"},"status":-2},{"failures":[],"tindex":"aea190ad-2447-11e5-b9a4-157643be4883","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"status":-2},{"failures":[],"tindex":"aea1b7be-2447-11e5-b9a4-b9c6c89669fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"aea1b7bf-2447-11e5-b9a4-9be32acb796f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:114","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[29],"tindex":"aea1b7c0-2447-11e5-b9a4-8b3e9c47e286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>"},"status":-1},{"failures":[],"tindex":"aea1b7c1-2447-11e5-b9a4-5f0e10ba6025","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")"},"status":-2},{"failures":[],"tindex":"aea1b7c2-2447-11e5-b9a4-f59b507973db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:427","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:195","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"aea1b7c3-2447-11e5-b9a4-735eea545819","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:442","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n} else {\n    java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"aea16997-2447-11e5-b9a4-7d9c0faef76e","diffs":[{"branches":{"org.apache.commons.collections4.map.LRUMapTest.testLastKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1"],"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.LRUMapTest.testLastKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"]},"edges":{"org.apache.commons.collections4.map.AbstractLinkedMap.K lastKey()":["org.apache.commons.collections4.map.AbstractLinkedMap.K lastKey() -> org.apache.commons.collections4.map.AbstractLinkedMap.K lastKey()","org.apache.commons.collections4.map.AbstractLinkedMap.K lastKey() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LRUMapTest.testLastKey":[],"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":[]},"graph":"branch"}]}]}