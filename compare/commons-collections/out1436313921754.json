{"failureDictionary":{"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":8,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":11,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":7,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":20,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":21,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":12,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":22,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":16,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":10,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":14,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":17,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":18,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":1,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":5,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":19,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":6,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":0,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":23,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":4},"transformations":[{"failures":[],"tindex":"066feaa4-2505-11e5-a2c4-e58fea105d67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:160","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"066feaa5-2505-11e5-a2c4-c9b8bde9e1ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)"},"status":0},{"failures":[],"tindex":"066feaa6-2505-11e5-a2c4-cb84be73b60e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"variableMap":{"sub":"sm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-2},{"failures":[],"tindex":"067011b7-2505-11e5-a2c4-1f34b084a5f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"067011b8-2505-11e5-a2c4-a569bad6c93e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:171","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.util.Iterator<E>.next()"},"status":-2},{"failures":[],"tindex":"067011b9-2505-11e5-a2c4-7bce1aefabe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:206","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>)"},"status":-2},{"failures":[],"tindex":"067011ba-2505-11e5-a2c4-c197f1296b11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":-2},{"failures":[],"tindex":"067011bb-2505-11e5-a2c4-3129e850db6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"067011bc-2505-11e5-a2c4-89e3bf4801f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} "},"variableMap":{"valid":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} "},"status":-1},{"failures":[],"tindex":"067038cd-2505-11e5-a2c4-6566785cbc2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":0},{"failures":[],"tindex":"067038ce-2505-11e5-a2c4-f31db68e5671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":0},{"failures":[],"tindex":"067038cf-2505-11e5-a2c4-9b6750d48502","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"current","predecessor":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1105","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[9],"tindex":"067038d0-2505-11e5-a2c4-097f76951da2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:55","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1},{"failures":[],"tindex":"067038d1-2505-11e5-a2c4-17994e69bfa8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"variableMap":{"mergedList":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":0},{"failures":[],"tindex":"067038d2-2505-11e5-a2c4-5565981cb996","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:166","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.FixedSizeSortedMap<K, V>.getSortedMap()"},"status":0},{"failures":[10],"tindex":"067038d3-2505-11e5-a2c4-691909089e5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:501","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[11,12,13,14,15,16,17,18],"tindex":"06705fe4-2505-11e5-a2c4-4d1b6f5fc4e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-1},{"failures":[19,20],"tindex":"06705fe5-2505-11e5-a2c4-57d8b7fbf4ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-1},{"failures":[21,22],"tindex":"06705fe6-2505-11e5-a2c4-61fd001217a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:355","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(E))) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[23],"tindex":"06705fe7-2505-11e5-a2c4-15bacde7857c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:261","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"067011bb-2505-11e5-a2c4-3129e850db6b","diffs":[{"branches":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().t1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractReferenceMap_org.apache.commons.collections4.MapIterator_mapIterator().b","org.apache.commons.collections4.map.AbstractReferenceMap_int_size().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().l3","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractReferenceMap_void_purgeBeforeRead().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_nextNull().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_void_checkMod().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_void_checkMod().e1","org.apache.commons.collections4.map.AbstractReferenceMap_void_purge().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap.void purge() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap) -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()"]},"type":"graph"}]},{"transformation":"066feaa5-2505-11e5-a2c4-c9b8bde9e1ea","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":["org.apache.commons.collections4.map.AbstractReferenceMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractReferenceMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"type":"graph"}]}]}