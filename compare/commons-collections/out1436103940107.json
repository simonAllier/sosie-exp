{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":309,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":319,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":270,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":297,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":39,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":86,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":81,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":56,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":271,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":187,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":48,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":327,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":352,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":326,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":57,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":348,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":330,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":257,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":214,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":288,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":101,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking2":317,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":295,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":237,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":244,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":240,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":246,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":196,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":253,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":272,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":184,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":252,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":269,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":353,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":256,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":343,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":334,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":328,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":220,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":315,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":203,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":329,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":207,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":54,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":144,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":165,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":230,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":140,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":346,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":107,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":88,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":59,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":100,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":23,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":24,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":221,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":136,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":198,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":255,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":285,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":41,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":254,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":306,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":287,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":337,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":276,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":289,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":215,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":204,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":47,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":349,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":258,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":250,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.IteratorUtilsTest.testToArray2":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":243,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":331,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":91,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":55,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":92,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":300,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":283,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":37,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":275,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":248,"org.apache.commons.collections4.map.CompositeMapTest.testPut":294,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":231,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":266,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":200,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":284,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":342,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":131,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":301,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":145,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":265,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":310,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":222,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":148,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":259,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":338,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":141,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":192,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":177,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":199,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":189,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":339,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":273,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":325,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":228,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":201,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":345,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":163,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":123,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":245,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":280,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":350,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":102,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":304,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":347,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":232,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":174,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":32,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":103,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":164,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":296,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":105,"org.apache.commons.collections4.CollectionUtilsTest.reverse":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":224,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":336,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":312,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":332,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":185,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":333,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":112,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":178,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":324,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":111,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":351,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":129,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":344,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":181,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":286,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":293,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":251,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":311,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":22,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":335,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":53,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":302,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":216,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":305,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":262,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":239,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":299,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":268,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":225,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":10,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":249,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":281,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":298,"org.apache.commons.collections4.map.HashedMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":210,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":150,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":218,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":274,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":292,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":267,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":182,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":233,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":202,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":191,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":320,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":15,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":303,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":89,"org.apache.commons.collections4.IteratorUtilsTest.testToList":166,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":314,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":282,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":247,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":290,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":313,"org.apache.commons.collections4.IteratorUtilsTest.testToArray":167,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":161,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":323,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":153,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":209,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":260,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":60,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":195,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":308,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":264,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":322,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":279,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":236,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":278,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":158,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":175,"org.apache.commons.collections4.CollectionUtilsTest.exists":321,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":307,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":138,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":341,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":34,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":61,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":238,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":173,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":72,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndexBoundsChecking":316,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":277,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":146,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":117},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"1f9f5487-231c-11e5-8938-6985899e971b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:320","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, null)"},"variableMap":{"values":"values","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:362","type":"CtAssignmentImpl","sourcecode":"E = java.util.ArrayList<E>.get(int)"},"status":-1},{"failures":[],"tindex":"1f9f7b98-231c-11e5-8938-5f44ab6d1a7a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().lastIndexOf(java.lang.Object)"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"1f9f7b99-231c-11e5-8938-bf66f2b0446e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:221","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[158,159],"tindex":"1f9fa2aa-231c-11e5-8938-8da27c767453","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"collection","coll1":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"status":-1},{"failures":[],"tindex":"1f9fa2ab-231c-11e5-8938-fd627c669230","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:622","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:399","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator()"},"status":-2},{"failures":[160,161],"tindex":"1f9fa2ac-231c-11e5-8938-1534744a5a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-1},{"failures":[],"tindex":"1f9fa2ad-231c-11e5-8938-8b963da7826a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:218","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[162],"tindex":"1f9fa2ae-231c-11e5-8938-8daf28d5d5a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"array","size":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"status":-1},{"failures":[],"tindex":"1f9fc9bf-231c-11e5-8938-ff1b7ae6bd4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1047","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[163,164],"tindex":"1f9fc9c0-231c-11e5-8938-95c8fd077485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"1f9fc9c1-231c-11e5-8938-63b029867a7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:180","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"1f9fc9c2-231c-11e5-8938-6d9082b7a803","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)"},"status":-2},{"failures":[165,166,167,168,169,11],"tindex":"1f9ff0d3-231c-11e5-8938-b3d2391efcb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}"},"status":-1},{"failures":[],"tindex":"1f9ff0d4-231c-11e5-8938-d9cfe1715dc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:672","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290],"tindex":"1f9ff0d5-231c-11e5-8938-013723f48a88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:141","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"next":"node","cachedNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[196,195,193,197,198,176,177,179,181,188,189,200,201,203,204,205,206,207,208,209,210,213,215,242,291,292,293,268,267,265,269,270,250,251,253,255,272,273,275,276,277,278,279,280,281,282,285,287],"tindex":"1f9ff0d6-231c-11e5-8938-fdf12a04940b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1326","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-1},{"failures":[294,295,296],"tindex":"1f9ff0d7-231c-11e5-8938-b9ffb2060823","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{  }, null)"},"variableMap":{"this":"one"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{ java.util.Map<K, V> , java.util.Map<K, V> }, org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>)"},"status":-1},{"failures":[297,298],"tindex":"1fa017e8-231c-11e5-8938-dbbab906753a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:356","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[299,300,301,302,303,304,305,306,307,308,309],"tindex":"1fa017e9-231c-11e5-8938-3f622d317479","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":-1},{"failures":[],"tindex":"1fa017ea-231c-11e5-8938-194c7ae155c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1393","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:588","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":0},{"failures":[],"tindex":"1fa017eb-231c-11e5-8938-d7286e87f7e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[310,311,312,313],"tindex":"1fa03efc-231c-11e5-8938-0bf2be429686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1185","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"1fa03efd-231c-11e5-8938-7fa3b80987c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:855","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Enumeration must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1774","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"status":-2},{"failures":[],"tindex":"1fa0660e-231c-11e5-8938-b5fbe6bfcdff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:109","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"1fa0660f-231c-11e5-8938-af55207aedc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[314,315,316,317],"tindex":"1fa06610-231c-11e5-8938-c303480e7365","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:139","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TransformedList<E>.getList().add(int, E)"},"status":-1},{"failures":[318,319,101,320],"tindex":"1fa06611-231c-11e5-8938-b9d48aa7f841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:515","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[],"tindex":"1fa06612-231c-11e5-8938-9b807c08c496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:191","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayInputStream.close()"},"variableMap":{"bais":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:347","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[321],"tindex":"1fa06613-231c-11e5-8938-efff953f7fcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[322,323,324,325,326,327],"tindex":"1fa06614-231c-11e5-8938-93d71aa606c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:231","type":"CtIfImpl","sourcecode":"if ((int[][int]) <= (int[][(int + int)])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n} "},"variableMap":{"vUp":"vDown","start1":"delta","vDown":"vUp","delta":"end2","end2":"end1","this":"this","i":"start2","end1":"start1","k":"start2","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"1fa08d25-231c-11e5-8938-a95fe9a412fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:319","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K), V)"},"status":-2},{"failures":[],"tindex":"1fa08d26-231c-11e5-8938-c39555366c71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1194","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:599","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"status":-2},{"failures":[],"tindex":"1fa08d27-231c-11e5-8938-45844526d668","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:854","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1fa08d28-231c-11e5-8938-f56365d80fee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:453","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:181","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[328,329],"tindex":"1fa08d29-231c-11e5-8938-a18f4a1b33d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1154","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 2 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n    case 1 :\n        if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n            return false;\n        } \n        java.lang.Object = java.util.Map<?, ?>.get(K);\n        if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n            return false;\n        } \n}"},"status":-1},{"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343],"tindex":"1fa08d2a-231c-11e5-8938-9f35a22a6161","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"tree","current":"tree","right":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,10,11],"tindex":"1fa08d2b-231c-11e5-8938-a38adfd5ff21","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:150","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"1fa08d2c-231c-11e5-8938-41c489483b7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:377","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"1fa0b43d-231c-11e5-8938-3b9947333aa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:103","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()"},"status":-2},{"failures":[],"tindex":"1fa0b43e-231c-11e5-8938-03e1e6b137ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"parent","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:712","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"1fa0b43f-231c-11e5-8938-b7eb9db89c78","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"array","i":"relativePosition"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)"},"status":-2},{"failures":[],"tindex":"1fa0b440-231c-11e5-8938-8d8c4013d77d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":0},{"failures":[],"tindex":"1fa0b441-231c-11e5-8938-d30de18df9bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:105","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"1fa0b442-231c-11e5-8938-e31c48888a3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:126","type":"CtAssignmentImpl","sourcecode":"java.util.List<E> = null"},"status":-2},{"failures":[],"tindex":"1fa0b443-231c-11e5-8938-f377bb913d36","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"1fa0b444-231c-11e5-8938-0706578df3de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"variableMap":{"a":"key","b":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:196","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":0},{"failures":[344],"tindex":"1fa0b445-231c-11e5-8938-a94264fa7640","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closures must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")"},"status":-1},{"failures":[],"tindex":"1fa0b446-231c-11e5-8938-218c5b5544a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"next","entry":"previous","key2":"key1","previous":"entry","hashCode":"hashCode","key3":"key5","key4":"key1","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[345,346,347,348,349,350,351],"tindex":"1fa0db57-231c-11e5-8938-2b78cf8e067d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[184,185,186,187,207,209,210,237,241,229,352,353,274,279,281,282],"tindex":"1fa0db58-231c-11e5-8938-b1e9d0231187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:512","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}