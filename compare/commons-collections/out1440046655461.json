{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":165,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":127,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":107,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":171,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":113,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":26,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":119,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":41,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":128,"org.apache.commons.collections4.CollectionUtilsTest.reverse":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":121,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":21,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":132,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":140,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":53,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":144,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":141,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":152,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":100,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":36,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":155,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":125,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":29,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":99,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":159,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":174,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":101,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":148,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":97,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":150,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":89,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":149,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":87,"org.apache.commons.collections4.map.LRUMapTest.testLRU":55,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":91,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":76,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":32,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":117,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":142,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":126,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":146,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":172,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":156,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":17,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":143,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":166,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":151,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":161,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithStringTokenizer":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":114,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":138,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":122,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":16,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":158,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":173,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":14,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":90,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":96,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":64},"transformations":[{"failures":[0],"tindex":"f91aaef1-46f7-11e5-922f-77fc775b085d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.EnumerationUtils:62","type":"CtInvocationImpl","sourcecode":"java.util.StringTokenizer.countTokens()"},"status":-1},{"failures":[],"tindex":"f91ad602-46f7-11e5-922f-c562350b8caf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:279","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"f91ad603-46f7-11e5-922f-e51d198f6944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"obj","entryValue":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:352","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[1,2,3],"tindex":"f91ad604-46f7-11e5-922f-49ecd7f36abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:521","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"size":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:201","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"f91ad605-46f7-11e5-922f-21bd4766e596","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)"},"status":-2},{"failures":[4],"tindex":"f91ad606-46f7-11e5-922f-a362644b35f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:102","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")"},"status":-1},{"failures":[],"tindex":"f91afd17-46f7-11e5-922f-85520214ab66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:131","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"f91afd18-46f7-11e5-922f-99dda31b4c09","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1106","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"f91afd19-46f7-11e5-922f-070a55d59744","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"current","tree":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[19],"tindex":"f91afd1a-46f7-11e5-922f-8b0479424036","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1442","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.lang.Object = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object[][int];\n    java.lang.Object[][int] = java.lang.Object;\n    int--;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"f91afd1b-46f7-11e5-922f-4d1b87a5690c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"f91afd1c-46f7-11e5-922f-c5b42dee5ee5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:604","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:894","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"f91b242d-46f7-11e5-922f-675d760eb616","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1333","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f91b242e-46f7-11e5-922f-75fa934d8943","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-2},{"failures":[],"tindex":"f91b242f-46f7-11e5-922f-dfcbcb3d5b2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162],"tindex":"f91b2430-46f7-11e5-922f-dd914b970874","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[163,164,165,166,167,168,169,170,171,172,173,174,175],"tindex":"f91b2431-46f7-11e5-922f-4dee8107fc67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"currentNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"f91b7252-46f7-11e5-922f-5548352f6576","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:226","type":"CtLocalVariableImpl","sourcecode":"K K = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:164","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal K K = ((K)(java.lang.Object))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}