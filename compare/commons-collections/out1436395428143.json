{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":66,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":82,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":58,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":12,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":27,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":43,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":45,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":48,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":70,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":7,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.CollectionUtilsTest.get":85,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":8,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":30,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":84,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":18,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":79,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":49,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":17,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":28,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":86,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":32,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":39,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":47,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":40,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":62,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":41},"transformations":[{"failures":[0,1,2,3],"tindex":"cc08a626-25c2-11e5-8422-652fcae2a92e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:672","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"cc08cd37-25c2-11e5-8422-ef6910d81671","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:326","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<java.lang.Object>)(java.util.Collection<V> != null ? java.util.Collection<V> : (java.util.Collection<V> = new org.apache.commons.collections4.map.MultiValueMap.Values())))"},"variableMap":{"valuesView":"coll","vs":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"cc08cd38-25c2-11e5-8422-3b6c186d1e2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl","sourcecode":"return ((V)(java.lang.Object))"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:439","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"cc08cd39-25c2-11e5-8422-09e9568dcd31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"newSize","index":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[],"tindex":"cc08f44a-25c2-11e5-8422-a1e306c7b73d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:146","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSortedMap(org.apache.commons.collections4.Trie<K, V>.tailMap(K))"},"status":-2},{"failures":[],"tindex":"cc08f44b-25c2-11e5-8422-cdced304b612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"status":-2},{"failures":[4,5,6,7,8,9,10],"tindex":"cc08f44c-25c2-11e5-8422-4b40d04308f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:272","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator();\n} "},"status":-1},{"failures":[],"tindex":"cc08f44d-25c2-11e5-8422-f94b0884e0d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:559","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ListUtils.LcsVisitor<E>.getSubSequence()"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"cc091b5e-25c2-11e5-8422-7108764f0328","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1353","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode()"},"status":-1},{"failures":[],"tindex":"cc091b5f-25c2-11e5-8422-ef9b1cdbca7b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl","sourcecode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false"},"status":-2},{"failures":[81],"tindex":"cc091b60-25c2-11e5-8422-03360c0a47df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:61","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBidiMap<K, V>"},"status":-1},{"failures":[],"tindex":"cc091b61-25c2-11e5-8422-119cac88bc46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AllPredicate.allPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:82","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]))"},"status":0},{"failures":[],"tindex":"cc091b62-25c2-11e5-8422-394cbfc70bdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:80","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , org.apache.commons.collections4.Transformer<T, T>[])"},"status":-2},{"failures":[],"tindex":"cc094273-25c2-11e5-8422-ebaf51c8bbdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:643","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return 0;\n} "},"variableMap":{"integerObject":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:123","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getKey().hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"status":-2},{"failures":[82,83,84,50],"tindex":"cc094274-25c2-11e5-8422-f75e81afdc51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:438","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.lang.Object);\n} "},"status":-1},{"failures":[],"tindex":"cc094275-25c2-11e5-8422-2f5abf823d7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.TransformIterator:142","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[],"tindex":"cc094276-25c2-11e5-8422-5f1cc5207e0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:157","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.bitIndex(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K)"},"status":-2},{"failures":[],"tindex":"cc094277-25c2-11e5-8422-f3cad49a64e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)"},"status":-2},{"failures":[85,86,87,88],"tindex":"cc094278-25c2-11e5-8422-731f0240a461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1178","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":-1},{"failures":[],"tindex":"cc096989-25c2-11e5-8422-77bed00c2048","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"cc091b61-25c2-11e5-8422-119cac88bc46","diffs":[{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.FunctorUtils.<T> org.apache.commons.collections4.Predicate coerce(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[]) -> org.apache.commons.collections4.functors.FunctorUtils.void validate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[]) -> org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.AllPredicate.<T> org.apache.commons.collections4.Predicate allPredicate(org.apache.commons.collections4.Predicate[]) -> org.apache.commons.collections4.functors.FunctorUtils.<T> org.apache.commons.collections4.Predicate coerce(org.apache.commons.collections4.Predicate)"]},"type":"graph"}]},{"transformation":"cc08cd39-25c2-11e5-8422-09e9568dcd31","diffs":[{"branches":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t2"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.MapUtilsTest.testIterableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"}]}]}