{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":124,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":35,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":97,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":102,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":90,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":118,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":74,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":77},"transformations":[{"failures":[],"tindex":"ed670d85-253b-11e5-9827-1576d09f421d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"lineageIndex","newCapacity":"lineageIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1011","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"))"},"status":-2},{"failures":[],"tindex":"ed673496-253b-11e5-9827-ab40f22463e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:115","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[0,1,2],"tindex":"ed673497-253b-11e5-9827-bfa9dd2866d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"status":-1},{"failures":[],"tindex":"ed673498-253b-11e5-9827-51a44d142d26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"status":-2},{"failures":[],"tindex":"ed673499-253b-11e5-9827-01a2229805d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[],"tindex":"ed67349a-253b-11e5-9827-b79e2a630ba0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:209","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"variableMap":{"size":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ed675bab-253b-11e5-9827-f7dfa9e6bc2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionBag<E>(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag<E>)"},"status":-2},{"failures":[3,4,5,6],"tindex":"ed675bac-253b-11e5-9827-53164ce57b02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1177","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"i":"x","hashIndex":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:226","type":"CtAssignmentImpl","sourcecode":"int[][int] = int--"},"status":-1},{"failures":[],"tindex":"ed675bad-253b-11e5-9827-35f7dc24406a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1331","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"ed675bae-253b-11e5-9827-036439175bc8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:972","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int)"},"status":-2},{"failures":[],"tindex":"ed6782bf-253b-11e5-9827-232b2c718bfd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[7,8,9,1,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"ed6782c0-253b-11e5-9827-5d1efd061356","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:468","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"ed67a9d1-253b-11e5-9827-c596a9577845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:558","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"before","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:205","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"ed67a9d2-253b-11e5-9827-4fc569473e23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"ed67a9d3-253b-11e5-9827-addc0efc96c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:417","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"ed67a9d4-253b-11e5-9827-413cc3db5292","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1348","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"parent=\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>)"},"status":0},{"failures":[],"tindex":"ed67d0e5-253b-11e5-9827-c7f54154d815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:337","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Object, java.lang.Long>.clear()"},"status":-2},{"failures":[],"tindex":"ed67d0e6-253b-11e5-9827-4b75c9a0cf72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)"},"status":-2},{"failures":[],"tindex":"ed67d0e7-253b-11e5-9827-197e0a2181b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"value","expectedModCount":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int)"},"status":-2},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"ed67d0e8-253b-11e5-9827-4f12055f8c46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ed67a9d4-253b-11e5-9827-413cc3db5292","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.java.lang.String toString()"]},"type":"graph"}]}]}