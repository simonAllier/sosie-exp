{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":69,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":44,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":53,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":5,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":70,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":32,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":60,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":16,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":93,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":66,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":79,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":92,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":14,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":46,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":78,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":94,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":31,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":88,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":8,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":90,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":64,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":61,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":80,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":97,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":62,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":9,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":37,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":89,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":25,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":7},"transformations":[{"failures":[],"tindex":"4a1640dd-241a-11e5-bdf2-8bf13759aa4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"4a1667ee-241a-11e5-bdf2-83a80f68e88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"4a1667ef-241a-11e5-bdf2-3b8ebd3430f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:319","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySetIterator<K, V>(java.util.Iterator<java.util.Map.Entry<K, V>> , this)"},"status":-2},{"failures":[],"tindex":"4a1667f0-241a-11e5-bdf2-87f9663f1e53","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:249","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    final K K = java.util.Map.Entry<? extends K, ? extends V>.getKey();\n    final boolean boolean = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsKey(K);\n    org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(int, java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n    if (!boolean) {\n        int++;\n    } else {\n        int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1;\n    }\n}"},"status":-2},{"failures":[],"tindex":"4a168f01-241a-11e5-bdf2-dd5c938aeb25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"4a168f02-241a-11e5-bdf2-6b2c628e97f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:340","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(K)"},"status":-2},{"failures":[],"tindex":"4a168f03-241a-11e5-bdf2-df5175246f8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:76","type":"CtReturnImpl","sourcecode":"return java.util.Comparator<E>.compare(E, E)"},"status":-2},{"failures":[],"tindex":"4a168f04-241a-11e5-bdf2-231f0e71c721","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1207","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[28,32,52,56,87,90],"tindex":"4a168f05-241a-11e5-bdf2-097f9773ebd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:242","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"4a168f06-241a-11e5-bdf2-2d4e9ab84b22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:155","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"4a16b617-241a-11e5-bdf2-110f3d404f64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null))"},"variableMap":{"size":"size","this":"this","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"status":0},{"failures":[],"tindex":"4a16b618-241a-11e5-bdf2-a9116704ac54","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"h","e":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:592","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"4a16b619-241a-11e5-bdf2-37140c5c2b91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))"},"status":0},{"failures":[],"tindex":"4a16b61a-241a-11e5-bdf2-d1080162a565","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\")"},"status":0},{"failures":[93,94,95,96,97,98,99],"tindex":"4a16b61b-241a-11e5-bdf2-4fb2db8f92db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:474","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.util.Map.Entry<java.lang.Object, java.lang.Long>.getValue())) {\n    super.remove(java.util.Map.Entry<java.lang.Object, java.lang.Long>.getKey());\n    java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.remove();\n} "},"status":-1},{"failures":[100,101,102],"tindex":"4a16b61c-241a-11e5-bdf2-37d7538829b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:291","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"4a16dd2d-241a-11e5-bdf2-e1ff05b312fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:523","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.remove(java.lang.Object)"},"variableMap":{"key":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1175","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-2},{"failures":[],"tindex":"4a16dd2e-241a-11e5-bdf2-578a6e23f0bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:154","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"4a16dd2f-241a-11e5-bdf2-951eacb9aa61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:617","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"4a16dd30-241a-11e5-bdf2-c5e694e22094","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:83","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"4a16b619-241a-11e5-bdf2-37140c5c2b91","diffs":[{"nodes":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":["org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.int previousIndex()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.boolean hasPrevious()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.E next()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.E previous()","org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator.org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.int nextIndex()"]},"edges":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":[],"org.apache.commons.collections4.list.FixedSizeList.java.util.ListIterator listIterator()":["org.apache.commons.collections4.list.FixedSizeList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator.org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)","org.apache.commons.collections4.list.FixedSizeList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":["org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_boolean_hasNext().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_int_nextIndex().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_E_next().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_boolean_hasPrevious().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_E_previous().b","org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator_org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator).b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator).e1","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_int_previousIndex().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator).b"]},"type":"branch"}]}]}