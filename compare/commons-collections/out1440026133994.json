{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":38,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":18,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":37,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":16,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":5,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":41,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":19,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":23,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":3,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":12,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":36,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":14,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":26,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":34,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":42,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":0,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNonEmptyMap":11,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":51,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":21,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":17,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":45,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":46,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":4,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":25,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":7,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":29,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":52,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":40,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":22,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":49,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":54,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithEmptyMap":10,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":15,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":44,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testEmptyListIteratorIsIndeedEmpty":13,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":53,"org.apache.commons.collections4.MapUtilsTest.testIsNotEmptyWithNull":9,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":28,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":1,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":50,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":24,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":27},"transformations":[{"failures":[0,1],"tindex":"315b2ad7-46c8-11e5-b286-557e801d4451","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1234","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue())"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"315b51e8-46c8-11e5-b286-67f91b178903","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"315b51e9-46c8-11e5-b286-5535faa693fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[9,10,11],"tindex":"315b51ea-46c8-11e5-b286-b9eaa49bdd70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1218","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.MapUtils.isEmpty(java.util.Map<?, ?>))"},"status":-1},{"failures":[12],"tindex":"315b51eb-46c8-11e5-b286-7775874b1b96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"status":-1},{"failures":[],"tindex":"315b51ec-46c8-11e5-b286-b10964d83880","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>"},"status":-2},{"failures":[],"tindex":"315b51ed-46c8-11e5-b286-a959ecbf8851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:913","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map.FlatMapEntry<K, V>"},"variableMap":{"currentEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>"},"status":0},{"failures":[],"tindex":"315b78fe-46c8-11e5-b286-2147ebcb5a2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"315b78ff-46c8-11e5-b286-13d591b3050e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:219","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V>.isEmpty()) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"315b7900-46c8-11e5-b286-7740b5949322","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(K, V)"},"status":0},{"failures":[],"tindex":"315b7901-46c8-11e5-b286-7bcd2d29eb2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} "},"variableMap":{"root":"left","h":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"315b7902-46c8-11e5-b286-9bf1961e6606","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"entry","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:584","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[13,14,15,16],"tindex":"315ba013-46c8-11e5-b286-cb2de505412f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:110","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[17,18,19,20,21,22,23,24],"tindex":"315ba014-46c8-11e5-b286-31ce8a4523f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"hash2","index":"hash1","beyond":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[25],"tindex":"315ba015-46c8-11e5-b286-9dc34e35ea66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:623","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"315ba016-46c8-11e5-b286-9b554b264699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"result","beforeFirst":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"315ba017-46c8-11e5-b286-599fd06b94cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:519","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-2},{"failures":[],"tindex":"315bc728-46c8-11e5-b286-750ab9d7a1c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:54","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"status":-2},{"failures":[],"tindex":"315bc729-46c8-11e5-b286-bdf0cc67afb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"315bc72a-46c8-11e5-b286-17816dee3e26","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}