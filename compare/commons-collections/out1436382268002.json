{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":20,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":10,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterator":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":14,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":7,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":23,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":12,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":6,"org.apache.commons.collections4.map.LRUMapTest.testLRU":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":11,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":2,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":3,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.CollectionUtilsTest.get":4},"transformations":[{"failures":[0,1,2],"tindex":"27f9ba5f-25a4-11e5-8620-b58bd335cea1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"variableMap":{"predicates":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"27f9e170-25a4-11e5-8620-b784a120c851","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:218","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super V, ? extends V>.transform(V)"},"status":-2},{"failures":[3],"tindex":"27fa0881-25a4-11e5-8620-5b8541ddb4a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[4,5,6],"tindex":"27fa0882-25a4-11e5-8620-efc1e4b0873f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1181","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return java.util.Iterator<T>.next();\n} "},"variableMap":{"iterator":"iterator","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1179","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<T>.hasNext()) {\n    int--;\n    if (int == (-1)) {\n        return java.util.Iterator<T>.next();\n    } \n    java.util.Iterator<T>.next();\n}"},"status":-1},{"failures":[7,8,9,10,11],"tindex":"27fa0883-25a4-11e5-8620-ad186e41c055","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)))"},"status":-1},{"failures":[],"tindex":"27fa0884-25a4-11e5-8620-757e0c1a63f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be less than zero\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:154","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-2},{"failures":[],"tindex":"27fa0885-25a4-11e5-8620-bd4f07f2eb76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:264","type":"CtReturnImpl","sourcecode":"return E"},"status":-2},{"failures":[],"tindex":"27fa0886-25a4-11e5-8620-e78342129918","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":0},{"failures":[],"tindex":"27fa0887-25a4-11e5-8620-2bf5ae92f26c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"h","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:592","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"27fa2f98-25a4-11e5-8620-d5635220f19b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"27fa2f99-25a4-11e5-8620-05bc67c7ef48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:113","type":"CtIfImpl","sourcecode":"if (java.lang.Integer != null) {\n    return java.lang.Integer.intValue();\n} "},"variableMap":{"count":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1330","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"status":-2},{"failures":[],"tindex":"27fa2f9a-25a4-11e5-8620-bfdec178d93e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:98","type":"CtIfImpl","sourcecode":"if (V == (this)) {\n    throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\");\n} "},"status":-2},{"failures":[],"tindex":"27fa2f9b-25a4-11e5-8620-078fec26ddc3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[],"tindex":"27fa2f9c-25a4-11e5-8620-c14144deb737","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1168","type":"CtIfImpl","sourcecode":"if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22],"tindex":"27fa56ad-25a4-11e5-8620-05f04ac20920","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:148","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:317","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"27fa56ae-25a4-11e5-8620-bd0587d53298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set","subSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-2},{"failures":[23],"tindex":"27fa56af-25a4-11e5-8620-79059bc2502e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1075","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.previous()"},"variableMap":{"next":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:273","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"status":-1},{"failures":[24],"tindex":"27fa56b0-25a4-11e5-8620-a3c9587f21dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:87","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"27fa56b1-25a4-11e5-8620-7fcb557a6e0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"predecessor","e":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:94","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"27fa7dc2-25a4-11e5-8620-6fb7a8af68ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:406","type":"CtBreakImpl","sourcecode":"break"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"27fa0886-25a4-11e5-8620-e78342129918","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createKeySetIterator()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"}]}]}