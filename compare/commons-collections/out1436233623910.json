{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":55,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":79,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":57,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":56,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":42,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":5,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":52,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":108,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":53,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":14,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":22,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":49,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":7,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":37,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":65,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":92,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":109,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":98,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":83,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":27,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":51,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":103,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":3,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":89,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":111,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":119,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":34,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":118,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":102,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":16,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":26,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":107,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":88,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":8,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":9,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":62,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":120,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":28,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":73,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":35,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":45},"transformations":[{"failures":[],"tindex":"1130d186-244a-11e5-8486-c91a727aa271","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1146","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"1130f897-244a-11e5-8486-db04e6fb1a13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-2},{"failures":[0,1,2],"tindex":"1130f898-244a-11e5-8486-a3fa31c79f1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:291","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[3],"tindex":"1130f899-244a-11e5-8486-2bfb8e8844ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:855","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Enumeration must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The transformer array must not contain a null transformer, index \" + int) + \" was null\"))"},"status":-1},{"failures":[],"tindex":"1130f89a-244a-11e5-8486-af9e4bfff927","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"left","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"1130f89b-244a-11e5-8486-e303d37ea942","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()"},"status":-2},{"failures":[4,0,1,2],"tindex":"11311fac-244a-11e5-8486-4173d0d3082d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"size":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:674","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":-1},{"failures":[],"tindex":"11311fad-244a-11e5-8486-a1b497730884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:669","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"11311fae-244a-11e5-8486-41e8102accff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[5,6],"tindex":"11311faf-244a-11e5-8486-07b4869d3efa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"11311fb0-244a-11e5-8486-9167f464b9bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:134","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().set(int, E)"},"status":-2},{"failures":[],"tindex":"11311fb1-244a-11e5-8486-5f16e825c5c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"11311fb2-244a-11e5-8486-c73c0cdaf0fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:321","type":"CtReturnImpl","sourcecode":"return "},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,4,0,2,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116],"tindex":"113146c3-244a-11e5-8486-cb858e2f5fe6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1194","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[],"tindex":"113146c4-244a-11e5-8486-b1c48badaccd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:455","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(K)"},"status":-2},{"failures":[],"tindex":"113146c5-244a-11e5-8486-2fd377331a36","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-2},{"failures":[],"tindex":"113146c6-244a-11e5-8486-61e658216628","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","leftChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:953","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[117],"tindex":"113146c7-244a-11e5-8486-2b59f1d37347","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:112","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\")"},"status":-1},{"failures":[118,119],"tindex":"113146c8-244a-11e5-8486-7f0a6e046b55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:325","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[120],"tindex":"113146c9-244a-11e5-8486-3b63ce65649f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:159","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].equals(java.util.Map<K, V>)) {\n    final java.util.Map<K, V>[] java.util.Map<K, V>[] = new java.util.Map[int - 1];\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int);\n    java.lang.System.arraycopy(this.java.util.Map<K, V>[], (int + 1), java.util.Map<K, V>[], int, ((int - int) - 1));\n    this.java.util.Map<K, V>[] = java.util.Map<K, V>[];\n    return java.util.Map<K, V>;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"11311fb2-244a-11e5-8486-c73c0cdaf0fd","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"]},"type":"variable"}]}]}