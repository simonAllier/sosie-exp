{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":10,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":3,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":62,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":128,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":60,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":32,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":98,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":30,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":81,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":90,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":36,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":85,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":35,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":110,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":88,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":80,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":25,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":86,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":100,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":18,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":41,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":123,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":42,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":78,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":94,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":77,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":37,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":64,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":70,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":108,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":20,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":109,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":120,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":52,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":2,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":40,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":106,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":95,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":11,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":72,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":116,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":111,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":114,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":121,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":103,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":28,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":6,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":43,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":87,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":102,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":126,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":45,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":59,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":7,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":107,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":12,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":49,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":127,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":56,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":46,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":93,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":91,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":54,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":104,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":67,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":22,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":79,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":122,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":129,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":105,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":112,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":119,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":34,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":71,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":117,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":83,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":66,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":113,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":29,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":84,"org.apache.commons.collections4.map.CompositeMapTest.testPut":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":5,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.CompositeMapTest.testGet":23,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":53,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":4,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":14,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":75,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":15,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":57,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":31,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":38,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":9,"org.apache.commons.collections4.iterators.UnmodifiableMapIteratorTest.testRemove":19,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":89,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":27,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":26,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":33,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":124,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":61,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":69,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":51},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"c4ce6221-251c-11e5-b585-d3f738af24c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:226","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"c4ce6222-251c-11e5-b585-efb3a7f0d086","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:538","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"c4ce8933-251c-11e5-b585-af7f9d76864f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"current","parent":"path","predecessor":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:437","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[11,12,13,14,15,16,17,18],"tindex":"c4ce8934-251c-11e5-b585-e70404194b9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:652","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{"data":"data","newEntries":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1037","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int]"},"status":-1},{"failures":[19],"tindex":"c4ce8935-251c-11e5-b585-ef3a2587685d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:276","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[],"tindex":"c4ce8936-251c-11e5-b585-a7ffee49e7c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[20,21,22],"tindex":"c4ce8937-251c-11e5-b585-1178fcbfcbcf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"removed","changed":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"c4ceb048-251c-11e5-b585-0f467c059bb3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:218","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"c4ceb049-251c-11e5-b585-65094ed5be73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"predecessor","e":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:598","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[23,24,25,26,27,28,29,30],"tindex":"c4ceb04a-251c-11e5-b585-41174a4a6a6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:111","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.addComposited(java.util.Map<K, V>[][int])"},"status":-1},{"failures":[],"tindex":"c4ceb04b-251c-11e5-b585-1588bcd7c1bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"c4ced75c-251c-11e5-b585-d9c3ee75d471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:315","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.ListIterator<java.util.Map.Entry<K, V>>.next()"},"variableMap":{"iterator":"iterator","last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":0},{"failures":[],"tindex":"c4ced75d-251c-11e5-b585-a9dbc603bc63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[],"tindex":"c4ced75e-251c-11e5-b585-05c888a7ae4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} "},"status":-2},{"failures":[],"tindex":"c4ced75f-251c-11e5-b585-d51b8477f81a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:460","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129],"tindex":"c4ced760-251c-11e5-b585-0139eb30c9b8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.hasNext()"},"status":-1},{"failures":[],"tindex":"c4cefe71-251c-11e5-b585-4f8053362f7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"removed","changed":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:110","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[],"tindex":"c4cefe72-251c-11e5-b585-a9b9439e97af","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:181","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[],"tindex":"c4cefe73-251c-11e5-b585-592627024136","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"variableMap":{"start":"hashCode","maxElements":"hashCode","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:604","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"c4cefe74-251c-11e5-b585-5b4d167b3024","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}