{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":56,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":115,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":5,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":136,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsContract":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":11,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":106,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsSelfHashCode":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":42,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testObjectHashCodeEqualsContract":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":146,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":58,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":151,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":36,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":116,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":8,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":93,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":21,"org.apache.commons.collections4.CollectionUtilsTest.exists":150,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":134,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":16},"transformations":[{"failures":[],"tindex":"5984ed80-4179-11e5-a518-d746a55f7258","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:47","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"59851491-4179-11e5-a518-e108d1d9d164","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:558","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"59851492-4179-11e5-a518-394cd2c1f48c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"status":-2},{"failures":[],"tindex":"59851493-4179-11e5-a518-bf47c4658533","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"59851494-4179-11e5-a518-0d2e53266db1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"maxElements","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:162","type":"CtAssignmentImpl","sourcecode":"int = boolean ? int : 0"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140],"tindex":"59851495-4179-11e5-a518-b7aedef92137","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:553","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n} else {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n}"},"status":-1},{"failures":[141,142,143,144,145,146,147,148],"tindex":"59853ba6-4179-11e5-a518-fdf77c119586","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"purgeValues"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl","sourcecode":"this.boolean = java.io.ObjectInputStream.readBoolean()"},"status":-1},{"failures":[],"tindex":"59853ba7-4179-11e5-a518-fdd20119a22a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:176","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K)"},"status":-2},{"failures":[149],"tindex":"59853ba8-4179-11e5-a518-cbec531f2e56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The prototype must be cloneable via a public clone method\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[],"tindex":"59853ba9-4179-11e5-a518-c36aeaa11c8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[150],"tindex":"598562ba-4179-11e5-a518-abd96c97471c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[151,152],"tindex":"598562bb-4179-11e5-a518-83e0931e73e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"mapToCopy","defaultValue":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[],"tindex":"598562bc-4179-11e5-a518-1392820e094b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:883","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"current":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"598562bd-4179-11e5-a518-7d41c4e1e777","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Closure<? super E>[])"},"status":-2},{"failures":[],"tindex":"598562be-4179-11e5-a518-5dfb43e02cff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())"},"status":-2},{"failures":[],"tindex":"598562bf-4179-11e5-a518-7b2febb325e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","newNode":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"598562c0-4179-11e5-a518-b70dada79e83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:239","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":0},{"failures":[],"tindex":"598589d1-4179-11e5-a518-cbc9f844605b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:280","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"status":-2},{"failures":[],"tindex":"598589d2-4179-11e5-a518-93508a31f0e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:913","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[153,154,155,156,157],"tindex":"598589d3-4179-11e5-a518-b9b45d0c0992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}