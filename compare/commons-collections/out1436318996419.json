{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":162,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":101,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":108,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":125,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":147,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":203,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectEqualsSelf":151,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":207,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":68,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":185,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":195,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":72,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":111,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":11,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":66,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":86,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":187,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":156,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":178,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":98,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":166,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":171,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":116,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":208,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":196,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":163,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":49,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":16,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":120,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":31,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":18,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":206,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":197,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":14,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":119,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":192,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":2,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":64,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":52,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":8,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":118,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":69,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":71,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":107,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":77,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":182,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":189,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":168,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":3,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":193,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":110,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":109,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":22,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":211,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":175,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":139,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":133,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":145,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":136,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":141,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":200,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":40,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":51,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":81,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":23,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":127,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":179,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":155,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":212,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":164,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":209,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":57,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":100,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":12,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":188,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":115,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":70,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":75,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":9,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":153,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":13,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":55,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":186,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":148,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":24,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":27,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":202,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":143,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":159,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":194,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":131,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":177,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":62,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":205,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":157,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":113,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":173,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":140,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":4,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":123,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":183,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":28,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":138,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":76},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"d72ccd3f-2510-11e5-949a-69726a2cded4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"d72cf450-2510-11e5-949a-67cd23918e2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"d72cf451-2510-11e5-949a-290e9b78fe95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"variableMap":{"this":"this","newSize":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"d72cf452-2510-11e5-949a-4123fef68944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:319","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends K, ? extends V>.size()"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150],"tindex":"d72d1b63-2510-11e5-949a-05c1934779d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[151],"tindex":"d72d1b64-2510-11e5-949a-6384fdbf917a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1324","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203],"tindex":"d72d1b65-2510-11e5-949a-7f27a9343afd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"d72d1b66-2510-11e5-949a-db9c8daad9fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1139","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"d72d1b67-2510-11e5-949a-a5c7c1991161","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)"},"status":0},{"failures":[204,205,206,207],"tindex":"d72d4278-2510-11e5-949a-1112477fe3cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"status":-1},{"failures":[],"tindex":"d72d4279-2510-11e5-949a-7f524bbf5d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"entry","tree":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:226","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"d72d427a-2510-11e5-949a-eba83c0f4f50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"d72d427b-2510-11e5-949a-dbb54ebd516f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:330","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":-2},{"failures":[208,209],"tindex":"d72d427c-2510-11e5-949a-37171a6c9989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:167","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"transformer must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:303","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1},{"failures":[],"tindex":"d72d698d-2510-11e5-949a-978e3283bef9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[],"tindex":"d72d698e-2510-11e5-949a-19d8d5ad8f24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.TransformedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[210,211,212],"tindex":"d72d698f-2510-11e5-949a-21d798c47104","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2404","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"d72d6990-2510-11e5-949a-a13cbd8c57ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"d72d6991-2510-11e5-949a-b9332ac968cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"next","previous":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:142","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d72d1b67-2510-11e5-949a-a5c7c1991161","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$ValuesIterator.V next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[])","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.java.lang.Object[] toArray()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.<T> T[] toArray(T[]) -> org.apache.commons.collections4.map.AbstractLinkedMap$ValuesIterator.V next()"],"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"}]}]}