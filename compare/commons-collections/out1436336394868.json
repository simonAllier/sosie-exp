{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":106,"org.apache.commons.collections4.CollectionUtilsTest.countMatches":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":43,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":64,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":20,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":24,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":57,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":112,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":93,"org.apache.commons.collections4.map.ListOrderedMapTest.testLastKey":11,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":114,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":42,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":30,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":79,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":91,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":94,"org.apache.commons.collections4.map.ListOrderedMap2Test.testLastKey":9,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":95,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":45,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":29,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":65,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":101,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.SingletonMapTest.testLastKey":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":107,"org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate":15,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":12,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":111,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":17,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":22,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":86,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":97,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":67,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":58,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":40,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":89,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testLastKey":10,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":51,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":31,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":49,"org.apache.commons.collections4.CollectionUtilsTest.isFull":0,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":50,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":105,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":66},"transformations":[{"failures":[],"tindex":"5974fa47-2539-11e5-a841-0396838ada9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key1","hashCode":"hashCode","key3":"key1","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:159","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"59752158-2539-11e5-a841-15b680be5d89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:138","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    java.util.List<E>.add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E));\n}"},"status":-2},{"failures":[],"tindex":"59752159-2539-11e5-a841-fd5a5ba8667b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:267","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:660","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"5975215a-2539-11e5-a841-55cb7af07fd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:567","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-2},{"failures":[],"tindex":"5975486b-2539-11e5-a841-83d450176924","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:520","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"5975486c-2539-11e5-a841-f1a131cf7c0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"status":-2},{"failures":[],"tindex":"5975486d-2539-11e5-a841-9fdb15ad7aa1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()"},"status":-2},{"failures":[],"tindex":"5975486e-2539-11e5-a841-039e50f7ad45","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:472","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[0,1],"tindex":"5975486f-2539-11e5-a841-cb3653f39d3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"status":-1},{"failures":[2],"tindex":"59754870-2539-11e5-a841-83de75f06686","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:825","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            int++;\n        } \n    }\n} "},"status":-1},{"failures":[3,4,5,6,7],"tindex":"59756f81-2539-11e5-a841-d9cc208cbac5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:243","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"59756f82-2539-11e5-a841-0526e08a9e22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:852","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1105","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[8,9,10,11],"tindex":"59756f83-2539-11e5-a841-97218e67f2d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ComparatorUtils:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Comparator cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:181","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[],"tindex":"59756f84-2539-11e5-a841-cb04e7cff2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:78","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"59756f85-2539-11e5-a841-6540c8c91888","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"59756f86-2539-11e5-a841-c94fa78dbae2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:199","type":"CtReturnImpl","sourcecode":"return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(long, java.util.concurrent.TimeUnit)"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22],"tindex":"59759697-2539-11e5-a841-f717ba58d31b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FalsePredicate:64","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"59759698-2539-11e5-a841-ff3dfcc367f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"variableMap":{"length":"i","key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115],"tindex":"59759699-2539-11e5-a841-45f64c49a071","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1340","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}