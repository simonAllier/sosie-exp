{"failureDictionary":{"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":11,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":3,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":10,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":1,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":6,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":12,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":5,"org.apache.commons.collections4.ListUtilsTest.testHashCode":0,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":7,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":9,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":2,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":13,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":4,"org.apache.commons.collections4.ListUtilsTest.testEquals":15,"org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate":8},"transformations":[{"failures":[],"tindex":"c75abc3a-24de-11e5-a895-8115d42c3e43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<T> instanceof java.util.List<?>) {\n    return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int);\n} "},"variableMap":{"iterable":"iterable","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable<T>.iterator(), int)"},"status":-2},{"failures":[0],"tindex":"c75ae34b-24de-11e5-a895-519fbc3ed718","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"c75ae34c-24de-11e5-a895-a9a92dfa646f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"variableMap":{"composite":"key1","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[1,2,3,4],"tindex":"c75ae34d-24de-11e5-a895-b1431d12426d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:448","type":"CtAssignmentImpl","sourcecode":"int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"c75ae34e-24de-11e5-a895-afc4d11f8bfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[],"tindex":"c75b0a5f-24de-11e5-a895-8326babc85ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:129","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()"},"status":-2},{"failures":[],"tindex":"c75b0a60-24de-11e5-a895-5d9da1e6f539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"status":-2},{"failures":[5],"tindex":"c75b0a61-24de-11e5-a895-ff24e62b8abb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:246","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[6,7,8,9,10,11],"tindex":"c75b0a62-24de-11e5-a895-29543b428f35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl","sourcecode":"return java.util.Set<T>.add(T)"},"status":-1},{"failures":[12],"tindex":"c75b0a63-24de-11e5-a895-abd664074257","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:878","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c75b3174-24de-11e5-a895-e5083bba2658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:126","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[13],"tindex":"c75b3175-24de-11e5-a895-2b891cce53ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:231","type":"CtIfImpl","sourcecode":"if ((java.lang.Integer == null) || (java.lang.Integer == null)) {\n    switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n        case BEFORE :\n            return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n        case AFTER :\n            return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n        case EXCEPTION :\n            final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n            throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n        default :\n            throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n    }\n} "},"status":-1},{"failures":[],"tindex":"c75b3176-24de-11e5-a895-557a7b160bdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"c75b5887-24de-11e5-a895-b99ae9ab438d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:355","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(K), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"c75b5888-24de-11e5-a895-2fa7df4f5d20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1496","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:447","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator<E>)"},"status":-2},{"failures":[14],"tindex":"c75b5889-24de-11e5-a895-41da6ac3a5b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:121","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(E)"},"status":-1},{"failures":[],"tindex":"c75b588a-24de-11e5-a895-33d04c254b2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:391","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>)"},"status":-2},{"failures":[],"tindex":"c75b588b-24de-11e5-a895-6396b184f433","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:529","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":-2},{"failures":[15],"tindex":"c75b7f9c-24de-11e5-a895-eb25e843eaf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"list2","list2":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"c75b7f9d-24de-11e5-a895-bd93c3c7526b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"c75b3176-24de-11e5-a895-557a7b160bdf","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.NullComparator.int compare(E,E)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.NullComparator.int compare(E,E)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.int hashCode()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.boolean equals(java.lang.Object)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_currentEntry().b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().e1"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.comparators.ComparableComparator_int_compare(E,E).b","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e1","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e2","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e3","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).t2"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"]},"type":"branch"}]}]}