{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":96,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":19,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":59,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":3,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":97,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":9,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":64,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":85,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":112,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":118,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":58,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":49,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":93,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":106,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":65,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":105,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":111,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":116,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":10,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":82,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":114,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":102,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":68,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":48,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":88,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":16,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":107,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":113,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":110,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":89,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":17,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":104,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":15,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":52,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":86,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":40,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":90,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":76,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":37},"transformations":[{"failures":[],"tindex":"e4c2f2e0-2416-11e5-bbdb-5da20de0d9b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()"},"status":-2},{"failures":[],"tindex":"e4c2f2e1-2416-11e5-bbdb-2146be052724","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e4c319f2-2416-11e5-bbdb-bdb19b5f8694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:145","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V>[][((java.util.Map<K, V>[].int) - 1)] = java.util.Map<K, V>"},"status":-2},{"failures":[0],"tindex":"e4c319f3-2416-11e5-bbdb-4dee5863b8fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"variableMap":{"sub":"result","length":"offset","i":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:195","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"e4c319f4-2416-11e5-bbdb-fbbec2ebefc7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"tindex":"e4c319f5-2416-11e5-bbdb-3f60498c824c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl","sourcecode":"return int >= 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:384","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e4c319f6-2416-11e5-bbdb-97f270b78f8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:155","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[12,13,14,15,16,17],"tindex":"e4c34107-2416-11e5-bbdb-e36db1884063","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:985","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size())"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110],"tindex":"e4c34108-2416-11e5-bbdb-7d10f62ff27c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[111,112],"tindex":"e4c34109-2416-11e5-bbdb-173a24a7a579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:221","type":"CtInvocationImpl","sourcecode":"super.updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"e4c3410a-2416-11e5-bbdb-3f5198c8d1bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"e4c3410b-2416-11e5-bbdb-c3b8d9eaa6f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))"},"variableMap":{"key1":"value","key2":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.isEqualValue(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e4c3681c-2416-11e5-bbdb-19d5d4d8edbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"e4c3681d-2416-11e5-bbdb-a9464892e14a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:134","type":"CtAssignmentImpl","sourcecode":"int[][(int + int)] = int"},"variableMap":{"indexOfLargestMobileInteger":"total","offset":"total","keys":"object","tmpKey":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1354","type":"CtAssignmentImpl","sourcecode":"int = java.lang.reflect.Array.getLength(java.lang.Object)"},"status":-2},{"failures":[113],"tindex":"e4c3681e-2416-11e5-bbdb-63fcda600e1a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:121","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(E)"},"status":-1},{"failures":[],"tindex":"e4c3681f-2416-11e5-bbdb-91cd461680ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","key3":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[114,115,116,117],"tindex":"e4c36820-2416-11e5-bbdb-fd03c8da9a0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:237","type":"CtIfImpl","sourcecode":"if (java.util.Set<java.util.Map.Entry<K, java.lang.Object>> != null) {\n    for (final java.util.Map.Entry<K, java.lang.Object> java.util.Map.Entry<K, java.lang.Object> : java.util.Set<java.util.Map.Entry<K, java.lang.Object>>) {\n        if (((java.util.Collection<V>)(java.util.Map.Entry<K, java.lang.Object>.getValue())).contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} "},"status":-1},{"failures":[118],"tindex":"e4c38f31-2416-11e5-bbdb-11f0e3369f58","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"e4c38f32-2416-11e5-bbdb-d9487450641c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"e4c38f33-2416-11e5-bbdb-e562fb0c1911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1291","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}