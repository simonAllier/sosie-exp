{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":122,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":6,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":42,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":112,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":128,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":55,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":63,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":26,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":126,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":143,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":31,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":123,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":67,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":157,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":145,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":139,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":40,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":5,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":15,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":83,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":141,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":3,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":20,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":124,"org.apache.commons.collections4.CollectionUtilsTest.get":35,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":113,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":17,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":64,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":111,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":154,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":95,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":119,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":147,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":66,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":159,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":96,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":73,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":125,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":78,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":153,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":137,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":11,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":114,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":79,"org.apache.commons.collections4.CollectionUtilsTest.get1":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":88,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":9,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":47,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":138,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":91,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":65,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":45,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":90,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionSize":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":144,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":155,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":69,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":81,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":130,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":43,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":110,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionSize":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":94,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":19,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":118,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":116,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":39,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":59,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":82,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":148,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":33,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":44,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":24,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":37,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":77,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":146,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":13,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":107,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":93,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":132,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":29,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":117,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":14,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":134,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":129},"transformations":[{"failures":[],"tindex":"d7015d10-24d6-11e5-8194-b94265eb001e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"result","size":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:130","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"status":-1},{"failures":[],"tindex":"d7018421-24d6-11e5-8194-7f767bec9ce4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"status":-2},{"failures":[],"tindex":"d701ab32-24d6-11e5-8194-0d52efd5c142","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"d701ab33-24d6-11e5-8194-efa1a0549fd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:261","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"modified":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:205","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E)"},"status":-1},{"failures":[28,29,30,31,32,33],"tindex":"d701ab34-24d6-11e5-8194-db5cb83c3445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"d701d245-24d6-11e5-8194-836294b87ef1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[34,35,36,37,38,39],"tindex":"d701f956-24d6-11e5-8194-4f322d1460ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"d701f957-24d6-11e5-8194-bb1bcfdc4c7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"variableMap":{"list1":"coll","larger":"coll","smaller":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[40],"tindex":"d7022068-24d6-11e5-8194-c7faf813f285","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:897","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.max()"},"variableMap":{"s":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:273","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"status":-1},{"failures":[41],"tindex":"d7022069-24d6-11e5-8194-61d9a3de514f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"d702206a-24d6-11e5-8194-e39f79fb27c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:113","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"d702477b-24d6-11e5-8194-ddf1b7279716","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maximumCacheSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:432","type":"CtOperatorAssignmentImpl","sourcecode":"int += this.java.util.Map<K, V>[][int].size()"},"status":-1},{"failures":[],"tindex":"d702477c-24d6-11e5-8194-67c984893dcf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:501","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"d702477d-24d6-11e5-8194-a7f40ab923ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1230","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[82,83,84,85,86,87],"tindex":"d702477e-24d6-11e5-8194-6305fe09a382","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-1},{"failures":[],"tindex":"d7026e8f-24d6-11e5-8194-8d7afba9616c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:81","type":"CtLocalVariableImpl","sourcecode":"final O O = this.org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[],"tindex":"d7026e90-24d6-11e5-8194-190156541a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"variableMap":{"h":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"status":-2},{"failures":[],"tindex":"d7026e91-24d6-11e5-8194-c5f5f764afa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:268","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"data":"data","link":"next","hashIndex":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:584","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"d70294a2-24d6-11e5-8194-9d0393df24cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1325","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n        return false;\n    } \n} else {\n    if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d70294a3-24d6-11e5-8194-f7b15fdf2fb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:194","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"d701ab32-24d6-11e5-8194-0d52efd5c142","diffs":[{"nodes":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()"]},"edges":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked() -> org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked() -> org.apache.commons.collections4.comparators.FixedOrderComparator.boolean isLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.boolean add(T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.boolean isLocked()","org.apache.commons.collections4.comparators.FixedOrderComparator.boolean add(T) -> org.apache.commons.collections4.comparators.FixedOrderComparator.void checkLocked()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":["org.apache.commons.collections4.comparators.FixedOrderComparator_void_checkLocked().b","org.apache.commons.collections4.comparators.FixedOrderComparator_void_checkLocked().e1"]},"type":"branch"}]}]}