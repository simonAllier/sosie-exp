{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":105,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":62,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testReset":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":91,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":12,"org.apache.commons.collections4.iterators.ObjectArrayIteratorTest.testReset":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":9,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":96,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":109,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":83,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":77,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":87,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":110,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":114,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":88,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":112,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":115,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":60,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":70,"org.apache.commons.collections4.set.CompositeSetTest.testContains":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":17,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":98},"transformations":[{"failures":[],"tindex":"9d0e17f5-2600-11e5-bf18-ab491e561d46","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:283","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"9d0e6616-2600-11e5-bf18-8d1e7a50dd0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"9d0e6617-2600-11e5-bf18-6757e6b90cef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"parent","dataElement":"dataElement","child":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"9d0e6618-2600-11e5-bf18-b7d31763957e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)"},"variableMap":{"fromIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))"},"status":-2},{"failures":[],"tindex":"9d0e8d29-2600-11e5-bf18-5b2554e96be4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:168","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Comparator<T>.compare(T, T)"},"status":-2},{"failures":[8],"tindex":"9d0e8d2a-2600-11e5-bf18-95f6c244ed8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"endIndex":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:198","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"status":-1},{"failures":[],"tindex":"9d0e8d2b-2600-11e5-bf18-3d341d5c8322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:602","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"9d0e8d2c-2600-11e5-bf18-b595bd9432ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:98","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"9d0eb43d-2600-11e5-bf18-2f766993668b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:129","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"9d0eb43e-2600-11e5-bf18-11ecafff1e1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:788","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:147","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-1},{"failures":[],"tindex":"9d0eb43f-2600-11e5-bf18-fbf874731864","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key3","next":"entry","entry":"next","key2":"key1","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"9d0edb50-2600-11e5-bf18-b9089c1dca0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IfClosure:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super E>"},"variableMap":{"iPredicate":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"9d0f0261-2600-11e5-bf18-d3fc770571b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:439","type":"CtLocalVariableImpl","sourcecode":"final long long = org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy<K, V>.expirationTime(K, V)"},"status":-2},{"failures":[],"tindex":"9d0f0262-2600-11e5-bf18-cdcb842e3dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"9d0f0263-2600-11e5-bf18-e59fc519aae8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:139","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[98,99,100],"tindex":"9d0f0264-2600-11e5-bf18-192a03b041b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:171","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":-1},{"failures":[101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120],"tindex":"9d0f2975-2600-11e5-bf18-8f321b2b66a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9d0f2976-2600-11e5-bf18-9b081c18c1ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"variableMap":{"composite":"composite","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"9d0f2977-2600-11e5-bf18-59ca3cf04cac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.getLength(java.lang.Object))"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130],"tindex":"9d0f2978-2600-11e5-bf18-ed29d5f60bb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:907","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1023","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}