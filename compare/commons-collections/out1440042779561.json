{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":121,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":118,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":94,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":127,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":87,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":31,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":48,"org.apache.commons.collections4.CollectionUtilsTest.get":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":73,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":17,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":43,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":124,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":104,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":69,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":58,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":95,"org.apache.commons.collections4.CollectionUtilsTest.get1":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":5,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":86,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":89,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":116,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":28,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":50,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":134,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":77,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":103,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":98,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":59,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":132,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":71,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":97,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":52},"transformations":[{"failures":[],"tindex":"f2e2f8f9-46ee-11e5-a7b2-d75e97f973f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)"},"status":0},{"failures":[0,1,2,3,4,5,6,7],"tindex":"f2e3200a-46ee-11e5-a7b2-47c2476af8c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl","sourcecode":"this.boolean = java.io.ObjectInputStream.readBoolean()"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87],"tindex":"f2e3200b-46ee-11e5-a7b2-ad56db2744b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"f2e3200c-46ee-11e5-a7b2-0362f1145ac6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"status":-1},{"failures":[107,108],"tindex":"f2e3200d-46ee-11e5-a7b2-63a155c5e269","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"status":-1},{"failures":[109,110],"tindex":"f2e3471e-46ee-11e5-a7b2-dd2667e83964","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:162","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n    return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n} "},"status":-1},{"failures":[111,112,113,114],"tindex":"f2e3471f-46ee-11e5-a7b2-d792ffd708f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:336","type":"CtInvocationImpl","sourcecode":"super.clear()"},"status":-1},{"failures":[115],"tindex":"f2e34720-46ee-11e5-a7b2-13c701d8465a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:675","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super I, ? extends O> == null) {\n    throw new java.lang.NullPointerException(\"Transformer must not be null\");\n} "},"variableMap":{"transform":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"f2e34721-46ee-11e5-a7b2-1189d9a21fc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:593","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(int)"},"status":0},{"failures":[116],"tindex":"f2e34722-46ee-11e5-a7b2-b9f97abd187a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":-1},{"failures":[117,118,119,120,121,122,123,124,125,126,127,128],"tindex":"f2e34723-46ee-11e5-a7b2-532228a601a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2e36e34-46ee-11e5-a7b2-056a03aa9a9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1560","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapEntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:54","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<E>"},"status":-2},{"failures":[],"tindex":"f2e36e35-46ee-11e5-a7b2-c52bae7c19c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:76","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:500","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey())"},"status":-2},{"failures":[],"tindex":"f2e36e36-46ee-11e5-a7b2-3985cfa4d14d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap()"},"status":0},{"failures":[],"tindex":"f2e36e37-46ee-11e5-a7b2-6b3b9ccf93cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:886","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)"},"status":-2},{"failures":[],"tindex":"f2e36e38-46ee-11e5-a7b2-6d9ea62e742b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"status":-2},{"failures":[],"tindex":"f2e36e39-46ee-11e5-a7b2-89b585216261","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:341","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:157","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"f2e36e3a-46ee-11e5-a7b2-55cbd1628acc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure"},"variableMap":{"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE":"org.apache.commons.collections4.functors.NOPClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":0},{"failures":[129,130,131,132,133,134,135],"tindex":"f2e3954b-46ee-11e5-a7b2-cde180e82714","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"f2e3954c-46ee-11e5-a7b2-19ee9c81c9d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}