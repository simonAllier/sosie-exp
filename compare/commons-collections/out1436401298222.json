{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":19,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":33,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":53,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":51,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":57,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":89,"org.apache.commons.collections4.CollectionUtilsTest.get":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":92,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":63,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":17,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":106,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":60,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":14,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":70,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":41,"org.apache.commons.collections4.map.LRUMapTest.testLRU":107,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":64,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":28,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":94,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":31,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":1,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":21,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":67,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":49,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":75,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":108,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":56,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":91,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":13,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":45,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":10,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":5,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":104,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":61,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":96},"transformations":[{"failures":[],"tindex":"76df9f3e-25d0-11e5-9b3e-2b606d6812c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:251","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0,1],"tindex":"76dfc64f-25d0-11e5-9b3e-c9bdce54a8a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} "},"variableMap":{"predicate":"valuePredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-1},{"failures":[],"tindex":"76dfed60-25d0-11e5-9b3e-012301da1717","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} "},"status":-2},{"failures":[],"tindex":"76dfed61-25d0-11e5-9b3e-e350bf75b5d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:456","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == (org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) ? java.lang.Object : ((java.lang.ref.Reference<K>)(java.lang.Object)).get()"},"variableMap":{"key2":"key","org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.HARD":"key","keyType":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"76dfed62-25d0-11e5-9b3e-9defa6d2607e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:720","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"to":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[2,3],"tindex":"76e01473-25d0-11e5-9b3e-efd3ca99e0c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"this","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[4],"tindex":"76e03b84-25d0-11e5-9b3e-e32b60e084ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:76","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) && (org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15],"tindex":"76e03b85-25d0-11e5-9b3e-774b1446eba9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:328","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"76e03b86-25d0-11e5-9b3e-99a3da5c7b93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"index","removeIndex":"index","currentIndex":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26],"tindex":"76e03b87-25d0-11e5-9b3e-fbbaa00e3bfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet())"},"status":-1},{"failures":[],"tindex":"76e06298-25d0-11e5-9b3e-75aeadf785a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:71","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"}\\n\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:594","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(':')"},"status":0},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"76e06299-25d0-11e5-9b3e-b9baf2d791e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)"},"status":-1},{"failures":[51,52,53,54,55],"tindex":"76e0629a-25d0-11e5-9b3e-d16d42afe0d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:144","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"76e0629b-25d0-11e5-9b3e-9d0eff10498b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:307","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.util.List<java.util.Comparator<E>>.hashCode()"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"76e089ac-25d0-11e5-9b3e-b5cc0e6eb440","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"76e089ad-25d0-11e5-9b3e-79f088c3a9f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:883","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[104,105,106,107,108],"tindex":"76e089ae-25d0-11e5-9b3e-b3e97a3da3b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"76e0b0bf-25d0-11e5-9b3e-d1c5f6d2c04e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:161","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.nextIndex();\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:194","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.previousIndex();\n} "},"status":-2},{"failures":[],"tindex":"76e0b0c0-25d0-11e5-9b3e-bfd9f769ec57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:519","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"76e0b0c1-25d0-11e5-9b3e-49a6b2cdc023","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:189","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}