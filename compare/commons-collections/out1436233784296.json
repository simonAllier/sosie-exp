{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":124,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":88,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":207,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":177,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":125,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":175,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":68,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":66,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":216,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":60,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":116,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":169,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":139,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":123,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":128,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":225,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":92,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":162,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":219,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":105,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":12,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":154,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":178,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":229,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":143,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":237,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":249,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":51,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":183,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":126,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":247,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":69,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":214,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":36,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":142,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":188,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":228,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":255,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":235,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":138,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":234,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":230,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":185,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":221,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":239,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":232,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":140,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":147,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":3,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":258,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":25,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":200,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":106,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":210,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":23,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":170,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":246,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":104,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":252,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":98,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":227,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":41,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":222,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":40,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":223,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":34,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":253,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":251,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":37,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":153,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":231,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":238,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":127,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":254,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":160,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":102,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":174,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":256,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":109,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":63,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":218,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":245,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":244,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":240,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":241,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":242,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":84,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":233,"org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":118,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":176,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":141,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":250,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":38,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":182,"org.apache.commons.collections4.map.LRUMapTest.testLRU":155,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":49,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":248,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":149,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":114,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":204,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":21,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":135,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":224,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":192,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":195,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":65,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":215,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":220,"org.apache.commons.collections4.map.LRUMapTest.testReset":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":24,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":208,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":191,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":257,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":187,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":209,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":236,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":18,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":20,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":144,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":90},"transformations":[{"failures":[],"tindex":"70cc6011-244a-11e5-86bf-17c0c1eb21fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:484","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"size":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"70cc8722-244a-11e5-86bf-634f26330b2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ClosureUtils.org.apache.commons.collections4.ClosureUtils.asClosure(org.apache.commons.collections4.functors.InvokerTransformer.<E,java.lang.Object>invokerTransformer(java.lang.String))"},"status":-1},{"failures":[],"tindex":"70cc8723-244a-11e5-86bf-1fc8b07b97ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:507","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"70ccae34-244a-11e5-86bf-17ac4d5d7c4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"70ccae35-244a-11e5-86bf-e5344043fa99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0},{"failures":[],"tindex":"70ccae36-244a-11e5-86bf-c3ca0c50ce5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-2},{"failures":[6],"tindex":"70ccae37-244a-11e5-86bf-371cbf09d26e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17],"tindex":"70ccae38-244a-11e5-86bf-e55049ef8c74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:842","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Already at start of list.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))"},"status":-1},{"failures":[18],"tindex":"70ccae39-244a-11e5-86bf-335b84d63d9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:562","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[],"tindex":"70ccd54a-244a-11e5-86bf-29eaa2dd00e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"hash","lastItemIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"status":0},{"failures":[],"tindex":"70ccd54b-244a-11e5-86bf-a9de6f6b1511","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:434","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"70ccd54c-244a-11e5-86bf-956a14c63b77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:167","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:276","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.add(java.util.Iterator<? extends E>.next())"},"status":-2},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154],"tindex":"70ccd54d-244a-11e5-86bf-35a3169c09b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:141","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"next":"header","cachedNode":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:98","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createHeaderNode()"},"status":-1},{"failures":[],"tindex":"70ccd54e-244a-11e5-86bf-999756076a1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:483","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"70ccfc5f-244a-11e5-86bf-cf75308b7db5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:965","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208],"tindex":"70ccfc60-244a-11e5-86bf-61052e09a8dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:246","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.isFull()) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    boolean boolean = false;\n    if (boolean) {\n        while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n            if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n                boolean = true;\n                break;\n            } \n            org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n        }\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n    } else {\n        boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n    }\n    if (boolean) {\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n        } \n        org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    } else {\n        super.addMapping(int, int, K, V);\n    }\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[209,210,211],"tindex":"70ccfc61-244a-11e5-86bf-61a5d1babe6c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-1},{"failures":[212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257],"tindex":"70cd2372-244a-11e5-86bf-efb8f82e57c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"70cd2373-244a-11e5-86bf-a3a37ffd29fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1176","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:584","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[258],"tindex":"70cd2374-244a-11e5-86bf-d14939e4a40b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"70cc6011-244a-11e5-86bf-17c0c1eb21fd","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}