{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":19,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":33,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":1,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":32,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":45,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":3,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":9,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":17,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":38,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":51,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":43,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":36,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":25,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":12,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":40,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":46,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":39,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":16,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":41,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":35,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":44,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":37,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":52,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.CollectionUtilsTest.exists":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":7,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":50},"transformations":[{"failures":[],"tindex":"651d5e3b-2413-11e5-a2c7-857130378727","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hash1","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:510","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"651dd36c-2413-11e5-a2c7-bf7109989a32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"h","h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:509","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[21],"tindex":"651dd36d-2413-11e5-a2c7-617e9a64eaa9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"variableMap":{"currentIndex":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:623","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"651dd36e-2413-11e5-a2c7-11e13015ddd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:138","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} "},"status":0},{"failures":[22],"tindex":"651dfa7f-2413-11e5-a2c7-e79b8ed4b55e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:220","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"651dfa80-2413-11e5-a2c7-db387038f078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:133","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"651dfa81-2413-11e5-a2c7-c1ec59d4ca8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:181","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.set.CompositeSet<E>.size()"},"status":-2},{"failures":[23],"tindex":"651dfa82-2413-11e5-a2c7-25f55e77b1e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:854","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[24,25,26,27,28,29,30,31],"tindex":"651e2193-2413-11e5-a2c7-95e8236598d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:259","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"651e2194-2413-11e5-a2c7-8b7f52a5ae61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-2},{"failures":[32],"tindex":"651e2195-2413-11e5-a2c7-5f7edcfb84ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:50","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"keyAnalyzer\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\")"},"status":-1},{"failures":[33,34,35,36],"tindex":"651e48a6-2413-11e5-a2c7-b1bae5177a3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"index","expectedModCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:245","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[37,38,22,39,40],"tindex":"651e48a7-2413-11e5-a2c7-03d96b0fe7e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:185","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(--(int))"},"variableMap":{"list":"list","currentIndex":"currentIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:144","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(((int) - 1))"},"status":-1},{"failures":[],"tindex":"651e48a8-2413-11e5-a2c7-8be2aa45b415","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:174","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.comparators.NullComparator<?> org.apache.commons.collections4.comparators.NullComparator<?> = ((org.apache.commons.collections4.comparators.NullComparator<?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"651e6fb9-2413-11e5-a2c7-5f5b38d48c57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:584","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[41,42],"tindex":"651e6fba-2413-11e5-a2c7-b594e4e5baf7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"size":"size","maxSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:119","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[],"tindex":"651e6fbb-2413-11e5-a2c7-fd7f2632af2e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:154","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"651e6fbc-2413-11e5-a2c7-a939c85ab33b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} "},"status":-2},{"failures":[],"tindex":"651e96cd-2413-11e5-a2c7-cde9a6a873cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"651e96ce-2413-11e5-a2c7-df4408c10ece","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:355","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<E>.size()) ; int++) {\n    if ((java.util.BitSet.get(int)) == false) {\n        org.apache.commons.collections4.iterators.CollatingIterator<E>.set(int);\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == (-1)) {\n            int = int;\n            E = java.util.ArrayList<E>.get(int);\n        } else {\n            final E E = java.util.ArrayList<E>.get(int);\n            if ((java.util.Comparator<? super E>) == null) {\n                throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n            } \n            if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n                E = E;\n                int = int;\n            } \n        }\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}