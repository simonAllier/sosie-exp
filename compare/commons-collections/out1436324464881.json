{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":41,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":37,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":21,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":31,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":1,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":52,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":6,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":29,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":58,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":25,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":11,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":36,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":46},"transformations":[{"failures":[],"tindex":"92a19379-251d-11e5-9ecb-dfb5a95f5f15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"92a1ba8a-251d-11e5-9ecb-d149fe8252f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:97","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"92a1ba8b-251d-11e5-9ecb-d97a2ef52af1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)"},"status":-2},{"failures":[],"tindex":"92a1ba8c-251d-11e5-9ecb-cfc2aa2eb7cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:878","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:228","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"92a1ba8d-251d-11e5-9ecb-add87b119f47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:419","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[9,10,11],"tindex":"92a1e19e-251d-11e5-9ecb-a37672105b5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"92a1e19f-251d-11e5-9ecb-2b5c704dad18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:317","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"variableMap":{"valueSet":"key1","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:503","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"92a1e1a0-251d-11e5-9ecb-078e2a1212bf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:675","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"92a1e1a1-251d-11e5-9ecb-b76b85c77cf5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:123","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"92a1e1a2-251d-11e5-9ecb-91e15c73b481","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:509","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V)"},"status":-2},{"failures":[],"tindex":"92a1e1a3-251d-11e5-9ecb-b147c56a86b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"nextIndex":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:326","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int"},"status":-2},{"failures":[12,13,14,15,16],"tindex":"92a208b4-251d-11e5-9ecb-3368dc064882","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"retval":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:125","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[],"tindex":"92a208b5-251d-11e5-9ecb-afb5008056d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:64","type":"CtReturnImpl","sourcecode":"return T != null"},"status":-2},{"failures":[],"tindex":"92a208b6-251d-11e5-9ecb-2b9071f949ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"modCount","index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:637","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"92a208b7-251d-11e5-9ecb-35e058f7ec29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:216","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"92a208b8-251d-11e5-9ecb-3ffbcd87ac11","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:82","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-2},{"failures":[17,18],"tindex":"92a208b9-251d-11e5-9ecb-d9637e8dfdb3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:161","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<? super I>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n        return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n    } \n}"},"status":-1},{"failures":[19],"tindex":"92a208ba-251d-11e5-9ecb-d932c410b5f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:81","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[20,21,22,23,24,14,15,16,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"92a22fcb-251d-11e5-9ecb-7b6e3cdac952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:414","type":"CtLocalVariableImpl","sourcecode":"final int int = int - (int)"},"variableMap":{"index":"endIndex1","relativePosition":"endIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"status":-1},{"failures":[],"tindex":"92a22fcc-251d-11e5-9ecb-036a66902544","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"variableMap":{"h":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"92a208b6-251d-11e5-9ecb-2b9071f949ad","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}