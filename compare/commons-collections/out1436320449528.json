{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":248,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":8,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":232,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":26,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":144,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":45,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":78,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":243,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":255,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":6,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":254,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":31,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":202,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":62,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":85,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":82,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":28,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":244,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":241,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":240,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":10,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":239,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":226,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":143,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":230,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":233,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsContract":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":231,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":141,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":249,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":121,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":207,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":99,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":147,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":152,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":189,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":190,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":191,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":192,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":120,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":234,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":84,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullKey":1,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":87,"org.apache.commons.collections4.map.HashedMapTest.testClone":89,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":157,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":134,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":185,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":245,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":115,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":171,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":242,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":122,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":88,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":179,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":199,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":203,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":224,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":5,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":107,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":142,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":180,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":229,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":182,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":197,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":237,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":236,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":238,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":22,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":177,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":131,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":113,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":129,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":160,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":195,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":247,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":21,"org.apache.commons.collections4.map.LinkedMapTest.testClone":222,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":181,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":43,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":253,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":116,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":193,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":117,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":209,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":200,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":67,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testObjectHashCodeEqualsSelfHashCode":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":220,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":201,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":75,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":194,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":9,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":246,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":210,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":218,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":217,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":216,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":252,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":215,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":124,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":173,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":212,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":213,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":214,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":183,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":170,"org.apache.commons.collections4.map.LRUMapTest.testClone":148,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":184,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":235,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":47,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":153,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":150,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":140,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":187,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":188,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":186,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":206,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":63,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":73,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":118,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":155,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":54,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":103,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":178,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":80,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":119,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":176,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":27,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":35,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":169,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":208,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":228,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":162,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":251,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":250,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":165,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":168,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":167,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":166,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":86,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":93,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":68,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":163,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":164,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectHashCodeEqualsSelfHashCode":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":44,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":227,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":205,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":225,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":83,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":161,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":126,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":219},"transformations":[{"failures":[0,1],"tindex":"394b2e5d-2514-11e5-aa42-3dbe7dda8471","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"394b556e-2514-11e5-aa42-dd3e6031c857","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[26,27],"tindex":"394b556f-2514-11e5-aa42-7f1a4c03463e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"iDoLoop","nextCalled":"iDoLoop"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:85","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n} "},"status":-1},{"failures":[28],"tindex":"394b5570-2514-11e5-aa42-1d407474164d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:326","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"394b5571-2514-11e5-aa42-01a21aaf3022","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:280","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"394b5572-2514-11e5-aa42-0302c2e785f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:95","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().get(int)"},"status":-2},{"failures":[],"tindex":"394b7c83-2514-11e5-aa42-d3dacd2d139b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"394bcaa4-2514-11e5-aa42-bb2a4a1e489e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:244","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"394bcaa5-2514-11e5-aa42-c1261c49320a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"394bcaa6-2514-11e5-aa42-eb313c7b847f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:395","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"394bcaa7-2514-11e5-aa42-7b0de3238d98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:178","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n}"},"status":-1},{"failures":[66,67,68,69,70,71,72],"tindex":"394bf1b8-2514-11e5-aa42-394d600d77ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[73],"tindex":"394bf1b9-2514-11e5-aa42-a954010b4030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.IndexedCollection:244","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"394bf1ba-2514-11e5-aa42-ade6af62a13e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:295","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) == null) {\n    java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    java.util.BitSet = new java.util.BitSet(java.util.ArrayList<java.util.Iterator<? extends E>>.size());\n    for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n        java.util.ArrayList<E>.add(null);\n        java.util.BitSet.clear(int);\n    }\n} "},"status":-1},{"failures":[],"tindex":"394bf1bb-2514-11e5-aa42-e7e1e83173c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super V>.evaluate(V)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\");\n} "},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246],"tindex":"394bf1bc-2514-11e5-aa42-e9b57f3d54e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-1},{"failures":[],"tindex":"394c18cd-2514-11e5-aa42-6f2917f57ebe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"status":-2},{"failures":[247,248,249,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"394c18ce-2514-11e5-aa42-f3c287ae1288","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"394c18cf-2514-11e5-aa42-61f8905a62c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1016","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Iterator<I>, org.apache.commons.collections4.Transformer<? super I, ? extends O>, new java.util.ArrayList<O>())"},"status":-2},{"failures":[250,251,252,253,254,255],"tindex":"394c18d0-2514-11e5-aa42-0328b39716cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"i","index":"i","beyond":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"394b7c83-2514-11e5-aa42-d3dacd2d139b","diffs":[{"nodes":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"edges":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getParent(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.org.apache.commons.collections4.bidimap.TreeBidiMap$Node getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.boolean isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap$Node.boolean isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)","org.apache.commons.collections4.bidimap.TreeBidiMap.void doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement) -> org.apache.commons.collections4.bidimap.TreeBidiMap.void copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap$Node_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).b","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t2","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e3","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e2"]},"type":"branch"}]}]}