{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":36,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":44,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":0,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":67,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsSelfHashCode":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":55,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":23,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":6,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":66,"org.apache.commons.collections4.map.Flat3MapTest.testObjectHashCodeEqualsContract":14,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":41,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformer":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":31,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":73,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":52,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":47,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":40,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":30,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":32,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":1},"transformations":[{"failures":[],"tindex":"f2229705-4145-11e5-b316-373fc6a6a118","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = java.util.SortedMap<K, V>.headMap(K)"},"status":-2},{"failures":[0],"tindex":"f222be16-4145-11e5-b316-89c47c24888e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionPredicate:66","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionPredicate invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"status":-1},{"failures":[],"tindex":"f222be17-4145-11e5-b316-bbbd16297f85","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:97","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : java.util.List<java.util.Set<E>>) {\n    int += java.util.Set<E>.size();\n}"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"f222be18-4145-11e5-b316-5118d5d4e90b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"hash1","lengthInBits":"hash3","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1195","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 2 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 1 :\n        int += (int) ^ ((V) == null ? 0 : V.hashCode());\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":-1},{"failures":[],"tindex":"f222e529-4145-11e5-b316-3102a161f8b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:447","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"f222e52a-4145-11e5-b316-bb4fa7d3b217","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1438","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f222e52b-4145-11e5-b316-c5fb48c7f0fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()"},"status":-2},{"failures":[],"tindex":"f222e52c-4145-11e5-b316-ab7d81a71153","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:571","type":"CtAssignmentImpl","sourcecode":"V = null"},"status":0},{"failures":[],"tindex":"f222e52d-4145-11e5-b316-4bd7f6b07c65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:163","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 16"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"f2230c3e-4145-11e5-b316-1d7cc642ff3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"f2230c3f-4145-11e5-b316-d7d6b524d66f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"entry":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:976","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[63,64,65,66,67,68,69,70,71,72],"tindex":"f2230c40-4145-11e5-b316-273fc117bf70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:484","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"size":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1337","type":"CtAssignmentImpl","sourcecode":"int = ((java.util.Collection<?>)(java.lang.Object)).size()"},"status":-1},{"failures":[],"tindex":"f2230c41-4145-11e5-b316-af816b5751be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"status":-2},{"failures":[73],"tindex":"f2230c42-4145-11e5-b316-f5bb5986d2c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82],"tindex":"f2233353-4145-11e5-b316-0bb6c896ddc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"variableMap":{"timeUnit":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:347","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeIfExpired(java.lang.Object, org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-1},{"failures":[],"tindex":"f2233354-4145-11e5-b316-636413048457","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"f2233355-4145-11e5-b316-f1937f6afefb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)"},"status":-2},{"failures":[],"tindex":"f2233356-4145-11e5-b316-45b3beb1216f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl","sourcecode":"return java.util.Collection<E>"},"status":-2},{"failures":[83,84,85],"tindex":"f2233357-4145-11e5-b316-2f8adb37c286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"status":-1},{"failures":[],"tindex":"f2235a68-4145-11e5-b316-39db6c6a4cc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"elements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1682","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.populateMap(java.util.Map<K, V>, java.lang.Iterable<? extends V>, org.apache.commons.collections4.Transformer<V, K>, org.apache.commons.collections4.TransformerUtils.<V>nopTransformer())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}