{"failureDictionary":{"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":96,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":22,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveAll":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":34,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":16,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":54,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":3,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":74,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":71,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":19,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":20,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullValue":27,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":81,"org.apache.commons.collections4.map.CompositeMapTest.testMakeMap":31,"org.apache.commons.collections4.map.CompositeMapTest.testFullMapCompatibility":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":49,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":63,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":56,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":28,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":58,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutNullKey":33,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":40,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":68,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":95,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":0,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":45,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":79,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":80,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":61,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":91,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":60,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":57,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":83,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":55,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":32,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":36,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":48,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":18,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":43,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":90,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":37,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":87,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.map.CompositeMapTest.testPut":2,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testGet":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":62,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":11,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":75,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":59,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":72,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":44,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":23,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":5,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":94,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":17,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":67},"transformations":[{"failures":[],"tindex":"f135a776-251e-11e5-a6c5-79a40ae31f92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"status":0},{"failures":[],"tindex":"f135a777-251e-11e5-a6c5-ed843275877c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1570","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[0],"tindex":"f135ce88-251e-11e5-a6c5-4b5e505ab2a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"variableMap":{"collection":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-1},{"failures":[],"tindex":"f135ce89-251e-11e5-a6c5-8d2f92f2030f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"f135ce8a-251e-11e5-a6c5-7995c94076c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:261","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.TreeList<E>.get(int)"},"status":-2},{"failures":[],"tindex":"f135f59b-251e-11e5-a6c5-b5803d510009","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:453","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"f135f59c-251e-11e5-a6c5-3bcb616118bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:145","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V>[][((java.util.Map<K, V>[].int) - 1)] = java.util.Map<K, V>"},"status":-1},{"failures":[],"tindex":"f135f59d-251e-11e5-a6c5-735d1874adef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} "},"status":-2},{"failures":[53,54],"tindex":"f135f59e-251e-11e5-a6c5-0171cee45c42","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies(((int - int) + 1), null))"},"status":-1},{"failures":[],"tindex":"f135f59f-251e-11e5-a6c5-57355fcd1249","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:548","type":"CtIfImpl","sourcecode":"if (java.lang.Double == null) {\n    java.lang.Double = java.lang.Double;\n} "},"variableMap":{"answer":"label","defaultValue":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false)"},"status":-2},{"failures":[],"tindex":"f1361cb0-251e-11e5-a6c5-e55104f9f454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:144","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).lastKey()"},"status":-2},{"failures":[],"tindex":"f1361cb1-251e-11e5-a6c5-97453d3695b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:164","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f1361cb2-251e-11e5-a6c5-6ba50b2f4800","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101],"tindex":"f1361cb3-251e-11e5-a6c5-552589e75eab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:406","type":"CtReturnImpl","sourcecode":"return (long >= 0) && (long >= long)"},"status":-1},{"failures":[],"tindex":"f1361cb4-251e-11e5-a6c5-5b26cc534b5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:653","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"f1361cb5-251e-11e5-a6c5-3dea0abad523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:517","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"f13643c6-251e-11e5-a6c5-7d5763348296","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:350","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:59","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[],"tindex":"f13643c7-251e-11e5-a6c5-ef98b3a8715a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[],"tindex":"f13643c8-251e-11e5-a6c5-ad2749dcba38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"f13643c9-251e-11e5-a6c5-e7bc669b1e85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1338","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}