{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":24,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":27,"org.apache.commons.collections4.functors.AllPredicateTest.nullArrayToGetInstance":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":2,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx1":30,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":5,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":23,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":21,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":38,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_List":8,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":18,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":35,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx1":33,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":0,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":6,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Array":12,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":31,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":22,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":3,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":20,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":26,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":28,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Null":9,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":11,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx1":32,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":4,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":13,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":17,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":19,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":1,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":29,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Map":10,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":15,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":7},"transformations":[{"failures":[0],"tindex":"14e4fddb-2416-11e5-b7e9-cd13e0021b1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:232","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) {\n    case BEFORE :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1;\n    case AFTER :\n        return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1;\n    case EXCEPTION :\n        final java.lang.Object java.lang.Object = java.lang.Integer == null ? T : T;\n        throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object));\n    default :\n        throw new java.lang.UnsupportedOperationException((\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior)));\n}"},"status":-1},{"failures":[],"tindex":"14e524ec-2416-11e5-b7e9-6bb5b2833a6a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:74","type":"CtReturnImpl","sourcecode":"return V"},"status":-2},{"failures":[1,2,3,4],"tindex":"14e524ed-2416-11e5-b7e9-a5baed17ded9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"h","start":"h","end":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":-1},{"failures":[5],"tindex":"14e524ee-2416-11e5-b7e9-693e64fddbec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)"},"status":-1},{"failures":[6,7,8,9,10,11,12,13],"tindex":"14e524ef-2416-11e5-b7e9-6944e31d2ba8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1383","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return true;\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"14e54c00-2416-11e5-b7e9-a98358d1d602","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"beforeFirst","removed":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[],"tindex":"14e54c01-2416-11e5-b7e9-3d86fae780e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:565","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"14e54c02-2416-11e5-b7e9-0f7a8b66a333","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-2},{"failures":[],"tindex":"14e54c03-2416-11e5-b7e9-5f3bfc705cae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:210","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"variableMap":{"entry":"entry","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:434","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>"},"status":0},{"failures":[],"tindex":"14e54c04-2416-11e5-b7e9-d3c27462c864","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"14e54c05-2416-11e5-b7e9-fbb8412eda9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:271","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Collection<V>.add(((V)(java.lang.Object)))"},"status":-1},{"failures":[30,31,32,33,34,35,36],"tindex":"14e57316-2416-11e5-b7e9-7928395b1453","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"set() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")"},"status":-1},{"failures":[37],"tindex":"14e57317-2416-11e5-b7e9-493b05fc3003","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:725","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:129","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C)"},"status":-1},{"failures":[],"tindex":"14e57318-2416-11e5-b7e9-4d92e1c017a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:83","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>"},"status":-2},{"failures":[],"tindex":"14e57319-2416-11e5-b7e9-c906b87da579","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:555","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"entry","parent":"current","predecessor":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:206","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"14e5731a-2416-11e5-b7e9-533ed5a112c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:612","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:913","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"14e5731b-2416-11e5-b7e9-01f65fd1208b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:97","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.size()"},"status":-2},{"failures":[],"tindex":"14e59a2c-2416-11e5-b7e9-fd51e24ab3f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":0},{"failures":[38],"tindex":"14e59a2d-2416-11e5-b7e9-e7e0bf409fb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"variableMap":{"dataElement":"key1","o":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:743","type":"CtIfImpl","sourcecode":"if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"14e59a2e-2416-11e5-b7e9-af143c3f657b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:117","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag()"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"14e54c04-2416-11e5-b7e9-d3c27462c864","diffs":[{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.iterators.EmptyMapIterator_org.apache.commons.collections4.iterators.EmptyMapIterator().b","org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator_org.apache.commons.collections4.iterators.AbstractEmptyMapIterator().b"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).l1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()"]},"edges":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":[],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":[],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":[],"org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object)":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream)":["org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"graph":"branch"}]}]}