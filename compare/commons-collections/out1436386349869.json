{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":22,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":16,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":27,"org.apache.commons.collections4.functors.AllPredicateTest.oneFalsePredicate":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":50,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":51,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":62,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":39,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":30,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":56,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":4,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":57,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":5,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":40,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.map.LRUMapTest.testLRU":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":33,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":54,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":34,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":64,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":36,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":18,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":68,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":19,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":15,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":59,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":11,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":29,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.functors.AllPredicateTest.singleElementArrayToGetInstance":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":58,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":20,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":45,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":46,"org.apache.commons.collections4.functors.AllPredicateTest.oneTruePredicate":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":61,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":47,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":44},"transformations":[{"failures":[0,0,1,1,2],"tindex":"a8f7099b-25ad-11e5-85c6-37861d483cbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:61","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0])"},"status":-1},{"failures":[],"tindex":"a8f730ac-25ad-11e5-85c6-a53cd015fc3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"ROOT\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"status":0},{"failures":[],"tindex":"a8f757bd-25ad-11e5-85c6-7742a76fa740","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:135","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.get(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"a8f757be-25ad-11e5-85c6-0334b77e22bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"predecessor","parent":"predecessor","left":"p","h":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:597","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[3,4,5,6,7],"tindex":"a8f757bf-25ad-11e5-85c6-69c211bd78c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-1},{"failures":[],"tindex":"a8f84220-25ad-11e5-85c6-cb0505f83635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:87","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Integer, E>.put(java.lang.Integer.valueOf(int), E)"},"status":-2},{"failures":[],"tindex":"a8f84221-25ad-11e5-85c6-97c1814b2f5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[],"tindex":"a8f84222-25ad-11e5-85c6-6103fe10d385","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1049","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}"},"status":-2},{"failures":[],"tindex":"a8f84223-25ad-11e5-85c6-c5d35e873632","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:146","type":"CtIfImpl","sourcecode":"if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[8,9,10,11,12],"tindex":"a8f84224-25ad-11e5-85c6-b54c1bb5e8e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"a8f86935-25ad-11e5-85c6-7f54c89b07ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:280","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V"},"status":-1},{"failures":[],"tindex":"a8f86936-25ad-11e5-85c6-0f28b043d72a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hash2","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"a8f86937-25ad-11e5-85c6-1b535bdd6a6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.IteratorChain<E>"},"status":-1},{"failures":[62,63,64,65,66,67,68],"tindex":"a8f86938-25ad-11e5-85c6-7ff12ecc5dde","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1021","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println()"},"status":-1},{"failures":[],"tindex":"a8f89049-25ad-11e5-85c6-6172d3d9b2ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1148","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"a8f8904a-25ad-11e5-85c6-d5de747475be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:112","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()"},"status":-2},{"failures":[69],"tindex":"a8f8904b-25ad-11e5-85c6-3d8a0eab5cb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"a8f8904c-25ad-11e5-85c6-8b2c45959621","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"a8f8904d-25ad-11e5-85c6-298ec16eb3ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"leftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"a8f8904e-25ad-11e5-85c6-9da6942dfd20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"result","removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}