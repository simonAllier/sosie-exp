{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":24,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":2,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":97,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":45,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":95,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":20,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":69,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":46,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":7,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":63,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":22,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":38,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":8,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":78,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":82,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":6,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":42,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":28,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":26,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":67,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":93,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":96,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":90,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":61},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"0e35b6dd-25a9-11e5-be45-e7238d48ecc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:389","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41],"tindex":"0e35ddee-25a9-11e5-be45-71f2775e2a27","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"hashCode","start":"hashCode","end":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:430","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode()"},"status":-1},{"failures":[],"tindex":"0e35ddef-25a9-11e5-be45-93d023bd5157","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:991","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":0},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"0e360500-25a9-11e5-be45-55a463b48e53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:116","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[71,72,73,74,75,76,77,78,79],"tindex":"0e360501-25a9-11e5-be45-b7e260b5ae6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1641","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"nextNode":"yFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1126","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[80],"tindex":"0e360502-25a9-11e5-be45-d38239e21080","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:298","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[81,82,83,84,85,86,87],"tindex":"0e360503-25a9-11e5-be45-99dd8d7ace8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Transformer<? super E, ?>.transform(E)"},"status":-1},{"failures":[88,89],"tindex":"0e360504-25a9-11e5-be45-a7e331d38a46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[90],"tindex":"0e362c15-25a9-11e5-be45-75285b5debc7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0e362c16-25a9-11e5-be45-91232568b294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:397","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 14"},"variableMap":{"h":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[],"tindex":"0e362c17-25a9-11e5-be45-b93af5681e96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"0e362c18-25a9-11e5-be45-9ddf88149e21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"parent","e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:212","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"0e362c19-25a9-11e5-be45-716681f5d1bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"root","e":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:94","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"0e362c1a-25a9-11e5-be45-630911827c72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"next","entry":"next","key2":"key5","hashCode":"hashCode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[91,92],"tindex":"0e36532b-25a9-11e5-be45-71d0edaadc0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:96","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Predicate<? super T> org.apache.commons.collections4.Predicate<? super T> : org.apache.commons.collections4.Predicate<? super T>[]) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        if (boolean) {\n            return false;\n        } \n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0e36532c-25a9-11e5-be45-25cac4addf0e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:379","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.bag.AbstractMapBag<E>.uniqueSet().iterator()"},"status":-2},{"failures":[93,94,95,96,97,98],"tindex":"0e36532d-25a9-11e5-be45-fb3badbe021c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"variableMap":{"diag":"start1","start":"end2","end":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:205","type":"CtIfImpl","sourcecode":"if ((int[][(int - int)]) <= (int[][int])) {\n    return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n} "},"status":-1},{"failures":[0,1,2,3,4,6,7,5,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"0e36532e-25a9-11e5-be45-abc003f71f5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:401","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"status":-1},{"failures":[],"tindex":"0e367a3f-25a9-11e5-be45-13d199ddceb1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0e362c19-25a9-11e5-be45-716681f5d1bf","diffs":[{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.boolean isEmpty()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void clear() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.boolean isEmpty()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void clear() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"]},"type":"graph"}]},{"transformation":"0e35ddef-25a9-11e5-be45-93d023bd5157","diffs":[{"nodes":{"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":["org.apache.commons.collections4.collection.UnmodifiableCollection.<T> java.util.Collection unmodifiableCollection(java.util.Collection)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.lang.Object[] toArray()","org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection)"]},"edges":{"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":["org.apache.commons.collections4.map.FixedSizeMap.java.util.Collection values() -> org.apache.commons.collections4.collection.UnmodifiableCollection.<T> java.util.Collection unmodifiableCollection(java.util.Collection)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.int size() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.lang.Object[] toArray() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.UnmodifiableCollection.<T> java.util.Collection unmodifiableCollection(java.util.Collection) -> org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.boolean isEmpty() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.util.Collection decorated()","org.apache.commons.collections4.collection.UnmodifiableCollection.<T> java.util.Collection unmodifiableCollection(java.util.Collection) -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.org.apache.commons.collections4.collection.AbstractCollectionDecorator(java.util.Collection)","org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.lang.Object[] toArray() -> org.apache.commons.collections4.collection.AbstractCollectionDecorator.java.lang.Object[] toArray()","org.apache.commons.collections4.map.FixedSizeMap.java.util.Collection values() -> org.apache.commons.collections4.map.FixedSizeMap.java.util.Collection values()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":["org.apache.commons.collections4.collection.UnmodifiableCollection_<T>_java.util.Collection_unmodifiableCollection(java.util.Collection).b","org.apache.commons.collections4.collection.AbstractCollectionDecorator_java.lang.Object[]_toArray().b","org.apache.commons.collections4.collection.UnmodifiableCollection_org.apache.commons.collections4.collection.UnmodifiableCollection(java.util.Collection).b","org.apache.commons.collections4.collection.UnmodifiableCollection_<T>_java.util.Collection_unmodifiableCollection(java.util.Collection).e1"]},"type":"branch"}]}]}