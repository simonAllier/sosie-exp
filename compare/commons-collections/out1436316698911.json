{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":33,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":21,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":0,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.collection.CompositeCollectionTest.testClear":29,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":30,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":23,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":24,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":1,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":19,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":31,"org.apache.commons.collections4.CollectionUtilsTest.get":48,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":41,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":39,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":45,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":7,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":11,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":5,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":18,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.CollectionUtilsTest.get1":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":46},"transformations":[{"failures":[],"tindex":"7dc07156-250b-11e5-a4f8-b537f27efe1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:890","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"7dc09867-250b-11e5-a4f8-3b4b67d4dfd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":0},{"failures":[0,1,2,3,4],"tindex":"7dc09868-250b-11e5-a4f8-bfa862b8784b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:427","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"root":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:506","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"7dc0bf79-250b-11e5-a4f8-2bca203a24e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"7dc0bf7a-250b-11e5-a4f8-b9ff31503ce1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:790","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"status":0},{"failures":[],"tindex":"7dc0bf7b-250b-11e5-a4f8-5be33295cd2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"h","parent":"parent","left":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[19],"tindex":"7dc0bf7c-250b-11e5-a4f8-8f0984c0c53b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl","sourcecode":"return java.util.Collection<? extends E>.size()"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1502","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize()"},"status":-1},{"failures":[],"tindex":"7dc0e68d-250b-11e5-a4f8-0d6efbcadd00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1055","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return null;\n    }\n} "},"variableMap":{"lengthInBits":"bitIndex","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"7dc0e68e-250b-11e5-a4f8-536fa5924076","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:121","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"7dc0e68f-250b-11e5-a4f8-c1a00d4f976e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:226","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[])"},"status":-2},{"failures":[37],"tindex":"7dc0e690-250b-11e5-a4f8-cf9bb788cc59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:209","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:182","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"7dc0e691-250b-11e5-a4f8-d7292c666a8e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"7dc10da2-250b-11e5-a4f8-55f84d528933","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:266","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[38],"tindex":"7dc10da3-250b-11e5-a4f8-9b6d8d794d4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:281","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(org.apache.commons.collections4.Predicate<? super E>[], org.apache.commons.collections4.Closure<? super E>[], null)"},"status":-1},{"failures":[],"tindex":"7dc10da4-250b-11e5-a4f8-e3551110106b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:841","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasPrevious())) {\n    throw new java.util.NoSuchElementException(\"Already at start of list.\");\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[],"tindex":"7dc10da5-250b-11e5-a4f8-cf440fdb0e71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:228","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        return java.util.Set<E>.remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[39,40,41,42,43,44,45,46],"tindex":"7dc10da6-250b-11e5-a4f8-fb144d1803e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1270","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[47,48,49,50],"tindex":"7dc134b7-250b-11e5-a4f8-7bf0e80d1420","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"7dc134b8-250b-11e5-a4f8-eb9031c9caca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:346","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this)"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1291","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = null"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"7dc134b8-250b-11e5-a4f8-eb9031c9caca","diffs":[{"nodes":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceValues(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.org.apache.commons.collections4.map.AbstractHashedMap$Values(org.apache.commons.collections4.map.AbstractHashedMap)"]},"type":"graph"}]}]}