{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":60,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":9,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":61,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":22,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":65,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":58,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":55,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":102,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":14,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastEntrySet":31,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":28,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":36,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":7,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":38,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":79,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":20,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":74,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":12,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":15,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":49,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":11,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":92,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":96,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":46,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":35,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":1,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":29,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":26,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastKeySet":32,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":27,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":100,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":3,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRetainAll":47,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":33,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":37,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":84,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":21,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":75,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":93,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":95,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":82,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":44,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":43,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":98},"transformations":[{"failures":[0,1,2,3],"tindex":"20f6053c-24db-11e5-9ec4-5bf4a35431f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-1},{"failures":[],"tindex":"20f62c4d-24db-11e5-9ec4-53c5f07fa9eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"20f62c4e-24db-11e5-9ec4-73a1aac891e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:177","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    return null;\n} "},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-1},{"failures":[],"tindex":"20f62c4f-24db-11e5-9ec4-4f212b9ed85d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1178","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":0},{"failures":[25,26,27,28,29],"tindex":"20f62c50-24db-11e5-9ec4-8d646071c5dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"variableMap":{"endIndex2":"indexOfLargestMobileInteger","endIndex1":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:132","type":"CtLocalVariableImpl","sourcecode":"final int int = int[][int]"},"status":-1},{"failures":[30,31,32,33,34],"tindex":"20f62c51-24db-11e5-9ec4-61d834cede41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:270","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"20f65362-24db-11e5-9ec4-ddcbd07c22b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:343","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.LinkMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:341","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2},{"failures":[35],"tindex":"20f65363-24db-11e5-9ec4-837f979a50aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:290","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>.containsAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"20f65364-24db-11e5-9ec4-e9a0a8f646de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"20f65365-24db-11e5-9ec4-b54f4be7971c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.KeyAnalyzer:145","type":"CtReturnImpl","sourcecode":"return ((java.lang.Comparable<K>)(K)).compareTo(K)"},"status":-2},{"failures":[36],"tindex":"20f65366-24db-11e5-9ec4-d5ffd0c41a96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"collection":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-1},{"failures":[],"tindex":"20f65367-24db-11e5-9ec4-6d1d88c68f17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":0},{"failures":[],"tindex":"20f67a78-24db-11e5-9ec4-591eda6058da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"status":-2},{"failures":[],"tindex":"20f67a79-24db-11e5-9ec4-11d4d4b78d4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:145","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"20f67a7a-24db-11e5-9ec4-c1d0f4a24266","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:447","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(java.util.Iterator<E>)"},"status":-2},{"failures":[37,38,39,40,41],"tindex":"20f67a7b-24db-11e5-9ec4-898110515d3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"currentNode","y":"siblingNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-1},{"failures":[42,43,44,45,46,47,12,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"20f6a18c-24db-11e5-9ec4-73359d6e0a13","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"nCopies":"size","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:567","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"20f6a18d-24db-11e5-9ec4-339d9c9f9c32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[59],"tindex":"20f6a18e-24db-11e5-9ec4-83ba4572353b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key2","previous":"entry","hashCode":"index","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"20f6c89f-24db-11e5-9ec4-b3e711272c9a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:828","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rightChild":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"20f62c4f-24db-11e5-9ec4-4f212b9ed85d","diffs":[{"nodes":{"org.apache.commons.collections4.CollectionUtilsTest.get":["org.apache.commons.collections4.CollectionUtils.void checkIndexBounds(int)"]},"edges":{"org.apache.commons.collections4.CollectionUtilsTest.get":["org.apache.commons.collections4.CollectionUtils.<T> T get(java.util.Iterator,int) -> org.apache.commons.collections4.CollectionUtils.<T> T get(java.util.Iterator,int)","org.apache.commons.collections4.CollectionUtils.<T> T get(java.util.Iterator,int) -> org.apache.commons.collections4.CollectionUtils.void checkIndexBounds(int)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.CollectionUtilsTest.get":["org.apache.commons.collections4.CollectionUtils_void_checkIndexBounds(int).b","org.apache.commons.collections4.CollectionUtils_void_checkIndexBounds(int).e1"]},"type":"branch"}]},{"transformation":"20f65367-24db-11e5-9ec4-6d1d88c68f17","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":["org.apache.commons.collections4.bag.PredicatedBag.boolean add(E,int) -> org.apache.commons.collections4.collection.PredicatedCollection.void validate(E)"],"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":["org.apache.commons.collections4.bag.PredicatedBag.boolean add(E,int) -> org.apache.commons.collections4.collection.PredicatedCollection.void validate(E)"]},"type":"graph"}]}]}