{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":53,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":27,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":15,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":16,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":30,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":24,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":56,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.CollectionUtilsTest.get":0,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":4,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":28,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":57,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":55,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":54,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":11,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":2,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":20,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":21,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":59,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":13,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":7,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":58,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":3},"transformations":[{"failures":[],"tindex":"872fab8f-2450-11e5-9fa4-9f89615568da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:572","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[0,1],"tindex":"872fd2a0-2450-11e5-9fa4-53e05276ded0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1272","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator()"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1262","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object))"},"status":-1},{"failures":[2,3,4],"tindex":"872fd2a1-2450-11e5-9fa4-f13f0f4fe99c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"872fd2a2-2450-11e5-9fa4-c5d271c2fcb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1054","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"siblingNode":"node","currentNode":"node","this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:502","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n} else if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n        break;\n    }\n}"},"status":-2},{"failures":[],"tindex":"872ff9b3-2450-11e5-9fa4-ffc3662731d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1157","type":"CtInvocationImpl","sourcecode":"java.util.Collection<C>.add(C)"},"status":0},{"failures":[5],"tindex":"872ff9b4-2450-11e5-9fa4-7f1ebb6e66e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:341","type":"CtReturnImpl","sourcecode":"return V"},"status":-1},{"failures":[6,7],"tindex":"872ff9b5-2450-11e5-9fa4-617bcc3f6dc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"match","changed":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:101","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[8,9,10],"tindex":"873020c6-2450-11e5-9fa4-87382974fbe8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:278","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{"n":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:337","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"873020c7-2450-11e5-9fa4-21cb3c7f61d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:380","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.remove(java.util.Collection<E>)"},"variableMap":{"all":"all","coll":"compositeCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:350","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.add(java.util.Collection<E>)"},"status":-1},{"failures":[],"tindex":"873020c8-2450-11e5-9fa4-d984717ac65e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"873020c9-2450-11e5-9fa4-9579e16a2061","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-2},{"failures":[],"tindex":"873020ca-2450-11e5-9fa4-ef2d13c32261","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1174","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])))"},"status":-2},{"failures":[],"tindex":"873020cb-2450-11e5-9fa4-a71c6d6e1e37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.clear()"},"status":-2},{"failures":[41],"tindex":"873047dc-2450-11e5-9fa4-d978e68f1e55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Iterator must not be null\")"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52],"tindex":"873047dd-2450-11e5-9fa4-93668d8990da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:504","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int)"},"status":-1},{"failures":[53,54,55,56],"tindex":"873047de-2450-11e5-9fa4-e9896bbd7502","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:278","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    if ((java.util.BitSet.get(int)) == true) {\n        if (int > 0) {\n            int = -1;\n        } else {\n            int = 1;\n        }\n    } \n    return int;\n} "},"status":-1},{"failures":[57],"tindex":"873047df-2450-11e5-9fa4-4d0948d56d9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-1},{"failures":[58,59],"tindex":"873047e0-2450-11e5-9fa4-e3df4539993c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:59","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Bag<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.Bag<E> org.apache.commons.collections4.Bag<E> = ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.Bag<? extends E>));\n    return org.apache.commons.collections4.Bag<E>;\n} "},"status":-1},{"failures":[],"tindex":"873047e1-2450-11e5-9fa4-3724f48168c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:278","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.calculateHashCode(K[])"},"status":-2},{"failures":[1],"tindex":"873047e2-2450-11e5-9fa4-5da5285098e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:855","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Enumeration must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}