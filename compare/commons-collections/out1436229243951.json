{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":13,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_Decorate":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":17,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":20,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":5,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":0,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":11,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_Decorate":12,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":6,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":24},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"de8844c7-243f-11e5-a589-57e303cf005e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"de886bd8-243f-11e5-a589-fb6e6c57d6f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"de886bd9-243f-11e5-a589-155481bfe16a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:274","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"variableMap":{"coll":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:253","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"de886bda-243f-11e5-a589-91b4335dba89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":0},{"failures":[],"tindex":"de886bdb-243f-11e5-a589-8957e888bf5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"nextNode":"rval","lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:634","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"status":-2},{"failures":[],"tindex":"de886bdc-243f-11e5-a589-cf7448499205","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"de8892ed-243f-11e5-a589-09ee68218990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:261","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"de8892ee-243f-11e5-a589-63de88499085","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:269","type":"CtAssignmentImpl","sourcecode":"V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"de8892ef-243f-11e5-a589-ffc07f2adad5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:332","type":"CtLocalVariableImpl","sourcecode":"java.util.Set<E> java.util.Set<E>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:151","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<E> java.util.Set<E> = org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().uniqueSet()"},"status":-2},{"failures":[],"tindex":"de8892f0-243f-11e5-a589-a9f18a200211","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1381","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('{')"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1230","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',')"},"status":0},{"failures":[],"tindex":"de8892f1-243f-11e5-a589-13560f1fff23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>"},"status":-2},{"failures":[],"tindex":"de8892f2-243f-11e5-a589-b7ce6b356ec2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:140","type":"CtIfImpl","sourcecode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} "},"status":-1},{"failures":[10,11,12,13,14,15],"tindex":"de8892f3-243f-11e5-a589-67cc7e2239a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:168","type":"CtReturnImpl","sourcecode":"return K"},"status":-1},{"failures":[],"tindex":"de8892f4-243f-11e5-a589-c5d566b4cb5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1079","type":"CtAssignmentImpl","sourcecode":"int = --(int)"},"variableMap":{"nextIndex":"retval","currentIndex":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:284","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":0},{"failures":[16,17,18,19,20,21,22,23,24,25],"tindex":"de88ba05-243f-11e5-a589-5384137675df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"xFormerLeftChild","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1112","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"de88ba06-243f-11e5-a589-e579c720a521","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"h","counter":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":0},{"failures":[26],"tindex":"de88ba07-243f-11e5-a589-27ac708fb01c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:97","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:228","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"de88ba08-243f-11e5-a589-4b2acf5a631e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Map<K, V>.values())"},"status":-2},{"failures":[],"tindex":"de88ba09-243f-11e5-a589-7bddf63bc906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:309","type":"CtIfImpl","sourcecode":"if (null != (java.util.BitSet)) {\n    int ^= java.util.BitSet.hashCode();\n} "},"status":0},{"failures":[],"tindex":"de88e11a-243f-11e5-a589-77316bce3b1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"de886bda-243f-11e5-a589-91b4335dba89","diffs":[{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry currentEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()"],"org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object)":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.int hashCode()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.MultiKey.boolean equals(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.comparators.NullComparator.int compare(E,E)","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.K next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_currentEntry().b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_V_getValue().e1"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.comparators.ComparableComparator_int_compare(E,E).b","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e1","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e2","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).e3","org.apache.commons.collections4.comparators.NullComparator_int_compare(E,E).t2"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_K_next().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_currentEntry().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_V_getValue().b"]},"type":"branch"}]}]}