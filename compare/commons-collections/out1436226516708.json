{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":61,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSimpleSerialization":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":26,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":39,"org.apache.commons.collections4.map.PredicatedMapTest.testFullMapCompatibility":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListSerialization":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":40,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":21,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFullMapCompatibility":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":24,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testQueueRemove":6,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":67,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEmptyListCompatibility":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":54},"transformations":[{"failures":[],"tindex":"8775d44b-2439-11e5-8020-51294dc37918","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"variableMap":{"size":"i","this":"nextP","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:145","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])))"},"status":-2},{"failures":[],"tindex":"878341cc-2439-11e5-8020-f3cbec996fd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:163","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.nextIndex()"},"status":-2},{"failures":[],"tindex":"87869d2d-2439-11e5-8020-bf4aead1c300","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"next","entry":"next","key2":"key3","key5":"key1","hashCode":"hashCode","key3":"key1","key4":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"878a1f9e-2439-11e5-8020-b7dcb6f21e5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)"},"status":-2},{"failures":[],"tindex":"878d05cf-2439-11e5-8020-0f822990e5f3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:671","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"878eb380-2439-11e5-8020-b736aaf757b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:241","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"8792d231-2439-11e5-8020-e19dcb52bcad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:340","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[6],"tindex":"87951c22-2439-11e5-8020-fb94ebd86238","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:150","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[7,8,9,10],"tindex":"87973f03-2439-11e5-8020-adb3ab642b6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:280","type":"CtIfImpl","sourcecode":"if ((java.util.BitSet.get(int)) == true) {\n    if (int > 0) {\n        int = -1;\n    } else {\n        int = 1;\n    }\n} "},"status":-1},{"failures":[11,12],"tindex":"879913c4-2439-11e5-8020-3fec92bff32d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:100","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.HashMap<K, V>()"},"variableMap":{"normalMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:130","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[13],"tindex":"879c4815-2439-11e5-8020-fbc089cd2663","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"879f7c66-2439-11e5-8020-bf2f7dcd2837","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"status":0},{"failures":[],"tindex":"87abd877-2439-11e5-8020-a9dac35039ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"87ae4978-2439-11e5-8020-a91d6f2cf67e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:353","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:177","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, java.lang.Object> = ((java.util.Map<K, java.lang.Object>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23],"tindex":"87b0ba79-2439-11e5-8020-c9e3465115c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:232","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"87b463fa-2439-11e5-8020-8be26c2cf4be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:163","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize()"},"status":-1},{"failures":[],"tindex":"87bacc9b-2439-11e5-8020-11f0ce185e51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"set2","coll1":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:117","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"87bd3d9c-2439-11e5-8020-8b103974f266","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:379","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V> == null) || ((java.util.Collection<V>.size()) == 0)) {\n    return false;\n} "},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:338","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"87be4f0d-2439-11e5-8020-6ba2a3d0786f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:413","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"87bfd5ae-2439-11e5-8020-edda6a9bd6a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    return ;\n} "},"variableMap":{"exhausted":"hasNext","slotFilled":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return ;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"879f7c66-2439-11e5-8020-bf2f7dcd2837","diffs":[{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.iterators.EmptyMapIterator_org.apache.commons.collections4.iterators.EmptyMapIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).l1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator_org.apache.commons.collections4.iterators.AbstractEmptyMapIterator().b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()"]},"edges":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":[],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":[],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":[],"org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object)":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream)":["org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"]},"graph":"branch"}]}]}