{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":10,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":17,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":23,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":45,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":11,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":54,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":22,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":53,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":49,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":55,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":9,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":41,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":59,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":56,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":14,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":32,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":16,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Other":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":12,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":6,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":70,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":36,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":66,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":43,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":68,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":46,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":1,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":0,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":5,"org.apache.commons.collections4.map.TransformedSortedMapTest.testLastKey":3,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":39,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":42,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":60,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":26,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":47,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":7,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":27},"transformations":[{"failures":[0,1],"tindex":"3f30e1b3-2436-11e5-96ba-27729f06d2cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-1},{"failures":[],"tindex":"3f3108c4-2436-11e5-96ba-4121488fc16f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"variableMap":{"maxElements":"threshold","index":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:651","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"3f3108c5-2436-11e5-96ba-7b08319f4472","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[],"tindex":"3f3108c6-2436-11e5-96ba-0fbaac4901ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-2},{"failures":[2],"tindex":"3f3108c7-2436-11e5-96ba-c9649e60c091","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"status":-1},{"failures":[],"tindex":"3f3108c8-2436-11e5-96ba-2f65522f2d4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-2},{"failures":[3],"tindex":"3f3108c9-2436-11e5-96ba-a535b51bed5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"3f312fda-2436-11e5-96ba-f9ed20ad4cba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:413","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object.equals(java.lang.Object))"},"variableMap":{"key1":"object","key2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:126","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(java.lang.Object)"},"status":-1},{"failures":[45,46,47,48,49],"tindex":"3f312fdb-2436-11e5-96ba-11b5b4792b33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:237","type":"CtForImpl","sourcecode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) {\n    if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"3f312fdc-2436-11e5-96ba-d5e2f7006784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:307","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.util.List<java.util.Comparator<E>>.hashCode()"},"status":0},{"failures":[],"tindex":"3f312fdd-2436-11e5-96ba-2b215dca492e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:151","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    if (org.apache.commons.collections4.bag.AbstractMapBag<E>.(getCount(java.lang.Object)) < (org.apache.commons.collections4.Bag<?>.getCount(java.lang.Object))) {\n        return false;\n    } \n}"},"status":0},{"failures":[],"tindex":"3f312fde-2436-11e5-96ba-b799f7030322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1268","type":"CtLocalVariableImpl","sourcecode":"final V V = ((V)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2407","type":"CtLocalVariableImpl","sourcecode":"V V = ((V)(java.io.ObjectInputStream.readObject()))"},"status":0},{"failures":[],"tindex":"3f312fdf-2436-11e5-96ba-5f9d40049e86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:406","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"3f3156f0-2436-11e5-96ba-f1bc55d9eb83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:320","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.set(int, null)"},"status":-2},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"3f3156f1-2436-11e5-96ba-1910250a25dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl","sourcecode":"return (this.int) > (this.int)"},"variableMap":{"startIndex":"i","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"3f3156f2-2436-11e5-96ba-7ff6b2ba57f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":0},{"failures":[],"tindex":"3f3156f3-2436-11e5-96ba-4140bc04da02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next","insertBeforeNode":"previous","nodeToInsert":"insertBeforeNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[62,63,64],"tindex":"3f3156f4-2436-11e5-96ba-5dffd02c8b2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"3f317e05-2436-11e5-96ba-f1643cb0ad04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} "},"status":-2},{"failures":[65,66,67,68,69,70],"tindex":"3f317e06-2436-11e5-96ba-93ed76c8231b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3f3156f2-2436-11e5-96ba-7ff6b2ba57f1","diffs":[{"nodes":{"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)","org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()","org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.E next()"]},"edges":{"org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable)":["org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator()","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable)","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.boolean hasNext()","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag.int getCount(java.lang.Object)","org.apache.commons.collections4.CollectionUtils.<O> int cardinality(O,java.lang.Iterable) -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.E next()"],"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag.java.util.Iterator iterator() -> org.apache.commons.collections4.bag.AbstractMapBag$BagIterator.org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.CollectionUtilsTest.cardinality":["org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().e2","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().e1","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_boolean_hasNext().b","org.apache.commons.collections4.bag.AbstractMapBag_java.util.Iterator_iterator().b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_org.apache.commons.collections4.bag.AbstractMapBag$BagIterator(org.apache.commons.collections4.bag.AbstractMapBag).b","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().b","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).e1","org.apache.commons.collections4.bag.AbstractMapBag_int_getCount(java.lang.Object).t1","org.apache.commons.collections4.bag.AbstractMapBag$BagIterator_E_next().t2"]},"type":"branch"}]},{"transformation":"3f3108c4-2436-11e5-96ba-4121488fc16f","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":[],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":[],"org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":[],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":[]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_getEntry(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"}]}]}