{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":191,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":163,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":148,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":104,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":180,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":155,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":136,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":186,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":8,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":33,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":209,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":142,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":123,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":95,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":9,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":200,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":204,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":202,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":31,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.map.HashedMapTest.testClone":98,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":176,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":6,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":140,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":144,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":30,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":164,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":208,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":170,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":178,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":152,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":138,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":189,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":25,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":199,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":179,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":151,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":11,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":206,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":92,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":103,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":194,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":15,"org.apache.commons.collections4.map.LinkedMapTest.testClone":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":134,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":62,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":192,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":108,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":154,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":13,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":88,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":107,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":105,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":129,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":171,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":173,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":210,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":172,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":28,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":185,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":106,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":80,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":207,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":97,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":72,"org.apache.commons.collections4.map.LRUMapTest.testClone":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":183,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":38,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":78,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":141,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":17,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":168,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":187,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":137,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":14,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":79,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":128,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":166,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":167,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":75,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":177,"org.apache.commons.collections4.map.LRUMapTest.testLRU":197,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":99,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":110,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":143,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":160,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":109,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":169,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":198,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":146,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":205,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":147,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":193,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":196,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":118,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":182,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":86},"transformations":[{"failures":[],"tindex":"9a6b2dd8-2327-11e5-b2ce-bdd5950a879b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"retval","modifications":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"status":0},{"failures":[],"tindex":"9a6b54e9-2327-11e5-b2ce-7d0644282791","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"status":-2},{"failures":[0],"tindex":"9a6b7bfa-2327-11e5-b2ce-e12879865745","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:84","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-1},{"failures":[1],"tindex":"9a6b7bfb-2327-11e5-b2ce-83a3cfc428c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:734","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:519","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"9a6b7bfc-2327-11e5-b2ce-cbf88e06bf71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"9a6ba30d-2327-11e5-b2ce-a3fa4b96ed16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1124","type":"CtConstructorCallImpl","sourcecode":"new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:389","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":-1},{"failures":[],"tindex":"9a6ba30e-2327-11e5-b2ce-2372eb975967","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())"},"status":0},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"9a6ba30f-2327-11e5-b2ce-d3a6f85f4f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:534","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"h":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:564","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"9a6bca20-2327-11e5-b2ce-9fb6416d4a3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"status":-2},{"failures":[],"tindex":"9a6bca21-2327-11e5-b2ce-7f4f29c16f45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)"},"variableMap":{"fromIndex":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)"},"status":-2},{"failures":[59],"tindex":"9a6bf132-2327-11e5-b2ce-ad76bd9c642a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:267","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[5,60,61,62,63],"tindex":"9a6bf133-2327-11e5-b2ce-2bb58b3dcffd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:675","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"variableMap":{"entryKey":"value","entryValue":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:238","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"9a6bf134-2327-11e5-b2ce-f361799e501f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:311","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[64,65,66,67,68,69,70],"tindex":"9a6c1845-2327-11e5-b2ce-a343721d604b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.containsAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(java.util.Collection<?>))"},"status":-1},{"failures":[],"tindex":"9a6c1846-2327-11e5-b2ce-d79f0aa3b4d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:117","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.comparators.ReverseComparator<?> org.apache.commons.collections4.comparators.ReverseComparator<?> = ((org.apache.commons.collections4.comparators.ReverseComparator<?>)(java.lang.Object))"},"status":-2},{"failures":[71,72],"tindex":"9a6c1847-2327-11e5-b2ce-2f787967b0b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:983","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null"},"variableMap":{"dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1049","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"status":-1},{"failures":[],"tindex":"9a6c3f58-2327-11e5-b2ce-85b248733547","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[73,74,75,76,77],"tindex":"9a6c3f59-2327-11e5-b2ce-636102adacf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"indexOfLargestMobileInteger","x":"indexOfLargestMobileInteger","k":"indexOfLargestMobileInteger","start2":"indexOfLargestMobileInteger"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:132","type":"CtLocalVariableImpl","sourcecode":"final int int = int[][int]"},"status":-1},{"failures":[78,79,80,81,82,83,84,85,86,87],"tindex":"9a6c3f5a-2327-11e5-b2ce-4f99f76332fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"status":-1},{"failures":[],"tindex":"9a6c3f5b-2327-11e5-b2ce-ed51f2049933","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:139","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(java.lang.Object[], 0, T[], 0, java.lang.Object[].int)"},"status":-2},{"failures":[],"tindex":"9a6c666c-2327-11e5-b2ce-b7a02838f421","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:117","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"9a6d50cd-2327-11e5-b2ce-9f094793e554","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"9a6d50ce-2327-11e5-b2ce-63143093ae22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9a6d77df-2327-11e5-b2ce-5795e92122b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:655","type":"CtIfImpl","sourcecode":"if (java.util.List<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"9a6d77e0-2327-11e5-b2ce-ff1422c822e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:98","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[88],"tindex":"9a6d77e1-2327-11e5-b2ce-033335d8aeb0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"9a6d77e2-2327-11e5-b2ce-11f47192d81f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:317","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"9a6d77e3-2327-11e5-b2ce-b9237a4d12c0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1100","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[89,90],"tindex":"9a6d77e4-2327-11e5-b2ce-27ea55af269a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"9a6d77e5-2327-11e5-b2ce-f95da140ab72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:150","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":-2},{"failures":[],"tindex":"9a6d9ef6-2327-11e5-b2ce-f5c69887cf07","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"right","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:602","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[91,92,93,94,95,96,97,98,99,100,101,102,103],"tindex":"9a6d9ef7-2327-11e5-b2ce-7b413b76354c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:325","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[104,105,106,107,108,109,110,90,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"9a6dc608-2327-11e5-b2ce-99aac1f67c6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9a6dc609-2327-11e5-b2ce-edd89c7ff92c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}"},"variableMap":{"this":"this","lock":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"9a6dc60a-2327-11e5-b2ce-cb25055754cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:76","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>(java.lang.Class<?>[] , java.lang.Object[])"},"variableMap":{"args":"args","paramTypes":"paramTypes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"9a6dc60b-2327-11e5-b2ce-9b98a034c153","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1420","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.put(K, V);\n}"},"status":0},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195],"tindex":"9a6ded1c-2327-11e5-b2ce-cb3a0a2014d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"variableMap":{"currentIterator":"currentIterator","iteratorChain":"iteratorChain"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"9a6e142d-2327-11e5-b2ce-d9860ea143ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyValueSet(java.util.BitSet)) || org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyHasNext(java.util.ArrayList<java.util.Iterator<? extends E>>))"},"status":-2},{"failures":[196,197,198,199,200],"tindex":"9a6e142e-2327-11e5-b2ce-c3525d710ad6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"9a6e3b3f-2327-11e5-b2ce-951685cf2dba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"9a6e3b40-2327-11e5-b2ce-95cc8b98493f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9a6e3b41-2327-11e5-b2ce-095ad463498f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:263","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[],"tindex":"9a6e3b42-2327-11e5-b2ce-37388c0ae391","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:500","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey())"},"status":-2},{"failures":[],"tindex":"9a6e3b43-2327-11e5-b2ce-b5c29c239064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.get(java.lang.Object)"},"status":-2},{"failures":[201],"tindex":"9a6e3b44-2327-11e5-b2ce-a5bb2eae4ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1122","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends C>.hasNext()) {\n    boolean |= java.util.Collection<C>.add(java.util.Iterator<? extends C>.next());\n}"},"status":-1},{"failures":[],"tindex":"9a6e6155-2327-11e5-b2ce-372a3b44fd3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1100","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[202,203,204,205,206,207,208,209],"tindex":"9a6e6156-2327-11e5-b2ce-791002e02e26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"status":-1},{"failures":[],"tindex":"9a6e8867-2327-11e5-b2ce-bffdbc50c44a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:90","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-2},{"failures":[210,211],"tindex":"9a6e8868-2327-11e5-b2ce-eb90b8915739","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":49,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}