{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":44,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":48,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":55,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":51,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":26,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":11,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":3,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":7,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":35,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":57,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":14,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":43,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":65,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":36,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":15},"transformations":[{"failures":[],"tindex":"5e438133-24de-11e5-bae1-c94a59ea3569","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"status":-2},{"failures":[],"tindex":"5e43a844-24de-11e5-bae1-b3d6a8beb72d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:126","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.hasPrevious()"},"variableMap":{"li":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[],"tindex":"5e43a845-24de-11e5-bae1-d7531f9c191b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"link","last":"link"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"5e43cf56-24de-11e5-bae1-877293c4aef9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:160","type":"CtAssignmentImpl","sourcecode":"int = ((int) - (int)) + (int)"},"variableMap":{"size":"modCount","maxElements":"modCount","start":"modCount","end":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:637","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"5e43cf57-24de-11e5-bae1-cf1814f0421f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:107","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[0,1],"tindex":"5e4507d8-24de-11e5-bae1-079a7ebcd7e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:543","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-1},{"failures":[],"tindex":"5e452ee9-24de-11e5-bae1-d78f4425d821","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:502","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValuesIterator<V>(this)"},"status":-2},{"failures":[],"tindex":"5e452eea-24de-11e5-bae1-3d6b7c0e2475","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ComparatorUtils:64","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.ComparatorUtils.java.util.Comparator"},"status":-2},{"failures":[],"tindex":"5e452eeb-24de-11e5-bae1-a1679eb3f610","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:154","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"5e452eec-24de-11e5-bae1-4ba1ac22d6d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>.execute(E)"},"status":-2},{"failures":[],"tindex":"5e452eed-24de-11e5-bae1-115eaae1052c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:140","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>) == null) {\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K> = new org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().inverseBidiMap());\n    org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<V, K>.org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap<K, V> = this;\n} "},"status":-2},{"failures":[],"tindex":"5e452eee-24de-11e5-bae1-517bf1a54bb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List<E>, org.apache.commons.collections4.Predicate<E>)"},"status":-2},{"failures":[],"tindex":"5e4555ff-24de-11e5-bae1-7b444d0ab260","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"5e455600-24de-11e5-bae1-fbdbfcffcf7a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"status":0},{"failures":[2,3,4],"tindex":"5e455601-24de-11e5-bae1-71c78a8be74d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"first","beforeFirst":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:365","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : org.apache.commons.collections4.map.ListOrderedMap<K, V>.entrySet()) {\n    final K K = java.util.Map.Entry<K, V>.getKey();\n    final V V = java.util.Map.Entry<K, V>.getValue();\n    if (boolean) {\n        boolean = false;\n    } else {\n        java.lang.StringBuilder.append(\", \");\n    }\n    java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K));\n    java.lang.StringBuilder.append('=');\n    java.lang.StringBuilder.append((V == (this) ? \"(this Map)\" : V));\n}"},"status":-1},{"failures":[],"tindex":"5e455602-24de-11e5-bae1-99b862554842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:972","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"5e455603-24de-11e5-bae1-69ad68d10d07","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:282","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++"},"status":-1},{"failures":[],"tindex":"5e455604-24de-11e5-bae1-83b88b6dbaed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1645","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.iterators.PermutationIterator<E>.hasNext()) {\n    java.util.Collection<java.util.List<E>>.add(org.apache.commons.collections4.iterators.PermutationIterator<E>.next());\n}"},"status":-2},{"failures":[],"tindex":"5e457d15-24de-11e5-bae1-7bed1148486e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:683","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"5e457d16-24de-11e5-bae1-2b24f053712e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"uniqueSet","existingSet":"uniqueSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:488","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>) == null) {\n    java.util.Set<E> = org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.keySet());\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"5e43cf56-24de-11e5-bae1-877293c4aef9","diffs":[{"variables":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}