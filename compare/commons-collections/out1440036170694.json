{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":106,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":146,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":124,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":163,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":18,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":53,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":30,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":113,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":114,"org.apache.commons.collections4.map.LinkedMapTest.testReset":2,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":48,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":105,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":69,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":136,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":0,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadListComparatorChain":162,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":160,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":95,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":147,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":158,"org.apache.commons.collections4.comparators.ComparatorChainTest.testBadNoopComparatorChain":161,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":104,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":120,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":137,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":119,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":77,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":26,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":25,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":82,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":121,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":133,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":19,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":118,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":87,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":37,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":17,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":115,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":125,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":79,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":92,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":112,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":153,"org.apache.commons.collections4.map.LRUMapTest.testClone":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":71,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":123,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":135,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":50,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":5,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":94,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":138,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":46,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":141,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":89,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":128,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":86,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":74,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":156,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":100,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":127,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":107,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":99,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":140,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":154,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":108,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":131,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":150,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":145,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":96,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":101,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":10,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":102,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":149,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":88,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":56,"org.apache.commons.collections4.map.LRUMapTest.testLRU":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":76,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":1,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":143,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":22,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":98,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":21,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":23,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":8,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":139,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":39,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":36,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":80,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":97,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":116,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":152,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":84,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":144,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":68,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":35,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":16,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":109,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":81,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":61,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":85,"org.apache.commons.collections4.map.LRUMapTest.testReset":31,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":111,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":129,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":157,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":73,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":75,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":3,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":41,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":57,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":45,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":122,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":13,"org.apache.commons.collections4.map.LinkedMapTest.testClone":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":12,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":134,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":83,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":126,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":55,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":72},"transformations":[{"failures":[],"tindex":"8fb2347f-46df-11e5-b293-21c67bc3b90a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1238","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"8fb23480-46df-11e5-b293-a9535df9212d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"8fb25b91-46df-11e5-b293-0f7fa52ff0b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.addMapping(int, int, K, V)"},"status":-1},{"failures":[],"tindex":"8fb25b92-46df-11e5-b293-d1b57a547516","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[86],"tindex":"8fb25b93-46df-11e5-b293-b9205024261e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"8fb25b94-46df-11e5-b293-57a4ab980a6d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"8fb25b95-46df-11e5-b293-d3c4e4925eaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:460","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"8fb25b96-46df-11e5-b293-53db6511fbfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1402","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) {\n    case KEY :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    case VALUE :\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    default :\n        throw new java.lang.IllegalArgumentException();\n}"},"status":-2},{"failures":[],"tindex":"8fb25b97-46df-11e5-b293-773816bd4ec7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:512","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n    return int;\n} "},"status":-2},{"failures":[],"tindex":"8fb282a8-46df-11e5-b293-d153e085a858","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:874","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Collection must not be null\");\n} "},"variableMap":{"removeCollection":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":0},{"failures":[],"tindex":"8fb282a9-46df-11e5-b293-f50712dd5007","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"previous","entry":"entry","key2":"key2","previous":"previous","hashCode":"index","key3":"key2","key4":"key1","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"8fb282aa-46df-11e5-b293-c71acb7e1aa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[99,100],"tindex":"8fb282ab-46df-11e5-b293-f90fd1f84dbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1},{"failures":[],"tindex":"8fb2a9bc-46df-11e5-b293-7fb54efdf10c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0},{"failures":[],"tindex":"8fb2a9bd-46df-11e5-b293-49f16402102e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"deletedNode","dataElement":"dataElement","child":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[101,102,103,104,105,106,107,108,109,110],"tindex":"8fb2a9be-46df-11e5-b293-1fa43d54846c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)"},"variableMap":{"stack":"stack","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()"},"status":-1},{"failures":[0,1,2,3,111,112,113,114,4,6,7,5,115,8,9,10,116,11,12,117,13,14,15,16,17,118,18,119,120,19,20,121,122,123,21,22,23,24,25,26,124,125,126,27,127,128,129,130,131,28,29,132,133,31,32,33,34,35,134,135,36,37,38,39,40,41,42,44,45,43,136,46,47,48,137,49,50,138,51,52,53,54,55,139,56,140,141,57,58,142,143,144,59,60,61,62,63,64,145,146,147,65,148,149,150,151,152,153,154,155,156,66,67,157,69,70,71,72,73,74,158,159,75,76,77,78,160,79,80,81,82,83,84,85],"tindex":"8fb2a9bf-46df-11e5-b293-553e7eaa0766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[161,162],"tindex":"8fb2d0d0-46df-11e5-b293-791e5381a5e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:267","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    org.apache.commons.collections4.comparators.ComparatorChain<E>.checkChainIntegrity();\n    boolean = true;\n} "},"status":-1},{"failures":[163],"tindex":"8fb2d0d1-46df-11e5-b293-d96d2a2a0cbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ComparatorUtils:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Comparator cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"status":-1},{"failures":[],"tindex":"8fb2d0d2-46df-11e5-b293-0b245d6322fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:585","type":"CtReturnImpl","sourcecode":"return \"[]\""},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}