{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":96,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":133,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":85,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":56,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":65,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":169,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":154,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":168,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray":64,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":196,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":113,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":176,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":114,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":5,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":158,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":197,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":185,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":170,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":148,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":203,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":60,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":97,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":105,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":117,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":202,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":151,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":187,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":163,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":137,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":4,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":166,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":93,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":130,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":110,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":12,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":31,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":13,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":199,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":77,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":123,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":178,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":145,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":23,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":81,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":89,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":44,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":87,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":20,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":156,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":180,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":174,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":141,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":100,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueOffer":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":164,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":159,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":103,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":165,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":194,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":80,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":73,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":40,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":39,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":160,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":38,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":116,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":32,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":98,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":33,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":120,"org.apache.commons.collections4.CollectionUtilsTest.isFull":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":152,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":57,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":70,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":183,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":69,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":15,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":146,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":162,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":10,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":94,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":1,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":153,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":191,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":147,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":79,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":108,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":182,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":9,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":106,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":54,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":95,"org.apache.commons.collections4.ArrayStackTest.testSearch":2,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":201,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":177,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAdd":61,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":86,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":109,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":173,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":188,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":172,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":45,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":193,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":67,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":119,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":118,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":198,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":111,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":63,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":138,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":82,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":150,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":155,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":192,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":107,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":8,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":134,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":190,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToString":53,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":125,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":181,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":128,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":142,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":52,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":25,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":186,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":47,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":149,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":101,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":42,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":179,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":91,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":184,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":26,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":22,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":51,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":16,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":167,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":92,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":21,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":161,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":131,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":104,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionAddAll":59,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":3},"transformations":[{"failures":[0,1],"tindex":"292a8fdd-2410-11e5-8c7c-cb2d21d82e48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:239","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>))"},"status":-1},{"failures":[],"tindex":"292ab6ee-2410-11e5-8c7c-a72cc041d8f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"y","dataElement":"dataElement","child":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1151","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"292addff-2410-11e5-8c7c-e1068e70cb5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:137","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(E)"},"status":-1},{"failures":[],"tindex":"292ade00-2410-11e5-8c7c-af8108edf38f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:111","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"292ade01-2410-11e5-8c7c-f78243cedde0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:386","type":"CtLocalVariableImpl","sourcecode":"int int = (int) + 1"},"variableMap":{"lastReturnedIndex":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"status":-2},{"failures":[27],"tindex":"292b0512-2410-11e5-8c7c-6b146ad78013","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65],"tindex":"292b0513-2410-11e5-8c7c-bd7377b3049a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:234","type":"CtAssignmentImpl","sourcecode":"E[][(int)++] = E"},"status":-1},{"failures":[],"tindex":"292b2c24-2410-11e5-8c7c-f76a7547975f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:65","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:187","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(java.util.Map<? extends J, ? extends U>.size())"},"status":0},{"failures":[66,67],"tindex":"292b2c25-2410-11e5-8c7c-cdd4502adb3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:82","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]))"},"variableMap":{"preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"292b2c26-2410-11e5-8c7c-47f686396229","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)"},"status":-2},{"failures":[],"tindex":"292b5337-2410-11e5-8c7c-b782297b9ec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:775","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.filter(java.lang.Iterable<T>, (org.apache.commons.collections4.Predicate<? super T> == null ? null : org.apache.commons.collections4.PredicateUtils.notPredicate(org.apache.commons.collections4.Predicate<? super T>)))"},"status":-2},{"failures":[68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"292b5338-2410-11e5-8c7c-038ac361c66a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"292b5339-2410-11e5-8c7c-654012740795","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:58","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":-2},{"failures":[],"tindex":"292b7a4a-2410-11e5-8c7c-efe63973b2ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"status":-2},{"failures":[],"tindex":"292b7a4b-2410-11e5-8c7c-d18b66cf1938","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-2},{"failures":[122,123,124,125,126,127,128,129,130],"tindex":"292ba15c-2410-11e5-8c7c-8f844d263a0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:157","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.addIterator(java.util.Collection<E>.iterator())"},"status":-1},{"failures":[79],"tindex":"292ba15d-2410-11e5-8c7c-334c6b697217","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:212","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":-1},{"failures":[131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204],"tindex":"292ba15e-2410-11e5-8c7c-2315dc1cbbd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object)"},"variableMap":{"delegateMap":"normalMap","key":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:152","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"292bc86f-2410-11e5-8c7c-11548794575a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1038","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"292bc870-2410-11e5-8c7c-45b7c177244a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"o","keys":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:159","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n    return false;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"292b2c24-2410-11e5-8c7c-f76a7547975f","diffs":[{"branches":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t1","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"]},"edges":{"org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map)":["org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.splitmap.TransformedSplitMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)"],"org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map)":["org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.splitmap.TransformedSplitMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)"]},"graph":"branch"}]}]}