{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":111,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":87,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":108,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":75,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":58,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":57,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":97,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":92,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":37,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":91,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":64,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":9,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.CollectionUtilsTest.get":19,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":109,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":93,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":100,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":110,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":118,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":90,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":101,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":56,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":119,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":122,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":46,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":85,"org.apache.commons.collections4.CollectionUtilsTest.get1":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":74,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":40,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":55,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":59,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":121,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":6,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":89,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":18,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":71,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":41,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":32,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":68,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":69,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":60,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":77,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":103,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":22,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":114,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":112,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":102,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":72,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":50,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":123,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":76,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":21,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":70,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":17,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":86,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":10,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":12,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":15,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":81,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":78},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e3f741c4-46c2-11e5-a4ae-6b2a8a9288ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"delta","end2":"end1","this":"this","i":"start1","end1":"start2","k":"end2","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"e3f741c5-46c2-11e5-a4ae-8f41739791da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:986","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"{\")"},"status":-1},{"failures":[18,19,20,21,22,23],"tindex":"e3f768d6-46c2-11e5-a4ae-83abb223255c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"e3f768d7-46c2-11e5-a4ae-4fbfe1911c5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1284","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-2},{"failures":[],"tindex":"e3f768d8-46c2-11e5-a4ae-c9f0710b2dca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"parent","current":"right","right":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e3f768d9-46c2-11e5-a4ae-999e4a1acec4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:128","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"e3f78fea-46c2-11e5-a4ae-89c394175ef9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:541","type":"CtAssignmentImpl","sourcecode":"int = 2"},"status":0},{"failures":[],"tindex":"e3f78feb-46c2-11e5-a4ae-c77e0a452030","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[24],"tindex":"e3f78fec-46c2-11e5-a4ae-653b451a164a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"status":-1},{"failures":[],"tindex":"e3f78fed-46c2-11e5-a4ae-bb2f85ed6a50","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"helper":"helper","cardinalityA":"cardinalityB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"status":-2},{"failures":[25],"tindex":"e3f78fee-46c2-11e5-a4ae-411eaf46a560","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:59","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.TransformedPredicate<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34],"tindex":"e3f78fef-46c2-11e5-a4ae-c921503bd14e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[],"tindex":"e3f78ff0-46c2-11e5-a4ae-5d902b9f17ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-2},{"failures":[],"tindex":"e3f7b701-46c2-11e5-a4ae-cd2fef672f4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedSortedBag:79","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.SortedBag<E> != null)) && ((org.apache.commons.collections4.SortedBag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.SortedBag<E>.toArray()));\n    org.apache.commons.collections4.SortedBag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedSortedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"variableMap":{"transformer":"transformer","bag":"bag","decorated":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[],"tindex":"e3f7b702-46c2-11e5-a4ae-25d50087069c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e3f7b703-46c2-11e5-a4ae-617aa3e937b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:306","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"e3f7b704-46c2-11e5-a4ae-1f741d3ffcf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection) {\n    return ((java.util.Collection<?>)(java.lang.Object)).iterator();\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:408","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.MultiValueMap.ValuesIterator(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e3f7b705-46c2-11e5-a4ae-f3a05c438abd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:302","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"queue is empty\");\n} "},"status":-2},{"failures":[35,36,37,38],"tindex":"e3f7de16-46c2-11e5-a4ae-d10cee5ed645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124],"tindex":"e3f7de17-46c2-11e5-a4ae-23b45b517000","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}