{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":39,"org.apache.commons.collections4.SetUtilsTest.testEquals":119,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":44,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":102,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":63,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":14,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testIterator":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":46,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":2,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":107,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":83,"org.apache.commons.collections4.map.LRUMapTest.testLRU":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":115,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":117,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":65,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":61},"transformations":[{"failures":[],"tindex":"3bd50b3d-24e0-11e5-82e5-8983c2571be7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"variableMap":{"root":"p","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[],"tindex":"3bd5324e-24e0-11e5-82e5-0b4e6df93665","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:303","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"status":-2},{"failures":[],"tindex":"3bd5324f-24e0-11e5-82e5-bfb0e2421748","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"status":-2},{"failures":[],"tindex":"3bd53250-24e0-11e5-82e5-cdffe9c81908","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1317","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size())) {\n    return false;\n} "},"status":0},{"failures":[],"tindex":"3bd55961-24e0-11e5-82e5-b3c4fcd2f568","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[0],"tindex":"3bd55962-24e0-11e5-82e5-05e8fb0bc61c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:815","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"3bd55963-24e0-11e5-82e5-69b788a5362f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:460","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"3bd55964-24e0-11e5-82e5-d771a04e9f2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:82","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.entrySet())"},"status":-2},{"failures":[],"tindex":"3bd55965-24e0-11e5-82e5-01d41a6522aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1144","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[1,2,3,4,5],"tindex":"3bd58076-24e0-11e5-82e5-032f48b487c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:81","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.addAll(java.util.List<E>)"},"variableMap":{"temp":"list","sl":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:148","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-1},{"failures":[6,7],"tindex":"3bd58077-24e0-11e5-82e5-f1ff7798b9d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:290","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"3bd58078-24e0-11e5-82e5-05b311e1a339","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:218","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.BidiMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"status":-2},{"failures":[8,9,10,11,12,13,14],"tindex":"3bd58079-24e0-11e5-82e5-49e7939b6cfa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    super.addMapping(int, int, K, V);\n}"},"status":-1},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"3bd5807a-24e0-11e5-82e5-b17cee46dced","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:498","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[119],"tindex":"3bd5a78b-24e0-11e5-82e5-a5abe59b743f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:118","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3bd5a78c-24e0-11e5-82e5-1b95eee4d539","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:323","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int)((((int) + int) / (float)) + 1))"},"status":-2},{"failures":[],"tindex":"3bd5a78d-24e0-11e5-82e5-2b2331413aaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[],"tindex":"3bd5a78e-24e0-11e5-82e5-f702b7c7ef37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:715","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"3bd5a78f-24e0-11e5-82e5-657267ac34d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-2},{"failures":[],"tindex":"3bd5a790-24e0-11e5-82e5-abfa38da7fd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:78","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.isEmpty()"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3bd53250-24e0-11e5-82e5-cdffe9c81908","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()"]},"type":"graph"}]},{"transformation":"3bd50b3d-24e0-11e5-82e5-8983c2571be7","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.boolean isEmpty()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.void incrementModCount()"],"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.boolean isEmpty()","org.apache.commons.collections4.trie.AbstractPatriciaTrie.void removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.void incrementModCount()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry nextEntry()_if ((expectedModCount) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.modCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieIterator.void remove()_expectedModCount = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.modCount"]},"type":"variable"}]}]}