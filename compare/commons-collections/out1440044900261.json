{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":34,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":41,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":59,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":60,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":81,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":29,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":27,"org.apache.commons.collections4.CollectionUtilsTest.get":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":23,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":32,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":76,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":62,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":43,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":84,"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":44,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":37,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":72},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"e2ec6b48-46f3-11e5-808e-8fe147ac11a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"e2ec9259-46f3-11e5-808e-01857b6ccf2d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"changed","removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:131","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"status":-2},{"failures":[12,13],"tindex":"e2ec925a-46f3-11e5-808e-91ba427ab2b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61],"tindex":"e2ec925b-46f3-11e5-808e-794a3051adf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e2ec925c-46f3-11e5-808e-691f72c66e9f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"entry","header":"entry","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:246","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e2ecb96d-46f3-11e5-808e-298b95cfc26c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1375","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"null\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\")"},"status":0},{"failures":[62,63,64,65,66,67,68,69],"tindex":"e2ecb96e-46f3-11e5-808e-c964d4159f6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1270","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"e2ecb96f-46f3-11e5-808e-473d1a57972e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.FixedSizeList:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AndPredicate:51","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-2},{"failures":[],"tindex":"e2ecb970-46f3-11e5-808e-b5bb966eab40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)"},"variableMap":{"fromIndexInclusive":"totalSize","toIndexExclusive":"totalSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1603","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<O>, int);\n} else {\n    final java.util.ArrayList<O> java.util.ArrayList<O> = new java.util.ArrayList<O>(int);\n    O O = null;\n    while (java.util.Iterator<O>.hasNext()) {\n        final O O = java.util.Iterator<O>.next();\n        if ((O == null) || (!(O.equals(O)))) {\n            java.util.ArrayList<O>.add(O);\n        } \n        O = O;\n    }\n    java.util.ArrayList<O>.trimToSize();\n    return java.util.ArrayList<O>;\n}"},"status":-2},{"failures":[70,71,72],"tindex":"e2ecb971-46f3-11e5-808e-1bd73ff1f46c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"root","root":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"status":-1},{"failures":[73],"tindex":"e2ecb972-46f3-11e5-808e-71fc3ea47a16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>> : java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getKey();\n    org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"e2ece083-46f3-11e5-808e-e7ce0193dcda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[74,75],"tindex":"e2ece084-46f3-11e5-808e-bff928a04a67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1215","type":"CtReturnImpl","sourcecode":"return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int)"},"variableMap":{"iterable":"iterable","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.lang.Iterable<T>.iterator(), int)"},"status":-1},{"failures":[76,77,78,79],"tindex":"e2ece085-46f3-11e5-808e-bd0acf013d09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:127","type":"CtAssignmentImpl","sourcecode":"char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]))"},"status":-1},{"failures":[15,16,17,80,26,38,81,49,61],"tindex":"e2ece086-46f3-11e5-808e-c139fb7aba88","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:623","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())));\n}"},"status":-1},{"failures":[],"tindex":"e2ece087-46f3-11e5-808e-c503e26f572f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:94","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[82],"tindex":"e2ece088-46f3-11e5-808e-e981a63921ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1266","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<?>.next()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1273","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":-1},{"failures":[83],"tindex":"e2ed0799-46f3-11e5-808e-7db929e0be52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyListIterator:57","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.org.apache.commons.collections4.ResettableListIterator))"},"status":-1},{"failures":[],"tindex":"e2ed079a-46f3-11e5-808e-b14f32c8b18a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:431","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[84,85],"tindex":"e2ed079b-46f3-11e5-808e-cfa9e0257290","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}