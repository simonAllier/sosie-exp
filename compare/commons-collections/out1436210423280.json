{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":104,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":96,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":78,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":42,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":102,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":68,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":18,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiClear":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":16,"org.apache.commons.collections4.map.LRUMapTest.testLRU":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":22,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":39,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":107,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":27,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":38,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":56},"transformations":[{"failures":[0,1,2],"tindex":"0c8a1612-2414-11e5-941c-493cea231b01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:164","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[3],"tindex":"0c8a3d23-2414-11e5-941c-538b935294df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:93","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0c8a3d24-2414-11e5-941c-652536d1ad86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:54","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"status":-2},{"failures":[],"tindex":"0c8a3d25-2414-11e5-941c-51718cd21f96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"status":-2},{"failures":[],"tindex":"0c8a3d26-2414-11e5-941c-655e601c5ae6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:134","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>"},"status":-2},{"failures":[4,5],"tindex":"0c8a3d27-2414-11e5-941c-cfb4f259b322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0c8a6438-2414-11e5-941c-5577a1e25e66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"subtree":"node","prior":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:614","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null)"},"status":-2},{"failures":[],"tindex":"0c8a6439-2414-11e5-941c-dd16328b7e4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:166","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"0c8a643a-2414-11e5-941c-818af2d808d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"to","dataElement":"dataElement","child":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-2},{"failures":[],"tindex":"0c8a643b-2414-11e5-941c-d5ef61ca0dd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"status":0},{"failures":[6,7],"tindex":"0c8a643c-2414-11e5-941c-a97cfb918e9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ChainedClosure:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)"},"status":-1},{"failures":[],"tindex":"0c8a8b4d-2414-11e5-941c-fdcc5c0eed03","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"0c8a8b4e-2414-11e5-941c-bb86aea772a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"0c8a8b4f-2414-11e5-941c-4761b7f4b612","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1308","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[105,106,107,108,109],"tindex":"0c8a8b50-2414-11e5-941c-49b8de334c06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:551","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"maxSize","expectedModCount":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"0c8ab261-2414-11e5-941c-619e372ebe8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1617","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<O>.trimToSize()"},"status":-2},{"failures":[],"tindex":"0c8ab262-2414-11e5-941c-331f5408cfcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"0c8ab263-2414-11e5-941c-01fcf7f895f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:501","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.size())"},"status":-2},{"failures":[],"tindex":"0c8ab264-2414-11e5-941c-65f0a31b4280","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:211","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":-2},{"failures":[],"tindex":"0c8ab265-2414-11e5-941c-d5693677fd81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1204","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"left":"left","start":"left","this":"this","predecessor":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1216","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            return null;\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}