{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":69,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":1,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":4,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":45,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":72,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":7,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":10,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":60,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":64,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":32,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":67,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":39,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":26,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":41,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":54,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":52,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":56,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":43,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":59,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":40,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":71,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":8,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":55},"transformations":[{"failures":[],"tindex":"a9de033b-46f1-11e5-9f81-1341a42256a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:84","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[].int) == 1) {\n    return org.apache.commons.collections4.Predicate<T>[][0];\n} "},"variableMap":{"length":"length","preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:71","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate();\n} "},"status":-2},{"failures":[],"tindex":"a9de033c-46f1-11e5-9f81-db1366911fdc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"length","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"a9de2a4d-46f1-11e5-9f81-47b9e96b6701","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:289","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"entry","entry":"next","key2":"key2","hashCode":"hashCode","key3":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:430","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0],"tindex":"a9de2a4e-46f1-11e5-9f81-1bd5e687d177","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:87","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"a9de2a4f-46f1-11e5-9f81-db07b28a0997","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"variableMap":{"cloned":"map","delegateMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:119","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(K)) == false) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7],"tindex":"a9de2a50-46f1-11e5-9f81-7d3a006e9812","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:178","type":"CtInvocationImpl","sourcecode":"this.java.util.Map<K, V>[][int].clear()"},"status":-1},{"failures":[8,9,10,11],"tindex":"a9de2a51-46f1-11e5-9f81-1d046d9d4275","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:669","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"a9de5162-46f1-11e5-9f81-b9d1fd64a5ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"total","newCapacity":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1360","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n    }\n} "},"status":-1},{"failures":[],"tindex":"a9de5163-46f1-11e5-9f81-d1d196325135","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:167","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"a9de5164-46f1-11e5-9f81-21d3c0450050","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":-2},{"failures":[],"tindex":"a9de5165-46f1-11e5-9f81-85d9bede23a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>"},"variableMap":{"tmpMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)"},"status":0},{"failures":[29],"tindex":"a9de5166-46f1-11e5-9f81-d1e753acb767","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:212","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a9de5167-46f1-11e5-9f81-bf11e6ba4fb4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()"},"status":-2},{"failures":[],"tindex":"a9de5168-46f1-11e5-9f81-27546cbccbe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"a9de7879-46f1-11e5-9f81-155da2c26ed1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:300","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"before","link":"header","after":"link"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:266","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"a9de787a-46f1-11e5-9f81-63c7755e294b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazySortedMap:126","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2},{"failures":[],"tindex":"a9de787b-46f1-11e5-9f81-e39f0ce8e568","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1758","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:286","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"a9de787c-46f1-11e5-9f81-ef7a98a62845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyOrderedIterator:45","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.OrderedIterator<E>)(org.apache.commons.collections4.iterators.EmptyOrderedIterator.org.apache.commons.collections4.OrderedIterator))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}