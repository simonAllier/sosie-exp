{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.CollectionUtilsTest.union":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":73,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":72,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":92,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.CollectionUtilsTest.intersection":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":5,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":63,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":76,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.CollectionUtilsTest.selectRejected":70,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":90,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":13,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":75,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":89,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":88,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":60,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":85,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":1,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":59,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":83,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":93,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":80,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":27,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":71,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":64,"org.apache.commons.collections4.map.CompositeMapTest.testPut":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollectionOfSelf":65,"org.apache.commons.collections4.CollectionUtilsTest.get":66,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":54,"org.apache.commons.collections4.map.CompositeMapTest.testGet":21,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":95,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":29,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.ListUtilsTest.testSelectRejected":52,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiRemove":82,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":0,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":53,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.set.CompositeSetTest.testContains":2,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":55,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":57,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":3,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":62,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":84,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":94,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromComposited":26,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":25,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":81,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":35,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":56,"org.apache.commons.collections4.CollectionUtilsTest.select":61,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveFromUnderlying":24,"org.apache.commons.collections4.ListUtilsTest.testSelect":51,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":4,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":7,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":58,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":38,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionToSelf":74,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":67,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":79,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":87},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"86e65386-259e-11e5-8920-cf9abf27c04c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:97","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) == false) {\n    throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\");\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[75],"tindex":"86e6a1a7-259e-11e5-8920-af9c556c7683","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:178","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"86e6a1a8-259e-11e5-8920-95f9763c1ba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1397","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[76,77,78,79],"tindex":"86e6a1a9-259e-11e5-8920-7b9c15ed42e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:240","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[80],"tindex":"86e6a1aa-259e-11e5-8920-c7242a958ddd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[81],"tindex":"86e6c8bb-259e-11e5-8920-43c740f78a44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:847","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<C> != null) && (org.apache.commons.collections4.Predicate<? super C> != null)) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n            return true;\n        } \n    }\n} "},"variableMap":{"input":"input","predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:876","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<C> != null) {\n    for (final C C : java.lang.Iterable<C>) {\n        if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n            return false;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"86e6c8bc-259e-11e5-8920-d92b16766dbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"86e6c8bd-259e-11e5-8920-6d1bed6b3839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:281","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"86e6c8be-259e-11e5-8920-9102fc7ed6a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:101","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"86e6efcf-259e-11e5-8920-337a656d3911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:734","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"cachedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:140","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"86e6efd0-259e-11e5-8920-774a7a477353","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:90","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[],"tindex":"86e6efd1-259e-11e5-8920-7f6d12724dc1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"86e6efd2-259e-11e5-8920-234afc0df663","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"xWasLeftChild"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1140","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[82],"tindex":"86e715e3-259e-11e5-8920-cb7714c75f59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[83,84,85,86,87,88,89,90],"tindex":"86e715e4-259e-11e5-8920-9fe3760e1ace","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:478","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(org.apache.commons.collections4.map.ListOrderedMap<K, V>.get(int))"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.get(java.util.List<K>.get(int))"},"status":-1},{"failures":[91,92],"tindex":"86e715e5-259e-11e5-8920-21e5180af2d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[93],"tindex":"86e73cf6-259e-11e5-8920-5379300cc120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl","sourcecode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} "},"variableMap":{"isLocked":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:248","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"86e73cf7-259e-11e5-8920-dffe3121956a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:522","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[94,95],"tindex":"86e73cf8-259e-11e5-8920-bf2776e82928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:206","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}