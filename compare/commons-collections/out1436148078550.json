{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":102,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx6":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":160,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":166,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":12,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":223,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":174,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":110,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":8,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":187,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":162,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":197,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":61,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":145,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":198,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFullMapCompatibility":232,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":72,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":148,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":186,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":49,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":47,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":157,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":194,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":222,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesIteratorRemoveChangesMap":181,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":58,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":138,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":168,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":215,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":188,"org.apache.commons.collections4.map.HashedMapTest.testClone":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":92,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":169,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":177,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":142,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":70,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":193,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":202,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.CollectionUtilsTest.intersection":3,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":183,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":235,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":208,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":233,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":173,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":2,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":151,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":220,"org.apache.commons.collections4.SetUtilsTest.testHashCode":42,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":204,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":103,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":9,"org.apache.commons.collections4.map.TransformedMapTest.testValuesRemoveChangesMap":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":229,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":199,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFullMapCompatibility":226,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":231,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":45,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":178,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":5,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":132,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":141,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":212,"org.apache.commons.collections4.map.LinkedMapTest.testClone":34,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":200,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":38,"org.apache.commons.collections4.map.PredicatedMapTest.testValuesRemoveChangesMap":182,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":147,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesIteratorRemoveChangesMap":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":133,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":4,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":7,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInCollectionToGetInstance":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":125,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":84,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":221,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":115,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":195,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFullMapCompatibility":230,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":48,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testValuesRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":81,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx6":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":136,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":192,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":107,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":175,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":54,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":144,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":75,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":214,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":156,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":153,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":158,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":185,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":159,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":130,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":146,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":129,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":165,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":149,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.map.LRUMapTest.testClone":36,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":94,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":225,"org.apache.commons.collections4.map.TransformedMapTest.testValuesIteratorRemoveChangesMap":163,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":189,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":205,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFullMapCompatibility":228,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":210,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":207,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":123,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":64,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":179,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":135,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":184,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":227,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":21,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":190,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":219,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":56,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":99,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":203,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":40,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":209,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":196,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":140,"org.apache.commons.collections4.functors.AllPredicateTest.singletonCollectionToGetInstance":13,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":14,"org.apache.commons.collections4.map.TransformedSortedMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":224,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":104,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":91,"org.apache.commons.collections4.CollectionUtilsTest.exists":27,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":234,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":216,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx6":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":44,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":213,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":96,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":206},"transformations":[{"failures":[0],"tindex":"e516dee2-2382-11e5-8e53-cf9af29d005d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"removeLRUEntry","changed":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:252","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"e51c3613-2382-11e5-8e53-d97b38d6a13f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"elements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1701","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.lang.Iterable<? extends E>.iterator()"},"status":-2},{"failures":[1],"tindex":"e51c3614-2382-11e5-8e53-831260f15200","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:52","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>"},"status":-1},{"failures":[2,3,4,5,6,7,8,9],"tindex":"e51c5d25-2382-11e5-8e53-f748b46e076b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:253","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O));\n}"},"status":-1},{"failures":[],"tindex":"e51c5d26-2382-11e5-8e53-b7873974854a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:110","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e51d2077-2382-11e5-8e53-73a6841acfaa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (int) - 1;\n} "},"variableMap":{"maxElements":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:460","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":0},{"failures":[],"tindex":"e51d4788-2382-11e5-8e53-a19076df566b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.collections4.trie.KeyAnalyzer.int;\n} "},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"endIndex1","allNull":"allNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-2},{"failures":[10,11],"tindex":"e51d4789-2382-11e5-8e53-63591c42f990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[12,13],"tindex":"e51d478a-2382-11e5-8e53-cd9fb0654a21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[][0]"},"status":-1},{"failures":[],"tindex":"e51d6e9b-2382-11e5-8e53-a1edfe70b1a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"e51f1c4c-2382-11e5-8e53-497b5135dac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"deletedNode","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:993","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[14,15,16,17,18],"tindex":"e51f1c4d-2382-11e5-8e53-691410db82ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:106","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<T>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate collection must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"e51f435e-2382-11e5-8e53-2389e5ba7b0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.CompositeSet.SetMutator<E>.addAll(this, java.util.List<java.util.Set<E>>, java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"e51f435f-2382-11e5-8e53-0d7dffc524ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"hash","hash2":"hash","hash1":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"status":0},{"failures":[19,20,21,22,23,24,25,26],"tindex":"e51f4360-2382-11e5-8e53-85df5d9dcab9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()"},"variableMap":{"parent":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:586","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = null;\n} else {\n    int = 0;\n    int = int = int = 0;\n    K = K = K = null;\n    V = V = V = null;\n}"},"status":-1},{"failures":[],"tindex":"e51f6a71-2382-11e5-8e53-0d9ec4b4fe13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-2},{"failures":[],"tindex":"e51f6a72-2382-11e5-8e53-69d655c531dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:307","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"e51f6a73-2382-11e5-8e53-edc49bb4f15c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"e51f9184-2382-11e5-8e53-bd06f9f33d35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:345","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceValues<V>(this);\n} "},"status":0},{"failures":[],"tindex":"e5211825-2382-11e5-8e53-d51e2619ed3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1102","type":"CtIfImpl","sourcecode":"if (int > 3) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.createDelegateMap();\n} "},"status":0},{"failures":[27],"tindex":"e5213f36-2382-11e5-8e53-25c8b3751ce9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:854","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e5213f37-2382-11e5-8e53-5142bbdf0132","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"full","changed":"full"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:313","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":0},{"failures":[28,29],"tindex":"e5213f38-2382-11e5-8e53-6b47045c2b9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:91","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"Start index must not be greater than the array length\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:313","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-1},{"failures":[],"tindex":"e5213f39-2382-11e5-8e53-152ad6dcc5c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e5213f3a-2382-11e5-8e53-57ac53c7d8ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1169","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"e5213f3b-2382-11e5-8e53-bf5d1803692e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer<? super K>.bitIndex(K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K), K, 0, org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K))"},"status":-2},{"failures":[],"tindex":"e521664c-2382-11e5-8e53-f1f3527a6c53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:922","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Iterator must not be null\")"},"status":0},{"failures":[],"tindex":"e521664d-2382-11e5-8e53-d55cfd237fe3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[19,30,31,32,33,34,35,36,37,38,39,40,41],"tindex":"e521664e-2382-11e5-8e53-fd4de3d7c230","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:870","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"parent":"this","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-1},{"failures":[42],"tindex":"e521664f-2382-11e5-8e53-1bcf7adca7be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:148","type":"CtOperatorAssignmentImpl","sourcecode":"int += T.hashCode()"},"status":-1},{"failures":[43,44,45,46,47],"tindex":"e5216650-2382-11e5-8e53-c53357f72449","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:119","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.queue.CircularFifoQueue<E>.size())"},"status":-1},{"failures":[48],"tindex":"e5216651-2382-11e5-8e53-d517092006fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.BagUtils:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.CollectionBag.collectionBag(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag<E>)"},"status":-1},{"failures":[],"tindex":"e5216652-2382-11e5-8e53-d5a0075bea9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1770","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious().getValue()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[49,50,28,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,29,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"e5218d63-2382-11e5-8e53-f95d2e6dcbb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":-1},{"failures":[],"tindex":"e5218d64-2382-11e5-8e53-7582c7b8be16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:574","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"p":"right","parent":"root","left":"right","h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:93","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"status":-2},{"failures":[135,139,141,142,143],"tindex":"e5218d65-2382-11e5-8e53-0324ee965476","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[144],"tindex":"e521b476-2382-11e5-8e53-392d3132f627","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ExceptionFactory:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionFactory invoked\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-1},{"failures":[145,66,79,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"tindex":"e521b477-2382-11e5-8e53-258d67a0456c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1396","type":"CtTryImpl","sourcecode":"try {\n    return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e521b478-2382-11e5-8e53-415c5c8036d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:751","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n    java.util.Iterator<T>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e521b479-2382-11e5-8e53-f3e281dae1ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedMap<K, V>"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:79","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.TransformedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"status":-2},{"failures":[216,217,218,219,220,221,222,223,224],"tindex":"e521b47a-2382-11e5-8e53-4f3b7983489e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:326","type":"CtIfImpl","sourcecode":"if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n} else {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[225],"tindex":"e521db8b-2382-11e5-8e53-fbb4f42bcf33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"e521db8c-2382-11e5-8e53-092e31ffbbe9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2148","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:427","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[226,227,228,229,230,231,232,233],"tindex":"e521db8d-2382-11e5-8e53-2d525a5766f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()"},"variableMap":{"parent":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":-1},{"failures":[],"tindex":"e521db8e-2382-11e5-8e53-0fe156f0df25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:94","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e521db8f-2382-11e5-8e53-150759d90ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:690","type":"CtLocalVariableImpl","sourcecode":"final int int = int * (int)"},"variableMap":{"size":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:626","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int"},"status":-2},{"failures":[],"tindex":"e521db90-2382-11e5-8e53-e779bfeadbcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e52202a1-2382-11e5-8e53-993dca77e849","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:303","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-2},{"failures":[234,15,235],"tindex":"e52202a2-2382-11e5-8e53-b94eca4bfcfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-1},{"failures":[235],"tindex":"e5233b23-2382-11e5-8e53-032f26a63179","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}