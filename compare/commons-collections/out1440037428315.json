{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":27,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":52,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testAdd":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":77,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":95,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":16,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":103,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":83,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":35},"transformations":[{"failures":[0],"tindex":"7d4ba21a-46e2-11e5-bb5a-8b4d5f86894f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must be empty\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported by this iterator\")"},"status":-1},{"failures":[],"tindex":"7d4bc92b-46e2-11e5-bb5a-257f01543aae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"leftChild","y":"leftChild","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:854","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"7d4bc92c-46e2-11e5-bb5a-5b596fbd0206","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:186","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}"},"status":0},{"failures":[],"tindex":"7d4bf03d-46e2-11e5-bb5a-e143bf1c3fea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"7d4bf03e-46e2-11e5-bb5a-adeb854232ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"7d4bf03f-46e2-11e5-bb5a-938c202f8f18","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"7d4bf040-46e2-11e5-bb5a-ab2f9403a327","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-2},{"failures":[49,50],"tindex":"7d4c1751-46e2-11e5-bb5a-01fd52445038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:136","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The closure array must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:131","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[51,52,53,54,55,56,57,58,59,60],"tindex":"7d4c1752-46e2-11e5-bb5a-8b2c0fb3f070","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"node":"currentNode","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"7d4c1753-46e2-11e5-bb5a-35a507bf09f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"removeIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"7d4c1754-46e2-11e5-bb5a-675279ecf0ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:459","type":"CtIfImpl","sourcecode":"if ((T[].int) < int) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T[] T[] = ((T[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n    T[] = T[];\n} "},"status":-2},{"failures":[],"tindex":"7d4c1755-46e2-11e5-bb5a-8b98c43fe0e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:139","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":0},{"failures":[],"tindex":"7d4c1756-46e2-11e5-bb5a-d1c71df52c98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:333","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--"},"status":-2},{"failures":[],"tindex":"7d4c3e67-46e2-11e5-bb5a-4b2abac34370","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:269","type":"CtIfImpl","sourcecode":"if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n    java.util.Iterator<E>.remove();\n} "},"status":-2},{"failures":[],"tindex":"7d4c3e68-46e2-11e5-bb5a-ddd7ef769643","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(\"End index must not be greater than the array length\")"},"status":-2},{"failures":[61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"7d4c3e69-46e2-11e5-bb5a-0b563b2a3176","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:482","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"variableMap":{"h":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"7d4c3e6a-46e2-11e5-bb5a-578cfd4a3386","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:568","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"7d4c657b-46e2-11e5-bb5a-a3aa7fa5aff1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:57","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 0) {\n    return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate();\n} "},"status":0},{"failures":[],"tindex":"7d4c657c-46e2-11e5-bb5a-6d5ff30c468f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","newNode":"next","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:234","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[107],"tindex":"7d4c657d-46e2-11e5-bb5a-0b24651be5da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}