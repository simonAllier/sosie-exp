{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":180,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":92,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":143,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":95,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":102,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":18,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":71,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":58,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":116,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":118,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":64,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":69,"org.apache.commons.collections4.map.LinkedMapTest.testReset":117,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":73,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":166,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":94,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":43,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":59,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":110,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":114,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":47,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":30,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":41,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":105,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":177,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":24,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":93,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":63,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":65,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":145,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":144,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":28,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":156,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":34,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":148,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":155,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":134,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":138,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":142,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":6,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":103,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":140,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":125,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":120,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":127,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":176,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":100,"org.apache.commons.collections4.map.LRUMapTest.testClone":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":20,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":106,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":107,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":50,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":150,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":67,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":124,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":174,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":13,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":68,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":62,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":39,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":25,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":42,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":141,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":147,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":8,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":162,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":1,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":170,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":179,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":23,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":72,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":112,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":161,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":173,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":78,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":101,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":165,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":97,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":113,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":91,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":15,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":130,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":55,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":7,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":77,"org.apache.commons.collections4.map.LRUMapTest.testLRU":46,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":137,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":0,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":178,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":115,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":17,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":153,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":76,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":128,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":54,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":32,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":51,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":99,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":131,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":29,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":36,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":84,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":48,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":57,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":33,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":169,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":90,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":89,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":88,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":122,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":37,"org.apache.commons.collections4.map.LRUMapTest.testReset":44,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":108,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":119,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":164,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":163,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":111,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":86,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":22,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":82,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":26,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":56,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":123,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":61,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":149,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":126,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":135,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":2,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":3,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":4,"org.apache.commons.collections4.map.LinkedMapTest.testClone":121,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":49,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":133,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":172,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":81,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":9,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":159,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":21,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":129},"transformations":[{"failures":[],"tindex":"a4b40967-422a-11e5-8a89-fd75312f3bb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"next","insertBeforeNode":"node","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"a4b43078-422a-11e5-8a89-e5099a67fb83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"a4b43079-422a-11e5-8a89-2fb158d7002b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"a4b4307a-422a-11e5-8a89-37de52b15d06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"status":-1},{"failures":[],"tindex":"a4b4307b-422a-11e5-8a89-1f1339f8af5c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:735","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:746","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> == null) || (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"a4b4578c-422a-11e5-8a89-a70c3c33e26a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[18],"tindex":"a4b4578d-422a-11e5-8a89-b1efcda11986","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a4b4578e-422a-11e5-8a89-8d534fd56c3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"variableMap":{"dataElement":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:124","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"a4b4578f-422a-11e5-8a89-57f69290dcce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"header","link":"header","header":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[46,48,51,52,111],"tindex":"a4b45790-422a-11e5-8a89-3d93fd6ce745","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"a4b47ea1-422a-11e5-8a89-af34d99aacdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"entry","right":"root","bitIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[177,178,179,180],"tindex":"a4b47ea2-422a-11e5-8a89-5d07df5b01ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:74","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\");\n} "},"variableMap":{"result":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:359","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"a4b47ea3-422a-11e5-8a89-d9361be512de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:54","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a4b4a5b4-422a-11e5-8a89-013b51744ed8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:131","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.putAll(java.util.Map<? extends K, ? extends V>)"},"variableMap":{"this":"result","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:189","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends J, ? extends U> java.util.Map.Entry<? extends J, ? extends U> : java.util.Map<? extends J, ? extends U>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(java.util.Map.Entry<? extends J, ? extends U>.getKey()), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(java.util.Map.Entry<? extends J, ? extends U>.getValue()));\n}"},"status":-2},{"failures":[],"tindex":"a4b4a5b5-422a-11e5-8a89-556b6e692729","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"variableMap":{"size":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>)"},"status":0},{"failures":[],"tindex":"a4b4a5b6-422a-11e5-8a89-c3ffa10d2fe6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:337","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator<K, V>)"},"status":-2},{"failures":[],"tindex":"a4b4a5b7-422a-11e5-8a89-05666aaa14be","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedMap.predicatedMap(java.util.Map<K, V>, org.apache.commons.collections4.Predicate<? super K>, org.apache.commons.collections4.Predicate<? super V>)"},"status":-2},{"failures":[],"tindex":"a4b4a5b8-422a-11e5-8a89-07d9f8d9dabb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a4b4a5b9-422a-11e5-8a89-5f762c075fb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"a4b4ccca-422a-11e5-8a89-5757f5eb2e39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:748","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}