{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":25,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":26,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":14,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":8,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRetainAll":3,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":4,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":24},"transformations":[{"failures":[],"tindex":"e0419a62-241f-11e5-bdb2-61d59e069d94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"e041c173-241f-11e5-bdb2-0f72b46dfbfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:116","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.PeekingIterator<E>.fill()"},"status":-2},{"failures":[],"tindex":"e041e884-241f-11e5-bdb2-a1c8bc3e3c2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2283","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.util.Map.Entry<K, V>> java.util.Set<java.util.Map.Entry<K, V>> = java.util.Collections.emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:236","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().entrySet()"},"status":-2},{"failures":[0,1],"tindex":"e041e885-241f-11e5-bdb2-5d67fad0b315","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}"},"status":-1},{"failures":[],"tindex":"e041e886-241f-11e5-bdb2-873f4ed83db3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"status":-2},{"failures":[],"tindex":"e0420f97-241f-11e5-bdb2-99707a1572e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"current","e":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:217","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":0},{"failures":[],"tindex":"e0420f98-241f-11e5-bdb2-4f04ffa838bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) == 0"},"variableMap":{"this":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl","sourcecode":"return !(java.util.List<E>.isEmpty())"},"status":-2},{"failures":[],"tindex":"e0420f99-241f-11e5-bdb2-07f25cef08d3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{  }, null)"},"variableMap":{"this":"one"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:73","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.CompositeMap<K, V>.this(new java.util.Map[]{ java.util.Map<K, V> , java.util.Map<K, V> }, null)"},"status":-2},{"failures":[2,3],"tindex":"e04236aa-241f-11e5-bdb2-bdf9518471f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"e04236ab-241f-11e5-bdb2-452c6a6c552c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:236","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null ? java.lang.Integer == null ? 0 : 1 : -1"},"status":-2},{"failures":[],"tindex":"e04236ac-241f-11e5-bdb2-cbdbcd905711","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:455","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"e0425dbd-241f-11e5-bdb2-5961a3715f22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getValue()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)"},"status":-1},{"failures":[4,5,6,7,8],"tindex":"e0425dbe-241f-11e5-bdb2-c37f179cd870","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"e04284cf-241f-11e5-bdb2-5f482aa66b51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1125","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[9,10,11,12],"tindex":"e04284d0-241f-11e5-bdb2-0b5c4128bd7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:227","type":"CtIfImpl","sourcecode":"if (java.util.Map<V, K>.containsKey(java.lang.Object)) {\n    K = java.util.Map<V, K>.remove(java.lang.Object);\n    java.util.Map<K, V>.remove(K);\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"e04284d1-241f-11e5-bdb2-3da5ff78eb17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"e04284d2-241f-11e5-bdb2-3df9af5eade8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"parent","e":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[28],"tindex":"e042abe3-241f-11e5-bdb2-c1f554ded22c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"removeLRUEntry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:250","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n    if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n        boolean = true;\n        break;\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"e042abe4-241f-11e5-bdb2-d18a2fc5cf5a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:110","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.Class<? extends T> == null) {\n        throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\");\n    } \n    final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = java.lang.Class<? extends T>.getConstructor(java.lang.Class<?>[]);\n    return java.lang.reflect.Constructor<? extends T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: The constructor must exist and be public \");\n} catch (final java.lang.InstantiationException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"e042d2f5-241f-11e5-bdb2-6b2c734d4842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"node","rightChild":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:633","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e0420f97-241f-11e5-bdb2-99707a1572e7","diffs":[{"variables":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":["org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry.boolean isEmpty()_return (key) == null"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":["org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t1","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).t5","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e6","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e5","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e4","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).l2","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).b","org.apache.commons.collections4.trie.AbstractPatriciaTrie_org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry_previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry).e1"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"]},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.boolean isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)","org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"],"org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int)":["org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry,int) -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie$TrieEntry)"]},"graph":"branch"}]}]}