{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":16,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":156,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":168,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":24,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":148,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":205,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":217,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":149,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":139,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":172,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":11,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":144,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":4,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":90,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":193,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":213,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":39,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":171,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEmptyMapCompatibility":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":169,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":91,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":216,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":132,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":87,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":73,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":178,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":158,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":197,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":151,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":122,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":8,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":214,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":204,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":116,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":200,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":137,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":38,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":21,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Other":187,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":223,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":170,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":99,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":150,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":107,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":138,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":157,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":110,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":25,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":75,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":9,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":175,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":147,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":161,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":46,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Iterator":186,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":166,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":52,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":62,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":29,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":14,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":63,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":43,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":202,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":221,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":28,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":92,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":143,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":95,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":103,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":88,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":19,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":188,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":112,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":26,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":222,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":206,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":211,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":153,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":180,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":173,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":174,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":201,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":181,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":176,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_Enumeration":184,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":20,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":15,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":209,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":182,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":141,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":220,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":160,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":140,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":105,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":41,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":218,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":35,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":203,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":114,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":192,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":115,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":210,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":145,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":208,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":131,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":194,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":13,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":74,"org.apache.commons.collections4.CollectionUtilsTest.testSizeIsEmpty_PrimitiveArray":185,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":50,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":97,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":61,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":136,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":67,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":196,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":108,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":159,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":191,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":85,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":5,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":179,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":212,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":31,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":189,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":100,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":190,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":199,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":117,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":22,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":23,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":44,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":130,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":86,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":68,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":164,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":177,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":79,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":81,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":101,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":84,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":82,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":163,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":129,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":195,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":37,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testDecorateFactory":183,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":198,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":126},"transformations":[{"failures":[0,1,2],"tindex":"3d13d1b2-242f-11e5-a812-bb6efe7fb4f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:517","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"3d13f8c3-242f-11e5-a812-4deddda9e03c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"lastUsedIterator":"currentIterator","currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:216","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"3d13f8c4-242f-11e5-a812-8339a6fb7d76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"childKey","o":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1002","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"status":-1},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182],"tindex":"3d13f8c5-242f-11e5-a812-b78b530e0197","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[183],"tindex":"3d141fd6-242f-11e5-a812-09b3820fc406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\")"},"status":-1},{"failures":[],"tindex":"3d141fd7-242f-11e5-a812-61726c032b73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}"},"status":-2},{"failures":[],"tindex":"3d141fd8-242f-11e5-a812-0937f1ca025f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int)"},"status":0},{"failures":[],"tindex":"3d141fd9-242f-11e5-a812-810c3dcd598d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-2},{"failures":[],"tindex":"3d141fda-242f-11e5-a812-158af02280fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"variableMap":{"predicates":"childValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:994","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean)"},"status":-2},{"failures":[184,185,186,187],"tindex":"3d1446eb-242f-11e5-a812-575c952819bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"object","value1":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"3d1446ec-242f-11e5-a812-413944d03efb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"3d1446ed-242f-11e5-a812-7bd9f0c6c9b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PredicatedMap<K, V>.validate(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[188],"tindex":"3d1446ee-242f-11e5-a812-f5505d9f8378","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:982","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"status":-1},{"failures":[],"tindex":"3d1446ef-242f-11e5-a812-5b071480631f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:488","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.lang.Integer = java.lang.Integer;\n} "},"variableMap":{"answer":"object","defaultValue":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"3d146e00-242f-11e5-a812-bb82455d84a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:389","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    final org.apache.commons.collections4.map.StaticBucketMap.Lock org.apache.commons.collections4.map.StaticBucketMap.Lock = org.apache.commons.collections4.map.StaticBucketMap.Lock[][int];\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null;\n        org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0;\n    }\n}"},"variableMap":{"size":"length","buckets":"buckets","length":"size","locks":"locks"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:177","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"3d146e01-242f-11e5-a812-2b72e357f2f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"status":-2},{"failures":[189,190,191],"tindex":"3d146e02-242f-11e5-a812-8f62869b11d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)"},"status":-1},{"failures":[],"tindex":"3d146e03-242f-11e5-a812-07355af4235a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":-2},{"failures":[192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"tindex":"3d149514-242f-11e5-a812-bdae0ad3de74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:439","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[],"tindex":"3d149515-242f-11e5-a812-a5576bfa8bbe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:460","type":"CtReturnImpl","sourcecode":"return super.remove(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"3d141fd8-242f-11e5-a812-0937f1ca025f","diffs":[{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"graph":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_data[hashIndex] = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry next()_return ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(next))","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_int i = (data.length) - 1"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}