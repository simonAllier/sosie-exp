{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":44,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":36,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":40,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":6,"org.apache.commons.collections4.SetUtilsTest.testHashCode":53,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":16,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":4,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":39,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":48,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":15,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":20},"transformations":[{"failures":[],"tindex":"729d25f2-47cc-11e5-a691-fb1497c6c177","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:125","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().removeAll(null);\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"729d4d03-47cc-11e5-a691-c99957db5f70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"729d4d04-47cc-11e5-a691-1b09ce091b1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}"},"variableMap":{"key1":"key1","key2":"key1","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:719","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 1) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"729d7415-47cc-11e5-a691-5b1feb0c907e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl","sourcecode":"this.boolean = java.io.ObjectInputStream.readBoolean()"},"variableMap":{"in":"value","purgeValues":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:271","type":"CtAssignmentImpl","sourcecode":"boolean = java.util.Collection<V>.add(((V)(java.lang.Object)))"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"729d7416-47cc-11e5-a691-430e26c96fd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:237","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.start()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":-1},{"failures":[],"tindex":"729d7417-47cc-11e5-a691-63957583ad0d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"variableMap":{"transformed":"map","decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[46],"tindex":"729d7418-47cc-11e5-a691-c349613da6c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll2","coll1":"coll2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[47],"tindex":"729d7419-47cc-11e5-a691-85d1b643f591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyListIterator:57","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.org.apache.commons.collections4.ResettableListIterator))"},"status":-1},{"failures":[],"tindex":"729d9b2a-47cc-11e5-a691-31ba188fb879","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:832","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":0},{"failures":[],"tindex":"729d9b2b-47cc-11e5-a691-738c9662a55d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"e"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:145","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"729d9b2c-47cc-11e5-a691-cfb358f6c99b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:112","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>[]"},"variableMap":{"preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:53","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>[])(org.apache.commons.collections4.Predicate<? super T>[].clone()))"},"status":-2},{"failures":[],"tindex":"729d9b2d-47cc-11e5-a691-819e3cbd9d94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:103","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[48],"tindex":"729dc23e-47cc-11e5-a691-e53c6110bb13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:366","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-1},{"failures":[49,50],"tindex":"729dc23f-47cc-11e5-a691-254eb8e0f6e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:96","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"729dc240-47cc-11e5-a691-a956766a4f21","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:365","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next()"},"status":-2},{"failures":[],"tindex":"729dc241-47cc-11e5-a691-fdb82995e85c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-2},{"failures":[],"tindex":"729dc242-47cc-11e5-a691-23fbb08857ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:672","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[51,52],"tindex":"729dc243-47cc-11e5-a691-c976af37b73e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:186","type":"CtIfImpl","sourcecode":"if ((T[].int) > (int)) {\n    T[][int] = null;\n} "},"status":-1},{"failures":[53],"tindex":"729de954-47cc-11e5-a691-79faeb5291e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:142","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}