{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":9,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":99,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":63,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullValue":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":67,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorImmutability":88,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMakeMap":6,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx4":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveAll":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":82,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutNullKey":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":85,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx4":131,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":84,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRetainAll":37,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":118,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":52,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":61,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":3,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":110,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":95,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRetainAll":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":117,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":13,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":106,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":127,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":101,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":54,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":104,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":100,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":86,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":126,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesClearChangesMap":22,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":62,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":109,"org.apache.commons.collections4.map.LRUMapTest.testLRU":91,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":68,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":114,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":50,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":122,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":94,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":71,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetClearChangesMap":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":0,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":48,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":25,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveAll":32,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":27,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx4":130,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testSet":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":83,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":121,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":49,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":44,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":103,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetClearChangesMap":123,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":72,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":108,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllCollections427":111,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":8,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":112,"org.apache.commons.collections4.functors.AllPredicateTest.nullCollectionToGetInstance":128},"transformations":[{"failures":[],"tindex":"26118d49-2431-11e5-b82a-2fa170e031cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super T, ? extends T>"},"variableMap":{"iTransformer":"defaultTransformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:117","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , org.apache.commons.collections4.Predicate<? super I>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"2611b45a-2431-11e5-b82a-81d95a024739","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1386","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()"},"status":-2},{"failures":[],"tindex":"2611b45b-2431-11e5-b82a-09403b972da6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:118","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"2611db6c-2431-11e5-b82a-1df330f02e72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":-2},{"failures":[],"tindex":"2611db6d-2431-11e5-b82a-3f5c0f79f211","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"child"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:616","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"2611db6e-2431-11e5-b82a-b5cdf6421c4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"2612027f-2431-11e5-b82a-19b6b861d733","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:187","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == null) {\n    return super.createNode(E);\n} "},"status":-1},{"failures":[87,88],"tindex":"26120280-2431-11e5-b82a-313f07938aad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:122","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map size must be 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"set() is not supported\")"},"status":-1},{"failures":[],"tindex":"26120281-2431-11e5-b82a-f14a15e33476","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1149","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.Object[][0]"},"status":-2},{"failures":[89],"tindex":"26120282-2431-11e5-b82a-11fb7286230e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1204","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.Comparable)) {\n    throw new java.lang.ClassCastException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" must be Comparable\"));\n} "},"variableMap":{"dataElement":"key1","o":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:769","type":"CtIfImpl","sourcecode":"if (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 3) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))) {\n    org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"26122993-2431-11e5-b82a-3b51c3be84e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:802","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()))"},"status":-2},{"failures":[90,91,92,93,94,95],"tindex":"26122994-2431-11e5-b82a-3be0f11c92f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"scanUntilRemovable","beforeFirst":"scanUntilRemovable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125],"tindex":"261250a5-2431-11e5-b82a-759b785aee15","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:266","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.SetUniqueList<E>.clear()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"261277b6-2431-11e5-b82a-554ce2cfcf16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:145","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"261277b7-2431-11e5-b82a-7d058c84dfb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1311","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"261277b8-2431-11e5-b82a-6bc5c5c74adb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:242","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.set.ListOrderedSet<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"261277b9-2431-11e5-b82a-d7a23960065d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"newSize","newCapacity":"newSize","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[],"tindex":"26129eca-2431-11e5-b82a-61cb04756a39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"array","i":"i","j":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:114","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"status":0},{"failures":[126,127],"tindex":"26129ecb-2431-11e5-b82a-3f827d12cb2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:211","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[128,129,130,131,132],"tindex":"26129ecc-2431-11e5-b82a-773dd3457612","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:97","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"261277b9-2431-11e5-b82a-d7a23960065d","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_return last","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last = newCurrent","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> newCurrent = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_return ((V)(value))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_return ((K)(key))","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next = n","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":[],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":[],"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":[],"org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map)":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"graph":"branch"}]}]}