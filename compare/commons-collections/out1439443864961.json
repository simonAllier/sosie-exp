{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":48,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":85,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":70,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":86,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":37,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":63,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":76,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":80,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":35,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":21,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":82,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":42,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":53,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":60,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":7,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":2,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":62,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":65},"transformations":[{"failures":[0,1],"tindex":"7df953d3-417c-11e5-9a8f-476ad04331c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:612","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2"},"variableMap":{"data":"data","length":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:177","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-1},{"failures":[],"tindex":"7df97ae4-417c-11e5-9a8f-83e74be81ca7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:113","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().containsAll(java.util.Collection<?>)"},"status":-2},{"failures":[],"tindex":"7df97ae5-417c-11e5-9a8f-b9c54cd9838a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[2,3],"tindex":"7df9c906-417c-11e5-9a8f-314a38d9fb71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:192","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[],"tindex":"7df9c907-417c-11e5-9a8f-bb29b8d3ae2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{')"},"status":0},{"failures":[],"tindex":"7df9c908-417c-11e5-9a8f-553e22a8a3ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:202","type":"CtReturnImpl","sourcecode":"return 1"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"7df9c909-417c-11e5-9a8f-c97a893c280c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"next":"node","node":"node","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"7df9f01a-417c-11e5-9a8f-5f1d2e65ead9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"dataSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"status":-2},{"failures":[],"tindex":"7df9f01b-417c-11e5-9a8f-1dd9029888d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key5","next":"entry","entry":"next","key2":"key3","previous":"next","hashCode":"hashCode","key3":"key4","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"7dfa172c-417c-11e5-9a8f-759317d029fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":0},{"failures":[74,75,76,77,78,79],"tindex":"7dfa172d-417c-11e5-9a8f-b30e64f64766","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"start1","d":"start1","vDown":"vUp","delta":"delta","end2":"k","this":"this","i":"start1","end1":"end2","k":"delta","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"status":-1},{"failures":[80,81,82,83,84,85,86,87],"tindex":"7dfa3e3e-417c-11e5-9a8f-61e956b6fb58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[],"tindex":"7dfa3e3f-417c-11e5-9a8f-7fe5760b730a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:196","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"7dfa3e40-417c-11e5-9a8f-7dcc7d19a39c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"x","node":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1138","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[88],"tindex":"7dfa6551-417c-11e5-9a8f-31a2acc4c325","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-1},{"failures":[],"tindex":"7dfa6552-417c-11e5-9a8f-97de153e32c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:95","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))"},"status":-2},{"failures":[],"tindex":"7dfa6553-417c-11e5-9a8f-d7bec2df2452","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:147","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))"},"status":-2},{"failures":[],"tindex":"7dfa6554-417c-11e5-9a8f-d15bb2295499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}