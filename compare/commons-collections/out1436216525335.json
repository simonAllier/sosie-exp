{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":211,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":174,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":219,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":176,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":52,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":164,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":123,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":183,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":113,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":115,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":134,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":167,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":149,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":191,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":173,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":182,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":141,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":155,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":130,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":204,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":190,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":195,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":24,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":48,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":46,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":69,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":184,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":143,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":127,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":202,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":138,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":168,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":189,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":212,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":142,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":185,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":146,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":216,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":26,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":192,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":166,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":199,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":47,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":156,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":188,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":153,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":144,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":147,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":218,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":9,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPut":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":10,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":158,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":87,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":205,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":163,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":207,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":215,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":214,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":208,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":128,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":136,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":187,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":172,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":148,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":206,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":145,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":217,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":162,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":171,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":157,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":209,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":201,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":165,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":220,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":210,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":186,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":77,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":197,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":7,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":67,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":154,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":111,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":196,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":139},"transformations":[{"failures":[],"tindex":"41a72865-2422-11e5-9f81-db902198fed7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:143","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"variableMap":{"currentIndex":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:559","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"tindex":"41a74f76-2422-11e5-9f81-7da3dc0a48c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"lengthInBits","index":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:231","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"41a74f77-2422-11e5-9f81-a1b82e63eed2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.SetUtils:275","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedSet(java.util.SortedSet<E>)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:138","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":-2},{"failures":[],"tindex":"41a77688-2422-11e5-9f81-1f18dabcee34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"variableMap":{"isLocked":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"41a77689-2422-11e5-9f81-6d5d51c6be96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-2},{"failures":[],"tindex":"41a7768a-2422-11e5-9f81-856fc6c69d13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"status":-2},{"failures":[46,47,48],"tindex":"41a79d9b-2422-11e5-9f81-75b6226e49e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableIterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.ResettableIterator))"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58],"tindex":"41a79d9c-2422-11e5-9f81-a34a1d8130fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[2],"tindex":"41a79d9d-2422-11e5-9f81-f5b523d86e30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1622","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()"},"variableMap":{"current":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:814","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null;\n} else {\n    return null;\n}"},"status":-1},{"failures":[59,60],"tindex":"41a7c4ae-2422-11e5-9f81-49bd3f8646db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"removed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:208","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.removeFromIndex(((C)(java.lang.Object)));\n} "},"status":-1},{"failures":[61,62,63,64,65,66],"tindex":"41a7c4af-2422-11e5-9f81-e3d07f826a71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:200","type":"CtAssignmentImpl","sourcecode":"int[][int] = ++int"},"status":-1},{"failures":[67],"tindex":"41a7c4b0-2422-11e5-9f81-f75987981ffd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:703","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:121","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[68],"tindex":"41a7ebc1-2422-11e5-9f81-9d61f097172e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"41a7ebc2-2422-11e5-9f81-bb2831fc6151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:273","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"41a7ebc3-2422-11e5-9f81-3793f4400538","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[69],"tindex":"41a812d4-2422-11e5-9f81-61358f506b9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:349","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[])"},"status":-1},{"failures":[70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205],"tindex":"41a812d5-2422-11e5-9f81-b51eea139075","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:496","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"header","previous":"header","insertBeforeNode":"header","nodeToInsert":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:98","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createHeaderNode()"},"status":-1},{"failures":[206,207],"tindex":"41a839e6-2422-11e5-9f81-c33aa10fbda4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1044","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V)"},"status":-1},{"failures":[133,135,137,141,130,142,143,144,145,146,147,148,151,152,153,155,184],"tindex":"41a839e7-2422-11e5-9f81-d5db7a9fd1b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:339","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1},{"failures":[208,209,210,211,212,213,214,215,216,217,218,219,220,221],"tindex":"41a839e8-2422-11e5-9f81-0329c13b277a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"41a77688-2422-11e5-9f81-1f18dabcee34","diffs":[{"variables":{"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":["org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry.org.apache.commons.collections4.map.ListOrderedMap$ListOrderedMapEntry(org.apache.commons.collections4.map.ListOrderedMap,K)_this.parent = parent"]},"type":"variable"}]}]}