{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":25,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":21,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":48,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":0,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":15,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":51,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Array":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":10,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Map":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":36,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":16,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":39,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":57,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":43,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":19,"org.apache.commons.collections4.CollectionUtilsTest.testSize_List":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":26,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":9,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":6,"org.apache.commons.collections4.CollectionUtilsTest.testSize_PrimitiveArray":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":32,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":28,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":30,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":52},"transformations":[{"failures":[0,1],"tindex":"60a0cf20-2e24-11e5-9a0e-cf5d56be70b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"status":-1},{"failures":[],"tindex":"60a3b551-2e24-11e5-9a0e-2578acba32ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:72","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[],"tindex":"60a3b552-2e24-11e5-9a0e-71ad712c57db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:244","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"60a3dc63-2e24-11e5-9a0e-8b13739120ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.add(this, java.util.List<java.util.Collection<E>>, E)"},"status":-2},{"failures":[],"tindex":"60a3dc64-2e24-11e5-9a0e-c1260835f27d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1342","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"key=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1382","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',').append(' ')"},"status":1},{"failures":[],"tindex":"60a3dc65-2e24-11e5-9a0e-c508b6f4aab9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:360","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"60a3dc66-2e24-11e5-9a0e-cdf525dd9407","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"size":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:515","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":1},{"failures":[],"tindex":"60a3dc67-2e24-11e5-9a0e-079759d4d6d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1208","type":"CtWhileImpl","sourcecode":"while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"h","parent":"h","left":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:554","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"60a40378-2e24-11e5-9a0e-03ea8d56d346","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:78","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final int int = int + int;\n    final int int = int + int;\n    if (int >= int) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if ((java.lang.String == null) || (int >= int)) {\n        char = 0;\n    } else {\n        char = java.lang.String.charAt(int);\n    }\n    if (char != char) {\n        final int int = char ^ char;\n        return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n    } \n    if (char != 0) {\n        boolean = false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"60a40379-2e24-11e5-9a0e-357138c503b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:166","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() method is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"status":-2},{"failures":[],"tindex":"60a42a8a-2e24-11e5-9a0e-c3282962f9c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:273","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:59","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2},{"failures":[48,49],"tindex":"60a42a8b-2e24-11e5-9a0e-83cd07873f0b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"60a42a8c-2e24-11e5-9a0e-ebf034f836ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl","sourcecode":"return (int) - 1"},"variableMap":{"nextIndex":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1359","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"60a42a8d-2e24-11e5-9a0e-910845b92883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:71","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated())"},"status":-2},{"failures":[65,66,67],"tindex":"60a4519e-2e24-11e5-9a0e-c5deafc4dc92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"60a4519f-2e24-11e5-9a0e-6331b30454b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"previous","insertBeforeNode":"previous","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:510","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[68],"tindex":"60a451a0-2e24-11e5-9a0e-799437d308eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()"},"status":-1},{"failures":[],"tindex":"60a478b1-2e24-11e5-9a0e-cdf6d7819bdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:586","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"next","entry":"next","previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:258","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"60a478b2-2e24-11e5-9a0e-a9a71d16a3da","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","rightChild":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:506","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"60a49fc3-2e24-11e5-9a0e-5b4d58f3a8d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.Predicate"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"60a3dc64-2e24-11e5-9a0e-c1260835f27d","diffs":[{"variables":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()_parent","org.apache.commons.collections4.map.Flat3Map.void convertToMap()_delegateMap","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.int size()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"],"org.apache.commons.collections4.map.HashedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.int hashCode()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.boolean equals(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"],"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_parent"],"org.apache.commons.collections4.map.LRUMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()_parent"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.boolean equals(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_key","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.int hashCode()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.K getKey()_parent","org.apache.commons.collections4.map.AbstractHashedMap$KeySet.boolean contains(java.lang.Object)_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry currentEntry()_previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry.V getValue()_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_value","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.boolean contains(java.lang.Object)_parent"]},"type":"variable"}]},{"transformation":"60a3dc66-2e24-11e5-9a0e-cdf525dd9407","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount"],"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount"],"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_modCount"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1"]},"type":"branch"}]}]}