{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":60,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":16,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testComparator2":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":54,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":12,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":23,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":29,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":18,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":41,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.bag.TreeBagTest.testEqualsNull":5,"org.apache.commons.collections4.bag.TransformedBagTest.testEqualsNull":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":56,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEqualsNull":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFirstKey":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFirstKey":40,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEqualsNull":9,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":53,"org.apache.commons.collections4.bag.PredicatedBagTest.testEqualsNull":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEqualsNull":3,"org.apache.commons.collections4.bag.CollectionBagTest.testEqualsNull":0,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":21,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":20,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":50,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEqualsNull":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testFirstKey":39,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEqualsNull":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":14,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":58,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":62,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":43,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":59,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":49,"org.apache.commons.collections4.bag.HashBagTest.testEqualsNull":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":61,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":28,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":45,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"6e467595-259e-11e5-ace6-418fce091170","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:543","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"6e469ca6-259e-11e5-ace6-c3f687814d0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TransformedBag:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>"},"variableMap":{"decorated":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:110","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((org.apache.commons.collections4.Bag<E>)(decorated()))"},"status":-1},{"failures":[],"tindex":"6e469ca7-259e-11e5-ace6-f71d886d56ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The type to check instanceof must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:113","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[33,34,35,36],"tindex":"6e469ca8-259e-11e5-ace6-cf9a125a48e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:535","type":"CtReturnImpl","sourcecode":"return (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 4) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))"},"status":-1},{"failures":[37,38,39,40],"tindex":"6e46c3b9-259e-11e5-ace6-3f9e788e98bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:140","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).firstKey()"},"status":-1},{"failures":[],"tindex":"6e46c3ba-259e-11e5-ace6-d1234f03f054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"wrappedIteratorIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:150","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-2},{"failures":[],"tindex":"6e46c3bb-259e-11e5-ace6-9b79a3c5629d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:191","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:147","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = java.util.List<E>"},"status":-2},{"failures":[],"tindex":"6e46c3bc-259e-11e5-ace6-dfa8b94bdf5d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-2},{"failures":[41,42],"tindex":"6e46c3bd-259e-11e5-ace6-c1d1621b367a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()"},"status":-1},{"failures":[],"tindex":"6e46c3be-259e-11e5-ace6-876badda4d02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:393","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"6e46eacf-259e-11e5-ace6-bb9fde2d3320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"6e46ead0-259e-11e5-ace6-3d3a4922dbd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"link":"header","header":"before","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:128","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"6e46ead1-259e-11e5-ace6-25f11ed290d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1159","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"6e46ead2-259e-11e5-ace6-f9738088bdce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":-2},{"failures":[43,44,45,46,47],"tindex":"6e46ead3-259e-11e5-ace6-b103f0dc91a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[48,49,50],"tindex":"6e46ead4-259e-11e5-ace6-69a312cc3169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"6e4711e5-259e-11e5-ace6-71b49cb6dbba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.CursorableLinkedList<E>.cursor(0)"},"status":0},{"failures":[],"tindex":"6e4711e6-259e-11e5-ace6-83b847e6d3cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:594","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(':')"},"variableMap":{"buf":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\").append(java.util.AbstractMap<K, V>.size())"},"status":0},{"failures":[],"tindex":"6e4711e7-259e-11e5-ace6-7756e621e206","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this)"},"variableMap":{"cloned":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:398","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 2 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 1 :\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n    case 0 :\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"6e4711e8-259e-11e5-ace6-3f5456840e00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:278","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{"n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:290","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"6e4711e6-259e-11e5-ace6-83b847e6d3cb","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"],"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"],"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":["org.apache.commons.collections4.trie.AbstractBitwiseTrie.java.lang.String toString() -> org.apache.commons.collections4.trie.AbstractPatriciaTrie.int size()"]},"type":"graph"}]},{"transformation":"6e4711e7-259e-11e5-ace6-7756e621e206","diffs":[{"nodes":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.void putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V setValue(V)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.Flat3Map.java.util.Set entrySet()"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.Flat3Map.java.util.Set entrySet() -> org.apache.commons.collections4.map.Flat3Map.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.Flat3Map.int size()","org.apache.commons.collections4.map.Flat3Map.void convertToMap() -> org.apache.commons.collections4.map.AbstractHashedMap.void putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.void putAll(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.Flat3Map.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.Flat3Map.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V)","org.apache.commons.collections4.map.AbstractHashedMap.void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V setValue(V)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.boolean isEqualKey(java.lang.Object,java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap.void _putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.Flat3Map_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap_void__putAll(java.util.Map).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_putAll(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap_void__putAll(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractHashedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.AbstractHashedMap_void_updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,V).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void__putAll(java.util.Map).l2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).t1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_setValue(V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.Flat3Map_java.util.Set_entrySet().b"]},"type":"branch"}]},{"transformation":"6e4711e5-259e-11e5-ace6-71b49cb6dbba","diffs":[{"nodes":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":["org.apache.commons.collections4.list.CursorableLinkedList.void registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)","org.apache.commons.collections4.list.CursorableLinkedList$Cursor.org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)","org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)"]},"edges":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":["org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int) -> org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)","org.apache.commons.collections4.list.CursorableLinkedList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.list.CursorableLinkedList.java.util.ListIterator listIterator()","org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int) -> org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)","org.apache.commons.collections4.list.CursorableLinkedList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int)","org.apache.commons.collections4.list.CursorableLinkedList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator.org.apache.commons.collections4.list.AbstractLinkedList$LinkedListIterator(org.apache.commons.collections4.list.AbstractLinkedList,int)","org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int) -> org.apache.commons.collections4.list.CursorableLinkedList.void registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor)","org.apache.commons.collections4.list.CursorableLinkedList.org.apache.commons.collections4.list.CursorableLinkedList$Cursor cursor(int) -> org.apache.commons.collections4.list.CursorableLinkedList$Cursor.org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":["org.apache.commons.collections4.list.CursorableLinkedList_void_registerCursor(org.apache.commons.collections4.list.CursorableLinkedList$Cursor).b","org.apache.commons.collections4.list.CursorableLinkedList$Cursor_org.apache.commons.collections4.list.CursorableLinkedList$Cursor(org.apache.commons.collections4.list.CursorableLinkedList,int).b","org.apache.commons.collections4.list.CursorableLinkedList_org.apache.commons.collections4.list.CursorableLinkedList$Cursor_cursor(int).b"]},"type":"branch"}]}]}