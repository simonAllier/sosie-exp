{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":111,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":108,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":138,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":68,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":163,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":114,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":113,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":112,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":137,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":89,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":120,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":166,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":168,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":164,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":169,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":69,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":122,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":9,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":98,"org.apache.commons.collections4.map.HashedMapTest.testFailFastValues":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":167,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":4,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":135,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":100,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":134,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":133,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":74,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":99,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":118,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":162,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":130,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":0,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":131,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":86,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":21,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":161,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":95,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":20,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":141,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":81,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":126,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":152,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":116,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":156,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":157,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":94,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":23,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":154,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":155,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":153,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":124,"org.apache.commons.collections4.map.HashedMapTest.testClone":59,"org.apache.commons.collections4.map.HashedMapTest.testFailFastKeySet":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":36,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":142,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":53,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":2,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":97,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":71,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":58,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":139,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":145,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastKeySet":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":115,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":148,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":14,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":76,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":144,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":121,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":78,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":146,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":32,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":80,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":110,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":143,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":150,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":73,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":160,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":117,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":140,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":24,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":70,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":127,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":34,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":25,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":52,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":15,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":11,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":159,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":82,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":7,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":8,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":77,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":123,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":149,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastValues":88,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":91,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":170},"transformations":[{"failures":[],"tindex":"814cf895-24d4-11e5-8617-71da566eec80","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"814d1fa6-24d4-11e5-8617-35c958339faf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-1},{"failures":[],"tindex":"814d46b7-24d4-11e5-8617-5f98318b1d12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-2},{"failures":[],"tindex":"814d46b8-24d4-11e5-8617-b52653a1e129","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:180","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int % 2) == 0 ? int : int + 1) / 2"},"variableMap":{"sum":"beginIndex2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:80","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-2},{"failures":[],"tindex":"814d46b9-24d4-11e5-8617-016ad7a4093f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>"},"status":-2},{"failures":[],"tindex":"814d46ba-24d4-11e5-8617-b334f3f6e4ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:305","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":0},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158],"tindex":"814d6dcb-24d4-11e5-8617-35265e1a63fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1183","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"last":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:536","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> , int , org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(K) , V)"},"status":-1},{"failures":[],"tindex":"814d6dcc-24d4-11e5-8617-3185ce841b69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:247","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:263","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))"},"status":-2},{"failures":[],"tindex":"814d6dcd-24d4-11e5-8617-8b64baba1ace","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[5],"tindex":"814d94de-24d4-11e5-8617-49374424210b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1022","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[],"tindex":"814dbbef-24d4-11e5-8617-cb83d26f71f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1560","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapEntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"status":-2},{"failures":[],"tindex":"814dbbf0-24d4-11e5-8617-0dc97c000130","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:577","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>, 0)"},"status":-2},{"failures":[],"tindex":"814dbbf1-24d4-11e5-8617-874e43817e63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"key3","this":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[159,160,161],"tindex":"814de302-24d4-11e5-8617-437a379163a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"status":-1},{"failures":[],"tindex":"814de303-24d4-11e5-8617-c329f00f0c3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:201","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"variableMap":{"entry":"header","header":"header","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":-2},{"failures":[],"tindex":"814de304-24d4-11e5-8617-2d5e02b7dd81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-2},{"failures":[],"tindex":"814de305-24d4-11e5-8617-9bbb449433c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:266","type":"CtIfImpl","sourcecode":"if (V == null) {\n    throw new java.lang.NullPointerException(\"null values not allowed\");\n} "},"status":-2},{"failures":[],"tindex":"814de306-24d4-11e5-8617-3d6d61add7a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"status":0},{"failures":[162,163,164,165,166,167,168,169,150,151],"tindex":"814e0a17-24d4-11e5-8617-8f5c1adde35c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1825","type":"CtReturnImpl","sourcecode":"return int < 0"},"variableMap":{"ret":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:217","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = java.lang.Object.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 2 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n        case 1 :\n            if (((int) == int) && (java.lang.Object.equals(K))) {\n                return true;\n            } \n    }\n} "},"status":-1},{"failures":[170],"tindex":"814e0a18-24d4-11e5-8617-7baefbc7eb67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:279","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[] , int)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"814cf895-24d4-11e5-8617-71da566eec80","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":["org.apache.commons.collections4.list.CursorableLinkedList.void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node) -> org.apache.commons.collections4.list.CursorableLinkedList.void broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList$Node)"]},"type":"graph"}]},{"transformation":"814de306-24d4-11e5-8617-3d6d61add7a1","diffs":[{"nodes":{"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx":["org.apache.commons.collections4.iterators.LoopingListIterator.void _reset()"]},"edges":{"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx":["org.apache.commons.collections4.iterators.LoopingListIterator.org.apache.commons.collections4.iterators.LoopingListIterator(java.util.List) -> org.apache.commons.collections4.iterators.LoopingListIterator.void _reset()"]},"type":"graph"}]}]}