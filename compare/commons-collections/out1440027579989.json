{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":80,"org.apache.commons.collections4.CollectionUtilsTest.union":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.list.GrowthListTest.testFullListSerialization":87,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":11,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":25,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":23,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":72,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":68,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":21,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":33,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":17,"org.apache.commons.collections4.CollectionUtilsTest.get":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":62,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListSerialization":93,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":44,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":38,"org.apache.commons.collections4.map.LRUMapTest.testClone":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":60,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":5,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":81,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":3,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":19,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":7,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":40,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":66,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.map.HashedMapTest.testClone":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":95,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":42,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListSerialization":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":99,"org.apache.commons.collections4.CollectionUtilsTest.intersection":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":70,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":71,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":9,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListSerialization":94,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":75,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListSerialization":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":69,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":90,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":53,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":85,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":22,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":84,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":32,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.CollectionUtilsTest.getCardinalityMap":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":34,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":65,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":36,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":18,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":58,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":10,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":39,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.LinkedMapTest.testClone":54,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListSerialization":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":77,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":41,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListSerialization":97},"transformations":[{"failures":[],"tindex":"8f3ca660-46cb-11e5-8736-6920e0e109d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"modified","changed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:747","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0,1,2,3],"tindex":"8f3ca661-46cb-11e5-8736-4b67357d57e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"8f3ccd72-46cb-11e5-8736-9f1cc4faccd3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:440","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    final java.lang.Integer java.lang.Integer = java.util.Map<O, java.lang.Integer>.get(O);\n    if (java.lang.Integer == null) {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(1));\n    } else {\n        java.util.Map<O, java.lang.Integer>.put(O, java.lang.Integer.valueOf(((java.lang.Integer.intValue()) + 1)));\n    }\n}"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"8f3ccd73-46cb-11e5-8736-6ba04035958e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:344","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.remove(java.util.Iterator<?>.next(), 1);\n        boolean = boolean || boolean;\n    }\n} "},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51],"tindex":"8f3ccd74-46cb-11e5-8736-3f6626fd2839","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"from","replacement":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"status":-1},{"failures":[],"tindex":"8f3ccd75-46cb-11e5-8736-81c7a6517989","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:452","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"8f3ccd76-46cb-11e5-8736-5fc84042aec4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-1},{"failures":[],"tindex":"8f3cf487-46cb-11e5-8736-7500d644f0d6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"composite","i":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[65,66,67,68,69,70,71,37],"tindex":"8f3cf488-46cb-11e5-8736-ada11d0e154b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)"},"status":-1},{"failures":[],"tindex":"8f3cf489-46cb-11e5-8736-ef4b46675445","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"leastIndex":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":0},{"failures":[],"tindex":"8f3cf48a-46cb-11e5-8736-f9473d45357d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:214","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{"currentIterator":"nextIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-2},{"failures":[72,73],"tindex":"8f3cf48b-46cb-11e5-8736-f791288db66d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K), V)"},"status":-1},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"8f3d1b9c-46cb-11e5-8736-9f304b2b43b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} "},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl","sourcecode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}"},"status":-1},{"failures":[86],"tindex":"8f3d1b9d-46cb-11e5-8736-05262e2722f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"8f3d1b9e-46cb-11e5-8736-5f3bf51793aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:174","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    return null;\n} "},"variableMap":{"m":"start","n":"diag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.sequence.SequencesComparator.Snake(int , int , int)"},"status":-2},{"failures":[],"tindex":"8f3d1b9f-46cb-11e5-8736-e900b84c5634","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"8f3d1ba0-46cb-11e5-8736-33e7e92f41e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:282","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))))"},"status":-2},{"failures":[87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"8f3d42b1-46cb-11e5-8736-2969d4809974","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"8f3d42b2-46cb-11e5-8736-6fc5acac39bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[99,100,45,47,49,50,51],"tindex":"8f3d42b3-46cb-11e5-8736-754d2d6e9353","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"parent","rightChild":"child","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:649","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}