{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":34,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":45,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":62,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":30,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testToString":9,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":37,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":50,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":48,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testToString":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":70,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":24,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":42,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":38,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":65,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":60,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":0,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":35,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSimpleSerialization":74,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":51,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":3,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":27,"org.apache.commons.collections4.ClosureUtilsTest.testChainedClosure":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":39,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":33,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":67,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":28,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":1,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":68},"transformations":[{"failures":[0],"tindex":"4c42c991-41f0-11e5-9889-f386ce9d8ef6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:159","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:811","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[],"tindex":"4c4588b2-41f0-11e5-9889-615acaefc5be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:382","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[1],"tindex":"4c4588b3-41f0-11e5-9889-2fa78533171e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"4c45afc4-41f0-11e5-9889-6f4c434a489f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = null"},"variableMap":{"lastUsedIterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()"},"status":-1},{"failures":[],"tindex":"4c45afc5-41f0-11e5-9889-ffe172847673","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:147","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[8],"tindex":"4c45afc6-41f0-11e5-9889-0dc589dea47d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:71","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<org.apache.commons.collections4.Closure<E>>.size()) == 0) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"4c45afc7-41f0-11e5-9889-09a3a059a7a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:95","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"4c45afc8-41f0-11e5-9889-c9de595d5bad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:253","type":"CtReturnImpl","sourcecode":"return \"MultiKey\" + (java.util.Arrays.toString(K[]))"},"status":-2},{"failures":[9,10,11],"tindex":"4c45afc9-41f0-11e5-9889-87f01bdc400b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl","sourcecode":"return \"{}\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey()).append('=').append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue()).toString()"},"status":-1},{"failures":[],"tindex":"4c45afca-41f0-11e5-9889-c19034e19d43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:94","type":"CtIfImpl","sourcecode":"if (char != char) {\n    final int int = char ^ char;\n    return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int);\n} "},"status":-2},{"failures":[],"tindex":"4c45d6db-41f0-11e5-9889-8d02324ac3f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:163","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().hashCode()"},"status":-2},{"failures":[],"tindex":"4c45d6dc-41f0-11e5-9889-0b94820cbd06","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:737","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"4c45d6dd-41f0-11e5-9889-97552cd714b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:416","type":"CtReturnImpl","sourcecode":"return this.java.util.Map<K, V>[][int].remove(java.lang.Object)"},"variableMap":{"composite":"key","i":"hash3","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22],"tindex":"4c45d6de-41f0-11e5-9889-a57452b0cf9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:502","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    java.io.ObjectOutputStream.writeObject(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey());\n    java.io.ObjectOutputStream.writeInt(java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue().int);\n}"},"status":-1},{"failures":[23,24,25,26,27,28,29,30,31,32],"tindex":"4c45d6df-41f0-11e5-9889-8bc5f8c70afa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:440","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"4c45d6e0-41f0-11e5-9889-053284e39429","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:343","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"4c45d6e1-41f0-11e5-9889-41f2601c6928","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"4c45fdf2-41f0-11e5-9889-434f11f180eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"4c45fdf3-41f0-11e5-9889-e57cfa1c690b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:292","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[73,74],"tindex":"4c45fdf4-41f0-11e5-9889-c39d76969dcb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}