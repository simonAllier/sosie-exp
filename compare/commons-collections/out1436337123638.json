{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":16,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":29,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":57,"org.apache.commons.collections4.ListUtilsTest.testHashCode":93,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":38,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":65,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":60,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":20,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":35,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":66,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionReturnsFalse":88,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":91,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":40,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":25,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":51,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":37,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":41,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":62,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":32,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":90,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":34,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":4,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":33,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":75,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":72,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":5,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":42,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":85,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":84,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection2":86,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":74,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":64,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":10,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":2,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":30,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":68,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":50,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":26,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":56,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":67,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":69,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":52,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollection":87,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":77,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":19,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":71,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapClear":1,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiClear":0,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":73,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":70,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":59,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":83,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":89,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":49,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":53},"transformations":[{"failures":[0,1],"tindex":"0bd84862-253b-11e5-97b1-711fa5d89f8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"0bd86f73-253b-11e5-97b1-7d4bcd3de133","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:717","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n} "},"variableMap":{"canRemove":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    boolean = true;\n} "},"status":-1},{"failures":[],"tindex":"0bd86f74-253b-11e5-97b1-3f5e88996db4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:99","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[75,76,77,78,79,80,81,82,83,84,85],"tindex":"0bd86f75-253b-11e5-97b1-51e108f8c043","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:518","type":"CtAssignmentImpl","sourcecode":"this.java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>"},"status":-1},{"failures":[],"tindex":"0bd89686-253b-11e5-97b1-bff1c3b11536","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:960","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"dataElement":"dataElement","deletedNode":"y","replacement":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}"},"status":-2},{"failures":[],"tindex":"0bd89687-253b-11e5-97b1-fb87e35226e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:172","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"0bd89688-253b-11e5-97b1-b52a10590f63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"hashCode","currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:614","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K , K), V)"},"status":-2},{"failures":[],"tindex":"0bd8bd99-253b-11e5-97b1-895d4f59d754","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.TransformedCollection:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(java.util.Collection<? extends E>))"},"variableMap":{"coll":"coll","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"0bd8bd9a-253b-11e5-97b1-2b78e76b45cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:310","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][int]"},"status":-2},{"failures":[],"tindex":"0bd8bd9b-253b-11e5-97b1-eb1b066b9780","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:590","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"0bd8bd9c-253b-11e5-97b1-39878afab276","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"root","previous":"root","left":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"0bd8bd9d-253b-11e5-97b1-a797c8634e2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:70","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.collections4.Predicate<? super T>.evaluate(T))"},"status":-2},{"failures":[],"tindex":"0bd8e4ae-253b-11e5-97b1-3106c1d86f06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"0bd8e4af-253b-11e5-97b1-f192c9c0deee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1024","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values()"},"status":0},{"failures":[],"tindex":"0bd8e4b0-253b-11e5-97b1-2196d6c4fcc5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"0bda4441-253b-11e5-97b1-2912695c62c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:383","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.Bag<?>.getCount(E)"},"status":-2},{"failures":[86,87,88,89],"tindex":"0bda6b52-253b-11e5-97b1-776d2f272064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:411","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"variableMap":{"coll2":"b","coll1":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"status":-1},{"failures":[90,91,92],"tindex":"0bda6b53-253b-11e5-97b1-cfb530c4f875","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtInvocationImpl","sourcecode":"java.util.Collections.<K,V>emptyMap()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated()"},"status":-1},{"failures":[93],"tindex":"0bda6b54-253b-11e5-97b1-d1a05f884161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:288","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"0bda6b55-253b-11e5-97b1-f7725fe2a264","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:508","type":"CtIfImpl","sourcecode":"if (java.lang.Long == null) {\n    java.lang.Long = java.lang.Long;\n} "},"variableMap":{"answer":"childKey","defaultValue":"childKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1002","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0bd8e4af-253b-11e5-97b1-f192c9c0deee","diffs":[{"nodes":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()"]},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values.int size() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.Flat3Map$Values.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values()","org.apache.commons.collections4.map.Flat3Map$Values.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.java.util.Iterator iterator()","org.apache.commons.collections4.map.Flat3Map.java.util.Collection values() -> org.apache.commons.collections4.map.Flat3Map.java.util.Collection values()","org.apache.commons.collections4.map.AbstractHashedMap$Values.int size() -> org.apache.commons.collections4.map.AbstractHashedMap$Values.int size()","org.apache.commons.collections4.map.Flat3Map.java.util.Collection values() -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Collection values()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":["org.apache.commons.collections4.map.AbstractHashedMap$Values_int_size().b","org.apache.commons.collections4.map.Flat3Map$Values_java.util.Iterator_iterator().t1"]},"type":"branch"}]}]}