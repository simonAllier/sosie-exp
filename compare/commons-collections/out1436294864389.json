{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":1,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":12,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":4,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testMapIteratorSet":7,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":5,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":14,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testEmptyMapIterator":6,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":8,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":22,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":10,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":9,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":20,"org.apache.commons.collections4.list.TreeListTest.testRemove":15,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":11,"org.apache.commons.collections4.list.TreeListTest.testBug35258":13,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":18,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":24,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":17,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":19,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapClear":25,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnmodifiable":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":2,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":16},"transformations":[{"failures":[],"tindex":"a75ca2a9-24d8-11e5-b685-afed3b930719","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:207","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    java.util.Iterator<? extends E>.remove();\n    return ;\n} "},"status":-2},{"failures":[],"tindex":"a75cc9ba-24d8-11e5-b685-15951472495f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[0,1,2],"tindex":"a75cc9bb-24d8-11e5-b685-4ff0f17a2f12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:360","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"a75cc9bc-24d8-11e5-b685-a97fcd058b92","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1040","type":"CtIfImpl","sourcecode":"if (K == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"a75cc9bd-24d8-11e5-b685-67160b9978e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:424","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[],"tindex":"a75cc9be-24d8-11e5-b685-b57620fd75c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1484","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<K>.nextEntry().getKey()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:158","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<K>.next()"},"status":-2},{"failures":[3],"tindex":"a75cc9bf-24d8-11e5-b685-5d5987391c7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl","sourcecode":"return java.util.SortedSet<E>"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":-1},{"failures":[],"tindex":"a75cc9c0-24d8-11e5-b685-67c14ab095c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"variableMap":{"this":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1122","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clone();\n} "},"status":-2},{"failures":[4,5,6,7],"tindex":"a75cf0d1-24d8-11e5-b685-1ddc46b26e80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"valueTransformer cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:97","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-1},{"failures":[],"tindex":"a75cf0d2-24d8-11e5-b685-197e0335e681","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1608","type":"CtLocalVariableImpl","sourcecode":"O O = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:81","type":"CtLocalVariableImpl","sourcecode":"final O O = this.org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I)"},"status":-2},{"failures":[],"tindex":"a75cf0d3-24d8-11e5-b685-1da1b9daa4c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:253","type":"CtReturnImpl","sourcecode":"return \"MultiKey\" + (java.util.Arrays.toString(K[]))"},"status":0},{"failures":[],"tindex":"a75cf0d4-24d8-11e5-b685-b573ec3ba5a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"status":0},{"failures":[],"tindex":"a75cf0d5-24d8-11e5-b685-7f44a5f2455d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"a75cf0d6-24d8-11e5-b685-4362e8ac63de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:92","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1591","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<? extends O> == null) || (java.lang.Iterable<? extends O> == null)) {\n    throw new java.lang.IllegalArgumentException(\"The collections must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"a75d17e7-24d8-11e5-b685-b395a0d951cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:109","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:806","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[8,9,10,11,12],"tindex":"a75d17e8-24d8-11e5-b685-5faf78f98997","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:142","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    boolean[][int] = !(boolean[][int]);\n} "},"status":-1},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"a75d17e9-24d8-11e5-b685-5fa709966392","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1120","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null"},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:262","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.remove(int)"},"status":-1},{"failures":[],"tindex":"a75d17ea-24d8-11e5-b685-af62e678618f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"status":-2},{"failures":[25],"tindex":"a75d17eb-24d8-11e5-b685-5593b160d6d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a75cf0d4-24d8-11e5-b685-b573ec3ba5a5","diffs":[{"branches":{"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.LRUMap_void_moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry).e1","org.apache.commons.collections4.map.LRUMap_void_moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry).e3","org.apache.commons.collections4.map.LRUMap_void_moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry).e2","org.apache.commons.collections4.map.LRUMap_void_moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry).t1"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.map.Flat3MapTest.testClone4":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap.void init()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap.void init()"],"org.apache.commons.collections4.map.LRUMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()"],"org.apache.commons.collections4.map.HashedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractHashedMap.void init()"],"org.apache.commons.collections4.map.LinkedMapTest.testClone":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap clone() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()"]},"type":"graph"}]},{"transformation":"a75cf0d5-24d8-11e5-b685-7f44a5f2455d","diffs":[{"nodes":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap.void purge() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purge()","org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractReferenceMap.void purgeBeforeRead()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap) -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.map.AbstractReferenceMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractReferenceMap.int size() -> org.apache.commons.collections4.map.AbstractReferenceMap.int size()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext() -> org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().t1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractReferenceMap_org.apache.commons.collections4.MapIterator_mapIterator().b","org.apache.commons.collections4.map.AbstractReferenceMap_int_size().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().l3","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractReferenceMap_void_purgeBeforeRead().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_boolean_nextNull().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator_org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceMapIterator(org.apache.commons.collections4.map.AbstractReferenceMap).b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_void_checkMod().b","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator_void_checkMod().e1","org.apache.commons.collections4.map.AbstractReferenceMap_void_purge().b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_if ((key) == (org.apache.commons.collections4.map.AbstractHashedMap.NULL)) {    return null"],"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_int i = index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.int size()_return size","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> e = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean nextNull()_return ((nextKey) == null) || ((nextValue) == null)","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_this.parent = parent"]},"type":"variable"}]}]}