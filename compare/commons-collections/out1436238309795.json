{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":51,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":43,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":36,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":37,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":50,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":13,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":39,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":28,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":29,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":30,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":22,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":42,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":17,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":44,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":11,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":32,"org.apache.commons.collections4.CollectionUtilsTest.get":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":5,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":52,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":38,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":9,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":18,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":2,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":15,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullValue":7,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testRemove":20,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":14,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":23,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":3,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":34,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":10,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":12,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":45,"org.apache.commons.collections4.CollectionUtilsTest.get1":26,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":47},"transformations":[{"failures":[],"tindex":"fa3247b4-2454-11e5-b788-7304d19f8398","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.list()"},"status":-2},{"failures":[0],"tindex":"fa326ec5-2454-11e5-b788-53e25eb7189b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl","sourcecode":"boolean = boolean || boolean"},"variableMap":{"added":"changed","changed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:218","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"fa326ec6-2454-11e5-b788-0717867272ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()"},"status":-2},{"failures":[],"tindex":"fa326ec7-2454-11e5-b788-ad135134cf8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:100","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"fa326ec8-2454-11e5-b788-f7853bfa0baa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:665","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} else {\n    while (int < int) {\n        int <<= 1;\n    }\n    if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n    } \n}"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"index","newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:401","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} else {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"fa326ec9-2454-11e5-b788-510c19845a18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[1,2,3,4,5],"tindex":"fa3295da-2454-11e5-b788-b9ac6986c557","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"y"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1176","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[6,7,8,9],"tindex":"fa3295db-2454-11e5-b788-0bcdc7de76e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:532","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isInternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an internal Entry!\"));\n} "},"variableMap":{"root":"found","h":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:149","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n}"},"status":-1},{"failures":[],"tindex":"fa3295dc-2454-11e5-b788-415ead862ba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"status":-2},{"failures":[],"tindex":"fa3295dd-2454-11e5-b788-050e43f95aa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:148","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:395","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"fa3295de-2454-11e5-b788-47879c4e4cad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":0},{"failures":[10,11,12,13,14,15,16,17,18,19],"tindex":"fa32bcef-2454-11e5-b788-b1e49aa96606","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-1},{"failures":[20],"tindex":"fa32bcf0-2454-11e5-b788-d1c7c8317f71","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:219","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(int)"},"status":-1},{"failures":[21,22,23],"tindex":"fa32bcf1-2454-11e5-b788-9142cae106f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:240","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"status":-1},{"failures":[],"tindex":"fa32bcf2-2454-11e5-b788-ef2deaaf9fe2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:304","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"n","newNode":"n","n":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:337","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"fa32bcf3-2454-11e5-b788-a94c0ff76a96","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:64","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"fa32bcf4-2454-11e5-b788-cb5eb866e549","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:80","type":"CtInvocationImpl","sourcecode":"java.util.Queue<E>.clear()"},"status":-2},{"failures":[24,25,26,27],"tindex":"fa32bcf5-2454-11e5-b788-4deeb5dabd5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1261","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"fa32e406-2454-11e5-b788-d10e5285a91c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}"},"status":-1},{"failures":[45,46,47,48,49,50,51,52,53],"tindex":"fa32e407-2454-11e5-b788-6dc2da17b23e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"total","newCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:461","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().values()) {\n    int += org.apache.commons.collections4.CollectionUtils.size(java.lang.Object);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"fa326ec7-2454-11e5-b788-ad135134cf8c","diffs":[{"nodes":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)","org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue()","org.apache.commons.collections4.keyvalue.TiedMapEntry.K getKey()"]},"edges":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.K getKey()","org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object) -> org.apache.commons.collections4.map.SingletonMap.boolean isEqualKey(java.lang.Object)","org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue() -> org.apache.commons.collections4.map.SingletonMap.V get(java.lang.Object)"],"org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object)":["org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.TiedMapEntry.V getValue()","org.apache.commons.collections4.keyvalue.TiedMapEntry.boolean equals(java.lang.Object) -> org.apache.commons.collections4.keyvalue.TiedMapEntry.K getKey()"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.map.SingletonMapTest.testEntrySetContains1":["org.apache.commons.collections4.map.SingletonMap_boolean_isEqualKey(java.lang.Object).b","org.apache.commons.collections4.map.SingletonMap_V_get(java.lang.Object).t1","org.apache.commons.collections4.keyvalue.TiedMapEntry_K_getKey().b","org.apache.commons.collections4.map.SingletonMap_V_get(java.lang.Object).b","org.apache.commons.collections4.keyvalue.TiedMapEntry_V_getValue().b"]},"type":"branch"}]},{"transformation":"fa3295de-2454-11e5-b788-47879c4e4cad","diffs":[{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.<T> org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.OrPredicate.org.apache.commons.collections4.functors.OrPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.FalsePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.NullIsTruePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.FalsePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.OrPredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OrPredicate.<T> org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.OrPredicate.org.apache.commons.collections4.functors.OrPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)"],"org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)":["org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate)","org.apache.commons.collections4.functors.NullIsTruePredicate.<T> org.apache.commons.collections4.Predicate nullIsTruePredicate(org.apache.commons.collections4.Predicate) -> org.apache.commons.collections4.functors.OrPredicate.<T> org.apache.commons.collections4.Predicate orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate)"]},"graph":"branch"},{"branches":{"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":["org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).t1","org.apache.commons.collections4.functors.OrPredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.OrPredicate_org.apache.commons.collections4.functors.OrPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.NullIsTruePredicate_org.apache.commons.collections4.functors.NullIsTruePredicate(org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.OrPredicate_<T>_org.apache.commons.collections4.Predicate_orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).b","org.apache.commons.collections4.functors.OrPredicate_<T>_org.apache.commons.collections4.Predicate_orPredicate(org.apache.commons.collections4.Predicate,org.apache.commons.collections4.Predicate).e1","org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).b","org.apache.commons.collections4.functors.NullIsTruePredicate_boolean_evaluate(T).e1"]},"type":"branch"}]}]}