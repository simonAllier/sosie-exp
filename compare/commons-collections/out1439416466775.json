{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.union":17,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":8,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":42,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":37,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":36,"org.apache.commons.collections4.PredicateUtilsTest.testFalsePredicate":44,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":41,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":49,"org.apache.commons.collections4.CollectionUtilsTest.intersection":18,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":21,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":35,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":46,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":5,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":9,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":33,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":51,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":32,"org.apache.commons.collections4.CollectionUtilsTest.intersectionUsesMethodEquals":14,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":3,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":22,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":39,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":16,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":45,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":23,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":30,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":43,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":26,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicateEx":12,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":29,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":6,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":47,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":4,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":2,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":7,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":19,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":25,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":38,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":48,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":1,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":20,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":28,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":0,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":34,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testEmptyIterator":10,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":13,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":31},"transformations":[{"failures":[],"tindex":"b3603d69-413c-11e5-8618-bf65d41effc5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0},{"failures":[],"tindex":"b3603d6a-413c-11e5-8618-7b6f0c820b72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:452","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.collection.CompositeCollection<V>.addComposited(java.util.Map<K, V>[][int].values());\n}"},"status":-2},{"failures":[0],"tindex":"b360647b-413c-11e5-8618-533e7f6368b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:327","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object and transformer map must not be null\")"},"status":-1},{"failures":[],"tindex":"b360647c-413c-11e5-8618-2ba526aca689","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:82","type":"CtForEachImpl","sourcecode":"for (final E E : E[]) {\n    org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}"},"status":0},{"failures":[1,2],"tindex":"b360647d-413c-11e5-8618-09e8f7f3e4cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))"},"variableMap":{"closure":"defaultClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:67","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.SwitchClosure<E>(org.apache.commons.collections4.Predicate<? super E>[] , org.apache.commons.collections4.Closure<? super E>[] , org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[3,4,5,6,7,8,9],"tindex":"b360647e-413c-11e5-8618-07309dcadb55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"b360647f-413c-11e5-8618-d5a6b2ac1761","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:204","type":"CtIfImpl","sourcecode":"if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n    if ((int[][(int - int)]) <= (int[][int])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"start2","d":"end2","vDown":"vUp","delta":"start1","end2":"offset","this":"this","i":"start1","end1":"start1","k":"start1","start2":"end2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:184","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= int ; ++int) {\n    for (int int = -int ; int <= int ; int += 2) {\n        final int int = int + int;\n        if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n            int[][int] = int[][(int + 1)];\n        } else {\n            int[][int] = (int[][(int - 1)]) + 1;\n        }\n        int int = int[][int];\n        int int = ((int - int) + int) - int;\n        while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = ++int;\n            ++int;\n        }\n        if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n            if ((int[][(int - int)]) <= (int[][int])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n            } \n        } \n    }\n    for (int int = int - int ; int <= (int + int) ; int += 2) {\n        final int int = (int + int) - int;\n        if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n            int[][int] = (int[][(int + 1)]) - 1;\n        } else {\n            int[][int] = int[][(int - 1)];\n        }\n        int int = (int[][int]) - 1;\n        int int = ((int - int) + int) - int;\n        while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            int[][int] = int--;\n            int--;\n        }\n        if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n            if ((int[][int]) <= (int[][(int + int)])) {\n                return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n            } \n        } \n    }\n}"},"status":0},{"failures":[],"tindex":"b3608b90-413c-11e5-8618-45a205b73581","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:59","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<K, V>"},"status":-2},{"failures":[10,11],"tindex":"b3608b91-413c-11e5-8618-2def27a5831b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:249","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"b3608b92-413c-11e5-8618-c3bca29632ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1382","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(',').append(' ')"},"variableMap":{"buf":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V))"},"status":0},{"failures":[12,13],"tindex":"b3608b93-413c-11e5-8618-c9796c22a269","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23],"tindex":"b360b2a4-413c-11e5-8618-657779cac69a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"iterable","list2":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-1},{"failures":[24,25,26,27,28],"tindex":"b360b2a5-413c-11e5-8618-cf296c6c7002","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBag<E>"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:62","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.UnmodifiableSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)"},"status":-1},{"failures":[29,30,31,32,33],"tindex":"b360b2a6-413c-11e5-8618-bb06985fbd55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:246","type":"CtReturnImpl","sourcecode":"return java.lang.Integer.compareTo(java.lang.Integer)"},"status":-1},{"failures":[34,35,36,37],"tindex":"b360b2a7-413c-11e5-8618-cb8de73bc29a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} "},"status":-1},{"failures":[],"tindex":"b360b2a8-413c-11e5-8618-71616d7a70c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:148","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Object.hashCode()"},"status":-2},{"failures":[0,38],"tindex":"b360b2a9-413c-11e5-8618-5500c5344e77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:162","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[][int].evaluate(I)) == true) {\n    return org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int].transform(I);\n} "},"status":-1},{"failures":[39,40],"tindex":"b360b2aa-413c-11e5-8618-2bcbe88d107d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} "},"status":-1},{"failures":[38,41,42,43,44,45,46,47,48,49,13,50],"tindex":"b360d9bb-413c-11e5-8618-87b2f9eae8c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FalsePredicate:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate))"},"status":-2},{"failures":[51],"tindex":"b360d9bc-413c-11e5-8618-19d3bdbc6f83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:171","type":"CtAssignmentImpl","sourcecode":"boolean = int == 0"},"variableMap":{"result":"result","comparison":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:177","type":"CtAssignmentImpl","sourcecode":"boolean = int < 0"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}