{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":50,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":54,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":53,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":2,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":11,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":41,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":39,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":58,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":1,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":26,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":77,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":101,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":6,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":83,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":21,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":47,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":5,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":69,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":48,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":65,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":16,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":66,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":73,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":22,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":55,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":18,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":3,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":97},"transformations":[{"failures":[],"tindex":"f2161b1c-2470-11e5-97b5-4d38bed965fc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:58","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.TransformedBag<E>(org.apache.commons.collections4.Bag<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-2},{"failures":[],"tindex":"f216422d-2470-11e5-97b5-690a888fab0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1071","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[0],"tindex":"f216422e-2470-11e5-97b5-8dea2f19e41a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"f216693f-2470-11e5-97b5-bd9f4d249206","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"f2166940-2470-11e5-97b5-ff4e9a8cbb9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:197","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f2168f51-2470-11e5-97b5-a1836844e69b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:603","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K, K)"},"status":-2},{"failures":[47,48,49,50],"tindex":"f2168f52-2470-11e5-97b5-d3b275f75df3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:143","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"f2168f53-2470-11e5-97b5-7d6a750f1eab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:235","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"f216b664-2470-11e5-97b5-71d159a3826f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:349","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[])"},"status":-2},{"failures":[],"tindex":"f216b665-2470-11e5-97b5-958a791ac9bd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} "},"status":-2},{"failures":[51,52,53,54,55,56],"tindex":"f216b666-2470-11e5-97b5-754a9d0c03e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:197","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"variableMap":{"start1":"start","x":"start","k":"start","start2":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:144","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"f216dd77-2470-11e5-97b5-2b8148db2855","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:243","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeRead()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1151","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n    final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n    java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n}"},"status":-2},{"failures":[],"tindex":"f216dd78-2470-11e5-97b5-a7f0fafbe459","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == (this)) {\n        return true;\n    } \n    return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}"},"status":-2},{"failures":[],"tindex":"f216dd79-2470-11e5-97b5-4d176c25590d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:637","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99],"tindex":"f216dd7a-2470-11e5-97b5-1bd503dd31b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:345","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"status":-1},{"failures":[],"tindex":"f217048b-2470-11e5-97b5-81caf619f50e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:816","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"status":-2},{"failures":[],"tindex":"f217048c-2470-11e5-97b5-f779d2b8843b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"key","dataElement":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:270","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"f217048d-2470-11e5-97b5-6fd300e0c9b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)"},"status":-2},{"failures":[100],"tindex":"f2172b9e-2470-11e5-97b5-f5a13335b96d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:239","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>))"},"variableMap":{"put":"put"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:241","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(org.apache.commons.collections4.Put<K, V>)"},"status":-1},{"failures":[101],"tindex":"f2172b9f-2470-11e5-97b5-917531e90336","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"nodeList must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"f216422d-2470-11e5-97b5-690a888fab0c","diffs":[{"branches":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":["org.apache.commons.collections4.bidimap.TreeBidiMap_void_makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).e1","org.apache.commons.collections4.bidimap.TreeBidiMap_void_rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap$Node,org.apache.commons.collections4.bidimap.TreeBidiMap$DataElement).t1"]},"type":"branch"}]},{"transformation":"f216dd79-2470-11e5-97b5-4d176c25590d","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_return previous","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous = entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey = nextKey","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey = e.getKey()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue = e.getValue()","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry = e","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue = nextValue"],"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_(modCount)++","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_(modCount)++"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_this.expectedModCount = parent.modCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_if ((parent.modCount) != (expectedModCount)) {    throw new java.util.ConcurrentModificationException()"]},"type":"variable"}]}]}