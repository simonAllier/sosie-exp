{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":88,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":137,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":7,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":129,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":160,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":178,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":167,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":73,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":161,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":175,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":169,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":34,"org.apache.commons.collections4.CollectionUtilsTest.get":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSimpleSerialization":32,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":136,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":44,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":134,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":127,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":130,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":41,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":171,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":36,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":105,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":164,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":177,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":188,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":181,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":35,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":131,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":158,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":87,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":176,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":33,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":82,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":163,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":62,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":142,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":145,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":100,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":143,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":172,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":29,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":8,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":159,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":126,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":147,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAdd":187,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":133,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":132,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":64,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAddAll":184,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":97,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":46,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":179,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":61,"org.apache.commons.collections4.set.CompositeSetTest.testContains":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":37,"org.apache.commons.collections4.CollectionUtilsTest.isFull":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":38,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":4,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":117,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":74,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":190,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":146,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":93,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":92,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":91,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":101,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalAdd":182,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":114,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":113,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":112,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":166,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":111,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAdd":189,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":118,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":186,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":148,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":68,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":180,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":67,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":138,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":149,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":96,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":27,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":170,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalAdd":192,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":0,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":59,"org.apache.commons.collections4.list.PredicatedListTest.testIllegalSet":183,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":103,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAdd":185,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":71,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":50,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":121,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":191,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":10,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":21,"org.apache.commons.collections4.map.LRUMapTest.testLRU":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":25,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":140,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":165,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":18,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":56,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":152,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":102,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":123,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":120},"transformations":[{"failures":[0,1],"tindex":"726f122e-2430-11e5-adf0-95f70456c0df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:114","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:76","type":"CtReturnImpl","sourcecode":"return boolean ? 0 : 1"},"status":-1},{"failures":[2],"tindex":"726f122f-2430-11e5-adf0-09d7c4176fb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:189","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"726f1230-2430-11e5-adf0-83283e621dd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"726f3941-2430-11e5-adf0-9d7b27a913e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"entry":"path","predecessor":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:464","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"726f3942-2430-11e5-adf0-352eb99cc0bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:321","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:275","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"726f3943-2430-11e5-adf0-6d33ad99755b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:148","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super E>[][int].execute(E)"},"status":0},{"failures":[],"tindex":"726f3944-2430-11e5-adf0-7d2a7e63781d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"variableMap":{"h":"lcsLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:73","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":0},{"failures":[30],"tindex":"726f3945-2430-11e5-adf0-997021be8507","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"object","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[31,32],"tindex":"726f6056-2430-11e5-adf0-2d5db9fef707","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1432","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.size())"},"status":-1},{"failures":[33,34,35],"tindex":"726f6057-2430-11e5-adf0-d3a4c570d3b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"next":"node","node":"node","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"726f6058-2430-11e5-adf0-ab5a3c3525a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1056","type":"CtReturnImpl","sourcecode":"return (this.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength) == org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength"},"variableMap":{"keyType":"object","type":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178],"tindex":"726f6059-2430-11e5-adf0-418ae2a06601","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:838","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"previous":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:642","type":"CtDoImpl","sourcecode":"do {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null )"},"status":-1},{"failures":[179,180],"tindex":"726f876a-2430-11e5-adf0-5f2e2cef9c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"deletedNode","to":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:995","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"726f876b-2430-11e5-adf0-2d162f767cae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[181],"tindex":"726f876c-2430-11e5-adf0-633163f53efb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\")"},"status":-1},{"failures":[],"tindex":"726f876d-2430-11e5-adf0-0d129c710f37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1932","type":"CtReturnImpl","sourcecode":"return !(boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])"},"variableMap":{"blackColor":"value1","dataElement":"value1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"726f876e-2430-11e5-adf0-b16885207671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"hashCode","index":"newCapacity"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:638","type":"CtForImpl","sourcecode":"for (int int = int - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n        do {\n            final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n    } \n}"},"status":-2},{"failures":[182,183,184,185,186,187,188,189,190,191,192],"tindex":"726fae7f-2430-11e5-adf0-814a7c046cf0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:203","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))"},"status":-1},{"failures":[],"tindex":"726fae80-2430-11e5-adf0-bb0a527bb72a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:182","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[],"tindex":"726fae81-2430-11e5-adf0-8d7e2cd74be2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:215","type":"CtLocalVariableImpl","sourcecode":"final E E = super.set(int, E)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}