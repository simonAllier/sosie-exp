{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":45,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiInverse":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":15,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByEntrySet":82,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":64,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByKeySet":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":121,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":32,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":31,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":120,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":10,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":50,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":148,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiInverse":77,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":114,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":8,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":38,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":133,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiGetKeyInverse":76,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":127,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":16,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":128,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":72,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":44,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":91,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":145,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":74,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiInverse":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":118,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":144,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":12,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":99,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":0,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":102,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":13,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":136,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":20,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":96,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByEntrySet":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":117,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiInverse":135,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":122,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":6,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":73,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":55,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":86,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":129,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":147,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":48,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":132,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":104,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":54,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":131,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":37,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":138,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByEntrySet":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByEntrySet":111,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiGetKeyInverse":134,"org.apache.commons.collections4.map.FixedSizeMapTest.testFullMapCompatibility":36,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":93,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":11,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":143,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":49,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":116,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":2,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":34,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":109,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":75,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":130,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":67,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":151,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":17,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":100,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByKeySet":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":108,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":4,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":69,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemoveByKeySet":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":21,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":119,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":30,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":83,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiGetKeyInverse":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiGetKeyInverse":56,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemoveByKeySet":81},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"tindex":"8ecefd57-24f7-11e5-83b8-db8d2d14cc5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"8ecf2468-24f7-11e5-83b8-b9465b009dfa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"variableMap":{"cursor":"cursor","node":"node","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:336","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":-1},{"failures":[],"tindex":"8ecf4b79-24f7-11e5-83b8-4bc1b88fe6ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"8ecf4b7a-24f7-11e5-83b8-bb6d79dcca77","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:100","type":"CtReturnImpl","sourcecode":"return boolean ? true : java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[29,30,31,32,33,34],"tindex":"8ecf4b7b-24f7-11e5-83b8-5be43bf5dfad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"k","index":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":-1},{"failures":[35],"tindex":"8ecf4b7c-24f7-11e5-83b8-013e93d2f7b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:63","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"status":-1},{"failures":[],"tindex":"8ecf728d-24f7-11e5-83b8-e7a9a0af194a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:529","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"status":-2},{"failures":[],"tindex":"8ecf728e-24f7-11e5-83b8-5fdacfe258cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)"},"status":-2},{"failures":[36],"tindex":"8ecf728f-24f7-11e5-83b8-c7a6286d3e6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:100","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.HashMap<K, V>()"},"variableMap":{"normalMap":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:111","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"8ecf7290-24f7-11e5-83b8-6d7f2c2c61c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:88","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.ArrayList<E>.size()"},"status":-2},{"failures":[],"tindex":"8ecf99a1-24f7-11e5-83b8-4db9ccbf9a8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1264","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float)"},"status":0},{"failures":[],"tindex":"8ecf99a2-24f7-11e5-83b8-bf13a0126ab2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[],"tindex":"8ecf99a3-24f7-11e5-83b8-a93a890d17af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))"},"status":0},{"failures":[],"tindex":"8ecf99a4-24f7-11e5-83b8-09697e09d4c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:538","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"status":-2},{"failures":[],"tindex":"8ecfc0b5-24f7-11e5-83b8-9b0cdc777e41","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:599","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"next":"next","entry":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:461","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"8ecfc0b6-24f7-11e5-83b8-73dae0c49274","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet())"},"status":-2},{"failures":[],"tindex":"8ecfc0b7-24f7-11e5-83b8-e7113da8fae9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152],"tindex":"8ecfe7c8-24f7-11e5-83b8-0bfb6e2abe73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:754","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.clear()"},"variableMap":{"parent":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-1},{"failures":[],"tindex":"8ecfe7c9-24f7-11e5-83b8-bdc5235a8099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"8ecf99a1-24f7-11e5-83b8-4db9ccbf9a8d","diffs":[{"branches":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"],"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.void doReadObject(java.io.ObjectInputStream) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)"]},"type":"graph"}]},{"transformation":"8ecf99a3-24f7-11e5-83b8-a93a890d17af","diffs":[{"branches":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":["org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_boolean_hasNext().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_int_nextIndex().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_E_next().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_boolean_hasPrevious().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_E_previous().b","org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator_org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator).b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator).e1","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_int_previousIndex().b","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator_org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":["org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.int previousIndex()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.boolean hasPrevious()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.E next()","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.E previous()","org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator.org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)","org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.int nextIndex()"]},"edges":{"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":["org.apache.commons.collections4.list.FixedSizeList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator.org.apache.commons.collections4.list.FixedSizeList$FixedSizeListIterator(java.util.ListIterator)","org.apache.commons.collections4.list.FixedSizeList.java.util.ListIterator listIterator() -> org.apache.commons.collections4.iterators.AbstractListIteratorDecorator.org.apache.commons.collections4.iterators.AbstractListIteratorDecorator(java.util.ListIterator)"]},"type":"graph"}]}]}