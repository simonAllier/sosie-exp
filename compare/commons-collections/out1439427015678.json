{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":124,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":4,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":111,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":49,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":116,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":106,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":77,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":109,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":82,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":37,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":100,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":52,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":66,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":70,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":20},"transformations":[{"failures":[],"tindex":"4302ca30-4155-11e5-8044-b9c76973a3e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:253","type":"CtReturnImpl","sourcecode":"return \"MultiKey\" + (java.util.Arrays.toString(K[]))"},"status":-2},{"failures":[],"tindex":"4302f141-4155-11e5-8044-05ed9e635b85","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}"},"status":-2},{"failures":[],"tindex":"4302f142-4155-11e5-8044-4148d23b626c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"4302f143-4155-11e5-8044-273da3da2ff8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:494","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[113,114],"tindex":"43031854-4155-11e5-8044-ff8e2262aa9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> == null) {\n    return 0;\n} "},"variableMap":{"node":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:160","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    return -1;\n} "},"status":-1},{"failures":[44,45,46,63,64,98,99],"tindex":"43031855-4155-11e5-8044-0775369d70c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-1},{"failures":[],"tindex":"43031856-4155-11e5-8044-e71a7621005a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-2},{"failures":[],"tindex":"43031857-4155-11e5-8044-cf0987579579","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:590","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"43031858-4155-11e5-8044-27613654a7f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"variableMap":{"result":"object","length":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1346","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"43031859-4155-11e5-8044-09a89f144eca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:79","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Predicate<?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"4303185a-4155-11e5-8044-07ace2ba8e36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-2},{"failures":[115],"tindex":"43033f6b-4155-11e5-8044-c5501c5d001f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"43033f6c-4155-11e5-8044-b70bfbc32836","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:522","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E E = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"43033f6d-4155-11e5-8044-d98a9d45d3ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:722","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[116,117,118,119,120],"tindex":"43033f6e-4155-11e5-8044-a1a0c5a0711d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:551","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Equator<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Equator must not be null\");\n} "},"variableMap":{"equator":"equator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[121,122,123,124,125,126],"tindex":"43033f6f-4155-11e5-8044-77a8a686fca4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:214","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-1},{"failures":[127],"tindex":"43036680-4155-11e5-8044-0786052cbaee","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"variableMap":{"predicates":"preds","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:334","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>> : java.util.Map<I, org.apache.commons.collections4.Transformer<I, O>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<I>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<I>equalPredicate(java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getKey());\n    org.apache.commons.collections4.Transformer<? super I, ? extends O>[][int++] = java.util.Map.Entry<I, org.apache.commons.collections4.Transformer<I, O>>.getValue();\n}"},"status":-1},{"failures":[],"tindex":"43036681-4155-11e5-8044-179e8cb041d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:252","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"43036682-4155-11e5-8044-c79393fc0c71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"43036683-4155-11e5-8044-c965dfe2b221","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"maximumCacheSize","index":"maximumCacheSize","beyond":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:123","type":"CtWhileImpl","sourcecode":"while ((int) > (int)) {\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache();\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}