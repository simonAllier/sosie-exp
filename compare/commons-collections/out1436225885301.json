{"failureDictionary":{"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":10,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":7,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":65,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":30,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":48,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":62,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":33,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":19,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":41,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":45,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.set.ListOrderedSetTest.testRetainAll":15,"org.apache.commons.collections4.ClosureUtilsTest.testIfClosure":32,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":52,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":12,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":23,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":49,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":56,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":40,"org.apache.commons.collections4.CollectionUtilsTest.maxSize":1,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":60,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":5,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":67,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":58,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":20,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":57,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":39,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":0,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":71,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":53,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":69,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":3,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":61,"org.apache.commons.collections4.set.ListOrderedSet2Test.testOrdering":2,"org.apache.commons.collections4.set.ListOrderedSetTest.testOrdering":17,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":50,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":51,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":35,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":47,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":34,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":27,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":37,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":4,"org.apache.commons.collections4.CollectionUtilsTest.filter":70,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":8,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":14,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":29,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":36,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":38,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":46,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":64,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":66,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":55,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":31,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":16},"transformations":[{"failures":[0],"tindex":"0c9ef311-2438-11e5-80c7-599424ae872c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:61","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMap<? extends K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(org.apache.commons.collections4.OrderedMap<? extends K, ? extends V>));\n    return org.apache.commons.collections4.OrderedMap<K, V>;\n} "},"status":-1},{"failures":[1],"tindex":"0c9ef312-2438-11e5-80c7-5bec4ef4e35e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1509","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"0c9f1a23-2438-11e5-80c7-6f3fac5376d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:299","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))"},"status":-2},{"failures":[],"tindex":"0c9f1a24-2438-11e5-80c7-d51772028225","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup()"},"variableMap":{"this":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:666","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"0c9f1a25-2438-11e5-80c7-bff83324c5c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:167","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:189","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.ListOrderedSet.OrderedSetIterator<E>(java.util.List<E>.listIterator() , org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"0c9f1a26-2438-11e5-80c7-9fa252f58c72","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:145","type":"CtWhileImpl","sourcecode":"while ((((int - int) < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get((int - int))))) {\n    ++int;\n}"},"status":0},{"failures":[],"tindex":"0c9f1a27-2438-11e5-80c7-7d689203266b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key3","length":"hashCode","key":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[30,31],"tindex":"0c9f1a28-2438-11e5-80c7-69663754782f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-1},{"failures":[],"tindex":"0c9f1a29-2438-11e5-80c7-4d47ab989af7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:109","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-2},{"failures":[32],"tindex":"0c9f413a-2438-11e5-80c7-b9d59c081cd3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"status":-1},{"failures":[],"tindex":"0c9f413b-2438-11e5-80c7-d9b62b94a5b9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:63","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getValue()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)"},"status":-2},{"failures":[],"tindex":"0c9f413c-2438-11e5-80c7-5f2e2c6e3bff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:440","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.checkModCount()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.remove()"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"0c9f413d-2438-11e5-80c7-2b0f2a5a5ce4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:330","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":-1},{"failures":[],"tindex":"0c9f413e-2438-11e5-80c7-fb1c9dd22dfb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":0},{"failures":[68,45,50,55],"tindex":"0c9f684f-2438-11e5-80c7-fb7489c19fb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:651","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:148","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"0c9f6850-2438-11e5-80c7-35249330e63c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1440","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1362","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2},{"failures":[],"tindex":"0c9f6851-2438-11e5-80c7-7b1c7181c18c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[69],"tindex":"0c9f6852-2438-11e5-80c7-494ae56d2bf5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"next() must have been called for remove() to function\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"0c9f6853-2438-11e5-80c7-219e1b38a5fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1229","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeFloat(float)"},"status":-2},{"failures":[70,71],"tindex":"0c9f6854-2438-11e5-80c7-938e4932583f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:749","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final java.util.Iterator<T> java.util.Iterator<T> = java.lang.Iterable<T>.iterator() ; java.util.Iterator<T>.hasNext() ; ) {\n        if (!(org.apache.commons.collections4.Predicate<? super T>.evaluate(java.util.Iterator<T>.next()))) {\n            java.util.Iterator<T>.remove();\n            boolean = true;\n        } \n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"0c9f1a26-2438-11e5-80c7-9fa252f58c72","diffs":[{"branches":{"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":["org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).l5"],"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":["org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).l5","org.apache.commons.collections4.sequence.SequencesComparator_void_buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript).t2"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":["org.apache.commons.collections4.sequence.SequencesComparator$Snake.org.apache.commons.collections4.sequence.SequencesComparator$Snake(int,int,int)_this.end = end","org.apache.commons.collections4.sequence.SequencesComparator$Snake.int getEnd()_return end"]},"type":"variable"},{"nodes":{},"edges":{"org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)":["org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int)","org.apache.commons.collections4.sequence.SequencesComparator.org.apache.commons.collections4.sequence.SequencesComparator$Snake buildSnake(int,int,int,int) -> org.apache.commons.collections4.functors.DefaultEquator.boolean equate(T,T)"],"org.apache.commons.collections4.sequence.SequencesComparator.void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript)":["org.apache.commons.collections4.sequence.SequencesComparator.void buildScript(int,int,int,int,org.apache.commons.collections4.sequence.EditScript) -> org.apache.commons.collections4.functors.DefaultEquator.boolean equate(T,T)"]},"graph":"branch"}]}]}