{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":14,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":99,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":98,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":3,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":13,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":63,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":25,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":102,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":38,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":92,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":96,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":34,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":62,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":23,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":24,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":89,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":6,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":90,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":49,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":7,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":87,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":83,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":48,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectEqualsSelf":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":74,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectEqualsSelf":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":78,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":80,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":95,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":5,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":31,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectEqualsSelf":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":10,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":101,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":32,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":26,"org.apache.commons.collections4.map.HashedMapTest.testObjectEqualsSelf":72},"transformations":[{"failures":[],"tindex":"267fa878-46c5-11e5-998c-a50ccffd5548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()"},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"267fcf89-46c5-11e5-998c-1712bc11392d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:76","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"267ff69a-46c5-11e5-998c-53afecb702c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"beforeFirst","removed":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:103","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"267ff69b-46c5-11e5-998c-b5a20a8419e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"267ff69c-46c5-11e5-998c-4f89da1ca7bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"value","k":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"26801dad-46c5-11e5-998c-c77dd4292312","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:391","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.registerCursor(org.apache.commons.collections4.list.CursorableLinkedList.SubCursor<E>)"},"status":-2},{"failures":[],"tindex":"26801dae-46c5-11e5-998c-2bfbf73cf551","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"26801daf-46c5-11e5-998c-9ff949a2e151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, org.apache.commons.collections4.map.AbstractHashedMap.float)"},"variableMap":{"this":"this","maxSize":"maxSize","org.apache.commons.collections4.map.AbstractHashedMap.DEFAULT_LOAD_FACTOR":"loadFactor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:112","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.this(int, float, false)"},"status":-2},{"failures":[],"tindex":"26801db0-46c5-11e5-998c-f3c426c09326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key5","next":"previous","entry":"entry","key2":"key2","key5":"key3","hashCode":"hashCode","key3":"key4","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"268044c1-46c5-11e5-998c-392ad359111f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:75","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    return new org.apache.commons.collections4.list.SetUniqueList<E>(java.util.List<E> , new java.util.HashSet<E>());\n} "},"status":0},{"failures":[11,12,13],"tindex":"268044c2-46c5-11e5-998c-9be319af0045","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"26806bd3-46c5-11e5-998c-2595cbaff3cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"size","index":"length","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:176","type":"CtIfImpl","sourcecode":"if ((T[].int) < (int)) {\n    final java.lang.Class<?> java.lang.Class<?> = T[].getClass().getComponentType();\n    T[] = ((T[])(java.lang.reflect.Array.newInstance(java.lang.Class<?>, int)));\n} "},"status":-2},{"failures":[14,15,16],"tindex":"26806bd4-46c5-11e5-998c-0bbc9281d80d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24],"tindex":"26806bd5-46c5-11e5-998c-75d3d203fe8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.nextIndex()"},"status":-1},{"failures":[],"tindex":"268092e6-46c5-11e5-998c-233278d778ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:76","type":"CtReturnImpl","sourcecode":"return java.util.List<T> == null ? java.util.List<T> : java.util.List<T>"},"status":-2},{"failures":[],"tindex":"268092e7-46c5-11e5-998c-d340edda90fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()"},"status":0},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"268092e8-46c5-11e5-998c-8b0ee7067b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:144","type":"CtLocalVariableImpl","sourcecode":"int int = (int) - 1"},"variableMap":{"size":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"status":-1},{"failures":[],"tindex":"268092e9-46c5-11e5-998c-cd296d555f82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"status":-2},{"failures":[71,72,73,74,75,76],"tindex":"2680b9fa-46c5-11e5-998c-019f4f1cbe89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1311","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"2680b9fb-46c5-11e5-998c-e52cace9030a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:102","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    int += java.util.Collection<E>.size();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}