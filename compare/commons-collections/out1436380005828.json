{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":75,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":52,"org.apache.commons.collections4.ListUtilsTest.testHashCode":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":34,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":53,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":60,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":0,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":78,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":81,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":61,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":1,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":35,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":41,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":36,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":74,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":57,"org.apache.commons.collections4.CollectionUtilsTest.addAllForIterable":5,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":8,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":9,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":14,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":4,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":73,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":67,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":37,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":26,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":69,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":13,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":59,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":10,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":70,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":82,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":79,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":63,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":45,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":50,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":51,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":27,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":11,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":62,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":42,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":83,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":43,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":66,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":49,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":15,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":23},"transformations":[{"failures":[0,1,2,3,4],"tindex":"e39d5f2b-259e-11e5-8d14-352b458240e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:672","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends I> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"e39d863c-259e-11e5-8d14-378f1028c94f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":0},{"failures":[],"tindex":"e39d863d-259e-11e5-8d14-afe9faaee7b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-2},{"failures":[],"tindex":"e39d863e-259e-11e5-8d14-bbe099d0adea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:114","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"keyTransformer cannot be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"e39d863f-259e-11e5-8d14-bbe64b98584b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:225","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.checkNotStarted()"},"status":0},{"failures":[5],"tindex":"e39d8640-259e-11e5-8d14-7780575e0205","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1106","type":"CtReturnImpl","sourcecode":"return java.util.Collection<C>.addAll(((java.util.Collection<? extends C>)(java.lang.Iterable<? extends C>)))"},"status":-1},{"failures":[6],"tindex":"e39d8641-259e-11e5-8d14-05b6ee7c6a60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:283","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"e39d8642-259e-11e5-8d14-b73bee3701b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:213","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.this(-1L)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:258","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.this(new org.apache.commons.collections4.map.PassiveExpiringMap.ConstantTimeToLiveExpirationPolicy<K, V>(long), new java.util.HashMap<K, V>())"},"status":-2},{"failures":[],"tindex":"e39dad53-259e-11e5-8d14-8f29103dcfe4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:148","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().headMap(K)"},"status":-2},{"failures":[7],"tindex":"e39dad54-259e-11e5-8d14-f9ed8d4d8f2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:54","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[8,9,10],"tindex":"e39dad55-259e-11e5-8d14-af7e1a17efb3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"variableMap":{"item":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:262","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == (java.util.Set<E>.size())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e39dad56-259e-11e5-8d14-3144d518d9d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"variableMap":{"startIndex":"size","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"status":0},{"failures":[],"tindex":"e39dad57-259e-11e5-8d14-5981d7c1a87a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1233","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next())"},"status":-2},{"failures":[],"tindex":"e39dad58-259e-11e5-8d14-b3c6e5e7b5f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1301","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    break;\n}"},"variableMap":{"node":"newNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","this":"this","newNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e39dd469-259e-11e5-8d14-41b84c83cc0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"status":-2},{"failures":[11],"tindex":"e39dd46a-259e-11e5-8d14-23f8dede6998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:507","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"entry","h":"entry","right":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:815","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[12,13,14,15,16,17],"tindex":"e39dd46b-259e-11e5-8d14-6d7cbad1b18d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"end2","index":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24],"tindex":"e39dd46c-259e-11e5-8d14-911ee4a9b5c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1046","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"e39dfb7d-259e-11e5-8d14-bdab88da960c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl","sourcecode":"final E E = E"},"status":-2},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,7,75,76,77,78,0,79,80,4,81,82,83],"tindex":"e39dfb7e-259e-11e5-8d14-4b8816eaf135","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:239","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"e39dad56-259e-11e5-8d14-3144d518d9d0","diffs":[{"variables":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":["org.apache.commons.collections4.map.AbstractHashedMap.boolean isEmpty()_return (size) == 0"]},"type":"variable"}]},{"transformation":"e39d863f-259e-11e5-8d14-bbe64b98584b","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":["org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator)","org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void checkNotStarted()"],"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":["org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator)","org.apache.commons.collections4.iterators.CollatingIterator.void setComparator(java.util.Comparator) -> org.apache.commons.collections4.iterators.CollatingIterator.void checkNotStarted()"]},"type":"graph"}]},{"transformation":"e39d863c-259e-11e5-8d14-378f1028c94f","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.CollectionUtilsTest.getFromMap":["org.apache.commons.collections4.CollectionUtils.<K,V> java.util.Map$Entry get(java.util.Map,int) -> org.apache.commons.collections4.CollectionUtils.void checkIndexBounds(int)"]},"type":"graph"}]}]}