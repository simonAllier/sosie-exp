{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":23,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":35,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":24,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":15,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":34,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":26,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":42,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":69,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":44,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":11,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":19,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":27,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":49,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":16,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":6,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Iterator":76,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":37,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":65,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":41,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":33,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":28,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":67,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":32,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":0,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":1,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":2,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":20,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":45,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":52,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":7,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":25,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapRemove":75,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":4,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":9,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":54,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":74,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":71,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":47,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":59,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":3,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":13,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":57,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":10,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":5,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":39},"transformations":[{"failures":[],"tindex":"87b8d976-2539-11e5-af2a-ef970af107ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:80","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(false , org.apache.commons.collections4.Transformer<T, T>[])"},"status":-2},{"failures":[],"tindex":"87b90087-2539-11e5-af2a-5112bd983fdc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"variableMap":{"array":"result","i":"i","j":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:130","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])))"},"status":0},{"failures":[],"tindex":"87b90088-2539-11e5-af2a-572733b44232","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"87b90089-2539-11e5-af2a-2142a2cf042d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:129","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"exhausted":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:262","type":"CtIfImpl","sourcecode":"if (java.util.Collection<V> == null) {\n    java.util.Collection<V> = org.apache.commons.collections4.map.MultiValueMap<K, V>.createCollection(1);\n    java.util.Collection<V>.add(((V)(java.lang.Object)));\n    if ((java.util.Collection<V>.size()) > 0) {\n        org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n        boolean = true;\n    } \n} else {\n    boolean = java.util.Collection<V>.add(((V)(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"87b9008a-2539-11e5-af2a-bb67af25f79d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1032","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"87b9279b-2539-11e5-af2a-a3603d982cd2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:69","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.setCollection(((java.util.Collection<E>)(java.io.ObjectInputStream.readObject())))"},"status":-2},{"failures":[30,31],"tindex":"87b9279c-2539-11e5-af2a-915543a20855","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:220","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"87b9279d-2539-11e5-af2a-c5fe265e7eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:345","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>"},"status":-2},{"failures":[],"tindex":"87b9279e-2539-11e5-af2a-df287a6f0a4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:103","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<K, V>);\n    org.apache.commons.collections4.map.TransformedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"status":-2},{"failures":[],"tindex":"87b9279f-2539-11e5-af2a-0fd7ef5f4d40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:663","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    break;\n} "},"variableMap":{"current":"node","previous":"right","left":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1169","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"87b94eb0-2539-11e5-af2a-71bbd8c73c61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"87b94eb1-2539-11e5-af2a-0f1261e3818d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:404","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V)"},"status":-1},{"failures":[75],"tindex":"87b94eb2-2539-11e5-af2a-372bfbb001e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate collection must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"87b94eb3-2539-11e5-af2a-ff1cb977d83a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-2},{"failures":[],"tindex":"87b94eb4-2539-11e5-af2a-61bb7d5593e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"x","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1185","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"87b975c5-2539-11e5-af2a-51cbb858b851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"87b975c6-2539-11e5-af2a-95dc7719ae93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:565","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[76],"tindex":"87b975c7-2539-11e5-af2a-9b71ca42c88b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"total","proposedCapacity":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1342","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    int++;\n    java.util.Iterator<?>.next();\n}"},"status":-1},{"failures":[77],"tindex":"87b975c8-2539-11e5-af2a-95e4d3a62ddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:284","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:291","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.peek()"},"status":-1},{"failures":[],"tindex":"87b975c9-2539-11e5-af2a-29fdecb8e00d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:242","type":"CtAssignmentImpl","sourcecode":"java.util.Map<? extends K, ? extends V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<? extends K, ? extends V>)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"87b975c9-2539-11e5-af2a-29fdecb8e00d","diffs":[{"nodes":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()"]},"edges":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.K transformKey(K)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.V transformValue(V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap(int)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hash(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedSortedMap.java.util.Comparator comparator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractLinkedMap.void init() -> org.apache.commons.collections4.map.AbstractLinkedMap.void init()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.int size()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractMapDecorator.boolean isEmpty()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.K transformKey(K)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet.java.util.Iterator iterator() -> org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator()","org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.V transformValue(V)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator.K getKey()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySet.java.util.Iterator iterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object convertKey(java.lang.Object)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator$EntrySetIterator.java.util.Map$Entry next()","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractLinkedMap.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V)","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator.java.util.Map$Entry next() -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.map.LinkedMap.org.apache.commons.collections4.map.LinkedMap(int)","org.apache.commons.collections4.map.AbstractHashedMap.void addMapping(int,int,K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity()","org.apache.commons.collections4.map.AbstractLinkedMap.java.util.Iterator createEntrySetIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.int size()","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractHashedMap.java.util.Set entrySet()","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V) -> org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map)","org.apache.commons.collections4.map.TransformedMap.java.util.Map transformMap(java.util.Map) -> org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap(int,float) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateNewCapacity(int)","org.apache.commons.collections4.map.TransformedMap.void putAll(java.util.Map) -> org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.boolean hasNext()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).t1","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).l2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().t1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).e1","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"],"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).b","org.apache.commons.collections4.map.TransformedMap_V_transformValue(V).b","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap(int).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e2","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).e1","org.apache.commons.collections4.map.AbstractLinkedMap_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,K,V).b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_java.util.Iterator_iterator().b","org.apache.commons.collections4.map.TransformedMap_K_transformKey(K).e1","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_nextEntry().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry_org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).l3","org.apache.commons.collections4.map.AbstractHashedMap_void_addMapping(int,int,K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_void_init().b","org.apache.commons.collections4.map.AbstractLinkedMap_void_addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().e1","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().b","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().t1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).b","org.apache.commons.collections4.map.AbstractLinkedMap_java.util.Iterator_createEntrySetIterator().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).t1","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_K_getKey().e1","org.apache.commons.collections4.map.AbstractHashedMap_int_size().b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e1","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int,float).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.util.Set_entrySet().b","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).b","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V).b","org.apache.commons.collections4.map.AbstractHashedMap_org.apache.commons.collections4.map.AbstractHashedMap(int).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hashIndex(int,int).b","org.apache.commons.collections4.map.TransformedMap_V_transformValue(V).e1","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).e1","org.apache.commons.collections4.map.TransformedMap_java.util.Map_transformMap(java.util.Map).l2","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry_V_getValue().b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_boolean_hasNext().b","org.apache.commons.collections4.map.LinkedMap_org.apache.commons.collections4.map.LinkedMap(int).b","org.apache.commons.collections4.map.TransformedMap_K_transformKey(K).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator_org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_java.lang.Object_convertKey(java.lang.Object).b","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateNewCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_V_put(K,V).l2","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_java.util.Map$Entry_next().b","org.apache.commons.collections4.map.AbstractHashedMap$EntrySet_org.apache.commons.collections4.map.AbstractHashedMap$EntrySet(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap_int_hash(java.lang.Object).b","org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator_org.apache.commons.collections4.map.AbstractLinkedMap$EntrySetIterator(org.apache.commons.collections4.map.AbstractLinkedMap).b","org.apache.commons.collections4.functors.NOPTransformer_T_transform(T).b","org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().b"]},"type":"branch"}]}]}