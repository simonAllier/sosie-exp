{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":118,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":151,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":126,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":169,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":69,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":26,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":158,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":127,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":140,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":168,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionSize":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":135,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":181,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToString":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":171,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":84,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":143,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":130,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":101,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":103,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToString":157,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":161,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":77,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":183,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":159,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":182,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":163,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":110,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":133,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":156,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":132,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":113,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":139,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":99,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":121,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":167,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":128,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":145,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":178,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":123,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":25,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":160,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":111,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":19,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":53,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionSize":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddBefore":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testToArray":112,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":180,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":153,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":176,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":117,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":166,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNavigation":116,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":173,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":138,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray":155,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":57,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":170,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":149,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":137,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorNavigation":105,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":179,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":23,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":144,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddNext":89},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"feda1880-2e08-11e5-9b28-55a74480c570","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:853","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","leftChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1047","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"feda66a1-2e08-11e5-9b28-b95d869538ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"feda66a2-2e08-11e5-9b28-d71b9cd11875","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K"},"status":-1},{"failures":[20,21],"tindex":"feda66a3-2e08-11e5-9b28-9d576eabc047","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:717","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"feda66a4-2e08-11e5-9b28-6163e1df329d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"feda8db5-2e08-11e5-9b28-8bc9c8b0a701","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doWriteObject(java.io.ObjectOutputStream)"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157],"tindex":"fedb02e6-2e08-11e5-9b28-f735d6ea9b99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:137","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:451","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.Node<E>(E)"},"status":-1},{"failures":[158],"tindex":"fedb29f7-2e08-11e5-9b28-312ab6de5047","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:206","type":"CtReturnImpl","sourcecode":"return K[].int"},"variableMap":{"keys":"key","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:168","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"fedb29f8-2e08-11e5-9b28-d7019e430ecb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"rval":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:520","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n    break;\n}"},"status":-2},{"failures":[],"tindex":"fedb5109-2e08-11e5-9b28-5566dc99e67c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"status":0},{"failures":[],"tindex":"fedb510a-2e08-11e5-9b28-bbf9bb1c0a03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:472","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"fedb510b-2e08-11e5-9b28-df50aff255d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[],"tindex":"fedb510c-2e08-11e5-9b28-9760b70dc3ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:247","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-2},{"failures":[],"tindex":"fedb781d-2e08-11e5-9b28-ad57b77a1ecd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:95","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[159],"tindex":"fedb781e-2e08-11e5-9b28-f7df5d1d88ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()"},"status":-1},{"failures":[],"tindex":"fedb781f-2e08-11e5-9b28-3fa5e60df08e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:254","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E)"},"status":-2},{"failures":[],"tindex":"fedb7820-2e08-11e5-9b28-c19eab7a8479","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:320","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183],"tindex":"fedb7821-2e08-11e5-9b28-4da5560cf40f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)"},"variableMap":{"a":"obj","b":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:152","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"fedb7822-2e08-11e5-9b28-59d5744cf6d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:302","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"link":"after","after":"link"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:301","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"feda66a1-2e08-11e5-9b28-b95d869538ca","diffs":[{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_key","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_value","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_key","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_size","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_value","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().t2","org.apache.commons.collections4.map.AbstractHashedMap_void_checkCapacity().e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"}]},{"transformation":"fedb5109-2e08-11e5-9b28-5566dc99e67c","diffs":[{"nodes":{"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":["org.apache.commons.collections4.list.TreeList.void checkInterval(int,int,int)"]},"edges":{"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":["org.apache.commons.collections4.list.TreeList.java.util.ListIterator listIterator(int) -> org.apache.commons.collections4.list.TreeList.void checkInterval(int,int,int)","org.apache.commons.collections4.list.TreeList.java.util.ListIterator listIterator(int) -> org.apache.commons.collections4.list.TreeList.int size()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":["org.apache.commons.collections4.list.TreeList_void_checkInterval(int,int,int).b","org.apache.commons.collections4.list.TreeList_void_checkInterval(int,int,int).e1"]},"type":"branch"}]}]}