{"failureDictionary":{"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":6,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":0,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":7,"org.apache.commons.collections4.TransformerUtilsTest.testInstantiateTransformerNull":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":4,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":14,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":17,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":5,"org.apache.commons.collections4.set.MapBackedSetTest.testEqualsNull":10,"org.apache.commons.collections4.SetUtilsTest.testHashCode":15,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":18,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":11,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":3,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":9,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":13,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":1,"org.apache.commons.collections4.CollectionUtilsTest.extractSingleton":16},"transformations":[{"failures":[0],"tindex":"ab0054b3-24ee-11e5-bdd5-5beed84abe81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<K, V>"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:127","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator<K, V>)"},"status":-1},{"failures":[],"tindex":"ab00c9e4-24ee-11e5-bdd5-4917791b2bd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:263","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[1],"tindex":"ab00f0f5-24ee-11e5-bdd5-2f15378d35d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:807","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Node must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11],"tindex":"ab00f0f6-24ee-11e5-bdd5-4195fc2a0311","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1393","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:158","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().equals(java.lang.Object)"},"status":-1},{"failures":[12],"tindex":"ab011807-24ee-11e5-bdd5-33737b344149","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Key must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\")"},"status":-1},{"failures":[13],"tindex":"ab013f18-24ee-11e5-bdd5-b9d4c308c243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"remove() cannot be called\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:449","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())))"},"status":-1},{"failures":[14],"tindex":"ab013f19-24ee-11e5-bdd5-f94a8e15b8e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:348","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:244","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\")"},"status":-1},{"failures":[],"tindex":"ab01662a-24ee-11e5-bdd5-fdff90417691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSerializableSetDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[15],"tindex":"ab018d3b-24ee-11e5-bdd5-6d3f0afdd1f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:142","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"ab018d3c-24ee-11e5-bdd5-af45318b85ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:756","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator();\n} "},"status":0},{"failures":[],"tindex":"ab01b44d-24ee-11e5-bdd5-536a6806172a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:641","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear()"},"variableMap":{"parent":"transformed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"status":0},{"failures":[],"tindex":"ab01b44e-24ee-11e5-bdd5-936a0041f7df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:66","type":"CtReturnImpl","sourcecode":"return ((java.util.Iterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.java.util.Iterator))"},"status":-2},{"failures":[],"tindex":"ab01db5f-24ee-11e5-bdd5-f36f7e486b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:455","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection<V>"},"variableMap":{"values":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:150","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-1},{"failures":[16],"tindex":"ab020270-24ee-11e5-bdd5-236b09f71867","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported for an ObjectArrayIterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"status":-1},{"failures":[],"tindex":"ab022981-24ee-11e5-bdd5-190a21dba0ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:301","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:320","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"ab022982-24ee-11e5-bdd5-2925e7232cd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1162","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"variableMap":{"array":"array","obj":"obj","length":"length","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1150","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map.Entry) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ab025093-24ee-11e5-bdd5-a14db08898d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1353","type":"CtTryImpl","sourcecode":"try {\n    int = java.lang.reflect.Array.getLength(java.lang.Object);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"total":"length","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1336","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    int = ((java.util.Collection<?>)(java.lang.Object)).size();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    int = ((java.lang.Object[])(java.lang.Object)).int;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ab025094-24ee-11e5-bdd5-3106a5bde551","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:133","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[17,18],"tindex":"ab025095-24ee-11e5-bdd5-174b787bdee1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:303","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"queue is empty\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"ab018d3c-24ee-11e5-bdd5-af45318b85ed","diffs":[{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent"]},"type":"variable"},{"nodes":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()","org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()"]},"edges":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.org.apache.commons.collections4.iterators.AbstractEmptyIterator()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.org.apache.commons.collections4.iterators.EmptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.AbstractEmptyMapIterator.org.apache.commons.collections4.iterators.AbstractEmptyMapIterator()"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap)","org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.void doWriteObject(java.io.ObjectOutputStream) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V> org.apache.commons.collections4.MapIterator emptyMapIterator()","org.apache.commons.collections4.map.AbstractHashedMap.boolean equals(java.lang.Object) -> org.apache.commons.collections4.iterators.AbstractEmptyIterator.boolean hasNext()"],"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":["org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator() -> org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.MapIterator mapIterator()"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.iterators.AbstractEmptyIterator_org.apache.commons.collections4.iterators.AbstractEmptyIterator().b","org.apache.commons.collections4.iterators.EmptyMapIterator_org.apache.commons.collections4.iterators.EmptyMapIterator().b","org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b","org.apache.commons.collections4.iterators.AbstractEmptyMapIterator_org.apache.commons.collections4.iterators.AbstractEmptyMapIterator().b"],"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap).l1","org.apache.commons.collections4.iterators.AbstractEmptyIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator_boolean_hasNext().b","org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator_org.apache.commons.collections4.map.AbstractHashedMap$HashMapIterator(org.apache.commons.collections4.map.AbstractHashedMap).b","org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.iterators.EmptyMapIterator_<K,V>_org.apache.commons.collections4.MapIterator_emptyMapIterator().b"]},"type":"branch"}]},{"transformation":"ab01b44d-24ee-11e5-bdd5-536a6806172a","diffs":[{"nodes":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.AbstractHashedMap.void clear()","org.apache.commons.collections4.map.AbstractLinkedMap.void clear()"]},"edges":{"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":["org.apache.commons.collections4.map.TransformedSortedMap.<K,V> org.apache.commons.collections4.map.TransformedSortedMap transformedSortedMap(java.util.SortedMap,org.apache.commons.collections4.Transformer,org.apache.commons.collections4.Transformer) -> org.apache.commons.collections4.map.AbstractLinkedMap.void clear()","org.apache.commons.collections4.map.AbstractLinkedMap.void clear() -> org.apache.commons.collections4.map.AbstractLinkedMap.void clear()","org.apache.commons.collections4.map.AbstractLinkedMap.void clear() -> org.apache.commons.collections4.map.AbstractHashedMap.void clear()"]},"type":"graph"}]}]}