{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":42,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":9,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":44,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testRemove":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":25,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":3,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.iterators.ListIteratorWrapperTest.testReset":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":45,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":26,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":2,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":5,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":43,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":31},"transformations":[{"failures":[],"tindex":"9190bc04-25c3-11e5-b5b5-f31170071043","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"9190e315-25c3-11e5-b5b5-cdc14b789051","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure"},"status":-2},{"failures":[0,1],"tindex":"91910a26-25c3-11e5-b5b5-c1eb4047940b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"variableMap":{"it2":"iterator","it1":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"status":-1},{"failures":[2],"tindex":"91910a27-25c3-11e5-b5b5-1b1c7c2c2caf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"91910a28-25c3-11e5-b5b5-b1432bdd6994","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:260","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":0},{"failures":[3,4,5],"tindex":"91913139-25c3-11e5-b5b5-3b1d2271ef8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-1},{"failures":[],"tindex":"9191313a-25c3-11e5-b5b5-fbb82b4d10d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = new java.lang.Object[org.apache.commons.collections4.set.CompositeSet<E>.size()]"},"status":-2},{"failures":[],"tindex":"9191313b-25c3-11e5-b5b5-afe2cc325b2c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} "},"variableMap":{"transformers":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":0},{"failures":[6],"tindex":"9191313c-25c3-11e5-b5b5-674053a953c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 11)"},"variableMap":{"hash":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:623","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"9191584d-25c3-11e5-b5b5-d1a72591f682","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:319","type":"CtInvocationImpl","sourcecode":"java.lang.Math.min(java.util.Collection<E>.size(), java.util.Collection<?>.size())"},"status":-2},{"failures":[7],"tindex":"9191584e-25c3-11e5-b5b5-a366e477f42f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"9191584f-25c3-11e5-b5b5-a3d16e72dd9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:67","type":"CtInvocationImpl","sourcecode":"super.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"91915850-25c3-11e5-b5b5-13572bfe143d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:466","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    return org.apache.commons.collections4.map.CompositeMap<K, V>.entrySet().equals(java.util.Map<?, ?>.entrySet());\n} "},"status":-2},{"failures":[20,21,22],"tindex":"91915851-25c3-11e5-b5b5-5b2da755d02e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:260","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-1},{"failures":[23],"tindex":"91917f62-25c3-11e5-b5b5-29dd36e2e3b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:213","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"91917f63-25c3-11e5-b5b5-e5b0e35d7a0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[43,44,45,2],"tindex":"91917f64-25c3-11e5-b5b5-e15d1ba2dd26","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++"},"variableMap":{"modCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:366","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[46],"tindex":"91917f65-25c3-11e5-b5b5-e10011c7e0a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:81","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"List must not be null\")"},"status":-1},{"failures":[],"tindex":"9191a676-25c3-11e5-b5b5-9597e4db6c0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl","sourcecode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}"},"variableMap":{"foundCurrentElement":"match"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:98","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"status":-2},{"failures":[47],"tindex":"9191a677-25c3-11e5-b5b5-5feb197c5448","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:981","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Array class must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"91910a28-25c3-11e5-b5b5-b1432bdd6994","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":["org.apache.commons.collections4.list.TreeList.E remove(int) -> org.apache.commons.collections4.list.TreeList.void checkInterval(int,int,int)","org.apache.commons.collections4.list.TreeList.E remove(int) -> org.apache.commons.collections4.list.TreeList.int size()"]},"type":"graph"}]}]}