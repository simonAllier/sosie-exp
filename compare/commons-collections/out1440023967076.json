{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":74,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":33,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":21,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":35,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":18,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsNull":30,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":77,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":5,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":20,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":86,"org.apache.commons.collections4.CollectionUtilsTest.containsAny":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":61,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":11,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":32,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":17,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":68,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":78,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":48,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testEqualsNull":28,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":59,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":29,"org.apache.commons.collections4.list.TreeListTest.testListEquals":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":94,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorChainOnMinvaluedCompatator":23,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":92,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":88,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":64,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":47,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":89,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":15,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":65,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":7,"org.apache.commons.collections4.comparators.ComparatorChainTest.testComparatorCompatibility":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.comparators.ComparatorChainTest.testReverseListSort":25,"org.apache.commons.collections4.comparators.ComparatorChainTest.testRandomListSort":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":84,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":44,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":87,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":95,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":51,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":38,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":46,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":0,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":62},"transformations":[{"failures":[],"tindex":"25c59199-46c3-11e5-9944-a5c8cfbaaee3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1388","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty()"},"status":-2},{"failures":[0],"tindex":"25c5b8aa-46c3-11e5-9944-033ab7e67525","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.add(E)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"25c5b8ab-46c3-11e5-9944-ebba5a6c1990","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:186","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], org.apache.commons.collections4.list.TreeList.AVLNode<E>.int);\n} "},"status":-1},{"failures":[23,24,25,26],"tindex":"25c5b8ac-46c3-11e5-9944-819dc2c60f23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"retval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[],"tindex":"25c5b8ad-46c3-11e5-9944-b36cdfe3a111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[27,28,29,30],"tindex":"25c5dfbe-46c3-11e5-9944-2f57ad1a23fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"25c5dfbf-46c3-11e5-9944-792de3132131","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"previous","key2":"key1","previous":"previous","hashCode":"index","key3":"key2","key4":"key1","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":0},{"failures":[],"tindex":"25c5dfc0-46c3-11e5-9944-659ce01cc95d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:136","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.PeekingIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} "},"status":0},{"failures":[],"tindex":"25c606d1-46c3-11e5-9944-59bd96f8266b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()"},"status":-2},{"failures":[],"tindex":"25c606d2-46c3-11e5-9944-1b20bbc42ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null))"},"variableMap":{"size":"i","this":"nextP","index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:145","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(java.util.Map<java.lang.Integer, E>.get(java.lang.Integer.valueOf(int[][int])))"},"status":-2},{"failures":[31],"tindex":"25c606d3-46c3-11e5-9944-09243d4815af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll2","coll1":"coll1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:417","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Collection<?>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"25c606d4-46c3-11e5-9944-b74e56c0b493","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:351","type":"CtAssignmentImpl","sourcecode":"V = V"},"status":-1},{"failures":[51,52,53,54,55,56],"tindex":"25c606d5-46c3-11e5-9944-c90d1f7f598a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:501","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:148","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"25c606d6-46c3-11e5-9944-631b6823b517","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1172","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n    java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n}"},"status":-2},{"failures":[57],"tindex":"25c62de7-46c3-11e5-9944-3f6fe2bd0e45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:212","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Get must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"25c62de8-46c3-11e5-9944-cba903b0cd49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.KeyAnalyzer.int"},"variableMap":{"org.apache.commons.collections4.trie.KeyAnalyzer.NULL_BIT_KEY":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:386","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[58],"tindex":"25c62de9-46c3-11e5-9944-41b80f6375d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"variableMap":{"startIndex":"startIndex","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:145","type":"CtReturnImpl","sourcecode":"return (this.int) - (this.int)"},"status":-1},{"failures":[],"tindex":"25c62dea-46c3-11e5-9944-dfb906d1a3fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:366","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next()"},"status":-2},{"failures":[59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"25c62deb-46c3-11e5-9944-9fd4e3f7bb8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:702","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}