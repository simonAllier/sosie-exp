{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.ListUtilsTest.testRemoveAll":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":128,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":161,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":140,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":106,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":111,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":138,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":148,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":155,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":150,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":97,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":146,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":102,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":99,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":76,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":131,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":165,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":55,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":98,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":129,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":127,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":41,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":47,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":152,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":120,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":134,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":137,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":103,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":95,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":130,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":159,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":40,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":19,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":38,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":108,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":112,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":23,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":139,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":62,"org.apache.commons.collections4.CollectionUtilsTest.testRemoveAll":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":96,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":162,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":115,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":149,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":116,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":142,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":94,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":113,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":118,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":164,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":69,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":135,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":80,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":86,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":61,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":37,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":145,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":3,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":33,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":6,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":35,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":34,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":81,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":42,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":30,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":89,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":14,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":74,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":44,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":124,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":151,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":17,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":15,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":123,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":133,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":26,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":79,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":92,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":141},"transformations":[{"failures":[],"tindex":"9977d45c-251b-11e5-a1a6-21ce0cf61ee5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1002","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"status":0},{"failures":[],"tindex":"9977fb6d-251b-11e5-a1a6-d7d1512ffc0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"9977fb6e-251b-11e5-a1a6-65ee96a023ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:88","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"9977fb6f-251b-11e5-a1a6-299f3469720f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key1","length":"hashCode","key":"key5"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:559","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[25],"tindex":"99782280-251b-11e5-a1a6-35f0224298bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl","sourcecode":"E = E"},"status":-1},{"failures":[26],"tindex":"99782281-251b-11e5-a1a6-bfeeb6c18cc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey() : null"},"variableMap":{"nextEntry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:789","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n} else {\n    throw new java.util.NoSuchElementException();\n}"},"status":-1},{"failures":[27,28],"tindex":"99782282-251b-11e5-a1a6-dd90480fe06d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1784","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E> == null) || ((java.util.Collection<E>.size()) != 1)) {\n    throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\");\n} "},"variableMap":{"collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:354","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (!(java.util.Collection<?>.contains(E))) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"99782283-251b-11e5-a1a6-d5ca50b32987","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:918","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>"},"status":-2},{"failures":[],"tindex":"99782284-251b-11e5-a1a6-59a78b0c37ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:180","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[],"tindex":"99782285-251b-11e5-a1a6-7541956a2513","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:159","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39],"tindex":"99784996-251b-11e5-a1a6-77bd47863149","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:237","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[40,41,42,43],"tindex":"99784997-251b-11e5-a1a6-158d0cf06c1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:126","type":"CtForImpl","sourcecode":"for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n    char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n}"},"status":-1},{"failures":[],"tindex":"99784998-251b-11e5-a1a6-8d8c5229bf48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70],"tindex":"99784999-251b-11e5-a1a6-41960ba1dbfc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:526","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"9978499a-251b-11e5-a1a6-91430a5f0cf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[71,72],"tindex":"9978499b-251b-11e5-a1a6-95cc3b210fa4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,40,41,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166],"tindex":"9978499c-251b-11e5-a1a6-b367e1fdcfb1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"997870ad-251b-11e5-a1a6-3d018ebe2b91","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:251","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"997870ae-251b-11e5-a1a6-01664561d696","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:375","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"997870af-251b-11e5-a1a6-abdadd36f54d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:545","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Bag<?> org.apache.commons.collections4.Bag<?> = ((org.apache.commons.collections4.Bag<?>)(java.lang.Object))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"9977d45c-251b-11e5-a1a6-21ce0cf61ee5","diffs":[{"nodes":{},"edges":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()"]},"type":"graph"},{"variables":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":["org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index = i","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.hashCode = hashCode","org.apache.commons.collections4.map.AbstractHashedMap.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry getEntry(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef.org.apache.commons.collections4.map.AbstractReferenceMap$WeakRef(int,T,java.lang.ref.ReferenceQueue)_this.hash = hash","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_int i = hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsValue(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> n = newCurrent.next","org.apache.commons.collections4.map.AbstractHashedMap.V get(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap.boolean containsKey(java.lang.Object)_entry = entry.next","org.apache.commons.collections4.map.AbstractHashedMap.V put(K,V)_entry = entry.next"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.hashIndex = i","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_return (next) != null","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.parent = parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_int i = data.length","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.next = next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_this.expectedModCount = parent.modCount"],"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_entry.next = newEntries[index]"]},"type":"variable"}]}]}