{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":125,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":50,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":59,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":15,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":86,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":83,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":118,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":107,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":126,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":98,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":87,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":108,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":51,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":79,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testIllegalAddAll":136,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":105,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":93,"org.apache.commons.collections4.MapUtilsTest.testInvertMap":133,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":25,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":65,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":31,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testIllegalAddAll":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":77,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":12,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":104,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFullMapCompatibility":130,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":110,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":41,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":113,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":124,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":24,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":36,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":128,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":66,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":102,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":106,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":4,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":61,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":115,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":121,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":70,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":80,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":7,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueCompatibility":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":47,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":103,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":127,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":72,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":91,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":46,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":54,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":132,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":112,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":2,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEmptyMapCompatibility":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":117,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":43,"org.apache.commons.collections4.set.PredicatedSetTest.testIllegalAddAll":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":29,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":100,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":37},"transformations":[{"failures":[],"tindex":"9d560671-415e-11e5-b55c-edb327ec1f95","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"9d562d82-415e-11e5-b55c-db589cdf4302","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()"},"status":-2},{"failures":[0,1,2,3],"tindex":"9d562d83-415e-11e5-b55c-9f41d57555d1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:138","type":"CtAssignmentImpl","sourcecode":"E[][int] = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[4],"tindex":"9d562d84-415e-11e5-b55c-33b086b3a30f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"iPredicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>.evaluate(T)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"9d565495-415e-11e5-b55c-1166380532ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:247","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.set.CompositeSet<E>.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109],"tindex":"9d565496-415e-11e5-b55c-3dd336daec98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[110,111,112,113,114,115,116,117,118,119,120,121,122,123],"tindex":"9d567ba7-415e-11e5-b55c-2fe0b8111a40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"current","root":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"9d567ba8-415e-11e5-b55c-6f5c12709467","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1922","type":"CtReturnImpl","sourcecode":"return boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]"},"variableMap":{"blackColor":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:126","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.containsKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"9d567ba9-415e-11e5-b55c-1f672b9e4687","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:300","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n    return false;\n} "},"variableMap":{"mut":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:108","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[124,125,126,127],"tindex":"9d567baa-415e-11e5-b55c-5fbcbc00f2e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++"},"variableMap":{"modCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[128],"tindex":"9d56a2bb-415e-11e5-b55c-bfc85a3dd213","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:91","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))"},"status":-1},{"failures":[129,130,131],"tindex":"9d56a2bc-415e-11e5-b55c-3923298ea5e2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:113","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-1},{"failures":[],"tindex":"9d56a2bd-415e-11e5-b55c-4fe65d8690ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0},{"failures":[],"tindex":"9d56a2be-415e-11e5-b55c-1357130bc45b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[],"tindex":"9d56c9cf-415e-11e5-b55c-8b70dd0b8c05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:90","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.AbstractCollectionDecorator) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>)(java.util.Collection<? extends E>)).decorated();\n} else if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.collection.SynchronizedCollection) {\n    java.util.Collection<? extends E> = ((org.apache.commons.collections4.collection.SynchronizedCollection<E>)(java.util.Collection<? extends E>)).decorated();\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:257","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<E>.contains(java.lang.Object)) {\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"9d56c9d0-415e-11e5-b55c-9323752518b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"index","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:343","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[132],"tindex":"9d56c9d1-415e-11e5-b55c-953d45c5974c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:581","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.Character)"},"status":-1},{"failures":[133],"tindex":"9d56f0e2-415e-11e5-b55c-59b4ae04c4f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1063","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey())"},"status":-1},{"failures":[134,135,136],"tindex":"9d56f0e3-415e-11e5-b55c-3b2f52b26b29","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.PredicatedCollection:132","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E);\n}"},"status":-1},{"failures":[],"tindex":"9d56f0e4-415e-11e5-b55c-350f21bd04ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"key4","out":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}