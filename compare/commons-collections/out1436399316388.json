{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":68,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":43,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":25,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":61,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRetainAll":77,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":29,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":34,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":56,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testDecorateFactory":83,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":26,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":28,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":75,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":74,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":30,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":59,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":71,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":44,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRetainAll":79,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":41,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":46,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":55,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRetainAll":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveChangesMap":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":70,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetRemoveChangesMap":9,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetRemoveChangesMap":11,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetRemoveChangesMap":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":63,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":24},"transformations":[{"failures":[],"tindex":"d99ad649-25cb-11e5-bc18-3f6afff209ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"deletedNode","rightChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"d99afd5a-25cb-11e5-bc18-cb0873a407d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:639","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2},{"failures":[0,1,2,3],"tindex":"d99afd5b-25cb-11e5-bc18-ff4d794f30f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:162","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"d99afd5c-25cb-11e5-bc18-0945424346b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:368","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[4,5],"tindex":"d99b246d-25cb-11e5-bc18-09dbc0f1bd07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().set(int, E)"},"status":-1},{"failures":[6,7],"tindex":"d99b246e-25cb-11e5-bc18-d94851773e05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"d99b246f-25cb-11e5-bc18-f7c84f427a90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:96","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"d99b2470-25cb-11e5-bc18-4f9c75d751af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:100","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.HashMap<K, V>()"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()"},"status":0},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"d99b2471-25cb-11e5-bc18-af8368a0e5f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-1},{"failures":[],"tindex":"d99b4b82-25cb-11e5-bc18-b34d08fb7259","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:188","type":"CtIfImpl","sourcecode":"if ((this.int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\");\n} "},"variableMap":{"lastItemIndex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1230","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)"},"status":-2},{"failures":[75],"tindex":"d99b4b83-25cb-11e5-bc18-299b2aeb4713","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:188","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-1},{"failures":[76,77,78,79,80,81],"tindex":"d99b4b84-25cb-11e5-bc18-d7168b11da10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"null nonNullComparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:100","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[82],"tindex":"d99b4b85-25cb-11e5-bc18-2b625653fee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:297","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-1},{"failures":[],"tindex":"d99b4b86-25cb-11e5-bc18-5bd78e577366","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()"},"status":-2},{"failures":[],"tindex":"d99b4b87-25cb-11e5-bc18-7b75e38c3bbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"x":"node","y":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"d99b7298-25cb-11e5-bc18-85c38766a752","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:65","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.util.Map<? extends K, ? extends V>))"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:187","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map<K, V> java.util.Map<K, V> = new org.apache.commons.collections4.map.LinkedMap<K, V>(java.util.Map<? extends J, ? extends U>.size())"},"status":-2},{"failures":[],"tindex":"d99b7299-25cb-11e5-bc18-2557930aa445","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:197","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[83],"tindex":"d99b729a-25cb-11e5-bc18-777b286621dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-1},{"failures":[],"tindex":"d99b99ab-25cb-11e5-bc18-b1e825330432","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1359","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"d99b99ac-25cb-11e5-bc18-d9d42bce0ddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:871","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().mapIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}