{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":75,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":28,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":70,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":0,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":11,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":12,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":14,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":17,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":22,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":18,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":59,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":1,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":56,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSimpleSerialization":6,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":63,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":71,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":4,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":23,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":43,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":57,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":10,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":45,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":74,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":78,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":20,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":62,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":73,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":8,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":69,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":3,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":60,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":30,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":77,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":54,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":66,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":80,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":64,"org.apache.commons.collections4.map.Flat3MapTest.testToString":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":19,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":36,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":35,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":65,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":76,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":2},"transformations":[{"failures":[0,1],"tindex":"5ef5bb4b-46dc-11e5-801c-e7a088932d9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:439","type":"CtReturnImpl","sourcecode":"return int & (int - 1)"},"variableMap":{"hashCode":"index","dataSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:137","type":"CtReturnImpl","sourcecode":"return (this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())"},"status":-1},{"failures":[],"tindex":"5ef5e25c-46dc-11e5-801c-9f6a8ca4bce4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"variableMap":{"stream":"out","this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:90","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"5ef5e25d-46dc-11e5-801c-614e3aac8fe4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"5ef5e25e-46dc-11e5-801c-c710c61f9742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:268","type":"CtForImpl","sourcecode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n    if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n        java.util.Iterator<E>.remove();\n    } \n}"},"status":-2},{"failures":[],"tindex":"5ef6096f-46dc-11e5-801c-bf8cb889f0af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((K == (this) ? \"(this Map)\" : K)).append('=').append((V == (this) ? \"(this Map)\" : V))"},"status":0},{"failures":[2,3,4],"tindex":"5ef60970-46dc-11e5-801c-59c284f4a4f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"status":-1},{"failures":[],"tindex":"5ef60971-46dc-11e5-801c-69b27e344a92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1142","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[0],"tindex":"5ef60972-46dc-11e5-801c-1f7d688af020","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:379","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[] , int)"},"status":-1},{"failures":[],"tindex":"5ef60973-46dc-11e5-801c-d9cecdbe08ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"previous","entry":"entry","key2":"key2","hashCode":"hashCode","key3":"key2","key4":"key1","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"5ef63084-46dc-11e5-801c-992d8464e58e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:150","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.Bag<?>.uniqueSet().iterator()"},"variableMap":{"other":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:253","type":"CtLocalVariableImpl","sourcecode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()"},"status":-2},{"failures":[],"tindex":"5ef63085-46dc-11e5-801c-239d7de05007","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:90","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableCollection(org.apache.commons.collections4.Trie<K, V>.values())"},"status":-2},{"failures":[5,6],"tindex":"5ef63086-46dc-11e5-801c-293995445854","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:529","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"5ef63087-46dc-11e5-801c-695342baff20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:223","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int)]"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"5ef65798-46dc-11e5-801c-1d973d74e88c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":-1},{"failures":[61],"tindex":"5ef65799-46dc-11e5-801c-cf1ee4dec4b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"canRemove":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:382","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"5ef6579a-46dc-11e5-801c-e9d842c06ae2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:683","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" must not be negative\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":0},{"failures":[],"tindex":"5ef6579b-46dc-11e5-801c-d35649f420a6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:580","type":"CtForEachImpl","sourcecode":"for (java.lang.Character java.lang.Character : java.util.List<java.lang.Character>) {\n    java.lang.StringBuilder.append(java.lang.Character);\n}"},"status":-2},{"failures":[62],"tindex":"5ef6579c-46dc-11e5-801c-a7ada696cded","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"end","lastItemIndex":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:143","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"5ef67ead-46dc-11e5-801c-379fc7e8511a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue()"},"status":0},{"failures":[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"5ef67eae-46dc-11e5-801c-d3327891b2ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:469","type":"CtForImpl","sourcecode":"for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(E));\n    T[][int++] = T;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}