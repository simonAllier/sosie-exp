{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalEmptyCollectionExists":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":7,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":16,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":40,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":172,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":117,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicate":81,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":152,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":199,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":198,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":153,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":131,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":8,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":148,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":88,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":67,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":191,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":68,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":69,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":26,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":179,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":77,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":175,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":173,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":171,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":2,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":150,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":180,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":83,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":200,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":52,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":104,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":162,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":155,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":114,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":146,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":78,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":158,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":174,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":12,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":33,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":6,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":137,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":76,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":65,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":185,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":130,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":161,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":140,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":193,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":166,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":11,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":141,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":151,"org.apache.commons.collections4.CollectionUtilsTest.testPermutationsWithNullCollection":84,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":165,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":44,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":159,"org.apache.commons.collections4.map.MultiValueMapTest.testNoMappingReturnsNull":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":170,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":178,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":143,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":112,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":183,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":45,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.functors.AllPredicateTest.trueAndFalseCombined":80,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":58,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":14,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":35,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":181,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":28,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":147,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":134,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":5,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":184,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":53,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":192,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":75,"org.apache.commons.collections4.functors.AllPredicateTest.allTrue":79,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":177,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":120,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":142,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":197,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":13,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":25,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":106,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":157,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":100,"org.apache.commons.collections4.map.MultiValueMapTest.testCanonicalFullCollectionExists":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":85,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":90,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":34,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToString":63,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":18,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":31,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":108,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":133,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":196,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":113,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":50,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":164,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":132,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":135,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":0,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":144,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":64,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":1,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":98,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":111,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":145,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":149,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":74,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":124,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":66,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":38,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":37,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":29,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":116,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":127,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":186,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionSize":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsSelfHashCode":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":139,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":119,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":203,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":30,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":201,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":138,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":163,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":21,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":202,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":20,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":169,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":56,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":195,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":189,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":57,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":109,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":46,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":194,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":122,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":82,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":168,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":103,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":187,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":190,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":110,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":167,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":121,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":59,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":118},"transformations":[{"failures":[],"tindex":"32816074-2330-11e5-a19c-95e90b715bf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:189","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"32872cd5-2330-11e5-a19c-ff2972ac8cd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1203","type":"CtBreakImpl","sourcecode":"break"},"status":-2},{"failures":[],"tindex":"32872cd6-2330-11e5-a19c-1bc51e6698b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0,1,2],"tindex":"328a3a17-2330-11e5-a19c-53c6aba738e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:89","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[3,4],"tindex":"328a3a18-2330-11e5-a19c-c192a87c35e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}"},"status":-1},{"failures":[],"tindex":"328a6129-2330-11e5-a19c-c5b6bf68367e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:685","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"rval":"parent","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:617","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[5],"tindex":"328a612a-2330-11e5-a19c-311a6e4d95f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)"},"status":-1},{"failures":[],"tindex":"328a612b-2330-11e5-a19c-c350b051169b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[],"tindex":"328a883c-2330-11e5-a19c-51fb2d14e0a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:264","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"328a883d-2330-11e5-a19c-498abf0a5294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:96","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"328a883e-2330-11e5-a19c-69c42b40a7b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1355","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"328a883f-2330-11e5-a19c-915993c7d153","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:124","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))"},"status":-2},{"failures":[6,7,8,9],"tindex":"328aaf50-2330-11e5-a19c-dfb52b4b5555","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"size":"h","cSize":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[],"tindex":"328aaf51-2330-11e5-a19c-3bf7953a518a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"rval","node":"rval","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:701","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"328aaf52-2330-11e5-a19c-0970970b933e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:222","type":"CtReturnImpl","sourcecode":"return java.util.Map<V, K>.get(java.lang.Object)"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"328aaf53-2330-11e5-a19c-1b35c38a919f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"previousObjectSet","removed":"previousObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"328ad664-2330-11e5-a19c-498f34ec1898","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:141","type":"CtAssignmentImpl","sourcecode":"E = null"},"status":0},{"failures":[],"tindex":"328ad665-2330-11e5-a19c-3bc353160320","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"328ad666-2330-11e5-a19c-254427326905","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"result","nextCalled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[76,77,78],"tindex":"328afd77-2330-11e5-a19c-9fa35595cf6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:293","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.updateNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E)"},"status":-1},{"failures":[],"tindex":"328afd78-2330-11e5-a19c-237b96e1d17b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"status":0},{"failures":[79,79,80,81],"tindex":"328afd79-2330-11e5-a19c-f791d1c7a2d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:87","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.Predicate<T>[])"},"status":-1},{"failures":[],"tindex":"328afd7a-2330-11e5-a19c-43fcfe416bbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"328b248b-2330-11e5-a19c-69f56404a97c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:135","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:280","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(this, java.util.List<java.util.Collection<E>>, java.util.Collection<? extends E>)"},"status":-2},{"failures":[82,83],"tindex":"328b248c-2330-11e5-a19c-9553c646721e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"nodeCount","lengthInBits":"nodeCount","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[84],"tindex":"328b4b9d-2330-11e5-a19c-63116c00d021","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The collection must not be null\")"},"status":-1},{"failures":[],"tindex":"328b4b9e-2330-11e5-a19c-27990485e762","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:291","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, false)"},"status":-2},{"failures":[],"tindex":"328b4b9f-2330-11e5-a19c-c3adbffab9ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"328b72b0-2330-11e5-a19c-d52910d89c4a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:211","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().putAll(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformMap(java.util.Map<? extends J, ? extends U>))"},"status":-2},{"failures":[6,7,8,9],"tindex":"328b72b1-2330-11e5-a19c-cd2b62a198cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1079","type":"CtAssignmentImpl","sourcecode":"int = --(int)"},"variableMap":{"nextIndex":"h","currentIndex":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:371","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"328b72b2-2330-11e5-a19c-c31c613e79cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:512","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"siblingNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement","newNode":"siblingNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1070","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"328b99c3-2330-11e5-a19c-33b9cfd6c03d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"328b99c4-2330-11e5-a19c-0572b9f11ae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:90","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"328b99c5-2330-11e5-a19c-7be8fc48c77e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1389","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:583","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"328bc0d6-2330-11e5-a19c-37888476f048","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsTruePredicate:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<? super T>.evaluate(T)"},"status":-2},{"failures":[],"tindex":"328bc0d7-2330-11e5-a19c-7970b454a0a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:259","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"currentIndex":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:282","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++"},"status":-2},{"failures":[],"tindex":"328bc0d8-2330-11e5-a19c-f3f1fde55037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1941","type":"CtAssignmentImpl","sourcecode":"boolean[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = true"},"variableMap":{"blackColor":"name","dataElement":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:223","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"328be7e9-2330-11e5-a19c-05773fb7c175","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)"},"status":-2},{"failures":[],"tindex":"328be7ea-2330-11e5-a19c-ed3b324d2ed1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"32933aeb-2330-11e5-a19c-0da8343b3293","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-2},{"failures":[],"tindex":"329361fc-2330-11e5-a19c-977633852d64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:138","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-2},{"failures":[8,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193],"tindex":"329361fd-2330-11e5-a19c-0d8b4bb1c21e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:138","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"329361fe-2330-11e5-a19c-83ca7b00d7c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:321","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return false;\n} "},"variableMap":{"nCopies":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:296","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n        return false;\n    } \n}"},"status":-2},{"failures":[194,195,196,197,198,199],"tindex":"3293890f-2330-11e5-a19c-9733ad6f79c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.ReplacementsFinder:94","type":"CtInvocationImpl","sourcecode":"java.util.List<T>.clear()"},"variableMap":{"pendingDeletions":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:224","type":"CtWhileImpl","sourcecode":"while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = int--;\n    int--;\n}"},"status":-1},{"failures":[],"tindex":"32938910-2330-11e5-a19c-2d4810a238a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"32938911-2330-11e5-a19c-4f4bc0ef2c10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:768","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-2},{"failures":[],"tindex":"32938912-2330-11e5-a19c-1f513b90dd37","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\")"},"status":-2},{"failures":[200,201],"tindex":"32938913-2330-11e5-a19c-ebd2c024fd57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"variableMap":{"transformer":"transformer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[202,203],"tindex":"3293b024-2330-11e5-a19c-4f5e1294af82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:157","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().set(int, E)"},"status":-1},{"failures":[],"tindex":"3293b025-2330-11e5-a19c-599d8632d27d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:103","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":50,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}