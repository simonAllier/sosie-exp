{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":0,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":57,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":40,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":3,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":32,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":5,"org.apache.commons.collections4.list.TreeListTest.testRemove":34,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":24,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":58,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":69,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":43,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":31,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":22,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":6,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":9,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":46,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":55,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":19,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":1,"org.apache.commons.collections4.list.TreeListTest.testBug35258":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":30,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":28,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":26,"org.apache.commons.collections4.iterators.ListIteratorWrapper2Test.testReset":66,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":62},"transformations":[{"failures":[],"tindex":"dcdd52eb-4205-11e5-9c0f-4b95b3c341b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:380","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E);\n    final int int = org.apache.commons.collections4.Bag<?>.getCount(E);\n    if ((1 <= int) && (int <= int)) {\n        org.apache.commons.collections4.Bag<E>.add(E, (int - int));\n    } else {\n        org.apache.commons.collections4.Bag<E>.add(E, int);\n    }\n}"},"status":-2},{"failures":[],"tindex":"dcdd79fc-4205-11e5-9c0f-136c6449efa1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:975","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"dcdd79fd-4205-11e5-9c0f-e7ee41798e54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:792","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1292","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[0],"tindex":"dcdd79fe-4205-11e5-9c0f-ed5dd6a986ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"changed","removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:316","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"dcdd79ff-4205-11e5-9c0f-99ce384d1e3a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"status":-2},{"failures":[1,2],"tindex":"dcdd7a00-4205-11e5-9c0f-33ff3d8f5282","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"reuse"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:255","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32],"tindex":"dcdda111-4205-11e5-9c0f-13ab180a21d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:221","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"dcdda112-4205-11e5-9c0f-912b5224826d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"dcdda113-4205-11e5-9c0f-1789a6aa9dee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:165","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K)"},"status":-2},{"failures":[],"tindex":"dcdda114-4205-11e5-9c0f-01e32742fd17","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41],"tindex":"dcdda115-4205-11e5-9c0f-211af05577d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:378","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>"},"variableMap":{"left":"root","prev":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:204","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null)"},"status":-1},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"dcdda116-4205-11e5-9c0f-9deb7eb2c034","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"status":-1},{"failures":[],"tindex":"dcddc827-4205-11e5-9c0f-cfc1eaf30677","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1401","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:290","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator<V>(java.util.Iterator<V> , this)"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64,65],"tindex":"dcddc828-4205-11e5-9c0f-4bbc1ef680a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1025","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"dcddc829-4205-11e5-9c0f-131e6d6d0765","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:285","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupValue(java.lang.Object)"},"status":-2},{"failures":[66],"tindex":"dcddef3a-4205-11e5-9c0f-8bcd7dbd4dcc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:252","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n        java.util.ListIterator<?>.previous();\n    }\n    return ;\n} "},"status":-1},{"failures":[],"tindex":"dcddef3b-4205-11e5-9c0f-b526673e642b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableSortedMap.unmodifiableSortedMap(java.util.SortedMap<K, V>)"},"status":-2},{"failures":[],"tindex":"dcddef3c-4205-11e5-9c0f-9d99d466d3fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:199","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return true;\n    } \n}"},"status":0},{"failures":[],"tindex":"dcddef3d-4205-11e5-9c0f-475ff71dd8cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:134","type":"CtForImpl","sourcecode":"for (int int = (java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    final java.util.Collection<K> java.util.Collection<K> = org.apache.commons.collections4.CollectionUtils.intersection(this.java.util.Map<K, V>[][int].keySet(), java.util.Map<K, V>.keySet());\n    if ((java.util.Collection<K>.size()) != 0) {\n        if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n            throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n        } \n        this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>);\n    } \n}"},"status":-2},{"failures":[67,68,69],"tindex":"dcddef3e-4205-11e5-9c0f-e5899689a460","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:115","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (int >= int)) {\n    return false;\n} "},"variableMap":{"lengthInBits":"hashCode","key":"key5","bitIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}