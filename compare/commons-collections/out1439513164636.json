{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":33,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":6,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":19,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":66,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":51,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":75,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":73,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":77,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":89,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":5,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":42,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":35,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":38,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":91,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":70,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":90,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":88,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":69,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":53,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":11,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":80,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":3,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":13,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":43,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError1":7,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":63,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":9,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":58,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":29,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":68,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":48,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":30,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":59,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":87,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":81,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":27,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":60},"transformations":[{"failures":[0],"tindex":"d7ca6b9d-421d-11e5-b2d2-b94ef2c1a8e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:145","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.UnmodifiableList<E>(java.util.List<E>)"},"variableMap":{"sub":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList.predicatedList(java.util.List<E>, org.apache.commons.collections4.Predicate<E>)"},"status":-1},{"failures":[1,2,3,4,5],"tindex":"d7ca6b9e-421d-11e5-b2d2-55e47251b34b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"d7ca92af-421d-11e5-b2d2-6936900e3a25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:173","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.remove(java.util.Map<V, K>.get(V))"},"status":-2},{"failures":[6],"tindex":"d7ca92b0-421d-11e5-b2d2-29d851961e0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"d7ca92b1-421d-11e5-b2d2-150f1c9237c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:591","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"variableMap":{"hash3":"index","hash2":"index","hash1":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:340","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"d7ca92b2-421d-11e5-b2d2-114481b174b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:847","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"nextIndex":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:98","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Set<E>.size()"},"status":-1},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"d7ca92b3-421d-11e5-b2d2-57f5794c3302","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:277","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"d7cb07e4-421d-11e5-b2d2-e767912d9ac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:135","type":"CtReturnImpl","sourcecode":"return ((T[])(java.lang.Object[]))"},"status":-1},{"failures":[],"tindex":"d7cb07e5-421d-11e5-b2d2-2193ca0fab52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1108","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))"},"status":-2},{"failures":[],"tindex":"d7cb2ef6-421d-11e5-b2d2-3d65c33d7243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.UnmodifiableList:55","type":"CtIfImpl","sourcecode":"if (java.util.List<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.List<E> java.util.List<E> = ((java.util.List<E>)(java.util.List<? extends E>));\n    return java.util.List<E>;\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.UnmodifiableList.unmodifiableList(java.util.List<? extends E>)"},"status":-2},{"failures":[],"tindex":"d7cb2ef7-421d-11e5-b2d2-217ca9b52b66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:138","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Closure<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[],"tindex":"d7cb2ef8-421d-11e5-b2d2-4d7bc783a25b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","modCount":"hashIndex","before":"entry","header":"entry","after":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:322","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int)"},"status":-2},{"failures":[],"tindex":"d7cb2ef9-421d-11e5-b2d2-4b12340e2c63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-2},{"failures":[],"tindex":"d7cb560a-421d-11e5-b2d2-d99c08db9a84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"d7cb560b-421d-11e5-b2d2-e75adae0db99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key1","entry":"entry","key2":"key1","key5":"key1","previous":"entry","hashCode":"hashCode","key3":"key2","key4":"key2","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"d7cb560c-421d-11e5-b2d2-656ebd427694","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)"},"status":-2},{"failures":[],"tindex":"d7cb560d-421d-11e5-b2d2-4993fc6dd742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:566","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"next":"entry","before":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:299","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))"},"status":-2},{"failures":[],"tindex":"d7cb7d1e-421d-11e5-b2d2-495c44b386d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:261","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[87,88,89,90,91],"tindex":"d7cb7d1f-421d-11e5-b2d2-23ecebc6d8a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:335","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}