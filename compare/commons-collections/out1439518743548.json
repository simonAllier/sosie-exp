{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":59,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":89,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":26,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapClear":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":42,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":9,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":62,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":88,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":78,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":44,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":30,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":32,"org.apache.commons.collections4.list.TreeListTest.testRemove":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":82,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":22,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":90,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":83,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking":69,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking":74,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":81,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":28,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":80,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":87,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":4,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":65,"org.apache.commons.collections4.ListUtilsTest.testLazyList":97,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":31,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":79,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":37,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":40,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":67,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":86,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":33,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":39,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":19,"org.apache.commons.collections4.list.TreeListTest.testListEquals":66,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":16,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":56,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.LRUMapTest.testLRU":1,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":73,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":35,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":68,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectEqualsSelf":55,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":70,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":18,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":3,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":2,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":8,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":29,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":93,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":77,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":76,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":0,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":43,"org.apache.commons.collections4.list.TreeListTest.testBug35258":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":17,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":94,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":58},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"d5171f14-422a-11e5-ae01-03c63f3ea247","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2310","type":"CtIfImpl","sourcecode":"if ((int) != 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hit":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[],"tindex":"d5174625-422a-11e5-ae01-b5f2750222cc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:246","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E"},"status":-2},{"failures":[9,10,11],"tindex":"d5174626-422a-11e5-ae01-a754ce78bdd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"d5174627-422a-11e5-ae01-f50aee78f0df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"d5174628-422a-11e5-ae01-6f9abe63a4b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1367","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42],"tindex":"d5176d39-422a-11e5-ae01-79b815fa3417","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"d5176d3a-422a-11e5-ae01-11c909063033","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=')"},"status":0},{"failures":[],"tindex":"d5176d3b-422a-11e5-ae01-f3b3f2e9d9ab","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:362","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"d5176d3c-422a-11e5-ae01-93f89e7ba341","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:616","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53],"tindex":"d5176d3d-422a-11e5-ae01-9dc7a57171d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[54],"tindex":"d517944e-422a-11e5-ae01-6d88a0278712","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:135","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"status":-1},{"failures":[],"tindex":"d517944f-422a-11e5-ae01-4b538cb85e92","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>)"},"status":-2},{"failures":[],"tindex":"d5179450-422a-11e5-ae01-4daddc7d385b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"variableMap":{"li":"lastUsedIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-2},{"failures":[],"tindex":"d5179451-422a-11e5-ae01-27267c575645","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:140","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:983","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.toList(java.util.Iterator<? extends E>, 100)"},"status":-2},{"failures":[55],"tindex":"d5179452-422a-11e5-ae01-11bb566c71a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:858","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:407","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[56],"tindex":"d5179453-422a-11e5-ae01-63905bb99570","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:190","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[],"tindex":"d5179454-422a-11e5-ae01-e7f1805821a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"d5179455-422a-11e5-ae01-e5246d83b151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"entry","e":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:221","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96],"tindex":"d517bb66-422a-11e5-ae01-9d92ddecc129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:112","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[97],"tindex":"d517bb67-422a-11e5-ae01-95253bbeb39c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl","sourcecode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}