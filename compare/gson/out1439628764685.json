{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"feca34ba-432a-11e5-89bb-731970749c2f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:160","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['='] = \"\\\\u003d\""},"variableMap":{"com.google.gson.stream.JsonWriter.HTML_SAFE_REPLACEMENT_CHARS":"com.google.gson.stream.JsonWriter.HTML_SAFE_REPLACEMENT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:157","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['<'] = \"\\\\u003c\""},"status":-2},{"failures":[],"tindex":"feca5bcb-432a-11e5-89bb-8bdb427adff1","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:650","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setIndent(\"  \")"},"variableMap":{"jsonWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:466","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeValue(false)"},"status":-1},{"failures":[],"tindex":"feca5bcc-432a-11e5-89bb-6987f8c91abb","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:65","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.nextNull()"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1373","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.checkLenient()"},"status":-1},{"failures":[],"tindex":"feca5bcd-432a-11e5-89bb-83254041ade9","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"variableMap":{"p":"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN","pos":"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE","peekedNumberLength":"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:683","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    boolean = true;\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"feca82de-432a-11e5-89bb-257f6710c937","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:383","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected BEGIN_OBJECT but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"variableMap":{"p":"pos","com.google.gson.stream.JsonReader.PEEKED_NONE":"pos","com.google.gson.stream.JsonScope.EMPTY_OBJECT":"i","peeked":"pos","this":"this","com.google.gson.stream.JsonReader.PEEKED_BEGIN_OBJECT":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1047","type":"CtSwitchImpl","sourcecode":"switch (char[][((int) + int)]) {\n    case '/' :\n    case '\\\\' :\n    case ';' :\n    case '#' :\n    case '=' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case '{' :\n    case '}' :\n    case '[' :\n    case ']' :\n    case ':' :\n    case ',' :\n    case ' ' :\n    case '\\t' :\n    case '\\f' :\n    case '\\r' :\n    case '\\n' :\n        break findNonLiteralCharacter;\n}"},"status":-1},{"failures":[],"tindex":"feca82df-432a-11e5-89bb-1d6b5e14ff6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:762","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.checkLenient()"},"status":0},{"failures":[],"tindex":"feca82e0-432a-11e5-89bb-03211812dcc4","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:100","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments())"},"variableMap":{"p":"parameterized"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.canonicalize(java.lang.reflect.ParameterizedType.getActualTypeArguments()[0])"},"status":-2},{"failures":[],"tindex":"feca82e1-432a-11e5-89bb-17234cbb78d0","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:485","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '}' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n    }\n} "},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"com.google.gson.stream.JsonScope.DANGLING_NAME","peekStack":"limit","peeked":"peekStack","this":"this","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:469","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ']' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n    }\n} else if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-2},{"failures":[],"tindex":"fecaa9f2-432a-11e5-89bb-dfee5f87b452","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:658","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:729","type":"CtLocalVariableImpl","sourcecode":"long long = (long * 10) - (char - '0')"},"status":-2},{"failures":[],"tindex":"fecaa9f3-432a-11e5-89bb-adbd71766e0c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:218","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \": \""},"variableMap":{"separator":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:794","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.google.gson.stream.JsonReader.nextUnquotedValue()"},"status":-1},{"failures":[],"tindex":"fecaa9f4-432a-11e5-89bb-1553bab77018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:236","type":"CtReturnImpl","sourcecode":"return (int ^ (int >>> 7)) ^ (int >>> 4)"},"status":-2},{"failures":[],"tindex":"fecaa9f5-432a-11e5-89bb-f5c6bb6a9c7e","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeName()"},"variableMap":{"this":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:662","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setLenient(true)"},"status":-2},{"failures":[],"tindex":"fecaa9f6-432a-11e5-89bb-1f75ece49879","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:350","type":"CtIfImpl","sourcecode":"if (com.google.gson.Gson.FutureTypeAdapter<T> != null) {\n    return com.google.gson.Gson.FutureTypeAdapter<T>;\n} "},"variableMap":{"ongoingCall":"call"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:358","type":"CtForEachImpl","sourcecode":"for (com.google.gson.TypeAdapterFactory com.google.gson.TypeAdapterFactory : java.util.List<com.google.gson.TypeAdapterFactory>) {\n    com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = com.google.gson.TypeAdapterFactory.create(this, com.google.gson.reflect.TypeToken<T>);\n    if (com.google.gson.TypeAdapter<T> != null) {\n        com.google.gson.Gson.FutureTypeAdapter<T>.setDelegate(com.google.gson.TypeAdapter<T>);\n        java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.TypeAdapter<?>>.put(com.google.gson.reflect.TypeToken<T>, com.google.gson.TypeAdapter<T>);\n        return com.google.gson.TypeAdapter<T>;\n    } \n}"},"status":-1},{"failures":[],"tindex":"fecaa9f7-432a-11e5-89bb-1fcc35b0b264","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"limit"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1106","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"fecad108-432a-11e5-89bb-5f0048035ed8","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:96","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:341","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"fecad109-432a-11e5-89bb-b514050d182a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:744","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"leavesSkipped":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:468","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = com.google.gson.stream.JsonScope.int"},"status":-1},{"failures":[],"tindex":"fecad10a-432a-11e5-89bb-5990887d0b9f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1189","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        int = java.lang.Integer.parseInt(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return int;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_NONE","result":"pos","com.google.gson.stream.JsonReader.PEEKED_NONE":"p","stackSize":"peeked","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"peeked","peeked":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED","this":"this","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"result","peekedString":"peekedString","pathIndices":"pathIndices"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1186","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        int = java.lang.Integer.parseInt(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return int;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-2},{"failures":[],"tindex":"fecad10b-432a-11e5-89bb-e798bc0068fc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:778","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"lastReturned":"nearest","e":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:153","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"fecad10c-432a-11e5-89bb-23968ef818c8","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"This is not a JSON Array.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:463","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + double))"},"status":-1},{"failures":[],"tindex":"fecad10d-432a-11e5-89bb-31975da9793d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:390","type":"CtTryImpl","sourcecode":"try {\n    return new java.math.BigInteger(com.google.gson.stream.JsonReader.nextString());\n} catch (java.lang.NumberFormatException e) {\n    throw new com.google.gson.JsonSyntaxException(java.lang.NumberFormatException);\n}"},"variableMap":{"in":"value","e":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:215","type":"CtReturnImpl","sourcecode":"return (java.lang.Object) instanceof java.math.BigInteger ? ((java.math.BigInteger)(java.lang.Object)) : new java.math.BigInteger(java.lang.Object.toString())"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}