{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"cdf1c778-42bb-11e5-be30-0fe5e644808e","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:667","type":"CtIfImpl","sourcecode":"if ((int + int) == int) {\n    if (int == (char[].int)) {\n        return com.google.gson.stream.JsonReader.int;\n    } \n    if (!com.google.gson.stream.JsonReader.(fillBuffer((int + 1)))) {\n        break;\n    } \n    int = int;\n    int = int;\n} "},"variableMap":{"p":"com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT","com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonScope.CLOSED","pos":"com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME","length":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","limit":"stackSize","this":"this","i":"com.google.gson.stream.JsonReader.PEEKED_END_ARRAY","buffer":"buffer","l":"com.google.gson.stream.JsonScope.NONEMPTY_OBJECT"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:467","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ']' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n    }\n} else if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-2},{"failures":[],"tindex":"cdf1ee89-42bb-11e5-be30-d9fbc365f589","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"minimum":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1120","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"cdf1ee8a-42bb-11e5-be30-bb9eb3e9d68f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:103","type":"CtReturnImpl","sourcecode":"return boolean ? com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken : com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"status":-2},{"failures":[],"tindex":"cdf1ee8b-42bb-11e5-be30-295cd021e392","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:576","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][int];\n    if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n        continue;\n    } \n    com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    int int = 0;\n    int int = 0;\n    for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.next()) != null ; ) {\n        if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n            int++;\n        } else {\n            int++;\n        }\n    }\n    com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.reset(int);\n    com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.reset(int);\n    com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.reset(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.next()) != null ; ) {\n        if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n            com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n        } else {\n            com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n        }\n    }\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][int] = int > 0 ? com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.root() : null;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[][(int + int)] = int > 0 ? com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.root() : null;\n}"},"status":-2},{"failures":[],"tindex":"cdf2159c-42bb-11e5-be30-8dbcb69b23fb","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1537","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"pos":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:908","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"cdf2159d-42bb-11e5-be30-e1510bdcbac4","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:247","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"next":"node","node":"parent","prev":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:313","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"status":0},{"failures":[],"tindex":"cdf2159e-42bb-11e5-be30-bb020109cfa9","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1553","type":"CtReturnImpl","sourcecode":"return '\\f'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1564","type":"CtReturnImpl","sourcecode":"return char"},"status":-1},{"failures":[],"tindex":"cdf2159f-42bb-11e5-be30-f36437e29966","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:472","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case ']' :\n        return int = com.google.gson.stream.JsonReader.int;\n    case ';' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case ',' :\n        break;\n    default :\n        throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n}"},"variableMap":{"c":"peeked","peeked":"com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"c","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:514","type":"CtIfImpl","sourcecode":"if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n}"},"status":-2},{"failures":[],"tindex":"cdf215a0-42bb-11e5-be30-c5126c5f9d7f","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:492","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"variableMap":{"stringBuilder":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1487","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('.')"},"status":-1},{"failures":[],"tindex":"cdf215a1-42bb-11e5-be30-4b9dff65df49","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:649","type":"CtReturnImpl","sourcecode":"return int = int"},"variableMap":{"peeking":"com.google.gson.stream.JsonReader.PEEKED_NULL","peeked":"com.google.gson.stream.JsonReader.PEEKED_NULL"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:566","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"cdf23bb2-42bb-11e5-be30-5da523e2ff89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1499","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"cdf23bb3-42bb-11e5-be30-8543c0dcf959","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"minimum":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:949","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":-1},{"failures":[],"tindex":"cdf23bb4-42bb-11e5-be30-c5b2d8d93c86","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"p","style":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1024","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"cdf23bb5-42bb-11e5-be30-ef3657851265","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:726","type":"CtIfImpl","sourcecode":"if (long == 0) {\n    return com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_NONE","value":"com.google.gson.stream.JsonReader.MIN_INCOMPLETE_INTEGER"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:722","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    long = -(char - '0');\n    int = com.google.gson.stream.JsonReader.int;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    if (long == 0) {\n        return com.google.gson.stream.JsonReader.int;\n    } \n    long long = (long * 10) - (char - '0');\n    boolean &= (long > (com.google.gson.stream.JsonReader.long)) || ((long == (com.google.gson.stream.JsonReader.long)) && (long < long));\n    long = long;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = com.google.gson.stream.JsonReader.int;\n} "},"status":-1},{"failures":[],"tindex":"cdf23bb6-42bb-11e5-be30-018af56fbd8f","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:50","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>>, java.util.Map<java.lang.Class<?>, java.lang.Class<?>>, float.float, java.lang.Float.java.lang.Float)"},"status":-2},{"failures":[],"tindex":"cdf23bb7-42bb-11e5-be30-3304317c8053","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"p","limit":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:676","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"cdf262c8-42bb-11e5-be30-390dcd44bfb6","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:556","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"peekStack":"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT","peeked":"last","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:742","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) && boolean) && ((long != (java.lang.Long.long)) || boolean)) {\n    long = boolean ? long : -long;\n    int += int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"status":-2},{"failures":[],"tindex":"cdf262c9-42bb-11e5-be30-81767db4986a","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:278","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType() : ((java.lang.Class<?>)(java.lang.reflect.Type)).getComponentType()"},"variableMap":{"array":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:101","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"status":-2},{"failures":[],"tindex":"cdf262ca-42bb-11e5-be30-5ffc6073f02a","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"lineNumber","lineStart":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1556","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"cdf262cb-42bb-11e5-be30-1f8d7676c0d1","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:537","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> == (com.google.gson.internal.LinkedTreeMap.Node<K, V>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"node","header":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:292","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}