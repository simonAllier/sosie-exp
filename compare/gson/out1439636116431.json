{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"1cc59ec1-433c-11e5-92d7-1f8d00fd6edf","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:247","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == java.lang.Class<?>) {\n    return java.lang.Class<?>.getGenericSuperclass();\n} else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"variableMap":{"rawType":"contextRawType","toResolve":"contextRawType","this":"this","rawSupertype":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"1cc5c5d2-433c-11e5-92d7-693b34b872c5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:693","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"leavesToSkip":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:949","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":-1},{"failures":[],"tindex":"1cc5c5d3-433c-11e5-92d7-f5460843bdb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:581","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"1cc5c5d4-433c-11e5-92d7-aba9383cc041","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()"},"variableMap":{"excluder":"excluder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:249","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.disableInnerClassSerialization()"},"status":1},{"failures":[],"tindex":"1cc5c5d5-433c-11e5-92d7-fb49500add35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:405","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"1cc5c5d6-433c-11e5-92d7-93d1cefd60f2","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:267","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.removeInternal(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"variableMap":{"this":"this","adjacent":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:353","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"1cc5c5d7-433c-11e5-92d7-e7baf502fab4","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:650","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setIndent(\"  \")"},"variableMap":{"jsonWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:612","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.replaceTop(com.google.gson.stream.JsonScope.int)"},"status":-1},{"failures":[],"tindex":"1cc5c5d8-433c-11e5-92d7-39651081a900","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:205","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = boolean ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>"},"status":-2},{"failures":[],"tindex":"1cc5ece9-433c-11e5-92d7-0b83a166da90","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1523","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:538","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(int)"},"status":-2},{"failures":[],"tindex":"1cc5ecea-433c-11e5-92d7-e1646a0e32ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1383","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"1cc5eceb-433c-11e5-92d7-2fb326ca9ef4","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + java.lang.Number));\n} "},"status":-2},{"failures":[],"tindex":"1cc5ecec-433c-11e5-92d7-7971e59bb163","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1009","type":"CtLocalVariableImpl","sourcecode":"int int = char[][int++]"},"status":-2},{"failures":[],"tindex":"1cc5eced-433c-11e5-92d7-ddd1ddd9b7da","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:692","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"size":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"1cc5ecee-433c-11e5-92d7-b72268ac0080","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:70","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.beginArray()"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1257","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipQuotedValue('\\\"')"},"status":-1},{"failures":[],"tindex":"1cc5ecef-433c-11e5-92d7-f500f78ed13f","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1120","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"1cc5ecf0-433c-11e5-92d7-e7c503893b37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:187","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeWriter.put(new com.google.gson.JsonPrimitive(java.lang.Number))"},"status":-1},{"failures":[],"tindex":"1cc61401-433c-11e5-92d7-21a5aa4f2851","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:732","type":"CtAssignmentImpl","sourcecode":"long = long"},"variableMap":{"newValue":"value","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:723","type":"CtAssignmentImpl","sourcecode":"long = -(char - '0')"},"status":0},{"failures":[],"tindex":"1cc61402-433c-11e5-92d7-275e8994db28","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1029","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"1cc61403-433c-11e5-92d7-7fcec9ebd34c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n} "},"variableMap":{"deferredName":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:547","type":"CtIfImpl","sourcecode":"if (char == '\u2029') {\n    java.lang.String = \"\\\\u2029\";\n} else {\n    continue;\n}"},"status":-2},{"failures":[],"tindex":"1cc61404-433c-11e5-92d7-e570367f18dc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:543","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"root","e":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:380","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"1cc5c5d4-433c-11e5-92d7-aba9383cc041","diffs":[{"nodes":{"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.internal.Excluder.com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()"]},"edges":{"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.GsonBuilder.com.google.gson.GsonBuilder disableInnerClassSerialization() -> com.google.gson.internal.Excluder.com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()","com.google.gson.internal.Excluder.com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation() -> com.google.gson.internal.Excluder.com.google.gson.internal.Excluder clone()"]},"type":"graph"},{"variables":{"com.google.gson.functional.FieldExclusionTest.testInnerClassExclusion":["com.google.gson.reflect.TypeToken.int hashCode()_hashCode"]},"type":"variable"}]}]}