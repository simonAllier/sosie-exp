{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6880b1d6-42b0-11e5-b58a-8b60bf143cbc","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1022","type":"CtIfImpl","sourcecode":"if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"variableMap":{"p":"last","c":"last","lineStart":"last","lineNumber":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:709","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":0},{"failures":[],"tindex":"6880d8e7-42b0-11e5-b58a-75d02122f81f","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:557","type":"CtAssignmentImpl","sourcecode":"com.google.gson.DefaultDateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(int , int)"},"variableMap":{"dateStyle":"java.text.DateFormat.DEFAULT","timeStyle":"java.text.DateFormat.DEFAULT","dateTypeAdapter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:44","type":"CtInvocationImpl","sourcecode":"com.google.gson.DefaultDateTypeAdapter.this(java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.int, java.text.DateFormat.int, java.util.Locale.java.util.Locale), java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.int, java.text.DateFormat.int))"},"status":-2},{"failures":[],"tindex":"6880fff8-42b0-11e5-b58a-49d627301980","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonPrimitive:260","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonPrimitive.getAsNumber().intValue()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:260","type":"CtInvocationImpl","sourcecode":"java.lang.Integer.parseInt(com.google.gson.JsonPrimitive.getAsString())"},"status":0},{"failures":[],"tindex":"6880fff9-42b0-11e5-b58a-493d18b9848b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:642","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"result":"header","parent":"prev"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:117","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"6882116a-42b0-11e5-b58a-05c7fedb026a","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1046","type":"CtForImpl","sourcecode":"for ( ; ((int) + int) < (int) ; int++) {\n    switch (char[][((int) + int)]) {\n        case '/' :\n        case '\\\\' :\n        case ';' :\n        case '#' :\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case '{' :\n        case '}' :\n        case '[' :\n        case ']' :\n        case ':' :\n        case ',' :\n        case ' ' :\n        case '\\t' :\n        case '\\f' :\n        case '\\r' :\n        case '\\n' :\n            break findNonLiteralCharacter;\n    }\n}"},"variableMap":{"pos":"p","limit":"com.google.gson.stream.JsonReader.PEEKED_NUMBER","this":"this","i":"com.google.gson.stream.JsonReader.PEEKED_LONG","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:828","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.String;\n    java.lang.String = null;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.Long.toString(long);\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a string but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-2},{"failures":[],"tindex":"6882116b-42b0-11e5-b58a-c112e3ef8bbe","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:258","type":"CtReturnImpl","sourcecode":"return \"null\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:131","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"6882116c-42b0-11e5-b58a-e5b15aa9478a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:174","type":"CtLocalVariableImpl","sourcecode":"double double = com.google.gson.internal.bind.JsonTreeReader.((com.google.gson.JsonPrimitive)(peekStack())).getAsDouble()"},"status":-2},{"failures":[],"tindex":"6882116d-42b0-11e5-b58a-5f6741e5da4a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:76","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"status":-2},{"failures":[],"tindex":"6882116e-42b0-11e5-b58a-fde3ecda5573","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1311","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:212","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"6882387f-42b0-11e5-b58a-af88ebace557","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:378","type":"CtIfImpl","sourcecode":"if (boolean) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"68823880-42b0-11e5-b58a-8f706015359b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:541","type":"CtInvocationImpl","sourcecode":"java.util.Collections.reverse(java.util.List<com.google.gson.TypeAdapterFactory>)"},"status":-2},{"failures":[],"tindex":"68823881-42b0-11e5-b58a-f156c35c3a38","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:171","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeWriter.put(new com.google.gson.JsonPrimitive(long))"},"status":-2},{"failures":[],"tindex":"68823882-42b0-11e5-b58a-0b95c3e89bc5","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:298","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException(((double + \" is not a valid double value as per JSON specification. To override this\") + \" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"));\n} "},"variableMap":{"value":"d"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + java.lang.Number));\n} "},"status":0},{"failures":[],"tindex":"68823883-42b0-11e5-b58a-b10e95515f55","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:417","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:886","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected null but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-2},{"failures":[],"tindex":"68823884-42b0-11e5-b58a-e3901150aaae","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:248","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getGenericSuperclass()"},"variableMap":{"rawType":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"68825f95-42b0-11e5-b58a-3dbe2b04e166","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:756","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case '/' :\n    case '\\\\' :\n    case ';' :\n    case '#' :\n    case '=' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case '{' :\n    case '}' :\n    case '[' :\n    case ']' :\n    case ':' :\n    case ',' :\n    case ' ' :\n    case '\\t' :\n    case '\\f' :\n    case '\\r' :\n    case '\\n' :\n        return false;\n    default :\n        return true;\n}"},"status":-2},{"failures":[],"tindex":"68825f96-42b0-11e5-b58a-dfc4a0e2f59e","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1295","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"limit":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:362","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":-1},{"failures":[],"tindex":"68825f97-42b0-11e5-b58a-5974020b5a47","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:687","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"node":"replacement","parent":"parent","left":"parent","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:320","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"68825f98-42b0-11e5-b58a-9f435ec8a2b2","series":0,"name":"add","transplant":{"position":"com.google.gson.DefaultDateTypeAdapter:86","type":"CtReturnImpl","sourcecode":"return new java.sql.Timestamp(java.util.Date.getTime())"},"variableMap":{"date":"date"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:88","type":"CtReturnImpl","sourcecode":"return new java.sql.Date(java.util.Date.getTime())"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}