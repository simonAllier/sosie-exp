{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d01d1910-42c0-11e5-a822-2dd0e943e9f5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1200","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"d01d4021-42c0-11e5-a822-7d84afa54344","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"d01d4022-42c0-11e5-a822-390d3729dc53","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:374","type":"CtAssertImpl","sourcecode":"assert int == (-1)"},"variableMap":{"leftDelta":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1070","type":"CtIfImpl","sourcecode":"if (int < (char[].int)) {\n    if (com.google.gson.stream.JsonReader.fillBuffer((int + 1))) {\n        continue;\n    } else {\n        break;\n    }\n} "},"status":-1},{"failures":[],"tindex":"d01d4023-42c0-11e5-a822-9da8f216e72f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:698","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"node":"left","stack":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:436","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"d01d4024-42c0-11e5-a822-0dcf1e0fcc2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:687","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"d01d4025-42c0-11e5-a822-633d854f8239","series":0,"name":"replace","transplant":{"position":"com.google.gson.DefaultDateTypeAdapter:116","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('(')"},"variableMap":{"sb":"builder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1017","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], int, ((int - int) - 1))"},"status":-1},{"failures":[],"tindex":"d01d4026-42c0-11e5-a822-357f09f7cc60","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:536","type":"CtWhileImpl","sourcecode":"while (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"variableMap":{"node":"node","left":"right","child":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:319","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>) == com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"d01d6737-42c0-11e5-a822-7dacce491f95","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:342","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":-2},{"failures":[],"tindex":"d01d6738-42c0-11e5-a822-eb76dade746c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:745","type":"CtIfImpl","sourcecode":"if ((int) == 2) {\n    int = 0;\n} "},"variableMap":{"leavesSkipped":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:318","type":"CtIfImpl","sourcecode":"if (int == (-2)) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == (-1)) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == 1;\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 2) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == 1) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    } else {\n        assert int == (-1);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 0) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"d01d6739-42c0-11e5-a822-5d8413869abd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:178","type":"CtLocalVariableImpl","sourcecode":"java.util.List<com.google.gson.ExclusionStrategy> java.util.List<com.google.gson.ExclusionStrategy> = boolean ? java.util.List<com.google.gson.ExclusionStrategy> : java.util.List<com.google.gson.ExclusionStrategy>"},"status":-2},{"failures":[],"tindex":"d01d673a-42c0-11e5-a822-0b4cd7ae85c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n} else {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, null);\n}"},"status":0},{"failures":[],"tindex":"d01d8e4b-42c0-11e5-a822-6d7e35607933","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:679","type":"CtLocalVariableImpl","sourcecode":"int int = ((java.lang.Integer.highestOneBit(int)) * 2) - 1"},"variableMap":{"targetSize":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:427","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"d01d8e4c-42c0-11e5-a822-0bd90bad0d19","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1318","type":"CtReturnImpl","sourcecode":"return (int) + 1"},"variableMap":{"lineNumber":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:581","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"d01d8e4d-42c0-11e5-a822-9361e1eb82a2","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:74","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonNull"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:275","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d01d8e4e-42c0-11e5-a822-9be680f8d737","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected END_ARRAY but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"d01d8e4f-42c0-11e5-a822-03c76b5f38b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:57","type":"CtReturnImpl","sourcecode":"return com.google.gson.TypeAdapter<T>"},"status":-2},{"failures":[],"tindex":"d01d8e50-42c0-11e5-a822-a5c045647fbe","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:298","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"variableMap":{"originalParent":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:295","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, null)"},"status":0},{"failures":[],"tindex":"d01d8e51-42c0-11e5-a822-cd7202458476","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:258","type":"CtReturnImpl","sourcecode":"return \"null\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.TypeAdapter:217","type":"CtReturnImpl","sourcecode":"return java.io.StringWriter.toString()"},"status":-1},{"failures":[],"tindex":"d01db562-42c0-11e5-a822-5f0079bfef23","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:238","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.removeInternal(com.google.gson.internal.LinkedTreeMap.Node<K, V>, false)"},"status":-2},{"failures":[],"tindex":"d01db563-42c0-11e5-a822-8f8ad99a00d3","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:326","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"lenient":"negative"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:684","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"d01d8e50-42c0-11e5-a822-a5c045647fbe","diffs":[{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"},{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).e4","com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).t7","com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).e8","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).l10","com.google.gson.internal.LinkedHashTreeMap_void_rebalance(com.google.gson.internal.LinkedHashTreeMap$Node,boolean).e1"]},"type":"branch"}]},{"transformation":"d01d673a-42c0-11e5-a822-0b4cd7ae85c1","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b"]},"type":"branch"},{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]}]}