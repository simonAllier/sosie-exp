{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"86078680-42b2-11e5-89a0-dd6f71e1dfb7","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:661","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.google.gson.stream.JsonWriter.isLenient()"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:663","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.google.gson.stream.JsonWriter.isHtmlSafe()"},"status":0},{"failures":[],"tindex":"8607ad91-42b2-11e5-89a0-a3b68c021ed0","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:603","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:176","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException((\"JSON forbids NaN and infinities: \" + double))"},"status":-1},{"failures":[],"tindex":"8607d4a2-42b2-11e5-89a0-3b24d71fe4e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:538","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(int)"},"status":-2},{"failures":[],"tindex":"8607d4a3-42b2-11e5-89a0-4362ae7956f0","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:165","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()"},"variableMap":{"t":"arg","from":"arg"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:214","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>.getName(), java.lang.reflect.Type)"},"status":-1},{"failures":[],"tindex":"8607d4a4-42b2-11e5-89a0-9d97a01b61c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:466","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeValue(false)"},"status":-1},{"failures":[],"tindex":"8607d4a5-42b2-11e5-89a0-0f0ae8196271","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.canonicalize(java.lang.reflect.ParameterizedType.getActualTypeArguments()[0])"},"variableMap":{"parameterized":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:100","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments())"},"status":-1},{"failures":[],"tindex":"8607fbb6-42b2-11e5-89a0-01c638ddab6b","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1523","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:125","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(int)"},"status":-2},{"failures":[],"tindex":"8607fbb7-42b2-11e5-89a0-13a34bc514e1","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1488","type":"CtIfImpl","sourcecode":"if ((java.lang.String[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.String[][int]);\n} "},"status":-2},{"failures":[],"tindex":"8607fbb8-42b2-11e5-89a0-6723f4e04c15","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:258","type":"CtReturnImpl","sourcecode":"return \"null\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1499","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"8607fbb9-42b2-11e5-89a0-e9a0a13c2634","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:134","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"generateNonExecutableJson":"serializeInnerClasses"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:86","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.boolean = false"},"status":-1},{"failures":[],"tindex":"860822ca-42b2-11e5-89a0-4dcbb923d3f8","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:248","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getGenericSuperclass()"},"variableMap":{"rawType":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":0},{"failures":[],"tindex":"860822cb-42b2-11e5-89a0-cbb63ee4e5fb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:324","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n            return java.lang.reflect.Type;\n        } \n    } else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n                if (!boolean) {\n                    java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                    boolean = true;\n                } \n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n        if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n            } \n        } else if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n            } \n        } \n        return java.lang.reflect.WildcardType;\n    } else {\n        return java.lang.reflect.Type;\n    }\n}"},"status":-2},{"failures":[],"tindex":"860849dc-42b2-11e5-89a0-45d5484c059a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:102","type":"CtAssignmentImpl","sourcecode":"this.java.lang.Object = java.lang.Object"},"status":-1},{"failures":[],"tindex":"860870ed-42b2-11e5-89a0-0df3d6a6210e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:637","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    return null;\n} "},"variableMap":{"stackTop":"created"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:196","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"860870ee-42b2-11e5-89a0-8b20ff35d616","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"stackSize","i":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:366","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"860870ef-42b2-11e5-89a0-3f94b20cd89e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:548","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturned":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:264","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null;\n} else {\n    com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, null);\n}"},"status":-1},{"failures":[],"tindex":"860870f0-42b2-11e5-89a0-c5e480ea90f7","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:538","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.consumeNonExecutePrefix()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:882","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    (int[][((int) - 1)])++;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected null but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-1},{"failures":[],"tindex":"86089801-42b2-11e5-89a0-bf4a4567e99d","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.canonicalize(java.lang.reflect.ParameterizedType.getActualTypeArguments()[0])"},"variableMap":{"parameterized":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:100","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments())"},"status":-1},{"failures":[],"tindex":"86089802-42b2-11e5-89a0-a1c922d2491c","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"dateStyle":"p","style":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1382","type":"CtAssignmentImpl","sourcecode":"int = (int) + 2"},"status":-1},{"failures":[],"tindex":"86089803-42b2-11e5-89a0-0704088dc809","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:591","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonReader.int)) {\n    return int;\n} "},"variableMap":{"result":"peeked","com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:504","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}