{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"399a0337-42d5-11e5-b7f3-953ce7809598","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:641","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"result":"next","parent":"prev","stackTop":"header"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:117","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"399a2a48-42d5-11e5-b7f3-23846290ab29","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:271","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, false)"},"variableMap":{"originalParent":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:278","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.removeInternal(com.google.gson.internal.LinkedTreeMap.Node<K, V>, true);\n} "},"status":-1},{"failures":[],"tindex":"399a2a49-42d5-11e5-b7f3-d364164f9504","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:556","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"peekStack":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED","peeked":"peeked","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"peeked","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:577","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"399a515a-42d5-11e5-b7f3-2b0f7f8249ac","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:650","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setIndent(\"  \")"},"variableMap":{"jsonWriter":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:93","type":"CtInvocationImpl","sourcecode":"com.google.gson.TypeAdapter<E>.write(com.google.gson.stream.JsonWriter, E)"},"status":-1},{"failures":[],"tindex":"399a515b-42d5-11e5-b7f3-fb6b78fc4fe5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:241","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()"},"status":-2},{"failures":[],"tindex":"399a515c-42d5-11e5-b7f3-376fb17ae414","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1307","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"minimum":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1261","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"399a786d-42d5-11e5-b7f3-455ddbabd53c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:374","type":"CtAssertImpl","sourcecode":"assert int == (-1)"},"variableMap":{"leftDelta":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:342","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":-1},{"failures":[],"tindex":"399a786e-42d5-11e5-b7f3-1b47000bb19c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:658","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:187","type":"CtLocalVariableImpl","sourcecode":"long long = com.google.gson.internal.bind.JsonTreeReader.((com.google.gson.JsonPrimitive)(peekStack())).getAsLong()"},"status":-2},{"failures":[],"tindex":"399a786f-42d5-11e5-b7f3-7dfa427f45ff","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    continue;\n} "},"variableMap":{"replacement":"property"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:101","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonObject.createJsonElement(java.lang.Boolean))"},"status":-2},{"failures":[],"tindex":"399a7870-42d5-11e5-b7f3-cdd42e581efa","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:661","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.google.gson.stream.JsonWriter.isLenient()"},"variableMap":{"writer":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:595","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = com.google.gson.stream.JsonWriter.isHtmlSafe()"},"status":-2},{"failures":[],"tindex":"399a7871-42d5-11e5-b7f3-958dc3373d77","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:549","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"variableMap":{"com.google.gson.stream.JsonScope.CLOSED":"stackSize","peekStack":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1273","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(int[], 0, int[], 0, int)"},"status":-1},{"failures":[],"tindex":"399a9f82-42d5-11e5-b7f3-ede1dcec2052","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"peeked","lineStart":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1181","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"399a9f83-42d5-11e5-b7f3-ab1c29bdb0f2","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:74","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonNull"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:236","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"399a9f84-42d5-11e5-b7f3-c712693ae232","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"399ac695-42d5-11e5-b7f3-f7fc2bcd6ebd","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:683","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    boolean = true;\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":-2},{"failures":[],"tindex":"399ac696-42d5-11e5-b7f3-cfd59e958220","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:775","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:195","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Expected \" + (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) + \" but was \") + com.google.gson.stream.JsonToken))"},"status":-1},{"failures":[],"tindex":"399aeda7-42d5-11e5-b7f3-451a6b021d29","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>"},"variableMap":{"toResolve":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:249","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n} "},"status":-2},{"failures":[],"tindex":"399aeda8-42d5-11e5-b7f3-2d3785752b0f","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonParser:45","type":"CtReturnImpl","sourcecode":"return com.google.gson.JsonParser.parse(new java.io.StringReader(java.lang.String))"},"variableMap":{"this":"value","json":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:122","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? com.google.gson.JsonNull.com.google.gson.JsonNull : new com.google.gson.JsonPrimitive(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"399aeda9-42d5-11e5-b7f3-9d3dc52c4277","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1085","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"399b14ba-42d5-11e5-b7f3-fba4d821d5c3","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:503","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:223","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}