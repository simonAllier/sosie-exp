{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d8b35516-42ea-11e5-9131-bf8b9b1e813f","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:355","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.Gson.FutureTypeAdapter<T> com.google.gson.Gson.FutureTypeAdapter<T> = new com.google.gson.Gson.FutureTypeAdapter<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:349","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.Gson.FutureTypeAdapter<T> com.google.gson.Gson.FutureTypeAdapter<T> = ((com.google.gson.Gson.FutureTypeAdapter<T>)(java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>.get(com.google.gson.reflect.TypeToken<T>)))"},"status":-2},{"failures":[],"tindex":"d8b37c27-42ea-11e5-9131-1d8fc2fcc014","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:468","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = com.google.gson.stream.JsonScope.int"},"variableMap":{"stack":"pathIndices","stackSize":"stackSize","com.google.gson.stream.JsonScope.NONEMPTY_ARRAY":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:404","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"d8b37c28-42ea-11e5-9131-e5887a5c1ea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:45","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.JsonArray com.google.gson.JsonArray = new com.google.gson.JsonArray()"},"status":-2},{"failures":[],"tindex":"d8b37c29-42ea-11e5-9131-ed2562d92a65","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:295","type":"CtAssertImpl","sourcecode":"assert (com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"parent":"parent","node":"parent","right":"unbalanced"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:311","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V> ; com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ; com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if (int == (-2)) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = int - int;\n        if ((int == (-1)) || ((int == 0) && (!boolean))) {\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        } else {\n            assert int == 1;\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        }\n        if (boolean) {\n            break;\n        } \n    } else if (int == 2) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = int - int;\n        if ((int == 1) || ((int == 0) && (!boolean))) {\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        } else {\n            assert int == (-1);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        }\n        if (boolean) {\n            break;\n        } \n    } else if (int == 0) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n        if (boolean) {\n            break;\n        } \n    } else {\n        assert (int == (-1)) || (int == 1);\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n        if (!boolean) {\n            break;\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"d8b3a33a-42ea-11e5-9131-ad7d3645f1ca","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtIfImpl","sourcecode":"if ((com.google.gson.stream.JsonToken != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) && (com.google.gson.stream.JsonToken != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n    throw new java.lang.IllegalStateException((((\"Expected \" + (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) + \" but was \") + com.google.gson.stream.JsonToken));\n} "},"variableMap":{"com.google.gson.stream.JsonToken.STRING":"com.google.gson.stream.JsonToken.BEGIN_ARRAY","token":"com.google.gson.stream.JsonToken.BEGIN_ARRAY","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.BEGIN_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:58","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"status":-2},{"failures":[],"tindex":"d8b3a33b-42ea-11e5-9131-45fbd0358237","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:201","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.Excluder.isAnonymousOrLocal(java.lang.Class<?>)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"d8b3a33c-42ea-11e5-9131-e78d9dc60a49","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:115","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeWriter.put(com.google.gson.JsonObject)"},"variableMap":{"this":"this","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:77","type":"CtIfImpl","sourcecode":"if ((!(com.google.gson.JsonElement.isJsonNull())) || com.google.gson.stream.JsonWriter.(getSerializeNulls())) {\n    com.google.gson.JsonObject com.google.gson.JsonObject = com.google.gson.internal.bind.JsonTreeWriter.((com.google.gson.JsonObject)(peek()));\n    com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonElement);\n} "},"status":-1},{"failures":[],"tindex":"d8b3a33d-42ea-11e5-9131-85629cd9df41","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:679","type":"CtLocalVariableImpl","sourcecode":"int int = ((java.lang.Integer.highestOneBit(int)) * 2) - 1"},"variableMap":{"targetSize":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:947","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"d8b3a33e-42ea-11e5-9131-15f63b0ae1ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:588","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d8b3a33f-42ea-11e5-9131-8bf7498bbcbe","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:74","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonNull"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:236","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"d8b3a340-42ea-11e5-9131-d36ea6f51539","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:111","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; ) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"variableMap":{"prev":"root","header":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:578","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"d8b3ca51-42ea-11e5-9131-cfa55305218f","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1345","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[],"tindex":"d8b3ca52-42ea-11e5-9131-630f7fb8e3b1","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:152","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\b'] = \"\\\\b\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"com.google.gson.stream.JsonWriter.HTML_SAFE_REPLACEMENT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:157","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['<'] = \"\\\\u003c\""},"status":-2},{"failures":[],"tindex":"d8b3ca53-42ea-11e5-9131-99e3d79f74e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:964","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Long.parseLong(java.lang.String)"},"status":-2},{"failures":[],"tindex":"d8b3ca54-42ea-11e5-9131-e706f2fad205","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1255","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipQuotedValue('\\'')"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1170","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":-1},{"failures":[],"tindex":"d8b3ca55-42ea-11e5-9131-57258d817ace","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:159","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:277","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap<K, V>.findByObject(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"d8b3ca56-42ea-11e5-9131-47dad3759c2c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1516","type":"CtLocalVariableImpl","sourcecode":"char char = char[][(int)++]"},"variableMap":{"pos":"i","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:680","type":"CtLocalVariableImpl","sourcecode":"char char = char[][(int + int)]"},"status":-1},{"failures":[],"tindex":"d8b3ca57-42ea-11e5-9131-7b4e60e1daf8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:610","type":"CtLocalVariableImpl","sourcecode":"char char = char[][int]"},"status":-2},{"failures":[],"tindex":"d8b3ca58-42ea-11e5-9131-07d3b5ee5486","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonStreamParser:83","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"d8b3f169-42ea-11e5-9131-73de6bcd2cc5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:311","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V> ; com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ; com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if (int == (-2)) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = int - int;\n        if ((int == (-1)) || ((int == 0) && (!boolean))) {\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        } else {\n            assert int == 1;\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        }\n        if (boolean) {\n            break;\n        } \n    } else if (int == 2) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0;\n        int int = int - int;\n        if ((int == 1) || ((int == 0) && (!boolean))) {\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        } else {\n            assert int == (-1);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n            com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n        }\n        if (boolean) {\n            break;\n        } \n    } else if (int == 0) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1;\n        if (boolean) {\n            break;\n        } \n    } else {\n        assert (int == (-1)) || (int == 1);\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n        if (!boolean) {\n            break;\n        } \n    }\n}"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}