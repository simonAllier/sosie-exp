{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"94643de0-445e-11e5-90ff-2b3f64a9310b","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:219","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"parent","node":"root","prev":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:417","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"946464f1-445e-11e5-90ff-710bf5c41891","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:562","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"year":"i","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1084","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"94648c02-445e-11e5-90ff-c7f4ded0f838","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.ConstructorConstructor:86","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.ObjectConstructor<T>"},"status":-1},{"failures":[],"tindex":"94648c03-445e-11e5-90ff-73d75803418d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:591","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonReader.int)) {\n    return int;\n} "},"variableMap":{"result":"limit","com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_EOF"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:469","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ']' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n    }\n} else if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-1},{"failures":[],"tindex":"94659d74-445e-11e5-90ff-cfef6685a060","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:120","type":"CtIfImpl","sourcecode":"if (com.google.gson.TypeAdapter<?> != null)\n    return com.google.gson.TypeAdapter<?>;\n"},"variableMap":{"adapter":"cached"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:336","type":"CtIfImpl","sourcecode":"if (com.google.gson.TypeAdapter<?> != null) {\n    return ((com.google.gson.TypeAdapter<T>)(com.google.gson.TypeAdapter<?>));\n} "},"status":-2},{"failures":[],"tindex":"9465c485-445e-11e5-90ff-0f6032ba5d56","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:195","type":"CtIfImpl","sourcecode":"if (!(java.util.List<com.google.gson.JsonElement>.isEmpty())) {\n    throw new java.io.IOException(\"Incomplete document\");\n} "},"variableMap":{"stack":"elements"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:46","type":"CtForEachImpl","sourcecode":"for (com.google.gson.JsonElement com.google.gson.JsonElement : java.util.List<com.google.gson.JsonElement>) {\n    com.google.gson.JsonArray.add(com.google.gson.JsonElement.deepCopy());\n}"},"status":-2},{"failures":[],"tindex":"9465c486-445e-11e5-90ff-1794d361782d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:337","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonWriter.peek()"},"status":-2},{"failures":[],"tindex":"9465c487-445e-11e5-90ff-87960d189ea0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:61","type":"CtInvocationImpl","sourcecode":"java.util.List<com.google.gson.JsonElement>.add(com.google.gson.JsonElement)"},"status":-1},{"failures":[],"tindex":"9465c488-445e-11e5-90ff-1b4eca99564b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:357","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"9465c489-445e-11e5-90ff-0f87be5bf60a","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:557","type":"CtAssignmentImpl","sourcecode":"com.google.gson.DefaultDateTypeAdapter = new com.google.gson.DefaultDateTypeAdapter(int , int)"},"variableMap":{"dateStyle":"java.text.DateFormat.DEFAULT","timeStyle":"java.text.DateFormat.DEFAULT","dateTypeAdapter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:44","type":"CtInvocationImpl","sourcecode":"com.google.gson.DefaultDateTypeAdapter.this(java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.int, java.text.DateFormat.int, java.util.Locale.java.util.Locale), java.text.DateFormat.getDateTimeInstance(java.text.DateFormat.int, java.text.DateFormat.int))"},"status":-2},{"failures":[],"tindex":"9465eb9a-445e-11e5-90ff-e3268ad6f414","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:368","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0"},"status":-2},{"failures":[],"tindex":"9465eb9b-445e-11e5-90ff-f1ee4c1a6fff","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:490","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"<\")"},"variableMap":{"stringBuilder":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1481","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[').append(int[][int]).append(']')"},"status":-1},{"failures":[],"tindex":"9465eb9c-445e-11e5-90ff-3fbbf6c9edbe","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonElement:46","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonArray"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:132","type":"CtReturnImpl","sourcecode":"return java.lang.Class<? super T>.isAssignableFrom(com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":"9465eb9d-445e-11e5-90ff-039dedde418a","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:223","type":"CtForEachImpl","sourcecode":"for (java.lang.reflect.Type java.lang.reflect.Type : java.lang.Class<?>.getGenericInterfaces()) {\n    if (com.google.gson.reflect.TypeToken<T>.com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(java.util.Map<java.lang.String, java.lang.reflect.Type>))) {\n        return true;\n    } \n}"},"variableMap":{"this":"this","typeVarMap":"typeVarMap","to":"ptype","clazz":"clazz"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:204","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.ParameterizedType != null) {\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = java.lang.Class<?>.getTypeParameters();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type[][int];\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = java.lang.reflect.TypeVariable<?>[][int];\n        while (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n            java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n            java.lang.reflect.Type = java.util.Map<java.lang.String, java.lang.reflect.Type>.get(java.lang.reflect.TypeVariable<?>.getName());\n        }\n        java.util.Map<java.lang.String, java.lang.reflect.Type>.put(java.lang.reflect.TypeVariable<?>.getName(), java.lang.reflect.Type);\n    }\n    if (com.google.gson.reflect.TypeToken<T>.com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType, java.util.Map<java.lang.String, java.lang.reflect.Type>)) {\n        return true;\n    } \n} "},"status":0},{"failures":[],"tindex":"9465eb9e-445e-11e5-90ff-1f571689011e","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:720","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"json":"json"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.TypeAdapter:269","type":"CtReturnImpl","sourcecode":"return com.google.gson.TypeAdapter<T>.fromJson(new java.io.StringReader(java.lang.String))"},"status":-2},{"failures":[],"tindex":"9465eb9f-445e-11e5-90ff-c398139c5ef0","series":0,"name":"replace","transplant":{"position":"com.google.gson.TreeTypeAdapter:55","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonElement.isJsonNull()) {\n    return null;\n} "},"variableMap":{"value":"json"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:872","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonElement == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"946612b0-445e-11e5-90ff-67a6a13a5d0b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1354","type":"CtIfImpl","sourcecode":"if (int == '\\n') {\n    (int)++;\n    int = int;\n    continue;\n} else if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n    continue;\n} "},"variableMap":{"p":"i","c":"i","lineStart":"i","lineNumber":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1488","type":"CtIfImpl","sourcecode":"if ((java.lang.String[][int]) != null) {\n    java.lang.StringBuilder.append(java.lang.String[][int]);\n} "},"status":-1},{"failures":[],"tindex":"946612b1-445e-11e5-90ff-537e45c5fd55","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1417","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:605","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"946612b2-445e-11e5-90ff-1942fa02e141","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Preconditions:42","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException()"},"status":-1},{"failures":[],"tindex":"946612b3-445e-11e5-90ff-a304d5629df4","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:138","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"name":"result","pendingName":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:796","type":"CtAssignmentImpl","sourcecode":"java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'')"},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}