{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"bc0120dc-43aa-11e5-a9c1-85fbd9e1c672","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:65","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.nextNull()"},"status":-2},{"failures":[],"tindex":"bc0147ed-43aa-11e5-a9c1-e7e8120c557b","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:355","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = int + 1"},"status":0},{"failures":[],"tindex":"bc0147ee-43aa-11e5-a9c1-458cae53242d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:44","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:452","type":"CtReturnImpl","sourcecode":"return com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken.get(java.lang.Class<T>))"},"status":-1},{"failures":[],"tindex":"bc0147ef-43aa-11e5-a9c1-bf972bde8757","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:227","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == java.lang.Class<?>) {\n    return java.lang.reflect.Type;\n} "},"variableMap":{"rawType":"contextRawType","toResolve":"contextRawType","context":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"bc016f00-43aa-11e5-a9c1-5d0dd02aaaf6","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"bc019611-43aa-11e5-a9c1-010a47943367","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1258","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"variableMap":{"p":"p","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"com.google.gson.stream.JsonReader.PEEKED_NONE","pos":"p","peekedNumberLength":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:879","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":-1},{"failures":[],"tindex":"bc019612-43aa-11e5-a9c1-318e80ce0d96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:72","type":"CtLocalVariableImpl","sourcecode":"E E = com.google.gson.TypeAdapter<E>.read(com.google.gson.stream.JsonReader)"},"status":-2},{"failures":[],"tindex":"bc019613-43aa-11e5-a9c1-cd3de69df974","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:100","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.java.util.List<com.google.gson.ExclusionStrategy> = new java.util.ArrayList<com.google.gson.ExclusionStrategy>(java.util.List<com.google.gson.ExclusionStrategy>)"},"status":-1},{"failures":[],"tindex":"bc019614-43aa-11e5-a9c1-a516df5ec877","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:371","type":"CtInvocationImpl","sourcecode":"java.lang.ThreadLocal<java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>>.remove()"},"variableMap":{"calls":"calls"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:344","type":"CtInvocationImpl","sourcecode":"java.lang.ThreadLocal<java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>>.set(java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>)"},"status":-1},{"failures":[],"tindex":"bc01bd25-43aa-11e5-a9c1-ef5fa06d6768","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:106","type":"CtTryImpl","sourcecode":"try {\n    boolean = (java.lang.Integer.parseInt(java.lang.String)) != 0;\n} catch (java.lang.NumberFormatException e) {\n    throw new com.google.gson.JsonSyntaxException((\"Error: Expecting: bitset number value (1, 0), Found: \" + java.lang.String));\n}"},"variableMap":{"stringValue":"com.google.gson.Gson.JSON_NON_EXECUTABLE_PREFIX","set":"generateNonExecutableJson"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:645","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.io.Writer.write(com.google.gson.Gson.java.lang.String);\n} "},"status":-2},{"failures":[],"tindex":"bc01bd26-43aa-11e5-a9c1-bb682e9dd25d","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"modCount","lineStart":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:178","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"bc01bd27-43aa-11e5-a9c1-b58cda2a6092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1005","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"bc01bd28-43aa-11e5-a9c1-37d9885658ef","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:584","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"bc01e439-43aa-11e5-a9c1-719747bf7a99","series":0,"name":"replace","transplant":{"position":"com.google.gson.FieldAttributes:53","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getDeclaringClass()"},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldAttributes:100","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getType()"},"status":-1},{"failures":[],"tindex":"bc01e43a-43aa-11e5-a9c1-63ff35f9726c","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:46","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonArray"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:165","type":"CtIfImpl","sourcecode":"if ((com.google.gson.annotations.Expose == null) || (boolean ? !(com.google.gson.annotations.Expose.boolean()) : !(com.google.gson.annotations.Expose.boolean()))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"bc01e43b-43aa-11e5-a9c1-8f8b9481fe23","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:249","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.disableInnerClassSerialization()"},"variableMap":{"excluder":"excluder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:120","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withModifiers(int[])"},"status":-1},{"failures":[],"tindex":"bc01e43c-43aa-11e5-a9c1-418f00c78972","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:326","type":"CtReturnImpl","sourcecode":"return java.lang.Object.equals(com.google.gson.JsonPrimitive.java.lang.Object)"},"status":-2},{"failures":[],"tindex":"bc01e43d-43aa-11e5-a9c1-89bef3d373c0","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:552","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1109","type":"CtLocalVariableImpl","sourcecode":"int int = char[][int++]"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":18,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}