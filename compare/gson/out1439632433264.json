{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"896eef23-4333-11e5-b560-df3cc3bd6cf9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"896f1634-4333-11e5-b560-7928d6e5eb6d","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:586","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.next()) != null ; ) {\n    if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n        int++;\n    } else {\n        int++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"896f1635-4333-11e5-b560-714794bcb625","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:619","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"false\""},"variableMap":{"keyword":"peekedString"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:930","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":0},{"failures":[],"tindex":"896f1636-4333-11e5-b560-4fa89dfda592","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:127","type":"CtReturnImpl","sourcecode":"return this"},"status":-1},{"failures":[],"tindex":"896f1637-4333-11e5-b560-117d40266a30","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.canonicalize(java.lang.reflect.ParameterizedType.getActualTypeArguments()[0])"},"variableMap":{"parameterized":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:100","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments())"},"status":-1},{"failures":[],"tindex":"896f1638-4333-11e5-b560-5d8a1360f6e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:314","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.int : 0"},"status":-2},{"failures":[],"tindex":"896f1639-4333-11e5-b560-61ae2d843f49","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:332","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != 1) {\n    throw new com.google.gson.JsonSyntaxException((\"Expecting character, got: \" + java.lang.String));\n} "},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:124","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char char = java.lang.String.charAt(int);\n    if ((java.lang.Character.isUpperCase(char)) && ((java.lang.StringBuilder.length()) != 0)) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } \n    java.lang.StringBuilder.append(char);\n}"},"status":-1},{"failures":[],"tindex":"896f163a-4333-11e5-b560-39bda87d97e0","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:537","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    char char = java.lang.String.charAt(int);\n    java.lang.String java.lang.String;\n    if (char < 128) {\n        java.lang.String = java.lang.String[][char];\n        if (java.lang.String == null) {\n            continue;\n        } \n    } else if (char == '\u2028') {\n        java.lang.String = \"\\\\u2028\";\n    } else if (char == '\u2029') {\n        java.lang.String = \"\\\\u2029\";\n    } else {\n        continue;\n    }\n    if (int < int) {\n        java.io.Writer.write(java.lang.String, int, (int - int));\n    } \n    java.io.Writer.write(java.lang.String);\n    int = int + 1;\n}"},"status":-1},{"failures":[],"tindex":"896f3d4b-4333-11e5-b560-5f467e5e1023","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:128","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldAttributes:155","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.isSynthetic()"},"status":-2},{"failures":[],"tindex":"896f3d4c-4333-11e5-b560-570b8a4f5676","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:64","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonPrimitive"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:231","type":"CtReturnImpl","sourcecode":"return com.google.gson.reflect.TypeToken<T>.com.google.gson.reflect.TypeToken.isAssignableFrom(java.lang.reflect.Type, java.lang.reflect.ParameterizedType, new java.util.HashMap<java.lang.String, java.lang.reflect.Type>(java.util.Map<java.lang.String, java.lang.reflect.Type>))"},"status":-2},{"failures":[],"tindex":"896f3d4d-4333-11e5-b560-8b997c143084","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:552","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:197","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.internal.bind.JsonTreeReader.((com.google.gson.JsonPrimitive)(peekStack())).getAsInt()"},"status":-2},{"failures":[],"tindex":"896f3d4e-4333-11e5-b560-3daa7d47522e","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:218","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \": \""},"variableMap":{"separator":"keywordUpper"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:624","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NULL\""},"status":-1},{"failures":[],"tindex":"896f3d4f-4333-11e5-b560-2d28c1c0eb10","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:883","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"896f3d50-4333-11e5-b560-1faee5b22381","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:662","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setLenient(true)"},"variableMap":{"writer":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonWriter.(isLenient())) {\n    double double = java.lang.Number.doubleValue();\n    if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n        throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + java.lang.Number));\n    } \n} "},"status":-1},{"failures":[],"tindex":"896f6461-4333-11e5-b560-3d76f253f0da","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeName()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:417","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.writeDeferredName()"},"status":-1},{"failures":[],"tindex":"896f6462-4333-11e5-b560-09f8a580e475","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:563","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.bind.TypeAdapters.2.java.lang.String.equals(java.lang.String)) {\n    int = int;\n} else if (com.google.gson.internal.bind.TypeAdapters.2.java.lang.String.equals(java.lang.String)) {\n    int = int;\n} else if (com.google.gson.internal.bind.TypeAdapters.2.java.lang.String.equals(java.lang.String)) {\n    int = int;\n} else if (com.google.gson.internal.bind.TypeAdapters.2.java.lang.String.equals(java.lang.String)) {\n    int = int;\n} else if (com.google.gson.internal.bind.TypeAdapters.2.java.lang.String.equals(java.lang.String)) {\n    int = int;\n} "},"variableMap":{"com.google.gson.internal.bind.TypeAdapters.2.MONTH":"datePattern","month":"timeStyle","dayOfMonth":"dateStyle","com.google.gson.internal.bind.TypeAdapters.2.HOUR_OF_DAY":"datePattern","name":"datePattern","com.google.gson.internal.bind.TypeAdapters.2.DAY_OF_MONTH":"datePattern","hourOfDay":"dateStyle","com.google.gson.internal.bind.TypeAdapters.2.SECOND":"datePattern","value":"dateStyle","com.google.gson.internal.bind.TypeAdapters.2.MINUTE":"datePattern","minute":"dateStyle","second":"dateStyle"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:543","type":"CtInvocationImpl","sourcecode":"com.google.gson.GsonBuilder.addTypeAdaptersForDate(java.lang.String, int, int, java.util.List<com.google.gson.TypeAdapterFactory>)"},"status":-1},{"failures":[],"tindex":"896f6463-4333-11e5-b560-1f5be453dce5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:271","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, false)"},"variableMap":{"originalParent":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:268","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, null)"},"status":-1},{"failures":[],"tindex":"896f6464-4333-11e5-b560-8539af832389","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:972","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected a long but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1573","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.stream.MalformedJsonException(((((((java.lang.String + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"896f6465-4333-11e5-b560-0769fce2a70d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:356","type":"CtAssertImpl","sourcecode":"assert int == 1"},"variableMap":{"rightDelta":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:694","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"896f6466-4333-11e5-b560-23c44a67d180","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:123","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:224","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}