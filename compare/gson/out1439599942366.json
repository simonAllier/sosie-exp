{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e35b05f0-42e7-11e5-8793-7f8580b596da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:127","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"e35b2d01-42e7-11e5-8793-9731a0af8dc8","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"pos","lineStart":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1363","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"e35b2d02-42e7-11e5-8793-f740e75023ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:181","type":"CtReturnImpl","sourcecode":"return ((java.lang.String)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"e35b2d03-42e7-11e5-8793-371610bf2652","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) {\n        return false;\n    } \n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    return (com.google.gson.internal.$Gson$Types.(com.google.gson.internal.$Gson$Types.equal(java.lang.reflect.ParameterizedType.getOwnerType(), java.lang.reflect.ParameterizedType.getOwnerType())) && (java.lang.reflect.ParameterizedType.getRawType().equals(java.lang.reflect.ParameterizedType.getRawType()))) && (java.util.Arrays.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) {\n        return false;\n    } \n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n        return false;\n    } \n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return (java.util.Arrays.equals(java.lang.reflect.WildcardType.getUpperBounds(), java.lang.reflect.WildcardType.getUpperBounds())) && (java.util.Arrays.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable)) {\n        return false;\n    } \n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    return ((java.lang.reflect.TypeVariable<?>.getGenericDeclaration()) == (java.lang.reflect.TypeVariable<?>.getGenericDeclaration())) && (java.lang.reflect.TypeVariable<?>.getName().equals(java.lang.reflect.TypeVariable<?>.getName()));\n} else {\n    return false;\n}"},"variableMap":{"a":"o","b":"o","this":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:187","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || ((java.lang.Object instanceof com.google.gson.JsonObject) && (((com.google.gson.JsonObject)(java.lang.Object)).com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.equals(com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>)))"},"status":-2},{"failures":[],"tindex":"e35b5414-42e7-11e5-8793-ff6bd7f8a241","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:100","type":"CtReturnImpl","sourcecode":"return new com.google.gson.internal.$Gson$Types.ParameterizedTypeImpl(java.lang.reflect.ParameterizedType.getOwnerType() , java.lang.reflect.ParameterizedType.getRawType() , java.lang.reflect.ParameterizedType.getActualTypeArguments())"},"status":-2},{"failures":[],"tindex":"e35b5415-42e7-11e5-8793-67e26ee89c53","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:123","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"root":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:313","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"e35b5416-42e7-11e5-8793-0f982e3d3deb","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[] = new java.lang.String[128]"},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"pathNames"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1278","type":"CtAssignmentImpl","sourcecode":"java.lang.String[] = java.lang.String[]"},"status":-1},{"failures":[],"tindex":"e35b7b27-42e7-11e5-8793-99284c55f1d9","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:506","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"limit","peekStack":"pos","peeked":"pos","this":"this","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:642","type":"CtIfImpl","sourcecode":"if (((((int) + int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer((int + 1)))) && com.google.gson.stream.JsonReader.(isLiteral(char[][((int) + int)]))) {\n    return com.google.gson.stream.JsonReader.int;\n} "},"status":-1},{"failures":[],"tindex":"e35b7b28-42e7-11e5-8793-cff80b7eaa2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:154","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\r'] = \"\\\\r\""},"status":-1},{"failures":[],"tindex":"e35b7b29-42e7-11e5-8793-7371b93c65ae","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:96","type":"CtLocalVariableImpl","sourcecode":"boolean boolean"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:423","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"e35b7b2a-42e7-11e5-8793-bf70755f645e","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:230","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()"},"variableMap":{"clazz":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:288","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.util.Collection.java.util.Collection)"},"status":-1},{"failures":[],"tindex":"e35b7b2b-42e7-11e5-8793-bf3e1c61417b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:120","type":"CtReturnImpl","sourcecode":"return ((java.lang.Class<?>)(java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":"e35b7b2c-42e7-11e5-8793-410ba3c3056a","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:167","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) {\n        return false;\n    } \n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    return (com.google.gson.internal.$Gson$Types.(com.google.gson.internal.$Gson$Types.equal(java.lang.reflect.ParameterizedType.getOwnerType(), java.lang.reflect.ParameterizedType.getOwnerType())) && (java.lang.reflect.ParameterizedType.getRawType().equals(java.lang.reflect.ParameterizedType.getRawType()))) && (java.util.Arrays.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) {\n        return false;\n    } \n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n        return false;\n    } \n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return (java.util.Arrays.equals(java.lang.reflect.WildcardType.getUpperBounds(), java.lang.reflect.WildcardType.getUpperBounds())) && (java.util.Arrays.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable)) {\n        return false;\n    } \n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    return ((java.lang.reflect.TypeVariable<?>.getGenericDeclaration()) == (java.lang.reflect.TypeVariable<?>.getGenericDeclaration())) && (java.lang.reflect.TypeVariable<?>.getName().equals(java.lang.reflect.TypeVariable<?>.getName()));\n} else {\n    return false;\n}"},"variableMap":{"a":"obj","b":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:306","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"e35ba23d-42e7-11e5-8793-d1a2ac72bdac","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:548","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"\\\\u2029\""},"variableMap":{"replacement":"separator"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:218","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \": \""},"status":-1},{"failures":[],"tindex":"e35ba23e-42e7-11e5-8793-1dc27b8126d3","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:360","type":"CtIfImpl","sourcecode":"if (boolean) {\n    break;\n} "},"variableMap":{"insert":"requiresThreadLocalCleanup"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:342","type":"CtIfImpl","sourcecode":"if (java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>> == null) {\n    java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>> = new java.util.HashMap<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>();\n    java.lang.ThreadLocal<java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>>.set(java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>);\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"e35ba23f-42e7-11e5-8793-adbd0f68a171","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1452","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"e35ba240-42e7-11e5-8793-8b786fcb79b7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:296","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"e35ba241-42e7-11e5-8793-d1bdafcaf6bf","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1398","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"e35bc952-42e7-11e5-8793-1586b1ead33f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:733","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = com.google.gson.stream.JsonReader.int;\n} "},"status":-1},{"failures":[],"tindex":"e35bc953-42e7-11e5-8793-c9e3172d762e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:389","type":"CtAssertImpl","sourcecode":"assert (int == (-1)) || (int == 1)"},"variableMap":{"delta":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:795","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a name but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}