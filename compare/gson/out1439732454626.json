{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"6ad1de8d-441c-11e5-acc7-51ce007dabc5","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:55","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonObject"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:181","type":"CtForEachImpl","sourcecode":"for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : java.util.List<com.google.gson.ExclusionStrategy>) {\n    if (com.google.gson.ExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)) {\n        return true;\n    } \n}"},"status":-2},{"failures":[],"tindex":"6ad2059e-441c-11e5-acc7-c7d3a7b0e8d9","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:88","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"com.google.gson.stream.JsonToken.NULL"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonObject) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonArray) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonPrimitive) {\n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(java.lang.Object));\n    if (com.google.gson.JsonPrimitive.isString()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isBoolean()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isNumber()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else {\n        throw new java.lang.AssertionError();\n    }\n} else if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"6ad2059f-441c-11e5-acc7-89c1dcd5f75b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:188","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n        return false;\n    } \n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return (java.util.Arrays.equals(java.lang.reflect.WildcardType.getUpperBounds(), java.lang.reflect.WildcardType.getUpperBounds())) && (java.util.Arrays.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable)) {\n        return false;\n    } \n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    return ((java.lang.reflect.TypeVariable<?>.getGenericDeclaration()) == (java.lang.reflect.TypeVariable<?>.getGenericDeclaration())) && (java.lang.reflect.TypeVariable<?>.getName().equals(java.lang.reflect.TypeVariable<?>.getName()));\n} else {\n    return false;\n}"},"status":-2},{"failures":[],"tindex":"6ad22cb0-441c-11e5-acc7-290bbf91d5a6","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:161","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType()"},"variableMap":{"to":"context"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:313","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map.java.util.Map)"},"status":-2},{"failures":[],"tindex":"6ad22cb1-441c-11e5-acc7-cf1ebf3a12ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:255","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) && (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null)) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) > (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.last() : com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.first();\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.removeInternal(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false);\n    int int = 0;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n        int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n    } \n    int int = 0;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n        int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n        com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n    } \n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    return ;\n} else if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n} else if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n} else {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, null);\n}"},"status":0},{"failures":[],"tindex":"6ad253c2-441c-11e5-acc7-b3946bb90fc4","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonScope.EMPTY_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:520","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-2},{"failures":[],"tindex":"6ad27ad3-441c-11e5-acc7-9778fecb2249","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:123","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"root":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:374","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"6ad27ad4-441c-11e5-acc7-2525011e27a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:849","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.Primitives.wrap(java.lang.Class<T>).cast(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"6ad27ad5-441c-11e5-acc7-d724c54f9afb","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[0];\n} "},"variableMap":{"collectionType":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:389","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"status":-2},{"failures":[],"tindex":"6ad27ad6-441c-11e5-acc7-85b7e5fca985","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:478","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeValue(false)"},"status":-1},{"failures":[],"tindex":"6ad27ad7-441c-11e5-acc7-2bf4ef231363","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:158","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[],"tindex":"6ad27ad8-441c-11e5-acc7-af3db0295966","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:88","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"com.google.gson.stream.JsonToken.NUMBER"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonPrimitive.isNumber()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"6ad2a1e9-441c-11e5-acc7-c1b08f4edc30","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"pos","lineStart":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:565","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"6ad2a1ea-441c-11e5-acc7-b12c6aca2fd6","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:505","type":"CtWhileImpl","sourcecode":"while (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"variableMap":{"node":"replacement","left":"parent","child":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"6ad2a1eb-441c-11e5-acc7-1db8f7051af5","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:317","type":"CtReturnImpl","sourcecode":"return (com.google.gson.JsonPrimitive.getAsNumber().longValue()) == (com.google.gson.JsonPrimitive.getAsNumber().longValue())"},"variableMap":{"other":"this","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:136","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.parseBoolean(com.google.gson.JsonPrimitive.getAsString())"},"status":-1},{"failures":[],"tindex":"6ad2c8fc-441c-11e5-acc7-ff7142e4d143","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:81","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"pendingName":"separator"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:218","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = \": \""},"status":-1},{"failures":[],"tindex":"6ad2c8fd-441c-11e5-acc7-cf6881ad02de","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1041","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:123","type":"CtLocalVariableImpl","sourcecode":"java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"6ad2c8fe-441c-11e5-acc7-0b8112ee9499","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:147","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[][int] = java.lang.String.format(\"\\\\u%04x\", ((int)(int)))"},"status":-1},{"failures":[],"tindex":"6ad2c8ff-441c-11e5-acc7-872a0ef6ec29","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:46","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonArray"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:317","type":"CtReturnImpl","sourcecode":"return (com.google.gson.JsonPrimitive.getAsNumber().longValue()) == (com.google.gson.JsonPrimitive.getAsNumber().longValue())"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"6ad22cb1-441c-11e5-acc7-cf1ebf3a12ce","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b"]},"type":"branch"},{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]}]}