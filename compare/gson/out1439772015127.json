{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"86bac75c-4478-11e5-97e1-8df80ce7abdb","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonElement:324","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Streams.write(this, com.google.gson.stream.JsonWriter)"},"variableMap":{"jsonWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeName()"},"status":-2},{"failures":[],"tindex":"86bb3c8d-4478-11e5-97e1-e5832975ebdf","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:44","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:360","type":"CtIfImpl","sourcecode":"if (com.google.gson.TypeAdapter<T> != null) {\n    com.google.gson.Gson.FutureTypeAdapter<T>.setDelegate(com.google.gson.TypeAdapter<T>);\n    java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.TypeAdapter<?>>.put(com.google.gson.reflect.TypeToken<T>, com.google.gson.TypeAdapter<T>);\n    return com.google.gson.TypeAdapter<T>;\n} "},"status":-1},{"failures":[],"tindex":"86bb3c8e-4478-11e5-97e1-0bf428986733","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:87","type":"CtReturnImpl","sourcecode":"return "},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1110","type":"CtIfImpl","sourcecode":"if (int == char) {\n    int = int;\n    return ;\n} else if (int == '\\\\') {\n    int = int;\n    com.google.gson.stream.JsonReader.readEscapeCharacter();\n    int = int;\n    int = int;\n} else if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"status":-1},{"failures":[],"tindex":"86bb639f-4478-11e5-97e1-8da047bf66bb","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:128","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:242","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"86bb8ab0-4478-11e5-97e1-cf99f41890b0","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonParser:61","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected END_ARRAY but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"86bb8ab1-4478-11e5-97e1-dd617e3f69a8","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:77","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Attempted to deserialize a java.lang.Class. Forgot to register a type adapter?\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:367","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"JsonWriter is closed.\")"},"status":-2},{"failures":[],"tindex":"86bbb1c2-4478-11e5-97e1-791d429f3955","series":0,"name":"replace","transplant":{"position":"com.google.gson.TypeAdapter:199","type":"CtReturnImpl","sourcecode":"return com.google.gson.TypeAdapter.this.read(com.google.gson.stream.JsonReader)"},"variableMap":{"reader":"reader"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:805","type":"CtTryImpl","sourcecode":"try {\n    com.google.gson.stream.JsonReader.peek();\n    boolean = false;\n    com.google.gson.reflect.TypeToken<T> com.google.gson.reflect.TypeToken<T> = ((com.google.gson.reflect.TypeToken<T>)(com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type)));\n    com.google.gson.TypeAdapter<T> com.google.gson.TypeAdapter<T> = com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken<T>);\n    T T = com.google.gson.TypeAdapter<T>.read(com.google.gson.stream.JsonReader);\n    return T;\n} catch (java.io.EOFException e) {\n    if (boolean) {\n        return null;\n    } \n    throw new com.google.gson.JsonSyntaxException(java.io.EOFException);\n} catch (java.lang.IllegalStateException e) {\n    throw new com.google.gson.JsonSyntaxException(java.lang.IllegalStateException);\n} catch (java.io.IOException e) {\n    throw new com.google.gson.JsonSyntaxException(java.io.IOException);\n} finally {\n    com.google.gson.stream.JsonReader.setLenient(boolean);\n}"},"status":-2},{"failures":[],"tindex":"86bbd8d3-4478-11e5-97e1-bbf51eada1e5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"86bbffe4-4478-11e5-97e1-33356c6c9e54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1070","type":"CtIfImpl","sourcecode":"if (int < (char[].int)) {\n    if (com.google.gson.stream.JsonReader.fillBuffer((int + 1))) {\n        continue;\n    } else {\n        break;\n    }\n} "},"status":0},{"failures":[],"tindex":"86bbffe5-4478-11e5-97e1-fb18e9569609","series":0,"name":"replace","transplant":{"position":"com.google.gson.DefaultDateTypeAdapter:96","type":"CtTryImpl","sourcecode":"try {\n    return java.text.DateFormat.parse(com.google.gson.JsonElement.getAsString());\n} catch (java.text.ParseException ignored) {\n}"},"variableMap":{"localFormat":"this","json":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == (java.sql.Date.java.sql.Date)) {\n    return new java.sql.Date(java.util.Date.getTime());\n} else {\n    throw new java.lang.IllegalArgumentException(((java.lang.Object.(getClass()) + \" cannot deserialize to \") + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":"86bc26f6-4478-11e5-97e1-61b703fd792c","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:262","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"but got: \")"},"variableMap":{"exceptionMessage":"builder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1080","type":"CtAssignmentImpl","sourcecode":"java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-1},{"failures":[],"tindex":"86bc26f7-4478-11e5-97e1-312847d18210","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:111","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonPrimitive.isString()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (com.google.gson.JsonPrimitive.isBoolean()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (com.google.gson.JsonPrimitive.isNumber()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else {\n    throw new java.lang.AssertionError();\n}"},"variableMap":{"com.google.gson.stream.JsonToken.STRING":"o","primitive":"o","com.google.gson.stream.JsonToken.BOOLEAN":"com.google.gson.stream.JsonToken.NUMBER","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.NUMBER"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonPrimitive) {\n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(java.lang.Object));\n    if (com.google.gson.JsonPrimitive.isString()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isBoolean()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isNumber()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else {\n        throw new java.lang.AssertionError();\n    }\n} else if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"86bc7518-4478-11e5-97e1-bf3807164020","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"rightHeight","lineStart":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:390","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":0},{"failures":[],"tindex":"86bc7519-4478-11e5-97e1-fd4ef6404e9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:270","type":"CtReturnImpl","sourcecode":"return com.google.gson.JsonPrimitive.getAsString().charAt(0)"},"status":-2},{"failures":[],"tindex":"86bc751a-4478-11e5-97e1-6b8450716fd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"86bc9c2b-4478-11e5-97e1-25f42d6634d9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:88","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken"},"variableMap":{"com.google.gson.stream.JsonToken.END_DOCUMENT":"com.google.gson.stream.JsonToken.END_OBJECT"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:95","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?>.hasNext()) {\n    if (boolean) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else {\n        java.util.List<java.lang.Object>.add(java.util.Iterator<?>.next());\n        return com.google.gson.internal.bind.JsonTreeReader.peek();\n    }\n} else {\n    return boolean ? com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken : com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n}"},"status":-2},{"failures":[],"tindex":"86bc9c2c-4478-11e5-97e1-f7fc31fd64e6","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:692","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"size":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:365","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"86bcc33d-4478-11e5-97e1-f3ca5f4798bb","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:360","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"changed":"escapeHtmlChars"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"status":-1},{"failures":[],"tindex":"86bcc33e-4478-11e5-97e1-a710822c2bd2","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:183","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.beginObject()"},"variableMap":{"in":"object"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:749","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.com.google.gson.Gson.assertFullConsumption(java.lang.Object, com.google.gson.stream.JsonReader)"},"status":-2},{"failures":[],"tindex":"86bcc33f-4478-11e5-97e1-e3c455472b2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:242","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments()"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}