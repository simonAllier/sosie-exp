{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"79d64038-4335-11e5-b68c-c30e41d23b15","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1022","type":"CtIfImpl","sourcecode":"if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"variableMap":{"p":"oldCapacity","c":"oldCapacity","lineStart":"hash","lineNumber":"hash"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:598","type":"CtForImpl","sourcecode":"for (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> ; (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.AvlIterator<K, V>.next()) != null ; ) {\n    if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n        com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    } else {\n        com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"79d66749-4335-11e5-b68c-0d75ec97fd14","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonPrimitive:280","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n    return true;\n} "},"variableMap":{"standardPrimitive":"clazz","classOfPrimitive":"clazz"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:192","type":"CtIfImpl","sourcecode":"if (((double) != (com.google.gson.internal.Excluder.double)) && (!com.google.gson.internal.Excluder.(isValidVersion(java.lang.Class<?>.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since), java.lang.Class<?>.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until))))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"79d6674a-4335-11e5-b68c-d1ca9581005a","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:173","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:433","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"79d6674b-4335-11e5-b68c-2151a242cb1b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:492","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", \")"},"variableMap":{"stringBuilder":"translation"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:127","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"79d6674c-4335-11e5-b68c-c5715d3f0986","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:119","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"variableMap":{"i":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1150","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"79d6674d-4335-11e5-b68c-43d1f2ee7886","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:96","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.isArray() ? new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.canonicalize(java.lang.Class<?>.getComponentType())) : java.lang.Class<?>"},"variableMap":{"c":"toResolve","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:250","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"79d68e5e-4335-11e5-b68c-97cb41182271","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:339","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy, false, true)"},"variableMap":{"excluder":"excluder","strategy":"strategy"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:322","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy, true, false)"},"status":-1},{"failures":[],"tindex":"79d68e5f-4335-11e5-b68c-7fa74a2847c9","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:356","type":"CtAssertImpl","sourcecode":"assert int == 1"},"variableMap":{"rightDelta":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1358","type":"CtIfImpl","sourcecode":"if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"79d68e60-4335-11e5-b68c-bdf9bc49ae93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:346","type":"CtIfImpl","sourcecode":"if (int == (-2)) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == (-1)) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    } else {\n        assert int == 1;\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 2) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    int int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0;\n    int int = com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0;\n    int int = int - int;\n    if ((int == 1) || ((int == 0) && (!boolean))) {\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    } else {\n        assert int == (-1);\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n        com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    }\n    if (boolean) {\n        break;\n    } \n} else if (int == 0) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = int + 1;\n    if (boolean) {\n        break;\n    } \n} else {\n    assert (int == (-1)) || (int == 1);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1;\n    if (!boolean) {\n        break;\n    } \n}"},"status":0},{"failures":[],"tindex":"79d68e61-4335-11e5-b68c-23aa6f93e1f6","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:161","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:246","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"79d68e62-4335-11e5-b68c-dbb7d9033501","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:357","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"variableMap":{"this":"this","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:371","type":"CtIfImpl","sourcecode":"if ((int == 1) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    assert int == (-1);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"79d6b573-4335-11e5-b68c-39738bf9b659","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:417","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:631","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Nesting problem.\")"},"status":-1},{"failures":[],"tindex":"79d6b574-4335-11e5-b68c-959e19042adf","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:161","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:212","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"79d6b575-4335-11e5-b68c-c1b11bbcf372","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.Excluder:159","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Field.isSynthetic()) {\n    return true;\n} "},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:163","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.google.gson.annotations.Expose com.google.gson.annotations.Expose = java.lang.reflect.Field.getAnnotation(com.google.gson.annotations.Expose.com.google.gson.annotations.Expose);\n    if ((com.google.gson.annotations.Expose == null) || (boolean ? !(com.google.gson.annotations.Expose.boolean()) : !(com.google.gson.annotations.Expose.boolean()))) {\n        return true;\n    } \n} "},"status":0},{"failures":[],"tindex":"79d6b576-4335-11e5-b68c-e3b8c97ee2cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1406","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"79d6b577-4335-11e5-b68c-b1c3b739d5c9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:278","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType ? ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType() : ((java.lang.Class<?>)(java.lang.reflect.Type)).getComponentType()"},"variableMap":{"array":"context"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:340","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"79d6dc88-4335-11e5-b68c-3f55f1dae696","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"name"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:124","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char char = java.lang.String.charAt(int);\n    if ((java.lang.Character.isUpperCase(char)) && ((java.lang.StringBuilder.length()) != 0)) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } \n    java.lang.StringBuilder.append(char);\n}"},"status":-1},{"failures":[],"tindex":"79d6dc89-4335-11e5-b68c-29ca92a05039","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.Excluder:159","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Field.isSynthetic()) {\n    return true;\n} "},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:179","type":"CtIfImpl","sourcecode":"if (!(java.util.List<com.google.gson.ExclusionStrategy>.isEmpty())) {\n    com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(java.lang.reflect.Field);\n    for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : java.util.List<com.google.gson.ExclusionStrategy>) {\n        if (com.google.gson.ExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)) {\n            return true;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"79d6dc8a-4335-11e5-b68c-673ce6cac597","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:683","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"stack":"prev"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:248","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"79d6dc8b-4335-11e5-b68c-5558fc759f1b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:56","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>> = java.util.Collections.unmodifiableMap(java.util.Map<java.lang.Class<?>, java.lang.Class<?>>)"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}