{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"b1447587-4301-11e5-8f1f-450dfd5df3b9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1435","type":"CtIfImpl","sourcecode":"if (char == '\\n') {\n    (int)++;\n    int = int;\n    break;\n} else if (char == '\\r') {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"b1449c98-4301-11e5-8f1f-3b27953a7e02","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:482","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"variableMap":{"stack":"stack","com.google.gson.stream.JsonScope.EMPTY_OBJECT":"peekStack","peeked":"peeked","this":"this","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"com.google.gson.stream.JsonScope.CLOSED","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"com.google.gson.stream.JsonScope.EMPTY_DOCUMENT","com.google.gson.stream.JsonScope.DANGLING_NAME":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","lenient":"lenient","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"stackSize","com.google.gson.stream.JsonReader.PEEKED_EOF":"com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT","stackSize":"com.google.gson.stream.JsonScope.DANGLING_NAME","com.google.gson.stream.JsonScope.CLOSED":"com.google.gson.stream.JsonReader.PEEKED_EOF","com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"com.google.gson.stream.JsonScope.CLOSED","pos":"com.google.gson.stream.JsonReader.PEEKED_END_OBJECT","peekStack":"limit","limit":"com.google.gson.stream.JsonScope.EMPTY_OBJECT","buffer":"buffer","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"peeked","com.google.gson.stream.JsonScope.EMPTY_DOCUMENT":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT":"com.google.gson.stream.JsonScope.EMPTY_DOCUMENT"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:469","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ']' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n    }\n} else if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-2},{"failures":[],"tindex":"b144c3a9-4301-11e5-8f1f-e1a4bc16a866","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:724","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"stack":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:366","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"b144c3aa-4301-11e5-8f1f-c124ec680f83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:163","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super K> == (com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(K instanceof java.lang.Comparable))) {\n    throw new java.lang.ClassCastException(((K.getClass().getName()) + \" is not Comparable\"));\n} "},"status":-1},{"failures":[],"tindex":"b144c3ab-4301-11e5-8f1f-53ff3b9cecc5","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:107","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(java.lang.reflect.WildcardType.getUpperBounds() , java.lang.reflect.WildcardType.getLowerBounds());\n} else {\n    return java.lang.reflect.Type;\n}"},"variableMap":{"type":"context"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:227","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == java.lang.Class<?>) {\n    return java.lang.reflect.Type;\n} "},"status":-2},{"failures":[],"tindex":"b144c3ac-4301-11e5-8f1f-11da39e0e1dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:299","type":"CtReturnImpl","sourcecode":"return ((int)(long ^ (long >>> 32)))"},"status":-1},{"failures":[],"tindex":"b144c3ad-4301-11e5-8f1f-752ac896f4f1","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:39","type":"CtForEachImpl","sourcecode":"for (java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement> : com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.entrySet()) {\n    com.google.gson.JsonObject.add(java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getKey(), java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue().deepCopy());\n}"},"status":-2},{"failures":[],"tindex":"b144eabe-4301-11e5-8f1f-67b2edfab336","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:401","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeName()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:180","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonWriter.(isLenient())) {\n    double double = java.lang.Number.doubleValue();\n    if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n        throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + java.lang.Number));\n    } \n} "},"status":-2},{"failures":[],"tindex":"b144eabf-4301-11e5-8f1f-57742f60f18a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:458","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.EntrySet com.google.gson.internal.LinkedHashTreeMap<K, V>.EntrySet = com.google.gson.internal.LinkedHashTreeMap<K, V>.EntrySet"},"status":-2},{"failures":[],"tindex":"b144eac0-4301-11e5-8f1f-795a299330ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1343","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (int == int) {\n        int = int;\n        if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n            break;\n        } \n        int = int;\n        int = int;\n    } \n    int int = char[][int++];\n    if (int == '\\n') {\n        (int)++;\n        int = int;\n        continue;\n    } else if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n        continue;\n    } \n    if (int == '/') {\n        int = int;\n        if (int == int) {\n            (int)--;\n            boolean boolean = com.google.gson.stream.JsonReader.fillBuffer(2);\n            (int)++;\n            if (!boolean) {\n                return int;\n            } \n        } \n        com.google.gson.stream.JsonReader.checkLenient();\n        char char = char[][int];\n        switch (char) {\n            case '*' :\n                (int)++;\n                if (!com.google.gson.stream.JsonReader.(skipTo(\"*/\"))) {\n                    throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated comment\");\n                } \n                int = (int) + 2;\n                int = int;\n                continue;\n            case '/' :\n                (int)++;\n                com.google.gson.stream.JsonReader.skipToEndOfLine();\n                int = int;\n                int = int;\n                continue;\n            default :\n                return int;\n        }\n    } else if (int == '#') {\n        int = int;\n        com.google.gson.stream.JsonReader.checkLenient();\n        com.google.gson.stream.JsonReader.skipToEndOfLine();\n        int = int;\n        int = int;\n    } else {\n        int = int;\n        return int;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b144eac1-4301-11e5-8f1f-5b0422d1e543","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"stackSize":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:859","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"b144eac2-4301-11e5-8f1f-899bf3c5033e","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:587","type":"CtIfImpl","sourcecode":"if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n    int++;\n} else {\n    int++;\n}"},"variableMap":{"node":"right","oldCapacity":"comparison","leftSize":"comparison","rightSize":"comparison","hash":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:183","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} else {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"status":0},{"failures":[],"tindex":"b144eac3-4301-11e5-8f1f-1f8ee09d531d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:858","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"topOfStack","peeked":"topOfStack"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:376","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = int"},"status":-1},{"failures":[],"tindex":"b14511d4-4301-11e5-8f1f-71747cb3cb67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:188","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[],"tindex":"b14511d5-4301-11e5-8f1f-414d7fa0f23d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:680","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"variableMap":{"targetSize":"height","treeCapacity":"height","leavesToSkip":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:420","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max((com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0), (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int : 0))) + 1"},"status":-2},{"failures":[],"tindex":"b14511d6-4301-11e5-8f1f-971f4cc77772","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"peekedNumberLength","i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:960","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"b14511d7-4301-11e5-8f1f-41dc8141742c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:578","type":"CtReturnImpl","sourcecode":"return \"?\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:156","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.bind.JsonTreeReader.((com.google.gson.JsonPrimitive)(popStack())).getAsString()"},"status":-1},{"failures":[],"tindex":"b14511d8-4301-11e5-8f1f-1718c5a25941","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.MapTypeAdapterFactory:205","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beginObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:95","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.endArray()"},"status":-1},{"failures":[],"tindex":"b14511d9-4301-11e5-8f1f-451edf0d170a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1092","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.String(char[] , int , int)"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}