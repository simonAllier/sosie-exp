{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"07231fd6-42be-11e5-88d2-f1e630fa8677","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:152","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\b'] = \"\\\\b\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"replacements"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:541","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String[][char]"},"status":0},{"failures":[],"tindex":"072346e7-42be-11e5-88d2-532fb183c8fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:472","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case ']' :\n        return int = com.google.gson.stream.JsonReader.int;\n    case ';' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case ',' :\n        break;\n    default :\n        throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n}"},"status":-1},{"failures":[],"tindex":"072346e8-42be-11e5-88d2-9958374fe124","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:111","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap<K, V>.removeInternalByKey(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"072346e9-42be-11e5-88d2-4fac3aa0e529","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    return int;\n} "},"variableMap":{"charsLoaded":"fitsInLong","c":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:666","type":"CtForImpl","sourcecode":"charactersOfNumber : for ( ; true ; int++) {\n    if ((int + int) == int) {\n        if (int == (char[].int)) {\n            return com.google.gson.stream.JsonReader.int;\n        } \n        if (!com.google.gson.stream.JsonReader.(fillBuffer((int + 1)))) {\n            break;\n        } \n        int = int;\n        int = int;\n    } \n    char char = char[][(int + int)];\n    switch (char) {\n        case '-' :\n            if (int == (com.google.gson.stream.JsonReader.int)) {\n                boolean = true;\n                int = com.google.gson.stream.JsonReader.int;\n                continue;\n            } else if (int == (com.google.gson.stream.JsonReader.int)) {\n                int = com.google.gson.stream.JsonReader.int;\n                continue;\n            } \n            return com.google.gson.stream.JsonReader.int;\n        case '+' :\n            if (int == (com.google.gson.stream.JsonReader.int)) {\n                int = com.google.gson.stream.JsonReader.int;\n                continue;\n            } \n            return com.google.gson.stream.JsonReader.int;\n        case 'e' :\n        case 'E' :\n            if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n                int = com.google.gson.stream.JsonReader.int;\n                continue;\n            } \n            return com.google.gson.stream.JsonReader.int;\n        case '.' :\n            if (int == (com.google.gson.stream.JsonReader.int)) {\n                int = com.google.gson.stream.JsonReader.int;\n                continue;\n            } \n            return com.google.gson.stream.JsonReader.int;\n        default :\n            if ((char < '0') || (char > '9')) {\n                if (!com.google.gson.stream.JsonReader.(isLiteral(char))) {\n                    break charactersOfNumber;\n                } \n                return com.google.gson.stream.JsonReader.int;\n            } \n            if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n                long = -(char - '0');\n                int = com.google.gson.stream.JsonReader.int;\n            } else if (int == (com.google.gson.stream.JsonReader.int)) {\n                if (long == 0) {\n                    return com.google.gson.stream.JsonReader.int;\n                } \n                long long = (long * 10) - (char - '0');\n                boolean &= (long > (com.google.gson.stream.JsonReader.long)) || ((long == (com.google.gson.stream.JsonReader.long)) && (long < long));\n                long = long;\n            } else if (int == (com.google.gson.stream.JsonReader.int)) {\n                int = com.google.gson.stream.JsonReader.int;\n            } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n                int = com.google.gson.stream.JsonReader.int;\n            } \n    }\n}"},"status":-1},{"failures":[],"tindex":"07236dfa-42be-11e5-88d2-758db662a204","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:83","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedTreeMap.Node<K, V> != null ? com.google.gson.internal.LinkedTreeMap.Node<K, V>.V : null"},"status":-2},{"failures":[],"tindex":"07236dfb-42be-11e5-88d2-c78b7960a688","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1435","type":"CtIfImpl","sourcecode":"if (char == '\\n') {\n    (int)++;\n    int = int;\n    break;\n} else if (char == '\\r') {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"07236dfc-42be-11e5-88d2-71cfaa173e18","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[] = new java.lang.String[128]"},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"com.google.gson.stream.JsonWriter.HTML_SAFE_REPLACEMENT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:156","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[] = com.google.gson.stream.JsonWriter.java.lang.String[].clone()"},"status":-2},{"failures":[],"tindex":"07236dfd-42be-11e5-88d2-47bfabad683b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:491","type":"CtIfImpl","sourcecode":"if (java.lang.Number == null) {\n    return com.google.gson.stream.JsonWriter.nullValue();\n} "},"status":-1},{"failures":[],"tindex":"07236dfe-42be-11e5-88d2-f73717df032d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1537","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"pos":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:178","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"07236dff-42be-11e5-88d2-170e807b045e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[],"tindex":"07236e00-42be-11e5-88d2-95f1a0b538bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1249","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipUnquotedValue();\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"07239511-42be-11e5-88d2-cfeebe7107e5","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:542","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    continue;\n} "},"variableMap":{"replacement":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:79","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonObject.createJsonElement(java.lang.String))"},"status":-2},{"failures":[],"tindex":"07239512-42be-11e5-88d2-f778a3394acd","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1550","type":"CtReturnImpl","sourcecode":"return '\\r'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1541","type":"CtReturnImpl","sourcecode":"return '\\t'"},"status":-1},{"failures":[],"tindex":"07239513-42be-11e5-88d2-1709b0c4544b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:795","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a name but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"variableMap":{"p":"com.google.gson.stream.JsonReader.PEEKED_LONG","result":"result","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED","this":"this","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"com.google.gson.stream.JsonReader.PEEKED_LONG"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:824","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.String;\n    java.lang.String = null;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.Long.toString(long);\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a string but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-1},{"failures":[],"tindex":"07239514-42be-11e5-88d2-a7a1c289f6e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonStreamParser:87","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader)"},"status":-2},{"failures":[],"tindex":"07239515-42be-11e5-88d2-43c1ea37558a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:360","type":"CtIfImpl","sourcecode":"if (boolean) {\n    break;\n} "},"variableMap":{"insert":"insert"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"07239516-42be-11e5-88d2-e311e02587fb","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:602","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw new java.lang.IllegalStateException(\"JSON must have only one top-level value.\");\n} "},"variableMap":{"lenient":"changed"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:355","type":"CtForImpl","sourcecode":"for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n    if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n        if (!boolean) {\n            java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n            boolean = true;\n        } \n        java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0723bc27-42be-11e5-88d2-ebe290e0b76b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:115","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonPrimitive.isNumber()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else {\n    throw new java.lang.AssertionError();\n}"},"variableMap":{"primitive":"primitive","com.google.gson.stream.JsonToken.NUMBER":"com.google.gson.stream.JsonToken.BOOLEAN"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:113","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonPrimitive.isBoolean()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (com.google.gson.JsonPrimitive.isNumber()) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"0723bc28-42be-11e5-88d2-2d0f9ed38150","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:87","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == (java.sql.Date.java.sql.Date)) {\n    return new java.sql.Date(java.util.Date.getTime());\n} else {\n    throw new java.lang.IllegalArgumentException(((java.lang.Object.(getClass()) + \" cannot deserialize to \") + java.lang.reflect.Type));\n}"},"status":-2},{"failures":[],"tindex":"0723bc29-42be-11e5-88d2-ffad2cb2f278","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:170","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} else {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"variableMap":{"comparison":"rightDelta","left":"node","created":"right","right":"right","nearest":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:325","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n}"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}