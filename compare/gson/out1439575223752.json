{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"55ea7701-42ae-11e5-af7e-e91b50f301a3","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:350","type":"CtIfImpl","sourcecode":"if (com.google.gson.Gson.FutureTypeAdapter<T> != null) {\n    return com.google.gson.Gson.FutureTypeAdapter<T>;\n} "},"variableMap":{"ongoingCall":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:57","type":"CtReturnImpl","sourcecode":"return com.google.gson.TypeAdapter<T>"},"status":-2},{"failures":[],"tindex":"55ea9e12-42ae-11e5-af7e-1dae78da569d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:78","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.JsonObject com.google.gson.JsonObject = com.google.gson.internal.bind.JsonTreeWriter.((com.google.gson.JsonObject)(peek()))"},"status":-2},{"failures":[],"tindex":"55ea9e13-42ae-11e5-af7e-9b7539257337","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:437","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeValue(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:448","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.writeDeferredName()"},"status":-1},{"failures":[],"tindex":"55eac524-42ae-11e5-af7e-c7a58fca96cc","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:624","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"NULL\""},"variableMap":{"keywordUpper":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:541","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String[][char]"},"status":-1},{"failures":[],"tindex":"55eac525-42ae-11e5-af7e-674c1be5a770","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.Excluder:159","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Field.isSynthetic()) {\n    return true;\n} "},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:179","type":"CtIfImpl","sourcecode":"if (!(java.util.List<com.google.gson.ExclusionStrategy>.isEmpty())) {\n    com.google.gson.FieldAttributes com.google.gson.FieldAttributes = new com.google.gson.FieldAttributes(java.lang.reflect.Field);\n    for (com.google.gson.ExclusionStrategy com.google.gson.ExclusionStrategy : java.util.List<com.google.gson.ExclusionStrategy>) {\n        if (com.google.gson.ExclusionStrategy.shouldSkipField(com.google.gson.FieldAttributes)) {\n            return true;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"55eaec36-42ae-11e5-af7e-17f5299e8f92","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:513","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"pos":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"status":-1},{"failures":[],"tindex":"55eaec37-42ae-11e5-af7e-1569932c6e88","series":0,"name":"replace","transplant":{"position":"com.google.gson.FieldAttributes:53","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getDeclaringClass()"},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldAttributes:100","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getType()"},"status":-1},{"failures":[],"tindex":"55eaec38-42ae-11e5-af7e-5d74befdd125","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:230","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()"},"variableMap":{"clazz":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.CollectionTypeAdapterFactory:51","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.getCollectionElementType(java.lang.reflect.Type, java.lang.Class<? super T>)"},"status":-1},{"failures":[],"tindex":"55eb1349-42ae-11e5-af7e-955400bfc82f","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1322","type":"CtReturnImpl","sourcecode":"return ((int) - (int)) + 1"},"variableMap":{"pos":"peeked","lineStart":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:501","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"55eb134a-42ae-11e5-af7e-81b9be3f21d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:62","type":"CtTryImpl","sourcecode":"try {\n    return ((com.google.gson.internal.Excluder)(super.clone()));\n} catch (java.lang.CloneNotSupportedException e) {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"55eb134b-42ae-11e5-af7e-d90781191868","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:537","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> == (com.google.gson.internal.LinkedTreeMap.Node<K, V>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"parent","header":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:287","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"55eb134c-42ae-11e5-af7e-c17d72ad5448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:613","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"55eb134d-42ae-11e5-af7e-77367460049e","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:746","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NUMBER":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"result","com.google.gson.stream.JsonReader.PEEKED_NONE":"result","last":"result","peeked":"result","i":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"result","peekedNumberLength":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:199","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"55eb3a5e-42ae-11e5-af7e-a9947bffb851","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LazilyParsedNumber:35","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (java.lang.NumberFormatException e) {\n    try {\n        return ((int)(java.lang.Long.parseLong(java.lang.String)));\n    } catch (java.lang.NumberFormatException nfe) {\n        return new java.math.BigDecimal(java.lang.String).intValue();\n    }\n}"},"variableMap":{"value":"peekedString"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1189","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        int = java.lang.Integer.parseInt(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return int;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":0},{"failures":[],"tindex":"55eb3a5f-42ae-11e5-af7e-43385d48cbc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:602","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":-1},{"failures":[],"tindex":"55eb3a60-42ae-11e5-af7e-135ee4f01f50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:114","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"55eb6171-42ae-11e5-af7e-9564d94854e8","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"This is not a JSON Null.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1573","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.stream.MalformedJsonException(((((((java.lang.String + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"55eb6172-42ae-11e5-af7e-1d01924b9229","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:348","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"variableMap":{"toResolve":"context","this":"this","context":"context","contextRawType":"supertype"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:269","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.lang.Class<?>))"},"status":-1},{"failures":[],"tindex":"55eb8883-42ae-11e5-af7e-7b199a12d734","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"rightHeight","i":"leftHeight"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:390","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":0},{"failures":[],"tindex":"55ebd6a4-42ae-11e5-af7e-0b285f56904f","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:106","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"This is not a JSON Array.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Preconditions:42","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException()"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}