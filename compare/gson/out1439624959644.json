{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"22d150ba-4322-11e5-8be2-194177959c1b","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:218","type":"CtIfImpl","sourcecode":"if (com.google.gson.reflect.TypeToken<T>.com.google.gson.reflect.TypeToken.typeEquals(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType, java.util.Map<java.lang.String, java.lang.reflect.Type>)) {\n    return true;\n} "},"variableMap":{"this":"this","ptype":"from","typeVarMap":"typeVarMap","to":"from"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:240","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.ParameterizedType.getRawType().equals(java.lang.reflect.ParameterizedType.getRawType())) {\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n        if (!com.google.gson.reflect.TypeToken<T>.(com.google.gson.reflect.TypeToken.matches(java.lang.reflect.Type[][int], java.lang.reflect.Type[][int], java.util.Map<java.lang.String, java.lang.reflect.Type>))) {\n            return false;\n        } \n    }\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"22d19edb-4322-11e5-8be2-0f65d2308fe1","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1537","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"pos":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:880","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":-1},{"failures":[],"tindex":"22d19edc-4322-11e5-8be2-3bfb015c98d2","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n        return java.lang.reflect.Type;\n    } \n} else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"variableMap":{"toResolve":"java.lang.Object.class","this":"this","context":"java.lang.Object.class","contextRawType":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:244","type":"CtIfImpl","sourcecode":"if (!(java.lang.Class<?>.isInterface())) {\n    while (java.lang.Class<?> != (java.lang.Object.java.lang.Object)) {\n        java.lang.Class<?> java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n        if (java.lang.Class<?> == java.lang.Class<?>) {\n            return java.lang.Class<?>.getGenericSuperclass();\n        } else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>)) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>);\n        } \n        java.lang.Class<?> = java.lang.Class<?>;\n    }\n} "},"status":-2},{"failures":[],"tindex":"22d1ecfd-4322-11e5-8be2-e3c16319fd64","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1318","type":"CtReturnImpl","sourcecode":"return (int) + 1"},"variableMap":{"lineNumber":"com.google.gson.stream.JsonReader.PEEKED_END_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:557","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"22d1ecfe-4322-11e5-8be2-251534688d17","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:341","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    throw new java.lang.IllegalStateException((\"Dangling name: \" + (java.lang.String)));\n} "},"variableMap":{"deferredName":"property"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:101","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonObject.createJsonElement(java.lang.Boolean))"},"status":-1},{"failures":[],"tindex":"22d1ecff-4322-11e5-8be2-15ec7b19d16b","series":0,"name":"replace","transplant":{"position":"com.google.gson.DefaultDateTypeAdapter:84","type":"CtReturnImpl","sourcecode":"return java.util.Date"},"variableMap":{"date":"date"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:86","type":"CtReturnImpl","sourcecode":"return new java.sql.Timestamp(java.util.Date.getTime())"},"status":-1},{"failures":[],"tindex":"22d1ed00-4322-11e5-8be2-a9b002110ba7","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:389","type":"CtAssertImpl","sourcecode":"assert (int == (-1)) || (int == 1)"},"variableMap":{"delta":"com.google.gson.stream.JsonReader.PEEKED_NUMBER"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:828","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.String;\n    java.lang.String = null;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = java.lang.Long.toString(long);\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a string but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-1},{"failures":[],"tindex":"22d21311-4322-11e5-8be2-d527631394a8","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= 31 ; int++) {\n    com.google.gson.stream.JsonWriter.java.lang.String[][int] = java.lang.String.format(\"\\\\u%04x\", ((int)(int)));\n}"},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"typeAdapter"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:459","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.TypeAdapter<?>) {\n    java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.internal.bind.TypeAdapters.newFactory(com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type), ((com.google.gson.TypeAdapter)(java.lang.Object))));\n} "},"status":-2},{"failures":[],"tindex":"22d21312-4322-11e5-8be2-81ec3840cb5f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"limit"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1342","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":0},{"failures":[],"tindex":"22d21313-4322-11e5-8be2-4bfba0377509","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Preconditions:41","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    throw new java.lang.IllegalArgumentException();\n} "},"status":-1},{"failures":[],"tindex":"22d23a24-4322-11e5-8be2-5347a6f8987c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1550","type":"CtReturnImpl","sourcecode":"return '\\r'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1547","type":"CtReturnImpl","sourcecode":"return '\\n'"},"status":-1},{"failures":[],"tindex":"22d23a25-4322-11e5-8be2-47d3732379e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:249","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"status":0},{"failures":[],"tindex":"22d23a26-4322-11e5-8be2-755e451dfd4c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1182","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"22d23a27-4322-11e5-8be2-5daaa60dd046","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:236","type":"CtReturnImpl","sourcecode":"return (int ^ (int >>> 7)) ^ (int >>> 4)"},"variableMap":{"h":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:706","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"22d26138-4322-11e5-8be2-2307690e296c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:286","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"variableMap":{"node":"originalParent","this":"this","adjacent":"originalParent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:298","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, false)"},"status":-1},{"failures":[],"tindex":"22d26139-4322-11e5-8be2-716491812092","series":0,"name":"add","transplant":{"position":"com.google.gson.reflect.TypeToken:124","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonElement:64","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonPrimitive"},"status":-2},{"failures":[],"tindex":"22d2613a-4322-11e5-8be2-bf89fbf07717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:171","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"22d2613b-4322-11e5-8be2-21089750b6d7","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:503","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:106","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"22d2613c-4322-11e5-8be2-69f4bfe67784","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:281","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"22d2884d-4322-11e5-8be2-c58766fb112c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1422","type":"CtIfImpl","sourcecode":"if (!(boolean)) {\n    throw com.google.gson.stream.JsonReader.syntaxError(\"Use JsonReader.setLenient(true) to accept malformed JSON\");\n} "},"variableMap":{"this":"this","lenient":"lenient"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:537","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n} "},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}