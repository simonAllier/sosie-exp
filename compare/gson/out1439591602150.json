{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"783139d6-42d4-11e5-9bba-f99b465283d3","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:647","type":"CtAssignmentImpl","sourcecode":"this.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"stackTop":"next"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:247","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"783160e7-42d4-11e5-9bba-5f48895cd96f","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:450","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write((boolean ? \"true\" : \"false\"))"},"status":-2},{"failures":[],"tindex":"783160e8-42d4-11e5-9bba-97a0b5a27d60","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1362","type":"CtIfImpl","sourcecode":"if (int == '/') {\n    int = int;\n    if (int == int) {\n        (int)--;\n        boolean boolean = com.google.gson.stream.JsonReader.fillBuffer(2);\n        (int)++;\n        if (!boolean) {\n            return int;\n        } \n    } \n    com.google.gson.stream.JsonReader.checkLenient();\n    char char = char[][int];\n    switch (char) {\n        case '*' :\n            (int)++;\n            if (!com.google.gson.stream.JsonReader.(skipTo(\"*/\"))) {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated comment\");\n            } \n            int = (int) + 2;\n            int = int;\n            continue;\n        case '/' :\n            (int)++;\n            com.google.gson.stream.JsonReader.skipToEndOfLine();\n            int = int;\n            int = int;\n            continue;\n        default :\n            return int;\n    }\n} else if (int == '#') {\n    int = int;\n    com.google.gson.stream.JsonReader.checkLenient();\n    com.google.gson.stream.JsonReader.skipToEndOfLine();\n    int = int;\n    int = int;\n} else {\n    int = int;\n    return int;\n}"},"variableMap":{"p":"peeked","c":"com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED","pos":"result","limit":"pos","this":"this","buffer":"buffer","l":"peekedNumberLength"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1186","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue((int == (com.google.gson.stream.JsonReader.int) ? '\\'' : '\\\"'));\n    try {\n        int = java.lang.Integer.parseInt(java.lang.String);\n        int = com.google.gson.stream.JsonReader.int;\n        (int[][((int) - 1)])++;\n        return int;\n    } catch (java.lang.NumberFormatException ignored) {\n    }\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-2},{"failures":[],"tindex":"783160e9-42d4-11e5-9bba-7dabed2152e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:161","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> == null) {\n    if ((java.util.Comparator<? super K> == (com.google.gson.internal.LinkedTreeMap.java.util.Comparator<java.lang.Comparable>)) && (!(K instanceof java.lang.Comparable))) {\n        throw new java.lang.ClassCastException(((K.getClass().getName()) + \" is not Comparable\"));\n    } \n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(com.google.gson.internal.LinkedTreeMap.Node<K, V> , K , com.google.gson.internal.LinkedTreeMap.Node<K, V> , com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} else {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = new com.google.gson.internal.LinkedTreeMap.Node<K, V>(com.google.gson.internal.LinkedTreeMap.Node<K, V> , K , com.google.gson.internal.LinkedTreeMap.Node<K, V> , com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>);\n    if (int < 0) {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    } else {\n        com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    }\n    com.google.gson.internal.LinkedTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedTreeMap.Node<K, V>, true);\n}"},"status":-2},{"failures":[],"tindex":"783187fa-42d4-11e5-9bba-2b76bafc4391","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:290","type":"CtReturnImpl","sourcecode":"return 31"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1183","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"783187fb-42d4-11e5-9bba-35688572301e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:224","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.Object>.add(new com.google.gson.JsonPrimitive(((java.lang.String)(java.util.Map.Entry<?, ?>.getKey()))))"},"variableMap":{"entry":"entry","stack":"stack"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:223","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.Object>.add(java.util.Map.Entry<?, ?>.getValue())"},"status":-1},{"failures":[],"tindex":"783187fc-42d4-11e5-9bba-8b68d06e047a","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"com.google.gson.stream.JsonReader.PEEKED_NONE","lineStart":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:840","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"783187fd-42d4-11e5-9bba-d14c71a43c14","series":0,"name":"add","transplant":{"position":"com.google.gson.Gson:652","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setSerializeNulls(boolean)"},"variableMap":{"serializeNulls":"htmlSafe","jsonWriter":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:664","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setHtmlSafe(boolean)"},"status":0},{"failures":[],"tindex":"783187fe-42d4-11e5-9bba-49b4e0ec38dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"783187ff-42d4-11e5-9bba-f525c78e251c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NONE":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:557","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"78318800-42d4-11e5-9bba-e5694c381a37","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:87","type":"CtInvocationImpl","sourcecode":"((com.google.gson.JsonArray)(com.google.gson.JsonElement)).add(com.google.gson.JsonElement)"},"variableMap":{"value":"value","element":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:54","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonElement == null) {\n    com.google.gson.JsonElement = com.google.gson.JsonNull.com.google.gson.JsonNull;\n} "},"status":-1},{"failures":[],"tindex":"78318801-42d4-11e5-9bba-e3e027c47e86","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:514","type":"CtInvocationImpl","sourcecode":"java.io.Writer.flush()"},"variableMap":{"out":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:632","type":"CtTryImpl","sourcecode":"try {\n    com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = com.google.gson.Gson.newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable));\n    com.google.gson.Gson.toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter);\n} catch (java.io.IOException e) {\n    throw new java.lang.RuntimeException(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"7831af12-42d4-11e5-9bba-213b3b8248a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:818","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"7831af13-42d4-11e5-9bba-8b6d1cd7295c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:98","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:653","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonWriter"},"status":-2},{"failures":[],"tindex":"7831af14-42d4-11e5-9bba-6739d09e8552","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.Excluder:235","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    return false;\n} "},"variableMap":{"version":"version","annotationVersion":"com.google.gson.internal.Excluder.IGNORE_VERSIONS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:192","type":"CtIfImpl","sourcecode":"if (((double) != (com.google.gson.internal.Excluder.double)) && (!com.google.gson.internal.Excluder.(isValidVersion(java.lang.Class<?>.getAnnotation(com.google.gson.annotations.Since.com.google.gson.annotations.Since), java.lang.Class<?>.getAnnotation(com.google.gson.annotations.Until.com.google.gson.annotations.Until))))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"7831af15-42d4-11e5-9bba-4f99c00bd928","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:142","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0])"},"variableMap":{"this":"this","type":"java.lang.Object.class"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:118","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.Class<?>) {\n    return ((java.lang.Class<?>)(java.lang.reflect.Type));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getRawType();\n    com.google.gson.internal.$Gson$Preconditions.com.google.gson.internal.$Gson$Preconditions.checkArgument((java.lang.reflect.Type instanceof java.lang.Class));\n    return ((java.lang.Class<?>)(java.lang.reflect.Type));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n    return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type), 0).getClass();\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    return java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0]);\n} else {\n    java.lang.String java.lang.String = java.lang.reflect.Type == null ? \"null\" : java.lang.reflect.Type.getClass().getName();\n    throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + java.lang.reflect.Type) + \"> is of type \") + java.lang.String));\n}"},"status":-2},{"failures":[],"tindex":"7831af16-42d4-11e5-9bba-fd4c1728cf52","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:118","type":"CtIfImpl","sourcecode":"if (com.google.gson.annotations.JsonAdapter != null) {\n    com.google.gson.TypeAdapter<?> com.google.gson.TypeAdapter<?> = com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, com.google.gson.Gson, com.google.gson.reflect.TypeToken<?>, com.google.gson.annotations.JsonAdapter);\n    if (com.google.gson.TypeAdapter<?> != null)\n        return com.google.gson.TypeAdapter<?>;\n    \n} "},"status":-1},{"failures":[],"tindex":"7831d627-42d4-11e5-9bba-f31fb01cf18c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:408","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"7831d628-42d4-11e5-9bba-2f99f776a5a9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:614","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.DefaultDateTypeAdapter:72","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.text.DateFormat.format(java.util.Date)"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}