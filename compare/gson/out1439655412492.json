{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"0a208add-4369-11e5-9a58-318d66c3f6a4","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:343","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.doPeek()"},"status":-1},{"failures":[],"tindex":"0a20b1ee-4369-11e5-9a58-73d9ef46a2f3","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:74","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonNull"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:208","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"0a20d8ff-4369-11e5-9a58-357843593dcd","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:693","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"leavesToSkip":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"0a20d900-4369-11e5-9a58-478a98262a0b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:349","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(java.lang.String)"},"variableMap":{"closeBracket":"com.google.gson.Gson.JSON_NON_EXECUTABLE_PREFIX","out":"writer"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:646","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(com.google.gson.Gson.java.lang.String)"},"status":0},{"failures":[],"tindex":"0a20d901-4369-11e5-9a58-fd595e7ddaa3","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:733","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"last","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"i","last":"i","com.google.gson.stream.JsonReader.NUMBER_CHAR_DECIMAL":"last","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"last","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:553","type":"CtInvocationImpl","sourcecode":"java.io.Writer.write(java.lang.String, int, (int - int))"},"status":-1},{"failures":[],"tindex":"0a20d902-4369-11e5-9a58-b782a545058b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:558","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[] = com.google.gson.internal.LinkedHashTreeMap<K, V>.com.google.gson.internal.LinkedHashTreeMap.doubleCapacity(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>[])"},"status":0},{"failures":[],"tindex":"0a210013-4369-11e5-9a58-7f54e064eb1e","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:74","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonNull"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonStreamParser:105","type":"CtReturnImpl","sourcecode":"return (com.google.gson.stream.JsonReader.peek()) != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"status":-2},{"failures":[],"tindex":"0a210014-4369-11e5-9a58-493fcc9a6bc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:186","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.reflect.GenericArrayType.getGenericComponentType())"},"status":-2},{"failures":[],"tindex":"0a210015-4369-11e5-9a58-fffed6cec28c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:65","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.nextNull()"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:795","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\'');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = com.google.gson.stream.JsonReader.nextQuotedValue('\\\"');\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a name but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-2},{"failures":[],"tindex":"0a210016-4369-11e5-9a58-5df917d12127","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Preconditions:35","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1200","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected an int but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-2},{"failures":[],"tindex":"0a212727-4369-11e5-9a58-1b711a18d3bc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LazilyParsedNumber:49","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LazilyParsedNumber:48","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (java.lang.NumberFormatException e) {\n    return new java.math.BigDecimal(java.lang.String).longValue();\n}"},"status":-1},{"failures":[],"tindex":"0a212728-4369-11e5-9a58-33042abb9b2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:540","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = com.google.gson.stream.JsonScope.int"},"status":-1},{"failures":[],"tindex":"0a212729-4369-11e5-9a58-13832bdefead","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:688","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"0a21272a-4369-11e5-9a58-4304949a2e6d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:649","type":"CtReturnImpl","sourcecode":"return int = int"},"variableMap":{"peeking":"c","peeked":"com.google.gson.stream.JsonReader.PEEKED_END_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:472","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case ']' :\n        return int = com.google.gson.stream.JsonReader.int;\n    case ';' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case ',' :\n        break;\n    default :\n        throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n}"},"status":-2},{"failures":[],"tindex":"0a214e3b-4369-11e5-9a58-11e4d374b9f1","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:541","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_EOF":"lineNumber","com.google.gson.stream.JsonScope.CLOSED":"limit","pos":"l","peekStack":"lineNumber","peeked":"l","this":"this","com.google.gson.stream.JsonScope.NONEMPTY_DOCUMENT":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1343","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (int == int) {\n        int = int;\n        if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n            break;\n        } \n        int = int;\n        int = int;\n    } \n    int int = char[][int++];\n    if (int == '\\n') {\n        (int)++;\n        int = int;\n        continue;\n    } else if (((int == ' ') || (int == '\\r')) || (int == '\\t')) {\n        continue;\n    } \n    if (int == '/') {\n        int = int;\n        if (int == int) {\n            (int)--;\n            boolean boolean = com.google.gson.stream.JsonReader.fillBuffer(2);\n            (int)++;\n            if (!boolean) {\n                return int;\n            } \n        } \n        com.google.gson.stream.JsonReader.checkLenient();\n        char char = char[][int];\n        switch (char) {\n            case '*' :\n                (int)++;\n                if (!com.google.gson.stream.JsonReader.(skipTo(\"*/\"))) {\n                    throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated comment\");\n                } \n                int = (int) + 2;\n                int = int;\n                continue;\n            case '/' :\n                (int)++;\n                com.google.gson.stream.JsonReader.skipToEndOfLine();\n                int = int;\n                int = int;\n                continue;\n            default :\n                return int;\n        }\n    } else if (int == '#') {\n        int = int;\n        com.google.gson.stream.JsonReader.checkLenient();\n        com.google.gson.stream.JsonReader.skipToEndOfLine();\n        int = int;\n        int = int;\n    } else {\n        int = int;\n        return int;\n    }\n}"},"status":-1},{"failures":[],"tindex":"0a214e3c-4369-11e5-9a58-4df9317954ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:980","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException((((((((\"Expected a long but was \" + (java.lang.String)) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"0a21754d-4369-11e5-9a58-972b6ca4eb78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonObject) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonArray) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonPrimitive) {\n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(java.lang.Object));\n    if (com.google.gson.JsonPrimitive.isString()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isBoolean()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isNumber()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else {\n        throw new java.lang.AssertionError();\n    }\n} else if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"0a21754e-4369-11e5-9a58-970b5b451706","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:290","type":"CtReturnImpl","sourcecode":"return 31"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:78","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"0a21754f-4369-11e5-9a58-33835cccc486","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + double));\n} "},"status":-1},{"failures":[],"tindex":"0a217550-4369-11e5-9a58-ff4e68e5251c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:291","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null;\n} else {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, null);\n}"},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"},"diffs":[{"transformation":"0a217550-4369-11e5-9a58-ff4e68e5251c","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap_void_replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node).b"]},"type":"branch"},{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testRemoveRootDoesNotDoubleUnlink":["com.google.gson.internal.LinkedHashTreeMap.void removeInternal(com.google.gson.internal.LinkedHashTreeMap$Node,boolean) -> com.google.gson.internal.LinkedHashTreeMap.void replaceInParent(com.google.gson.internal.LinkedHashTreeMap$Node,com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]},{"transformation":"0a20d902-4369-11e5-9a58-b782a545058b","diffs":[{"branches":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap$AvlIterator_com.google.gson.internal.LinkedHashTreeMap$Node_next().t1","com.google.gson.internal.LinkedHashTreeMap$AvlIterator_void_reset(com.google.gson.internal.LinkedHashTreeMap$Node).l1","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).t4","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).t5","com.google.gson.internal.LinkedHashTreeMap_void_rotateRight(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).e1","com.google.gson.internal.LinkedHashTreeMap$AvlIterator_com.google.gson.internal.LinkedHashTreeMap$Node_next().l2","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).e2","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_com.google.gson.internal.LinkedHashTreeMap$Node_root().e1","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).e3","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).e4","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).l6","com.google.gson.internal.LinkedHashTreeMap$AvlIterator_com.google.gson.internal.LinkedHashTreeMap$Node_next().e1","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_com.google.gson.internal.LinkedHashTreeMap$Node_root().b","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_reset(int).b","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).t1","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).t2","com.google.gson.internal.LinkedHashTreeMap$AvlIterator_com.google.gson.internal.LinkedHashTreeMap$Node_next().b","com.google.gson.internal.LinkedHashTreeMap$AvlIterator_void_reset(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).b","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder_void_add(com.google.gson.internal.LinkedHashTreeMap$Node).t3"]},"type":"branch"},{"nodes":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.void add(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap$AvlIterator.void reset(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap$AvlIterator.com.google.gson.internal.LinkedHashTreeMap$Node next()","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.com.google.gson.internal.LinkedHashTreeMap$Node root()","com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.void reset(int)"]},"edges":{"com.google.gson.internal.LinkedHashTreeMapTest.testForceDoublingAndRehash":["com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.void reset(int)","com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator.void reset(com.google.gson.internal.LinkedHashTreeMap$Node)","com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.com.google.gson.internal.LinkedHashTreeMap$Node root()","com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> com.google.gson.internal.LinkedHashTreeMap$AvlIterator.com.google.gson.internal.LinkedHashTreeMap$Node next()","com.google.gson.internal.LinkedHashTreeMap.void doubleCapacity() -> com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[])","com.google.gson.internal.LinkedHashTreeMap.<K,V> com.google.gson.internal.LinkedHashTreeMap$Node[] doubleCapacity(com.google.gson.internal.LinkedHashTreeMap$Node[]) -> com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.void add(com.google.gson.internal.LinkedHashTreeMap$Node)"]},"type":"graph"}]}]}