{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"81ea5f9d-42b6-11e5-8132-77071558c362","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:437","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.beforeValue(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:465","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.writeDeferredName()"},"status":-1},{"failures":[],"tindex":"81ea86ae-42b6-11e5-8132-a1e91db7af01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n        return java.lang.reflect.Type;\n    } \n} else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"81eaadbf-42b6-11e5-8132-f752f0decfb9","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"escapeHtmlChars":"generateNonExecutableJson"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:134","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"status":-1},{"failures":[],"tindex":"81eaadc0-42b6-11e5-8132-dd269cffd5fa","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:947","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"81eaadc1-42b6-11e5-8132-c37830950d8c","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:355","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.Gson.FutureTypeAdapter<T> com.google.gson.Gson.FutureTypeAdapter<T> = new com.google.gson.Gson.FutureTypeAdapter<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:349","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.Gson.FutureTypeAdapter<T> com.google.gson.Gson.FutureTypeAdapter<T> = ((com.google.gson.Gson.FutureTypeAdapter<T>)(java.util.Map<com.google.gson.reflect.TypeToken<?>, com.google.gson.Gson.FutureTypeAdapter<?>>.get(com.google.gson.reflect.TypeToken<T>)))"},"status":-2},{"failures":[],"tindex":"81eaadc2-42b6-11e5-8132-435cbaa37dac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1251","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"81ead4d3-42b6-11e5-8132-694157f58da9","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:40","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonObject.add(java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getKey(), java.util.Map.Entry<java.lang.String, com.google.gson.JsonElement>.getValue().deepCopy())"},"status":-2},{"failures":[],"tindex":"81ead4d4-42b6-11e5-8132-e362fbbabd83","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:535","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"81eafbe5-42b6-11e5-8132-a9fda3ab17ee","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:788","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":0},{"failures":[],"tindex":"81eafbe6-42b6-11e5-8132-373d9d48a6ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:362","type":"CtAssignmentImpl","sourcecode":"java.lang.reflect.Type[][int] = java.lang.reflect.Type"},"status":-1},{"failures":[],"tindex":"81eafbe7-42b6-11e5-8132-11a016f715b3","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:47","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Primitives.com.google.gson.internal.Primitives.add(java.util.Map<java.lang.Class<?>, java.lang.Class<?>>, java.util.Map<java.lang.Class<?>, java.lang.Class<?>>, byte.byte, java.lang.Byte.java.lang.Byte)"},"status":-2},{"failures":[],"tindex":"81eafbe8-42b6-11e5-8132-973963c7cd60","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:280","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"hashCode":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:627","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"81eafbe9-42b6-11e5-8132-6b8c7b1ce177","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:199","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"out == null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:390","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1},{"failures":[],"tindex":"81eafbea-42b6-11e5-8132-a5ab1724941b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:269","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"81eafbeb-42b6-11e5-8132-51de1dbf11aa","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:506","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"node":"right","child":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:250","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"81eafbec-42b6-11e5-8132-5b4aaa7661d9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:336","type":"CtIfImpl","sourcecode":"if (com.google.gson.TypeAdapter<?> != null) {\n    return ((com.google.gson.TypeAdapter<T>)(com.google.gson.TypeAdapter<?>));\n} "},"status":0},{"failures":[],"tindex":"81eb22fd-42b6-11e5-8132-d321efee39a4","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:619","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"false\""},"variableMap":{"keyword":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:546","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"\\\\u2028\""},"status":-1},{"failures":[],"tindex":"81eb22fe-42b6-11e5-8132-b970bacead4f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1011","type":"CtIfImpl","sourcecode":"if (int == char) {\n    int = int;\n    java.lang.StringBuilder.append(char[], int, ((int - int) - 1));\n    return java.lang.StringBuilder.toString();\n} else if (int == '\\\\') {\n    int = int;\n    java.lang.StringBuilder.append(char[], int, ((int - int) - 1));\n    java.lang.StringBuilder.append(com.google.gson.stream.JsonReader.readEscapeCharacter());\n    int = int;\n    int = int;\n    int = int;\n} else if (int == '\\n') {\n    (int)++;\n    int = int;\n} "},"variableMap":{"p":"l","c":"p","quote":"quote","pos":"pos","lineStart":"limit","builder":"builder","start":"limit","limit":"lineNumber","this":"this","buffer":"buffer","l":"l","lineNumber":"lineNumber"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1008","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int int = char[][int++];\n    if (int == char) {\n        int = int;\n        java.lang.StringBuilder.append(char[], int, ((int - int) - 1));\n        return java.lang.StringBuilder.toString();\n    } else if (int == '\\\\') {\n        int = int;\n        java.lang.StringBuilder.append(char[], int, ((int - int) - 1));\n        java.lang.StringBuilder.append(com.google.gson.stream.JsonReader.readEscapeCharacter());\n        int = int;\n        int = int;\n        int = int;\n    } else if (int == '\\n') {\n        (int)++;\n        int = int;\n    } \n}"},"status":-2},{"failures":[],"tindex":"81eb22ff-42b6-11e5-8132-cf5eec4bca86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:298","type":"CtLocalVariableImpl","sourcecode":"long long = java.lang.Double.doubleToLongBits(com.google.gson.JsonPrimitive.getAsNumber().doubleValue())"},"status":-2},{"failures":[],"tindex":"81eb2300-42b6-11e5-8132-9b03599af540","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:649","type":"CtIfImpl","sourcecode":"if (boolean) {\n    com.google.gson.stream.JsonWriter.setIndent(\"  \");\n} "},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}