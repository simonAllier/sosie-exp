{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"eae4c4c4-42f5-11e5-b270-fb808b2144b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:106","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V> com.google.gson.internal.LinkedTreeMap.Node<K, V> = this.com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":0},{"failures":[],"tindex":"eae4ebd5-42f5-11e5-b270-45c9917d31f7","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:249","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.disableInnerClassSerialization()"},"variableMap":{"excluder":"excluder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:104","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withVersion(double)"},"status":-1},{"failures":[],"tindex":"eae4ebd6-42f5-11e5-b270-8f0d9adc4378","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LazilyParsedNumber:49","type":"CtReturnImpl","sourcecode":"return java.lang.Long.parseLong(java.lang.String)"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LazilyParsedNumber:51","type":"CtReturnImpl","sourcecode":"return new java.math.BigDecimal(java.lang.String).longValue()"},"status":-1},{"failures":[],"tindex":"eae4ebd7-42f5-11e5-b270-c72f45eee25d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[0];\n} "},"variableMap":{"collectionType":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"eae512e8-42f5-11e5-b270-f70d43574709","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:290","type":"CtReturnImpl","sourcecode":"return 31"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:638","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"eae512e9-42f5-11e5-b270-41616e36a658","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:882","type":"CtIfImpl","sourcecode":"if ((com.google.gson.TypeAdapter<T>) != null) {\n    throw new java.lang.AssertionError();\n} "},"variableMap":{"delegate":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.TypeAdapter:230","type":"CtInvocationImpl","sourcecode":"com.google.gson.TypeAdapter<T>.write(com.google.gson.internal.bind.JsonTreeWriter, T)"},"status":-2},{"failures":[],"tindex":"eae512ea-42f5-11e5-b270-0937abcee978","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:86","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.boolean = false"},"status":-1},{"failures":[],"tindex":"eae512eb-42f5-11e5-b270-a5654ab6c24b","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:324","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Streams.write(this, com.google.gson.stream.JsonWriter)"},"variableMap":{"jsonWriter":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:287","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.writeDeferredName()"},"status":-2},{"failures":[],"tindex":"eae512ec-42f5-11e5-b270-93fba5c48db7","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:947","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"eae512ed-42f5-11e5-b270-5d9c6e49d050","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:163","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.Type"},"variableMap":{"from":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:133","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()"},"status":-1},{"failures":[],"tindex":"eae512ee-42f5-11e5-b270-351eb7cf531b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LazilyParsedNumber:67","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"eae512ef-42f5-11e5-b270-e57c30b3977d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1254","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"variableMap":{"p":"i","com.google.gson.stream.JsonReader.PEEKED_NUMBER":"i","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"i","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"i","pos":"i","this":"array","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"i","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"i","peekedNumberLength":"i"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:78","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Array.set(java.lang.Object, int, java.util.List<E>.get(int))"},"status":-2},{"failures":[],"tindex":"eae53a00-42f5-11e5-b270-ddbfb9ed435d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:514","type":"CtIfImpl","sourcecode":"if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n}"},"status":-1},{"failures":[],"tindex":"eae53a01-42f5-11e5-b270-9d2642a6c36e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:146","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= 31 ; int++) {\n    com.google.gson.stream.JsonWriter.java.lang.String[][int] = java.lang.String.format(\"\\\\u%04x\", ((int)(int)));\n}"},"status":-2},{"failures":[],"tindex":"eae53a02-42f5-11e5-b270-9bb5d9ca07a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:86","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.boolean = false"},"status":-1},{"failures":[],"tindex":"eae53a03-42f5-11e5-b270-1b6c586bac02","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1248","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"count":"lineStart"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1356","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"eae53a04-42f5-11e5-b270-01b058707385","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:427","type":"CtIfImpl","sourcecode":"if (!(java.util.List<com.google.gson.TypeAdapterFactory>.contains(com.google.gson.TypeAdapterFactory)))\n    boolean = true;\n"},"status":-1},{"failures":[],"tindex":"eae53a05-42f5-11e5-b270-676c15e46197","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:124","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:281","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"eae53a06-42f5-11e5-b270-75f397e457fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:329","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":-1},{"failures":[],"tindex":"eae53a07-42f5-11e5-b270-476a11e21014","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"modCount","lineStart":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:273","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}