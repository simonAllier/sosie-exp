{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"12ebc1e0-42cc-11e5-ad75-632f80726bdb","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:586","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.newline()"},"status":-2},{"failures":[],"tindex":"12ebe8f1-42cc-11e5-ad75-21100aac0c93","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:171","type":"CtIfImpl","sourcecode":"if ((com.google.gson.stream.JsonToken != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) && (com.google.gson.stream.JsonToken != (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken))) {\n    throw new java.lang.IllegalStateException((((\"Expected \" + (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) + \" but was \") + com.google.gson.stream.JsonToken));\n} "},"status":-2},{"failures":[],"tindex":"12ebe8f2-42cc-11e5-ad75-c9c07e5a8236","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1253","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipUnquotedValue()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1389","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipToEndOfLine()"},"status":-1},{"failures":[],"tindex":"12ebe8f3-42cc-11e5-ad75-5532313e1308","series":0,"name":"add","transplant":{"position":"com.google.gson.JsonPrimitive:319","type":"CtIfImpl","sourcecode":"if (((java.lang.Object) instanceof java.lang.Number) && ((com.google.gson.JsonPrimitive.java.lang.Object) instanceof java.lang.Number)) {\n    double double = com.google.gson.JsonPrimitive.getAsNumber().doubleValue();\n    double double = com.google.gson.JsonPrimitive.getAsNumber().doubleValue();\n    return (double == double) || ((java.lang.Double.isNaN(double)) && (java.lang.Double.isNaN(double)));\n} "},"variableMap":{"other":"value","this":"primitive","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:334","type":"CtIfImpl","sourcecode":"if ((com.google.gson.JsonPrimitive.java.lang.Object) instanceof java.lang.Number) {\n    java.lang.Number java.lang.Number = ((java.lang.Number)(com.google.gson.JsonPrimitive.java.lang.Object));\n    return ((((java.lang.Number instanceof java.math.BigInteger) || (java.lang.Number instanceof java.lang.Long)) || (java.lang.Number instanceof java.lang.Integer)) || (java.lang.Number instanceof java.lang.Short)) || (java.lang.Number instanceof java.lang.Byte);\n} "},"status":-2},{"failures":[],"tindex":"12ebe8f4-42cc-11e5-ad75-c1578a1716ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1355","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"12ebe8f5-42cc-11e5-ad75-f9e44d70b799","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:289","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[],"tindex":"12ec3716-42cc-11e5-ad75-abd08ec013a7","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:619","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.toJson(com.google.gson.JsonElement, java.io.StringWriter)"},"variableMap":{"this":"object","writer":"object","jsonElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:749","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.com.google.gson.Gson.assertFullConsumption(java.lang.Object, com.google.gson.stream.JsonReader)"},"status":-2},{"failures":[],"tindex":"12ed2177-42cc-11e5-ad75-4579fe0b39ab","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"variableMap":{"com.google.gson.stream.JsonToken.NULL":"com.google.gson.stream.JsonToken.BOOLEAN","com.google.gson.internal.bind.JsonTreeReader.SENTINEL_CLOSED":"o","o":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:105","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonObject) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonArray) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object instanceof com.google.gson.JsonPrimitive) {\n    com.google.gson.JsonPrimitive com.google.gson.JsonPrimitive = ((com.google.gson.JsonPrimitive)(java.lang.Object));\n    if (com.google.gson.JsonPrimitive.isString()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isBoolean()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else if (com.google.gson.JsonPrimitive.isNumber()) {\n        return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n    } else {\n        throw new java.lang.AssertionError();\n    }\n} else if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"12ed2178-42cc-11e5-ad75-156cc072401a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:203","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.Object>.clear()"},"status":-2},{"failures":[],"tindex":"12ee0bd9-42cc-11e5-ad75-1b6d791384f4","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:344","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type)"},"variableMap":{"componentType":"context","original":"context","this":"this","newComponentType":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n        return java.lang.reflect.Type;\n    } \n} else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"12ee32ea-42cc-11e5-ad75-bf0c6990b7e5","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:615","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"true\""},"variableMap":{"keyword":"datePattern"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:404","type":"CtAssignmentImpl","sourcecode":"this.java.lang.String = null"},"status":0},{"failures":[],"tindex":"12ee32eb-42cc-11e5-ad75-bd0c2750ad80","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:246","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = null"},"variableMap":{"node":"parent","left":"replacement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:288","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"12ee32ec-42cc-11e5-ad75-11e0f68b9d48","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:324","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.Streams.write(this, com.google.gson.stream.JsonWriter)"},"variableMap":{"jsonWriter":"jsonWriter"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:634","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.toJson(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter)"},"status":-2},{"failures":[],"tindex":"12ee32ed-42cc-11e5-ad75-85d4f373f95a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:472","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case ']' :\n        return int = com.google.gson.stream.JsonReader.int;\n    case ';' :\n        com.google.gson.stream.JsonReader.checkLenient();\n    case ',' :\n        break;\n    default :\n        throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n}"},"status":-1},{"failures":[],"tindex":"12ee32ee-42cc-11e5-ad75-83979ca108a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:167","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[],"tindex":"12ee32ef-42cc-11e5-ad75-ff16841b9757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonElement:320","type":"CtTryImpl","sourcecode":"try {\n    java.io.StringWriter java.io.StringWriter = new java.io.StringWriter();\n    com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter = new com.google.gson.stream.JsonWriter(java.io.StringWriter);\n    com.google.gson.stream.JsonWriter.setLenient(true);\n    com.google.gson.internal.Streams.write(this, com.google.gson.stream.JsonWriter);\n    return java.io.StringWriter.toString();\n} catch (java.io.IOException e) {\n    throw new java.lang.AssertionError(java.io.IOException);\n}"},"status":-2},{"failures":[],"tindex":"12ee32f0-42cc-11e5-ad75-bd991e267e55","series":0,"name":"replace","transplant":{"position":"com.google.gson.Gson:804","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.setLenient(true)"},"variableMap":{"reader":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipUnquotedValue();\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"12ee32f1-42cc-11e5-ad75-a128087b26f6","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapters:562","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"year":"peeked","value":"com.google.gson.stream.JsonReader.PEEKED_NONE"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:931","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"12ee32f2-42cc-11e5-ad75-394065e3683b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.DateTypeAdapter:90","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.text.DateFormat.format(java.util.Date)"},"status":-2},{"failures":[],"tindex":"12ee32f3-42cc-11e5-ad75-2d3d089d8ddc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:537","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedTreeMap.Node<K, V> == (com.google.gson.internal.LinkedTreeMap.Node<K, V>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"node","header":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:292","type":"CtIfImpl","sourcecode":"if ((com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} else {\n    assert (com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>) == com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}