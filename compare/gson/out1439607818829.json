{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"3a168632-42fa-11e5-bd4a-2f1b46a962e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:232","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.isInterface()) {\n    java.lang.Class<?>[] java.lang.Class<?>[] = java.lang.Class<?>.getInterfaces();\n    for (int int = 0, int int = java.lang.Class<?>[].int ; int < int ; int++) {\n        if ((java.lang.Class<?>[][int]) == java.lang.Class<?>) {\n            return java.lang.Class<?>.getGenericInterfaces()[int];\n        } else if (java.lang.Class<?>.isAssignableFrom(java.lang.Class<?>[][int])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericInterfaces()[int], java.lang.Class<?>[][int], java.lang.Class<?>);\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"3a168633-42fa-11e5-bd4a-15cfdc3b1527","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1322","type":"CtReturnImpl","sourcecode":"return ((int) - (int)) + 1"},"variableMap":{"pos":"peeked","lineStart":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:749","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"3a16ad44-42fa-11e5-bd4a-d76d6f3ea852","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:470","type":"CtReturnImpl","sourcecode":"return com.google.gson.JsonNull.com.google.gson.JsonNull"},"status":-1},{"failures":[],"tindex":"3a16ad45-42fa-11e5-bd4a-5d2c1393c693","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:353","type":"CtIfImpl","sourcecode":"if ((int == (-1)) || ((int == 0) && (!boolean))) {\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    assert int == 1;\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n    com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":0},{"failures":[],"tindex":"3a16ad46-42fa-11e5-bd4a-ede767601216","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1314","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:159","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type == java.lang.reflect.Type) {\n    return true;\n} else if (java.lang.reflect.Type instanceof java.lang.Class) {\n    return java.lang.reflect.Type.equals(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType)) {\n        return false;\n    } \n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    return (com.google.gson.internal.$Gson$Types.(com.google.gson.internal.$Gson$Types.equal(java.lang.reflect.ParameterizedType.getOwnerType(), java.lang.reflect.ParameterizedType.getOwnerType())) && (java.lang.reflect.ParameterizedType.getRawType().equals(java.lang.reflect.ParameterizedType.getRawType()))) && (java.util.Arrays.equals(java.lang.reflect.ParameterizedType.getActualTypeArguments(), java.lang.reflect.ParameterizedType.getActualTypeArguments()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType)) {\n        return false;\n    } \n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.GenericArrayType.getGenericComponentType(), java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.WildcardType)) {\n        return false;\n    } \n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return (java.util.Arrays.equals(java.lang.reflect.WildcardType.getUpperBounds(), java.lang.reflect.WildcardType.getUpperBounds())) && (java.util.Arrays.equals(java.lang.reflect.WildcardType.getLowerBounds(), java.lang.reflect.WildcardType.getLowerBounds()));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    if (!(java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable)) {\n        return false;\n    } \n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    return ((java.lang.reflect.TypeVariable<?>.getGenericDeclaration()) == (java.lang.reflect.TypeVariable<?>.getGenericDeclaration())) && (java.lang.reflect.TypeVariable<?>.getName().equals(java.lang.reflect.TypeVariable<?>.getName()));\n} else {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"3a16ad47-42fa-11e5-bd4a-bfe159becda2","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:160","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"variableMap":{"com.google.gson.stream.JsonToken.BOOLEAN":"com.google.gson.stream.JsonToken.NAME","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:208","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.bind.JsonTreeReader.(peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n    com.google.gson.internal.bind.JsonTreeReader.nextName();\n} else {\n    com.google.gson.internal.bind.JsonTreeReader.popStack();\n}"},"status":-2},{"failures":[],"tindex":"3a16d458-42fa-11e5-bd4a-29a8bd53017b","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:505","type":"CtWhileImpl","sourcecode":"while (com.google.gson.internal.LinkedTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n    com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n}"},"variableMap":{"node":"left","left":"left","child":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:347","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":-2},{"failures":[],"tindex":"3a16d459-42fa-11e5-bd4a-41cf64326ee5","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"p","lineStart":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1345","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"3a16d45a-42fa-11e5-bd4a-ef0e729a880d","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:345","type":"CtLocalVariableImpl","sourcecode":"int int = int - int"},"variableMap":{"rightHeight":"peeked","leftHeight":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:397","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[],"tindex":"3a16d45b-42fa-11e5-bd4a-49377d13d92f","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonParser:61","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.ClassCastException(((K.getClass().getName()) + \" is not Comparable\"))"},"status":-1},{"failures":[],"tindex":"3a16d45c-42fa-11e5-bd4a-89f1cebe2d97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:139","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return com.google.gson.internal.LinkedTreeMap.Node<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"3a16d45d-42fa-11e5-bd4a-55bb0e278d6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:363","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    break;\n} "},"status":0},{"failures":[],"tindex":"3a16d45e-42fa-11e5-bd4a-91deefae939b","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:771","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == (com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"e":"replacement","header":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:314","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"3a16fb6f-42fa-11e5-bd4a-ebe4ee71be16","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1389","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipToEndOfLine()"},"status":-2},{"failures":[],"tindex":"3a16fb70-42fa-11e5-bd4a-41c7d98ba53d","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:79","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"variableMap":{"type":"collectionType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:294","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[0]"},"status":-1},{"failures":[],"tindex":"3a16fb71-42fa-11e5-bd4a-0d5bd2e0f916","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:64","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonPrimitive"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:151","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"3a16fb72-42fa-11e5-bd4a-9b330ba11137","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:778","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"lastReturned":"right","e":"right"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:146","type":"CtWhileImpl","sourcecode":"while (true) {\n    int = java.lang.Comparable<java.lang.Object> != null ? java.lang.Comparable<java.lang.Object>.compareTo(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.K) : java.util.Comparator<? super K>.compare(K, com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.K);\n    if (int == 0) {\n        return com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    } \n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = int < 0 ? com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> : com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n    if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n        break;\n    } \n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"3a16fb73-42fa-11e5-bd4a-1d1de2b1f8b8","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:208","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.bind.JsonTreeReader.(peek()) == (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) {\n    com.google.gson.internal.bind.JsonTreeReader.nextName();\n} else {\n    com.google.gson.internal.bind.JsonTreeReader.popStack();\n}"},"variableMap":{"this":"this","com.google.gson.stream.JsonToken.NAME":"com.google.gson.stream.JsonToken.NULL"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:165","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)"},"status":-2},{"failures":[],"tindex":"3a16fb74-42fa-11e5-bd4a-2d7998820534","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:642","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = null"},"variableMap":{"result":"pivot","parent":"parent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:445","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":19,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}