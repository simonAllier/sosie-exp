{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"2d86fe11-42ba-11e5-be0a-3be727739432","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1610","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw new java.lang.IllegalStateException(((((((((\"Expected a name but was \" + (com.google.gson.stream.JsonReader.peek())) + \" \") + \" at line \") + (com.google.gson.stream.JsonReader.getLineNumber())) + \" column \") + (com.google.gson.stream.JsonReader.getColumnNumber())) + \" path \") + (com.google.gson.stream.JsonReader.getPath())));\n}"},"variableMap":{"p":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED_NAME":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_SINGLE_QUOTED":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","reader":"this","peeked":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME":"com.google.gson.stream.JsonScope.EMPTY_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1241","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int)"},"status":-2},{"failures":[],"tindex":"2d872522-42ba-11e5-be0a-1b8ea18b3f29","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1603","type":"CtInvocationImpl","sourcecode":"((com.google.gson.internal.bind.JsonTreeReader)(com.google.gson.stream.JsonReader)).promoteNameToValue()"},"variableMap":{"reader":"in"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:75","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.endArray()"},"status":-1},{"failures":[],"tindex":"2d872523-42ba-11e5-be0a-25578aa5a3ae","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:485","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '}' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n    }\n} "},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_END_OBJECT":"com.google.gson.stream.JsonScope.EMPTY_OBJECT","peekStack":"com.google.gson.stream.JsonScope.EMPTY_ARRAY","peeked":"com.google.gson.stream.JsonReader.PEEKED_UNQUOTED_NAME","this":"this","com.google.gson.stream.JsonScope.NONEMPTY_OBJECT":"com.google.gson.stream.JsonScope.DANGLING_NAME"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:467","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ']' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case ';' :\n            com.google.gson.stream.JsonReader.checkLenient();\n        case ',' :\n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated array\");\n    }\n} else if ((int == (com.google.gson.stream.JsonScope.int)) || (int == (com.google.gson.stream.JsonScope.int))) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    if (int == (com.google.gson.stream.JsonScope.int)) {\n        int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n        switch (int) {\n            case '}' :\n                return int = com.google.gson.stream.JsonReader.int;\n            case ';' :\n                com.google.gson.stream.JsonReader.checkLenient();\n            case ',' :\n                break;\n            default :\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Unterminated object\");\n        }\n    } \n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case '\\\"' :\n            return int = com.google.gson.stream.JsonReader.int;\n        case '\\'' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            return int = com.google.gson.stream.JsonReader.int;\n        case '}' :\n            if (int != (com.google.gson.stream.JsonScope.int)) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n        default :\n            com.google.gson.stream.JsonReader.checkLenient();\n            (int)--;\n            if (com.google.gson.stream.JsonReader.isLiteral(((char)(int)))) {\n                return int = com.google.gson.stream.JsonReader.int;\n            } else {\n                throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n            }\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(true);\n    switch (int) {\n        case ':' :\n            break;\n        case '=' :\n            com.google.gson.stream.JsonReader.checkLenient();\n            if ((((int) < (int)) || com.google.gson.stream.JsonReader.(fillBuffer(1))) && ((char[][int]) == '>')) {\n                (int)++;\n            } \n            break;\n        default :\n            throw com.google.gson.stream.JsonReader.syntaxError(\"Expected \\':\\'\");\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    if (boolean) {\n        com.google.gson.stream.JsonReader.consumeNonExecutePrefix();\n    } \n    int[][((int) - 1)] = com.google.gson.stream.JsonScope.int;\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false);\n    if (int == (-1)) {\n        return int = com.google.gson.stream.JsonReader.int;\n    } else {\n        com.google.gson.stream.JsonReader.checkLenient();\n        (int)--;\n    }\n} else if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"status":-2},{"failures":[],"tindex":"2d87e874-42ba-11e5-be0a-3fc64e7486b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((((((\"Expected END_ARRAY but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"2d87e875-42ba-11e5-be0a-458b77b7105d","series":0,"name":"add","transplant":{"position":"com.google.gson.GsonBuilder:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()"},"variableMap":{"excluder":"excluder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:322","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy, true, false)"},"status":-1},{"failures":[],"tindex":"2d87e876-42ba-11e5-be0a-8db087bb7569","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:107","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"variableMap":{"next":"pivotRight","prev":"root","header":"root"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:408","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"2d87e877-42ba-11e5-be0a-71298f34dfa9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:132","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.LinkedTreeMap<java.lang.String, com.google.gson.JsonElement>.entrySet()"},"status":-2},{"failures":[],"tindex":"2d87e878-42ba-11e5-be0a-a55969a5340b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:145","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder = com.google.gson.internal.Excluder.excludeFieldsWithoutExposeAnnotation()"},"status":-1},{"failures":[],"tindex":"2d87e879-42ba-11e5-be0a-27dd4b811a8a","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"stackSize":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:984","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"2d880f8a-42ba-11e5-be0a-8db3e67447d8","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1557","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"pos":"stackSize","lineStart":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:859","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"2d88369b-42ba-11e5-be0a-438d836be147","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:444","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"2d88369c-42ba-11e5-be0a-3fbcbe88e139","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:324","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n            return java.lang.reflect.Type;\n        } \n    } else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n                if (!boolean) {\n                    java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                    boolean = true;\n                } \n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n        if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n            } \n        } else if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n            } \n        } \n        return java.lang.reflect.WildcardType;\n    } else {\n        return java.lang.reflect.Type;\n    }\n}"},"status":-2},{"failures":[],"tindex":"2d88369d-42ba-11e5-be0a-83ffd0d45128","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1234","type":"CtDoImpl","sourcecode":"do {\n    int int = int;\n    if (int == (com.google.gson.stream.JsonReader.int)) {\n        int = com.google.gson.stream.JsonReader.doPeek();\n    } \n    if (int == (com.google.gson.stream.JsonReader.int)) {\n        com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n        int++;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n        int++;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        (int)--;\n        int--;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        (int)--;\n        int--;\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipUnquotedValue();\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        int += int;\n    } \n    int = com.google.gson.stream.JsonReader.int;\n} while (int != 0 )"},"status":-1},{"failures":[],"tindex":"2d88369e-42ba-11e5-be0a-8f6667b052ed","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.Excluder:245","type":"CtIfImpl","sourcecode":"if (double <= (double)) {\n    return false;\n} "},"variableMap":{"version":"value","annotationVersion":"value"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:243","type":"CtIfImpl","sourcecode":"if (com.google.gson.annotations.Until != null) {\n    double double = com.google.gson.annotations.Until.double();\n    if (double <= (double)) {\n        return false;\n    } \n} "},"status":-2},{"failures":[],"tindex":"2d88369f-42ba-11e5-be0a-cb878c1415e2","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:134","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.internal.LinkedHashTreeMap<K, V>.com.google.gson.internal.LinkedHashTreeMap.secondaryHash(K.hashCode())"},"status":-2},{"failures":[],"tindex":"2d8836a0-42ba-11e5-be0a-6f0cf115e95b","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:374","type":"CtAssertImpl","sourcecode":"assert int == (-1)"},"variableMap":{"leftDelta":"oldCapacity"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:599","type":"CtIfImpl","sourcecode":"if (((com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.int) & int) == 0) {\n    com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n} else {\n    com.google.gson.internal.LinkedHashTreeMap.AvlBuilder<K, V>.add(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>);\n}"},"status":-1},{"failures":[],"tindex":"2d885db1-42ba-11e5-be0a-19512db1b5d0","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.ArrayTypeAdapter:70","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.beginArray()"},"variableMap":{"in":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1253","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipUnquotedValue()"},"status":-1},{"failures":[],"tindex":"2d885db2-42ba-11e5-be0a-f7483b2ab091","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1253","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.skipUnquotedValue()"},"status":-1},{"failures":[],"tindex":"2d88abd3-42ba-11e5-be0a-5570524fb854","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:253","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"2d88abd4-42ba-11e5-be0a-67c72d4c5ef2","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:154","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\r'] = \"\\\\r\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:155","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\f'] = \"\\\\f\""},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}