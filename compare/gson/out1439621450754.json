{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f75f01a6-4319-11e5-a1c0-df22633a791a","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1417","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1214","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"f75f76d7-4319-11e5-a1c0-e3f5109d37eb","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1280","type":"CtAssignmentImpl","sourcecode":"int[][(int)++] = int"},"variableMap":{"stack":"pathIndices","stackSize":"stackSize","newTop":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1264","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"f75f76d8-4319-11e5-a1c0-27c87746e8c3","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:383","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected BEGIN_OBJECT but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"variableMap":{"p":"peekedNumberLength","com.google.gson.stream.JsonReader.PEEKED_NONE":"com.google.gson.stream.JsonReader.PEEKED_NUMBER","com.google.gson.stream.JsonScope.EMPTY_OBJECT":"com.google.gson.stream.JsonReader.PEEKED_NUMBER","peeked":"com.google.gson.stream.JsonReader.PEEKED_DOUBLE_QUOTED_NAME","this":"this","com.google.gson.stream.JsonReader.PEEKED_BEGIN_OBJECT":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1256","type":"CtIfImpl","sourcecode":"if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":-2},{"failures":[],"tindex":"f75f9de9-4319-11e5-a1c0-0d7ab8519d35","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[0];\n} "},"variableMap":{"collectionType":"context"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:324","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n        java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n        if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n            return java.lang.reflect.Type;\n        } \n    } else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n        java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n        java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n        boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n                if (!boolean) {\n                    java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                    boolean = true;\n                } \n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n    } else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n        java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n        if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n            } \n        } else if ((java.lang.reflect.Type[].int) == 1) {\n            java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n            if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n                return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n            } \n        } \n        return java.lang.reflect.WildcardType;\n    } else {\n        return java.lang.reflect.Type;\n    }\n}"},"status":-2},{"failures":[],"tindex":"f7603a2a-4319-11e5-a1c0-8d1aec0c9d6c","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT","limit":"last"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:724","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"f7603a2b-4319-11e5-a1c0-a995864b8dc4","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonArray:58","type":"CtIfImpl","sourcecode":"if (com.google.gson.JsonElement == null) {\n    com.google.gson.JsonElement = com.google.gson.JsonNull.com.google.gson.JsonNull;\n} "},"variableMap":{"com.google.gson.JsonNull.INSTANCE":"jsonElement","element":"jsonElement"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:619","type":"CtInvocationImpl","sourcecode":"com.google.gson.Gson.toJson(com.google.gson.JsonElement, java.io.StringWriter)"},"status":-1},{"failures":[],"tindex":"f760613c-4319-11e5-a1c0-0950c261cd43","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:578","type":"CtReturnImpl","sourcecode":"return \"?\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:842","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"f760884d-4319-11e5-a1c0-eb20f8977a71","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:625","type":"CtReturnImpl","sourcecode":"return new java.util.LinkedHashMap<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:130","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Object>.get(((java.util.List<java.lang.Object>.size()) - 1))"},"status":-2},{"failures":[],"tindex":"f760884e-4319-11e5-a1c0-0f83f29ff33b","series":0,"name":"replace","transplant":{"position":"com.google.gson.FieldAttributes:53","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getDeclaringClass()"},"variableMap":{"field":"field"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldAttributes:100","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Field.getType()"},"status":-1},{"failures":[],"tindex":"f760af5f-4319-11e5-a1c0-fdfa9104bbc0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"f760af60-4319-11e5-a1c0-038fb89f059b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:405","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[int]"},"status":-1},{"failures":[],"tindex":"f760af61-4319-11e5-a1c0-6580202826bb","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:195","type":"CtIfImpl","sourcecode":"if (!(java.util.List<com.google.gson.JsonElement>.isEmpty())) {\n    throw new java.io.IOException(\"Incomplete document\");\n} "},"variableMap":{"stack":"elements"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:46","type":"CtForEachImpl","sourcecode":"for (com.google.gson.JsonElement com.google.gson.JsonElement : java.util.List<com.google.gson.JsonElement>) {\n    com.google.gson.JsonArray.add(com.google.gson.JsonElement.deepCopy());\n}"},"status":-2},{"failures":[],"tindex":"f760d572-4319-11e5-a1c0-3bf2db2ae132","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1453","type":"CtAssignmentImpl","sourcecode":"int = (int) + 1"},"variableMap":{"pos":"count","lineStart":"count"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1245","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"f760d573-4319-11e5-a1c0-a1b5d999c72b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:746","type":"CtIfImpl","sourcecode":"if (((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = int;\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    return com.google.gson.stream.JsonReader.int;\n}"},"variableMap":{"com.google.gson.stream.JsonReader.PEEKED_NUMBER":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"result","com.google.gson.stream.JsonReader.PEEKED_NONE":"result","last":"result","peeked":"result","i":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"result","com.google.gson.stream.JsonReader.NUMBER_CHAR_DIGIT":"result","peekedNumberLength":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:199","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"f760fc84-4319-11e5-a1c0-7f0e178d6bf1","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"p"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1111","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"f760fc85-4319-11e5-a1c0-0f1319a6480c","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:149","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\\"'] = \"\\\\\\\"\""},"variableMap":{"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS":"com.google.gson.stream.JsonWriter.REPLACEMENT_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:150","type":"CtAssignmentImpl","sourcecode":"com.google.gson.stream.JsonWriter.java.lang.String[]['\\\\'] = \"\\\\\\\\\""},"status":-2},{"failures":[],"tindex":"f760fc86-4319-11e5-a1c0-c7ace899c7ea","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:98","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:308","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonWriter.open(com.google.gson.stream.JsonScope.int, \"{\")"},"status":-2},{"failures":[],"tindex":"f7612397-4319-11e5-a1c0-2d0abcd8d3fe","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType()"},"variableMap":{"original":"clazz"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:230","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getGenericSuperclass()"},"status":0},{"failures":[],"tindex":"f7612398-4319-11e5-a1c0-0553225b0b4c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:42","type":"CtThrowImpl","sourcecode":"throw new java.lang.AssertionError()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:172","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((((\"Expected \" + (com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken)) + \" but was \") + com.google.gson.stream.JsonToken))"},"status":-1},{"failures":[],"tindex":"f7612399-4319-11e5-a1c0-a3331a2558b7","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:661","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.int"},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_NONE":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:379","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":0}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}