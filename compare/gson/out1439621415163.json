{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"e223ac37-4319-11e5-88e4-8b26b25e25cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1240","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n    int++;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    (int)--;\n    int--;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipUnquotedValue();\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n} else if (int == (com.google.gson.stream.JsonReader.int)) {\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"e223d348-4319-11e5-88e4-8503d70c0827","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:235","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (int >>> 20) ^ (int >>> 12)"},"variableMap":{"h":"style"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:403","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":0},{"failures":[],"tindex":"e223d349-4319-11e5-88e4-410353221e63","series":0,"name":"replace","transplant":{"position":"com.google.gson.LongSerializationPolicy:36","type":"CtReturnImpl","sourcecode":"return new com.google.gson.JsonPrimitive(java.lang.Long)"},"variableMap":{"value":"src"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:472","type":"CtReturnImpl","sourcecode":"return com.google.gson.Gson.toJsonTree(java.lang.Object, java.lang.Object.getClass())"},"status":-1},{"failures":[],"tindex":"e223d34a-4319-11e5-88e4-4b5ca7979f40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1234","type":"CtDoImpl","sourcecode":"do {\n    int int = int;\n    if (int == (com.google.gson.stream.JsonReader.int)) {\n        int = com.google.gson.stream.JsonReader.doPeek();\n    } \n    if (int == (com.google.gson.stream.JsonReader.int)) {\n        com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n        int++;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        com.google.gson.stream.JsonReader.push(com.google.gson.stream.JsonScope.int);\n        int++;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        (int)--;\n        int--;\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        (int)--;\n        int--;\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipUnquotedValue();\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipQuotedValue('\\'');\n    } else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n        com.google.gson.stream.JsonReader.skipQuotedValue('\\\"');\n    } else if (int == (com.google.gson.stream.JsonReader.int)) {\n        int += int;\n    } \n    int = com.google.gson.stream.JsonReader.int;\n} while (int != 0 )"},"status":-1},{"failures":[],"tindex":"e223fa5b-4319-11e5-88e4-cdebc772fb65","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1301","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"total":"pos","limit":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:565","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"status":-1},{"failures":[],"tindex":"e223fa5c-4319-11e5-88e4-5567428ef9af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:506","type":"CtIfImpl","sourcecode":"if (int != (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} else {\n    throw com.google.gson.stream.JsonReader.syntaxError(\"Expected name\");\n}"},"status":-1},{"failures":[],"tindex":"e223fa5d-4319-11e5-88e4-dd1c22d9fd7a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:570","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.Type) != null ? 31 + (java.lang.reflect.Type.hashCode()) : 1) ^ (31 + (java.lang.reflect.Type.hashCode()))"},"variableMap":{"upperBound":"o","lowerBound":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:214","type":"CtReturnImpl","sourcecode":"return java.lang.Object != null ? java.lang.Object.hashCode() : 0"},"status":-1},{"failures":[],"tindex":"e223fa5e-4319-11e5-88e4-258f40ad4aa5","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1280","type":"CtAssignmentImpl","sourcecode":"int[][(int)++] = int"},"variableMap":{"stack":"pathIndices","stackSize":"stackSize","newTop":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:954","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"e223fa5f-4319-11e5-88e4-b79990433cd2","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:822","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:462","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException((\"Numeric values must be finite, but was \" + double));\n} "},"status":-2},{"failures":[],"tindex":"e223fa60-4319-11e5-88e4-fb9bc6fa0dd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:293","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    return ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)).getActualTypeArguments()[0];\n} "},"status":-1},{"failures":[],"tindex":"e223fa61-4319-11e5-88e4-3f1dba3b3a55","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:733","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.int;\n} else if ((int == (com.google.gson.stream.JsonReader.int)) || (int == (com.google.gson.stream.JsonReader.int))) {\n    int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_SIGN":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY","com.google.gson.stream.JsonReader.NUMBER_CHAR_FRACTION_DIGIT":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY","last":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY","com.google.gson.stream.JsonReader.NUMBER_CHAR_DECIMAL":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_E":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY","com.google.gson.stream.JsonReader.NUMBER_CHAR_EXP_DIGIT":"com.google.gson.stream.JsonScope.NONEMPTY_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:616","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.replaceTop(com.google.gson.stream.JsonScope.int)"},"status":-2},{"failures":[],"tindex":"e2242172-4319-11e5-88e4-d11405947f5f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:833","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    java.lang.String = new java.lang.String(char[] , int , int);\n    int += int;\n} else {\n    throw new java.lang.IllegalStateException((((((((\"Expected a string but was \" + com.google.gson.stream.JsonReader.(peek())) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n}"},"status":-2},{"failures":[],"tindex":"e2242173-4319-11e5-88e4-bd0f9cda9472","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1299","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:124","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e2242174-4319-11e5-88e4-65194f9b0b20","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"stackSize","lineStart":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:863","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"e2242175-4319-11e5-88e4-f95e5b77363b","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:556","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"last":"leftHeight","i":"height"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:258","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":-2},{"failures":[],"tindex":"e2242176-4319-11e5-88e4-db1eccd7c4bc","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:540","type":"CtInvocationImpl","sourcecode":"java.util.List<com.google.gson.TypeAdapterFactory>.addAll(this.java.util.List<com.google.gson.TypeAdapterFactory>)"},"variableMap":{"factories":"factories"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.GsonBuilder:564","type":"CtInvocationImpl","sourcecode":"java.util.List<com.google.gson.TypeAdapterFactory>.add(com.google.gson.TreeTypeAdapter.newFactory(com.google.gson.reflect.TypeToken.get(java.sql.Date.java.sql.Date), com.google.gson.DefaultDateTypeAdapter))"},"status":-1},{"failures":[],"tindex":"e2242177-4319-11e5-88e4-654d295007e4","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:250","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getGenericSupertype(java.lang.Class<?>.getGenericSuperclass(), java.lang.Class<?>, java.lang.Class<?>)"},"variableMap":{"rawType":"contextRawType","toResolve":"contextRawType","this":"this","rawSupertype":"contextRawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:325","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    java.lang.reflect.TypeVariable<?> java.lang.reflect.TypeVariable<?> = ((java.lang.reflect.TypeVariable<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolveTypeVariable(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.TypeVariable<?>);\n    if (java.lang.reflect.Type == java.lang.reflect.TypeVariable<?>) {\n        return java.lang.reflect.Type;\n    } \n} else if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"e2244888-4319-11e5-88e4-0b3899a5c452","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1410","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"e2244889-4319-11e5-88e4-5f04630bce54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:762","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonReader.checkLenient()"},"status":0},{"failures":[],"tindex":"e224488a-4319-11e5-88e4-a9acaf427a30","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1322","type":"CtReturnImpl","sourcecode":"return ((int) - (int)) + 1"},"variableMap":{"pos":"peeked","lineStart":"com.google.gson.stream.JsonReader.PEEKED_END_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:556","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} "},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}