{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"ddf0c713-448d-11e5-902f-75575c73eed3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.reflect.TypeToken:206","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.TypeVariable<?>[] java.lang.reflect.TypeVariable<?>[] = java.lang.Class<?>.getTypeParameters()"},"status":-2},{"failures":[],"tindex":"ddf11534-448d-11e5-902f-379655115fec","series":0,"name":"replace","transplant":{"position":"com.google.gson.GsonBuilder:362","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"escapeHtmlChars":"lenient"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:235","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"ddf11535-448d-11e5-902f-99ab57aba97c","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:133","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()"},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper:53","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper<T>.getRuntimeTypeIfMoreSpecific(java.lang.reflect.Type, T)"},"status":-1},{"failures":[],"tindex":"ddf11536-448d-11e5-902f-7d75337fed83","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:592","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"result":"peeked"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:501","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"ddf11537-448d-11e5-902f-8bc4e4bab0cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:79","type":"CtOperatorAssignmentImpl","sourcecode":"com.google.gson.internal.Excluder.int |= int"},"status":-1},{"failures":[],"tindex":"ddf13c48-448d-11e5-902f-45e998ac92a9","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:390","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:822","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(java.lang.IllegalStateException)"},"status":-1},{"failures":[],"tindex":"ddf13c49-448d-11e5-902f-d1e2dbd52697","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:221","type":"CtLocalVariableImpl","sourcecode":"java.util.Iterator<?> java.util.Iterator<?> = com.google.gson.internal.bind.JsonTreeReader.((java.util.Iterator<?>)(peekStack()))"},"variableMap":{"this":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:94","type":"CtLocalVariableImpl","sourcecode":"java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"ddf13c4a-448d-11e5-902f-3be5d129fb41","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:326","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"lenient":"deserialize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:165","type":"CtUnaryOperatorImpl","sourcecode":"!(com.google.gson.annotations.Expose.boolean())"},"status":-2},{"failures":[],"tindex":"ddf13c4b-448d-11e5-902f-81cf35682c86","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonElement:64","type":"CtReturnImpl","sourcecode":"return (this) instanceof com.google.gson.JsonPrimitive"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:333","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"ddf1635c-448d-11e5-902f-e5f69ff0e307","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:329","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.rotateRight(com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"variableMap":{"this":"this","right":"adjacent"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:238","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.removeInternal(com.google.gson.internal.LinkedTreeMap.Node<K, V>, false)"},"status":-1},{"failures":[],"tindex":"ddf1635d-448d-11e5-902f-91855c1a7daa","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:680","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"variableMap":{"targetSize":"leftSize","treeCapacity":"leftSize","leavesToSkip":"leftSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:588","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"ddf1635e-448d-11e5-902f-cd93f121bced","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:247","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"variableMap":{"next":"root","node":"root","prev":"left"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:436","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"ddf18a6f-448d-11e5-902f-9f74fa035855","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:257","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>"},"variableMap":{"toResolve":"rawType"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:236","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.getGenericInterfaces()[int]"},"status":-2},{"failures":[],"tindex":"ddf18a70-448d-11e5-902f-95fef46a6f1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:468","type":"CtAssignmentImpl","sourcecode":"int[][((int) - 1)] = com.google.gson.stream.JsonScope.int"},"status":-2},{"failures":[],"tindex":"ddf18a71-448d-11e5-902f-95f3584905f3","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:314","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> != null) {\n    com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>;\n} "},"variableMap":{"parent":"node","replacement":"node"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:358","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rotateLeft(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>)"},"status":0},{"failures":[],"tindex":"ddf18a72-448d-11e5-902f-c9ba054a5067","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:258","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.int = (java.lang.Math.max(int, int)) + 1"},"status":0},{"failures":[],"tindex":"ddf1b183-448d-11e5-902f-178236d29586","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonArray:46","type":"CtForEachImpl","sourcecode":"for (com.google.gson.JsonElement com.google.gson.JsonElement : java.util.List<com.google.gson.JsonElement>) {\n    com.google.gson.JsonArray.add(com.google.gson.JsonElement.deepCopy());\n}"},"status":-2},{"failures":[],"tindex":"ddf1b184-448d-11e5-902f-f74dcf89aacc","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:103","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.GenericArrayTypeImpl(java.lang.reflect.GenericArrayType.getGenericComponentType());\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    return new com.google.gson.internal.$Gson$Types.WildcardTypeImpl(java.lang.reflect.WildcardType.getUpperBounds() , java.lang.reflect.WildcardType.getLowerBounds());\n} else {\n    return java.lang.reflect.Type;\n}"},"variableMap":{"type":"toResolve"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-1},{"failures":[],"tindex":"ddf1d895-448d-11e5-902f-49c0f91a24f0","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:158","type":"CtIfImpl","sourcecode":"if (com.google.gson.internal.LinkedHashTreeMap.Node<K, V> == null) {\n    break;\n} "},"variableMap":{"child":"nearest"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:188","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap<K, V>.rebalance(com.google.gson.internal.LinkedHashTreeMap.Node<K, V>, true)"},"status":-2},{"failures":[],"tindex":"ddf1ffa6-448d-11e5-902f-df4908d27254","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1223","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"stackSize":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1111","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}