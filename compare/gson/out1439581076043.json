{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"f6251115-42bb-11e5-a53f-dd0776ccd6db","series":0,"name":"add","transplant":{"position":"com.google.gson.stream.JsonWriter:414","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return com.google.gson.stream.JsonWriter.nullValue();\n} "},"variableMap":{"this":"this","value":"deferredName"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:429","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    if (boolean) {\n        com.google.gson.stream.JsonWriter.writeDeferredName();\n    } else {\n        java.lang.String = null;\n        return this;\n    }\n} "},"status":-1},{"failures":[],"tindex":"f6253826-42bb-11e5-a53f-959a1ef5d57d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:382","type":"CtAssignmentImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.Node<K, V>.com.google.gson.internal.LinkedTreeMap.Node<K, V> = com.google.gson.internal.LinkedTreeMap.Node<K, V>"},"status":-1},{"failures":[],"tindex":"f6253827-42bb-11e5-a53f-89220e9dda99","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:198","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.bind.JsonTreeReader.popStack()"},"variableMap":{"this":"primitive"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:102","type":"CtAssignmentImpl","sourcecode":"this.java.lang.Object = java.lang.Object"},"status":-2},{"failures":[],"tindex":"f6253828-42bb-11e5-a53f-dbe529884c0e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:197","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.internal.bind.JsonTreeReader.((com.google.gson.JsonPrimitive)(peekStack())).getAsInt()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:542","type":"CtLocalVariableImpl","sourcecode":"int int = com.google.gson.stream.JsonReader.nextNonWhitespace(false)"},"status":-2},{"failures":[],"tindex":"f6253829-42bb-11e5-a53f-b359a959be37","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:578","type":"CtReturnImpl","sourcecode":"return \"?\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:535","type":"CtReturnImpl","sourcecode":"return java.io.StringWriter.toString()"},"status":-2},{"failures":[],"tindex":"f625fb7a-42bb-11e5-a53f-5d810d203ea0","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1526","type":"CtOperatorAssignmentImpl","sourcecode":"char <<= 4"},"variableMap":{"result":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1528","type":"CtOperatorAssignmentImpl","sourcecode":"char += char - '0'"},"status":-1},{"failures":[],"tindex":"f626228b-42bb-11e5-a53f-8b391128ba9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedTreeMap:413","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap<K, V>.replaceInParent(com.google.gson.internal.LinkedTreeMap.Node<K, V>, com.google.gson.internal.LinkedTreeMap.Node<K, V>)"},"status":-2},{"failures":[],"tindex":"f626228c-42bb-11e5-a53f-ad9636504393","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:494","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.append(\">\").toString()"},"variableMap":{"stringBuilder":"fieldNameBuilder"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.FieldNamingPolicy:155","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isUpperCase(char))) {\n    java.lang.String java.lang.String = com.google.gson.FieldNamingPolicy.com.google.gson.FieldNamingPolicy.modifyString(java.lang.Character.toUpperCase(char), java.lang.String, ++int);\n    return java.lang.StringBuilder.append(java.lang.String).toString();\n} else {\n    return java.lang.String;\n}"},"status":-1},{"failures":[],"tindex":"f626228d-42bb-11e5-a53f-417bb3cffe34","series":0,"name":"add","transplant":{"position":"com.google.gson.internal.$Gson$Types:334","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType()"},"variableMap":{"original":"raw"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.ReflectiveTypeAdapterFactory:141","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.resolve(com.google.gson.reflect.TypeToken<?>.getType(), java.lang.Class<?>, java.lang.reflect.Field.getGenericType())"},"status":-2},{"failures":[],"tindex":"f626499e-42bb-11e5-a53f-bf2831848e5f","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:170","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.push(com.google.gson.stream.JsonScope.int)"},"status":-2},{"failures":[],"tindex":"f626499f-42bb-11e5-a53f-25837d93ed9a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedTreeMap:588","type":"CtInvocationImpl","sourcecode":"com.google.gson.internal.LinkedTreeMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:182","type":"CtIfImpl","sourcecode":"if ((java.lang.Double.isNaN(double)) || (java.lang.Double.isInfinite(double))) {\n    throw new java.lang.IllegalArgumentException((\"JSON forbids NaN and infinities: \" + java.lang.Number));\n} "},"status":-2},{"failures":[],"tindex":"f62649a0-42bb-11e5-a53f-3fec55a3f2ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:313","type":"CtLocalVariableImpl","sourcecode":"java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getSupertype(java.lang.reflect.Type, java.lang.Class<?>, java.util.Map.java.util.Map)"},"status":-2},{"failures":[],"tindex":"f62649a1-42bb-11e5-a53f-79bbe83cec77","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.LinkedHashTreeMap:691","type":"CtIfImpl","sourcecode":"if (((int) > 0) && (((int) & 1) == 0)) {\n    (int)++;\n    (int)--;\n    (int)++;\n} "},"variableMap":{"size":"result","leavesSkipped":"result","leavesToSkip":"result"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1177","type":"CtIfImpl","sourcecode":"if ((long) != int) {\n    throw new java.lang.NumberFormatException((((((((\"Expected an int but was \" + (long)) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())));\n} "},"status":-1},{"failures":[],"tindex":"f62670b2-42bb-11e5-a53f-31100cd04bbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:965","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1},{"failures":[],"tindex":"f62670b3-42bb-11e5-a53f-f1502142a5f6","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1523","type":"CtLocalVariableImpl","sourcecode":"char char = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:97","type":"CtLocalVariableImpl","sourcecode":"char char = ((java.lang.Character)(java.lang.Object)).charValue()"},"status":-2},{"failures":[],"tindex":"f62670b4-42bb-11e5-a53f-a1b255bcee1f","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:609","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:825","type":"CtThrowImpl","sourcecode":"throw new com.google.gson.JsonSyntaxException(java.io.IOException)"},"status":-1},{"failures":[],"tindex":"f62670b5-42bb-11e5-a53f-05cc12c5d857","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1346","type":"CtIfImpl","sourcecode":"if (!com.google.gson.stream.JsonReader.(fillBuffer(1))) {\n    break;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:879","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonReader.int)) {\n    int = com.google.gson.stream.JsonReader.doPeek();\n} "},"status":-2},{"failures":[],"tindex":"f62670b6-42bb-11e5-a53f-e1be0284f640","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:272","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"stackSize":"pos"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1188","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"f626bed7-42bb-11e5-a53f-49b28944b58f","series":0,"name":"replace","transplant":{"position":"com.google.gson.JsonPrimitive:290","type":"CtReturnImpl","sourcecode":"return 31"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1318","type":"CtReturnImpl","sourcecode":"return (int) + 1"},"status":-1},{"failures":[],"tindex":"f626bed8-42bb-11e5-a53f-451d4822e3de","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.$Gson$Types:141","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0]);\n} else {\n    java.lang.String java.lang.String = java.lang.reflect.Type == null ? \"null\" : java.lang.reflect.Type.getClass().getName();\n    throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + java.lang.reflect.Type) + \"> is of type \") + java.lang.String));\n}"},"variableMap":{"this":"this","type":"java.lang.Object.class"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:122","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getRawType();\n    com.google.gson.internal.$Gson$Preconditions.com.google.gson.internal.$Gson$Preconditions.checkArgument((java.lang.reflect.Type instanceof java.lang.Class));\n    return ((java.lang.Class<?>)(java.lang.reflect.Type));\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n    return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type), 0).getClass();\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    return java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0]);\n} else {\n    java.lang.String java.lang.String = java.lang.reflect.Type == null ? \"null\" : java.lang.reflect.Type.getClass().getName();\n    throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + java.lang.reflect.Type) + \"> is of type \") + java.lang.String));\n}"},"status":-2}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}