{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"61c75ee0-433d-11e5-938a-a93c4284237a","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.Excluder:235","type":"CtIfImpl","sourcecode":"if (double > (double)) {\n    return false;\n} "},"variableMap":{"version":"value","annotationVersion":"version"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Excluder:243","type":"CtIfImpl","sourcecode":"if (com.google.gson.annotations.Until != null) {\n    double double = com.google.gson.annotations.Until.double();\n    if (double <= (double)) {\n        return false;\n    } \n} "},"status":-2},{"failures":[],"tindex":"61c785f1-433d-11e5-938a-b9dafaced457","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeWriter:98","type":"CtReturnImpl","sourcecode":"return this"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:297","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonWriter.close(com.google.gson.stream.JsonScope.int, com.google.gson.stream.JsonScope.int, \"]\")"},"status":-1},{"failures":[],"tindex":"61c785f2-433d-11e5-938a-87eb9e791247","series":0,"name":"replace","transplant":{"position":"com.google.gson.reflect.TypeToken:124","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonPrimitive:307","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"61c7ad03-433d-11e5-938a-8d4d549f7b2d","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:549","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} "},"variableMap":{"com.google.gson.stream.JsonScope.CLOSED":"stackSize","peekStack":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonWriter:392","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.IllegalStateException(\"JsonWriter is closed.\");\n} "},"status":-1},{"failures":[],"tindex":"61c7ad04-433d-11e5-938a-937fcee2ca21","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:556","type":"CtIfImpl","sourcecode":"if (int == (com.google.gson.stream.JsonScope.int)) {\n    return int = com.google.gson.stream.JsonReader.int;\n} "},"variableMap":{"peekStack":"c","peeked":"c","com.google.gson.stream.JsonReader.PEEKED_END_ARRAY":"c","com.google.gson.stream.JsonScope.EMPTY_ARRAY":"c"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1368","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    return int;\n} "},"status":0},{"failures":[],"tindex":"61c89765-433d-11e5-938a-f74667c63b1a","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:1290","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"pos":"stackSize","lineStart":"stackSize"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1213","type":"CtUnaryOperatorImpl","sourcecode":"(int[][((int) - 1)])++"},"status":-1},{"failures":[],"tindex":"61c8be76-433d-11e5-938a-c1dd66179f76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:706","type":"CtReturnImpl","sourcecode":"return com.google.gson.stream.JsonReader.int"},"status":0},{"failures":[],"tindex":"61c8be77-433d-11e5-938a-b3344fd92822","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.Primitives:80","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.Primitives.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.containsKey(com.google.gson.internal.$Gson$Preconditions.checkNotNull(java.lang.reflect.Type))"},"status":-2},{"failures":[],"tindex":"61c8be78-433d-11e5-938a-e1fcf015126a","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:386","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.NullPointerException(\"name == null\");\n} "},"variableMap":{"name":"property"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.JsonObject:112","type":"CtInvocationImpl","sourcecode":"com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonObject.createJsonElement(java.lang.Character))"},"status":-1},{"failures":[],"tindex":"61c8be79-433d-11e5-938a-05798b175a1e","series":0,"name":"replace","transplant":{"position":"com.google.gson.internal.bind.JsonTreeReader:100","type":"CtReturnImpl","sourcecode":"return com.google.gson.internal.bind.JsonTreeReader.peek()"},"variableMap":{"this":"o"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:120","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof com.google.gson.JsonNull) {\n    return com.google.gson.stream.JsonToken.com.google.gson.stream.JsonToken;\n} else if (java.lang.Object == (com.google.gson.internal.bind.JsonTreeReader.java.lang.Object)) {\n    throw new java.lang.IllegalStateException(\"JsonReader is closed\");\n} else {\n    throw new java.lang.AssertionError();\n}"},"status":-2},{"failures":[],"tindex":"61c8be7a-433d-11e5-938a-9519e7d0fe7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.LinkedHashTreeMap:433","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.internal.LinkedHashTreeMap.Node<K, V> com.google.gson.internal.LinkedHashTreeMap.Node<K, V> = com.google.gson.internal.LinkedHashTreeMap.Node<K, V>.com.google.gson.internal.LinkedHashTreeMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"61c8be7b-433d-11e5-938a-c707d48c8c91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:332","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Type instanceof java.lang.Class) && (((java.lang.Class<?>)(java.lang.reflect.Type)).isArray())) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.Class<?>.getComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.Class<?> : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.GenericArrayType.getGenericComponentType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    return java.lang.reflect.Type == java.lang.reflect.Type ? java.lang.reflect.GenericArrayType : com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.arrayOf(java.lang.reflect.Type);\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n    java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n    java.lang.reflect.Type java.lang.reflect.Type = java.lang.reflect.ParameterizedType.getOwnerType();\n    java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type);\n    boolean boolean = java.lang.reflect.Type != java.lang.reflect.Type;\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n    for (int int = 0, int int = java.lang.reflect.Type[].int ; int < int ; int++) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][int]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][int])) {\n            if (!boolean) {\n                java.lang.reflect.Type[] = java.lang.reflect.Type[].clone();\n                boolean = true;\n            } \n            java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n        } \n    }\n    return boolean ? com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.newParameterizedTypeWithOwner(java.lang.reflect.Type, java.lang.reflect.ParameterizedType.getRawType(), java.lang.reflect.Type[]) : java.lang.reflect.ParameterizedType;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getLowerBounds();\n    java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.WildcardType.getUpperBounds();\n    if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.supertypeOf(java.lang.reflect.Type);\n        } \n    } else if ((java.lang.reflect.Type[].int) == 1) {\n        java.lang.reflect.Type java.lang.reflect.Type = com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class<?>, java.lang.reflect.Type[][0]);\n        if (java.lang.reflect.Type != (java.lang.reflect.Type[][0])) {\n            return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.subtypeOf(java.lang.reflect.Type);\n        } \n    } \n    return java.lang.reflect.WildcardType;\n} else {\n    return java.lang.reflect.Type;\n}"},"status":-2},{"failures":[],"tindex":"61c8e58c-433d-11e5-938a-f789693b43c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1450","type":"CtForImpl","sourcecode":"outer : for ( ; (((int) + (java.lang.String.length())) <= (int)) || com.google.gson.stream.JsonReader.(fillBuffer(java.lang.String.length())) ; (int)++) {\n    if ((char[][int]) == '\\n') {\n        (int)++;\n        int = (int) + 1;\n        continue;\n    } \n    for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n        if ((char[][((int) + int)]) != (java.lang.String.charAt(int))) {\n            continue outer;\n        } \n    }\n    return true;\n}"},"status":-1},{"failures":[],"tindex":"61c8e58d-433d-11e5-938a-37623a01e8a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeReader:193","type":"CtLocalVariableImpl","sourcecode":"com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken = com.google.gson.internal.bind.JsonTreeReader.peek()"},"status":-2},{"failures":[],"tindex":"61c8e58e-433d-11e5-938a-33e5e0040517","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.$Gson$Types:132","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.GenericArrayType) {\n    java.lang.reflect.Type java.lang.reflect.Type = ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType();\n    return java.lang.reflect.Array.newInstance(com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type), 0).getClass();\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable) {\n    return java.lang.Object.java.lang.Object;\n} else if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n    return com.google.gson.internal.$Gson$Types.com.google.gson.internal.$Gson$Types.getRawType(((java.lang.reflect.WildcardType)(java.lang.reflect.Type)).getUpperBounds()[0]);\n} else {\n    java.lang.String java.lang.String = java.lang.reflect.Type == null ? \"null\" : java.lang.reflect.Type.getClass().getName();\n    throw new java.lang.IllegalArgumentException(((((\"Expected a Class, ParameterizedType, or \" + \"GenericArrayType, but <\") + java.lang.reflect.Type) + \"> is of type \") + java.lang.String));\n}"},"status":-2},{"failures":[],"tindex":"61c8e58f-433d-11e5-938a-ad919e6c466a","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:649","type":"CtReturnImpl","sourcecode":"return int = int"},"variableMap":{"peeking":"peeked","peeked":"com.google.gson.stream.JsonReader.PEEKED_BEGIN_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:579","type":"CtReturnImpl","sourcecode":"return int = com.google.gson.stream.JsonReader.int"},"status":-2},{"failures":[],"tindex":"61c8e590-433d-11e5-938a-059b00b7e583","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonWriter:609","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"JSON must start with an array or an object.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:1208","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException((((((((\"Expected an int but was \" + (java.lang.String)) + \" at line \") + com.google.gson.stream.JsonReader.(getLineNumber())) + \" column \") + com.google.gson.stream.JsonReader.(getColumnNumber())) + \" path \") + com.google.gson.stream.JsonReader.(getPath())))"},"status":-1},{"failures":[],"tindex":"61c90ca1-433d-11e5-938a-e3c47daf280d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.Gson:662","type":"CtInvocationImpl","sourcecode":"com.google.gson.stream.JsonWriter.setLenient(true)"},"status":-1},{"failures":[],"tindex":"61c90ca2-433d-11e5-938a-41ee35798485","series":0,"name":"replace","transplant":{"position":"com.google.gson.stream.JsonReader:616","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"TRUE\""},"variableMap":{"keywordUpper":"pendingName"},"type":"adrStmt","transplantationPoint":{"position":"com.google.gson.internal.bind.JsonTreeWriter:81","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"status":-1},{"failures":[],"tindex":"61c90ca3-433d-11e5-938a-cbb01d2962b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"com.google.gson.stream.JsonReader:984","type":"CtAssignmentImpl","sourcecode":"int = com.google.gson.stream.JsonReader.int"},"status":-1}],"header":{"groupId":"com.google.code.gson","transformationCount":20,"projectType":"maven","artifactId":"gson","generatorVersion":"1.0","version":"2.3.2-SNAPSHOT"}}