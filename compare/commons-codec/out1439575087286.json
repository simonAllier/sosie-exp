{"failureDictionary":{"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":70,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":25,"org.apache.commons.codec.language.NysiisTest.testSnat":19,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":27,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":46,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":49,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":62,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":31,"org.apache.commons.codec.language.NysiisTest.testDropBy":20,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":29,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":30,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":7,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":57,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":59,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":43,"org.apache.commons.codec.language.NysiisTest.testRule2":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":53,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException":0,"org.apache.commons.codec.language.NysiisTest.testRule1":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":52,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":40,"org.apache.commons.codec.language.NysiisTest.testRule7":16,"org.apache.commons.codec.language.NysiisTest.testRule6":15,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":41,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":54,"org.apache.commons.codec.language.NysiisTest.testRule5":14,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":44,"org.apache.commons.codec.language.NysiisTest.testCap":8,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":35,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":39,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":71,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":66,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":37,"org.apache.commons.codec.language.NysiisTest.testBran":17,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":38,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":3,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":51,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":65,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":2,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":60,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":4,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":5,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":67,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":61,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":56,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":63,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":36,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":24,"org.apache.commons.codec.language.SoundexTest.testB650":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":64,"org.apache.commons.codec.language.NysiisTest.testDad":9,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":1,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":47,"org.apache.commons.codec.language.SoundexTest.testNewInstance":34,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.language.SoundexTest.testDifference":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":6,"org.apache.commons.codec.language.NysiisTest.testDan":10,"org.apache.commons.codec.language.NysiisTest.testFal":11,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":55,"org.apache.commons.codec.language.NysiisTest.testSnad":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":58,"org.apache.commons.codec.language.MetaphoneTest.testTCH":68},"transformations":[{"failures":[0],"tindex":"0490f6fd-42ae-11e5-bac1-95f82c93e2e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"04911e0e-42ae-11e5-bac1-01df8e4056ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"04911e0f-42ae-11e5-bac1-2ff1621b9b9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"04911e10-42ae-11e5-bac1-1bb27958ac74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"currentLine","to":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:307","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][0]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][1]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][2]);\n    final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][3]);\n    final org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule = new org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule(java.lang.String , java.lang.String , java.lang.String , java.lang.String);\n    final char char = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.java.lang.String.charAt(0);\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.get(char);\n    if (java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> == null) {\n        java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n        java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>);\n    } \n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule);\n} catch (final java.lang.IllegalArgumentException e) {\n    throw new java.lang.IllegalStateException((((\"Problem parsing line \\'\" + int) + \"\\' in \") + java.lang.String) , java.lang.IllegalArgumentException);\n}"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"04911e11-42ae-11e5-bac1-2783a7f848b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:376","type":"CtReturnImpl","sourcecode":"return java.io.ByteArrayOutputStream.toByteArray()"},"status":-1},{"failures":[],"tindex":"04914522-42ae-11e5-bac1-ef8b480c4d68","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[57],"tindex":"04914523-42ae-11e5-bac1-0bcea2458a8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[58,59,60],"tindex":"04914524-42ae-11e5-bac1-33dd7ad03953","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"variableMap":{"pattern":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:363","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else {\n    if (int > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n        }\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    return int + 2;\n}"},"status":-1},{"failures":[61],"tindex":"04914525-42ae-11e5-bac1-2bf5a99a3947","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:304","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"status":-1},{"failures":[],"tindex":"04914526-42ae-11e5-bac1-1566b6d8efa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int >>> int) ^ int) & int"},"variableMap":{"a":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","b":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","m":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","n":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.int"},"status":-2},{"failures":[58,59],"tindex":"04914527-42ae-11e5-bac1-1ffc144da2e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:176","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-2},{"failures":[],"tindex":"04914528-42ae-11e5-bac1-979e65e691d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"variableMap":{"left":"pos","right":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:481","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[62,63,64],"tindex":"04916c39-42ae-11e5-bac1-81505c16f470","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0) {\n    java.lang.StringBuilder.append(\"|\");\n} "},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][37], byte[][58], byte[][16], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[65],"tindex":"04916c3a-42ae-11e5-bac1-41fcbbd4421c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"x\", \"k\")"},"status":-1},{"failures":[66,67],"tindex":"04916c3b-42ae-11e5-bac1-bd2615cb5884","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"char = '8'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:357","type":"CtAssignmentImpl","sourcecode":"char = '2'"},"status":-1},{"failures":[],"tindex":"04916c3c-42ae-11e5-bac1-692e87b0ba80","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"diff","to":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) == (java.lang.String.charAt(int))) {\n    int++;\n} "},"status":-2},{"failures":[],"tindex":"04916c3d-42ae-11e5-bac1-f3135e42ca52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:471","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"04916c3e-42ae-11e5-bac1-db1139d41fce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:79","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tio\", \"sio\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"status":1},{"failures":[68,69,70],"tindex":"04916c3f-42ae-11e5-bac1-4f41f1004c06","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[71],"tindex":"04919350-42ae-11e5-bac1-cd947fa0c473","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}