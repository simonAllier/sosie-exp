{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":24,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":73,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":50,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":67,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":10,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":34,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":51,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":69,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":74,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":77,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":79,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":31,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":39,"org.apache.commons.codec.binary.Base64Test.testConstructors":72,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":14,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":13,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":15,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":60,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":20,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":45,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":1,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":54,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":21,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":52,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":12,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":35,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":76,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":64,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":17,"org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize":75,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":22,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":48,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":68,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":63,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":55,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":49,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":61,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":47,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":19,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":33,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16":56,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":2,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":53,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":36},"transformations":[{"failures":[0],"tindex":"b246cdbf-42b0-11e5-bb97-ed5367712544","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r$\", \"3\")"},"status":-1},{"failures":[1,2,3],"tindex":"b246f4d0-42b0-11e5-bb97-3f8e82ec597d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"variableMap":{"local":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:219","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) && (!org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 2))))) {\n    break;\n} "},"status":-1},{"failures":[4],"tindex":"b246f4d1-42b0-11e5-bb97-fde28d334c38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(char)"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"b246f4d2-42b0-11e5-bb97-a38140bdab3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:373","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"b2471be3-42b0-11e5-bb97-3b6749b234b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"status":-2},{"failures":[],"tindex":"b2471be4-42b0-11e5-bb97-416c783b0c10","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.String.length()) - 2"},"status":-2},{"failures":[],"tindex":"b2471be5-42b0-11e5-bb97-ab4ba21aaa01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:388","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 12) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 35))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"b2471be6-42b0-11e5-bb97-1d724c0b1b5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)"},"status":-2},{"failures":[17,18],"tindex":"b24742f7-42b0-11e5-bb97-5fb11ee907ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:202","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])) + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"b24742f8-42b0-11e5-bb97-65e250ab4a8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '1'"},"variableMap":{"jj":"i","l_ascii":"name1Char","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"b24742f9-42b0-11e5-bb97-93a12af582f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[54,55],"tindex":"b2476a0a-42b0-11e5-bb97-5f3539d2f9d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:406","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"status":-1},{"failures":[56],"tindex":"b2476a0b-42b0-11e5-bb97-a142698d33a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:335","type":"CtReturnImpl","sourcecode":"return new java.lang.String(byte[] , org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[31,37,38,41,42,45,48,49,51,52],"tindex":"b2476a0c-42b0-11e5-bb97-ed24b7825a11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failures":[57,31,32,33,58,34,59,35,60,61,36,37,62,38,39,40,41,42,43,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"b2476a0d-42b0-11e5-bb97-1d4d65dc540c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[byte[].int]"},"status":-1},{"failures":[],"tindex":"b2476a0e-42b0-11e5-bb97-d1d785007a69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":0},{"failures":[79],"tindex":"b247911f-42b0-11e5-bb97-db0a095147fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:890","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"b2479120-42b0-11e5-bb97-5b01e5b2ac64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"b2479121-42b0-11e5-bb97-2b0fd301d226","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"pos","t":"currentLinePos","n":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failures":[],"tindex":"b2479122-42b0-11e5-bb97-a173c491d855","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}