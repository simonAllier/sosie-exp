{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":31,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":38,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":50,"org.apache.commons.codec.binary.Base64Test.testBase64":37,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":12,"org.apache.commons.codec.binary.Base64Test.testTriplets":18,"org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull":45,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":8,"org.apache.commons.codec.binary.Base64Test.testUUID":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":44,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":17,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":30,"org.apache.commons.codec.binary.Base64Test.testSingletons":33,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":36,"org.apache.commons.codec.binary.Base64Test.testPairs":20,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":29,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":39,"org.apache.commons.codec.binary.Base64Test.testCodec112":32,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":24,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":2,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":28,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":48,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":14,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":6,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":27,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":49,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":13,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":34,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":41,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":51,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":3,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":11,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":0,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":16,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":40,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":46,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":5,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":23,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":35,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":15,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":4,"org.apache.commons.codec.language.SoundexTest.testDifference":47,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":43,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":22,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":7},"transformations":[{"failures":[],"tindex":"7c390764-43d7-11e5-aa25-91a22ca1429a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:499","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[0,1,2,3,4,5,6],"tindex":"7c392e75-43d7-11e5-aa25-cd3df8d76d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"variableMap":{"text":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[],"tindex":"7c392e76-43d7-11e5-aa25-ebc7aa6faf70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"data","txt":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(java.lang.String))"},"status":-2},{"failures":[],"tindex":"7c392e77-43d7-11e5-aa25-d7e4412067c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])"},"variableMap":{"tmp":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.java.util.BitSet, byte[])"},"status":-2},{"failures":[7,8],"tindex":"7c395588-43d7-11e5-aa25-0f52430b7ac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"int[][0] = int"},"status":-1},{"failures":[1],"tindex":"7c395589-43d7-11e5-aa25-23786dd224f6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:139","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"7c39558a-43d7-11e5-aa25-2bdaf7a7978c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encode(byte[])"},"status":-1},{"failures":[7,41,42,8],"tindex":"7c39558b-43d7-11e5-aa25-75f210ec9543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"variableMap":{"ii":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"7c39558c-43d7-11e5-aa25-afab103ab73e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:288","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"7c39558d-43d7-11e5-aa25-5d78dff59193","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:434","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[43,44],"tindex":"7c39558e-43d7-11e5-aa25-bd1a44a9f168","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:680","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TIA\", \"TCH\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"TH\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TTH\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"OM\", \"AM\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"T\", \"D\") ? int + 2 : int + 1;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:607","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 4, \"HEIM\", \"HOEK\", \"HOLM\", \"HOLZ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"status":-1},{"failures":[45],"tindex":"7c397c9f-43d7-11e5-aa25-ff8c60b7cd2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:289","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"7c397ca0-43d7-11e5-aa25-b7de924e836c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"dg\", \"2g\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:67","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^gn\", \"2n\")"},"status":1},{"failures":[],"tindex":"7c397ca1-43d7-11e5-aa25-75717d8380a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(java.lang.String.endsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"line","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"line","text":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:261","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    boolean = false;\n} "},"status":-2},{"failures":[46,47],"tindex":"7c397ca2-43d7-11e5-aa25-cde46a6b0977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:86","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.org.apache.commons.codec.language.SoundexUtils.differenceEncoded(org.apache.commons.codec.StringEncoder.encode(java.lang.String), org.apache.commons.codec.StringEncoder.encode(java.lang.String))"},"status":-1},{"failures":[],"tindex":"7c397ca3-43d7-11e5-aa25-1f5ffbbc8111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"variableMap":{"ibitWorkArea":"length","pos":"length","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer","modulus":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"7c39a3b4-43d7-11e5-aa25-9f5b696ba322","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"n","d":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:329","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"7c39a3b5-43d7-11e5-aa25-1f77e7ab4a3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.boolean[][int]) {\n    int = (int >>> 2) | (int << 26);\n    int = (int >>> 2) | (int << 26);\n} else {\n    int = (int >>> 1) | (int << 27);\n    int = (int >>> 1) | (int << 27);\n}"},"status":-2},{"failures":[],"tindex":"7c39a3b6-43d7-11e5-aa25-adcd61ed94c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ')"},"variableMap":{"result":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:79","type":"CtTryImpl","sourcecode":"try {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.lang.Comparable<java.lang.Comparable<?>> java.lang.Comparable<java.lang.Comparable<?>> = ((java.lang.Comparable<java.lang.Comparable<?>>)(this.org.apache.commons.codec.StringEncoder.encode(java.lang.Object)));\n    final java.lang.Comparable<?> java.lang.Comparable<?> = ((java.lang.Comparable<?>)(this.org.apache.commons.codec.StringEncoder.encode(java.lang.Object)));\n    int = java.lang.Comparable<java.lang.Comparable<?>>.compareTo(java.lang.Comparable<?>);\n} catch (final org.apache.commons.codec.EncoderException ee) {\n    int = 0;\n}"},"status":-2},{"failures":[48,49,50,51],"tindex":"7c39a3b7-43d7-11e5-aa25-4973fc1361e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"char = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"char = '1'"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}