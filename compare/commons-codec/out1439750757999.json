{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter":55,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":124,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":109,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":91,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":111,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":122,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":72,"org.apache.commons.codec.binary.Base64Test.testTriplets":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":87,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":2,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":99,"org.apache.commons.codec.binary.Base64Test.testIsUrlSafe":49,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":68,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":16,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":71,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":60,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":65,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":34,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":28,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":116,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":36,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":37,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":97,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":7,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":78,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":73,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":52,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":89,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":123,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":13,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":115,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":59,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":27,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":118,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":93,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":50,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":119,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":66,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":6,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":10,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":26,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":104,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":103,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":113,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":9,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":110,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":62,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":56,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":96,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":44,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":108,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":95,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":80,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":15,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":61,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":38,"org.apache.commons.codec.binary.Base64Test.testBase64":58,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":114,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":8,"org.apache.commons.codec.binary.Base64Test.testUUID":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":121,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":42,"org.apache.commons.codec.binary.Base64Test.testSingletons":51,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":94,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":112,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":101,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":79,"org.apache.commons.codec.binary.Base64Test.testPairs":29,"org.apache.commons.codec.binary.Base64Test.testConstructors":32,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":100,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":63,"org.apache.commons.codec.binary.Base64Test.testCodec112":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":74,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":18,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":22,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":25,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":117,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":82,"org.apache.commons.codec.binary.Base64Test.testCodec68":53,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput":0,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":83,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":85,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":69,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":4,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":47,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":64,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":20,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":23,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":48,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":105,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":75,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":106,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":102,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":40,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":70,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":33,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":54,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":107,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":17,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":84,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":120,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":43,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":31,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":76,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":1},"transformations":[{"failures":[0],"tindex":"0878a88e-4447-11e5-857a-d7187b3ae0b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:203","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\");\n} "},"status":-1},{"failures":[],"tindex":"0878cf9f-4447-11e5-857a-a9d736fdf115","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"variableMap":{"c":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[1,2],"tindex":"0878cfa0-4447-11e5-857a-2fb92729a1e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 16) | (int & -65536)"},"status":-1},{"failures":[],"tindex":"0878cfa1-4447-11e5-857a-b1c523f871ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (char == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[3,4,5,6,7,8,9],"tindex":"0878cfa2-4447-11e5-857a-31afcc04c5df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[10,11,12,13,14],"tindex":"0878cfa3-4447-11e5-857a-558c0e114392","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String.charAt(0))"},"status":-1},{"failures":[15,16,17],"tindex":"0878cfa4-4447-11e5-857a-11111a3b80c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"variableMap":{"b":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"0878cfa5-4447-11e5-857a-1bb0bbdc532f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:141","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine()"},"variableMap":{"scanner":"lsScanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim()"},"status":-2},{"failures":[],"tindex":"0878cfa6-4447-11e5-857a-917d7bbfaad2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:414","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":-2},{"failures":[18,19],"tindex":"0878f6b7-4447-11e5-857a-f9c8e25f6a0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:85","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0878f6b8-4447-11e5-857a-67cd38ba9f3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"blocksize":"right","cnt":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"int[][1] = int"},"status":1},{"failures":[],"tindex":"0878f6b9-4447-11e5-857a-c74a9f7338ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (char == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,18,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,19,107,108,109,110,111,112],"tindex":"0878f6ba-4447-11e5-857a-d7f90543cc04","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == byte) || org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte))) {\n    return true;\n} "},"variableMap":{"pad":"pad","this":"this","element":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:499","type":"CtForEachImpl","sourcecode":"for (final byte byte : byte[]) {\n    if (((byte) == byte) || org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte))) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"0878f6bb-4447-11e5-857a-c92f1392efa1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"variableMap":{"left":"pos","right":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[113,114,115,116,117,118,119],"tindex":"0878f6bc-4447-11e5-857a-318ffbdf2ec2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:265","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.format(\"org/apache/commons/codec/language/bm/%s.txt\", java.lang.String)"},"variableMap":{"lang":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:332","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(char[]).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[],"tindex":"08791dcd-4447-11e5-857a-ed1d51cdcb8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = byte"},"status":-2},{"failures":[],"tindex":"08791dce-4447-11e5-857a-6b9e778231d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"maxCodeLen","minRating":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[120,121,122,123,124],"tindex":"08791dcf-4447-11e5-857a-2b3e4b0f2f5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:156","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:169","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[1,2],"tindex":"08791dd0-4447-11e5-857a-297a9c8ad000","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)(int & 255))"},"variableMap":{"b":"b","offset":"iValue","iValue":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"status":-1},{"failures":[],"tindex":"08791dd1-4447-11e5-857a-45f250a95a9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(java.lang.String))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}