{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":34,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":0,"org.apache.commons.codec.language.NysiisTest.testSnat":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":32,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":8,"org.apache.commons.codec.language.NysiisTest.testDropBy":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":10,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":11,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":13,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":33,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":31,"org.apache.commons.codec.language.NysiisTest.testDad":15,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":7,"org.apache.commons.codec.language.NysiisTest.testRule2":19,"org.apache.commons.codec.language.NysiisTest.testRule1":18,"org.apache.commons.codec.language.NysiisTest.testOthers":27,"org.apache.commons.codec.language.NysiisTest.testRule7":22,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":1,"org.apache.commons.codec.language.NysiisTest.testRule6":21,"org.apache.commons.codec.language.NysiisTest.testRule5":20,"org.apache.commons.codec.language.NysiisTest.testTranan":28,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":12,"org.apache.commons.codec.language.NysiisTest.testDan":16,"org.apache.commons.codec.language.NysiisTest.testFal":17,"org.apache.commons.codec.language.NysiisTest.testCap":14,"org.apache.commons.codec.language.NysiisTest.testSnad":24,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":3,"org.apache.commons.codec.language.NysiisTest.testBran":23,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":5,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":9},"transformations":[{"failures":[],"tindex":"4a89f2c0-4305-11e5-8799-bf2596779c3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"encodeSize","minRating":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"encodeSize","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:283","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    this.int = (org.apache.commons.codec.binary.Base64.int) + (byte[].int);\n    this.byte[] = new byte[byte[].int];\n    java.lang.System.arraycopy(byte[], 0, this.byte[], 0, byte[].int);\n} else {\n    this.int = org.apache.commons.codec.binary.Base64.int;\n    this.byte[] = null;\n}"},"status":-2},{"failures":[0],"tindex":"4a8a19d1-4305-11e5-8799-d19fb9315792","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:78","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"status":-1},{"failures":[1],"tindex":"4a8a19d2-4305-11e5-8799-4df14be4f78e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"p+\", \"P\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[2,3,4],"tindex":"4a8a19d3-4305-11e5-8799-bd8bafeb7b93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((int == 0) || org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n    int += 2;\n} else {\n    int++;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((int > 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (int == 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    }\n    int += 2;\n} else if ((((int > 1) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 1, \"B\", \"H\", \"D\"))) || ((int > 2) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"B\", \"H\", \"D\")))) || ((int > 3) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 1, \"B\", \"H\")))) {\n    int += 2;\n} else {\n    if (((int > 2) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'U')) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n    } else if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } \n    int += 2;\n}"},"status":-1},{"failures":[],"tindex":"4a8a40e4-4305-11e5-8799-3d1d1ec18218","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:429","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.binary.BaseNCodec.Context org.apache.commons.codec.binary.BaseNCodec.Context = new org.apache.commons.codec.binary.BaseNCodec.Context()"},"status":-2},{"failures":[5,6],"tindex":"4a8a40e5-4305-11e5-8799-0d78682463a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"status":-1},{"failures":[],"tindex":"4a8a40e6-4305-11e5-8799-5172ed6a5ce6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"pos","t":"pos","n":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"4a8a40e7-4305-11e5-8799-6b4078ebd681","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:844","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'M') {\n    return true;\n} "},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:782","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"CHIA\")) {\n    return true;\n} else if (int <= 1) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 2)))) {\n    return false;\n} else if (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"ACH\"))) {\n    return false;\n} else {\n    final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2));\n    return ((char != 'I') && (char != 'E')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 6, \"BACHER\", \"MACHER\"));\n}"},"status":-2},{"failures":[],"tindex":"4a8a40e8-4305-11e5-8799-950dd5077f40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:278","type":"CtAssignmentImpl","sourcecode":"java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet"},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"urlsafe","printable":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:126","type":"CtAssignmentImpl","sourcecode":"java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet"},"status":-2},{"failures":[7,8,9,10,11],"tindex":"4a8a40e9-4305-11e5-8799-0d07b34731c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('J')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"4a8a67fa-4305-11e5-8799-bd5476335649","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"variableMap":{"local":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1) {\n    char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    if (char == 'S') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n        char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    } \n    if ((java.lang.StringBuilder.length()) > 2) {\n        final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2));\n        if ((char == 'A') && (char == 'Y')) {\n            java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2));\n        } \n    } \n    if (char == 'A') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n    } \n} "},"status":-1},{"failures":[],"tindex":"4a8a67fb-4305-11e5-8799-51c8158074bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.binary.BaseNCodec.Context.int]"},"status":-2},{"failures":[],"tindex":"4a8a67fc-4305-11e5-8799-fbbc37ed68f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:504","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:337","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"4a8a67fd-4305-11e5-8799-09d2702e8a94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-2},{"failures":[],"tindex":"4a8a67fe-4305-11e5-8799-99a1e906df6d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int >> 1]"},"status":-2},{"failures":[],"tindex":"4a8a8f0f-4305-11e5-8799-5b8b4115c192","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.nio.charset.Charset)"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,30,26,27,28,29],"tindex":"4a8a8f10-4305-11e5-8799-9592c0eb2377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)"},"status":-1},{"failures":[31],"tindex":"4a8a8f11-4305-11e5-8799-5f54d8c3c3e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:274","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"4a8a8f12-4305-11e5-8799-4bc622869cd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:59","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-2},{"failures":[32,33,2,34,3,4],"tindex":"4a8a8f13-4305-11e5-8799-6f53a91c777d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:156","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleP(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}