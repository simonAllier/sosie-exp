{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":20,"org.apache.commons.codec.language.NysiisTest.testSnat":42,"org.apache.commons.codec.language.NysiisTest.testDropBy":44,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":12,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":18,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":6,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":5,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":4,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":28,"org.apache.commons.codec.language.NysiisTest.testRule2":36,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":25,"org.apache.commons.codec.language.NysiisTest.testRule1":35,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":27,"org.apache.commons.codec.language.NysiisTest.testRule7":39,"org.apache.commons.codec.language.NysiisTest.testRule6":38,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":9,"org.apache.commons.codec.language.NysiisTest.testRule5":37,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":8,"org.apache.commons.codec.language.NysiisTest.testCap":31,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":43,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":7,"org.apache.commons.codec.language.NysiisTest.testBran":40,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":47,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":11,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":13,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":10,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":19,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":14,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":26,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":22,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":2,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":3,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":15,"org.apache.commons.codec.language.NysiisTest.testDad":32,"org.apache.commons.codec.language.NysiisTest.testOthers":45,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":21,"org.apache.commons.codec.language.NysiisTest.testTranan":46,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":29,"org.apache.commons.codec.language.NysiisTest.testDan":33,"org.apache.commons.codec.language.NysiisTest.testFal":34,"org.apache.commons.codec.language.NysiisTest.testSnad":41,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":23,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":48,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":16},"transformations":[{"failures":[0,1],"tindex":"31b27686-43bc-11e5-bc65-afca3571c471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"31b29d97-43bc-11e5-bc65-318759c2a0d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:373","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"variableMap":{"b":"c","buffer":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:116","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"31b2c4a8-43bc-11e5-bc65-4bdb70e526ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.lang.String)"},"variableMap":{"string":"key","charsetName":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-2},{"failures":[7,8,9,10,11,12,13,14],"tindex":"31b2c4a9-43bc-11e5-bc65-abeee4f3e902","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:384","type":"CtIfImpl","sourcecode":"if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"code","chr":"lastCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((char != '-') && ((((char != char) && ((char != '0') || (char == '/'))) || (char < '0')) || (char > '8'))) {\n    org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char);\n} "},"status":-1},{"failures":[],"tindex":"31b2c4aa-43bc-11e5-bc65-772a2cd4d525","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:159","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[15],"tindex":"31b2ebbb-43bc-11e5-bc65-37d34d285cb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"variableMap":{"salt":"upperName","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"upperName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:87","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    java.lang.String = java.lang.String.replaceAll(java.lang.String, org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"31b2ebbc-43bc-11e5-bc65-c11ba2e9389d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"status":-2},{"failures":[],"tindex":"31b2ebbd-43bc-11e5-bc65-5b15b99a40b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 18) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"31b312ce-43bc-11e5-bc65-9f076af871b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(byte[]))"},"status":-2},{"failures":[],"tindex":"31b312cf-43bc-11e5-bc65-3128cae3f324","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:350","type":"CtIfImpl","sourcecode":"if (char == '/') {\n    continue;\n} "},"variableMap":{"lastCode":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:310","type":"CtIfImpl","sourcecode":"if (char == 'A') {\n    java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n} "},"status":-2},{"failures":[16,17],"tindex":"31b312d0-43bc-11e5-bc65-3f77f46123a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"int = int + 2"},"variableMap":{"index":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"status":-1},{"failures":[],"tindex":"31b312d1-43bc-11e5-bc65-5b1b2739816d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"variableMap":{"a":"pos","t":"pos","n":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[18,19,20,0,1],"tindex":"31b339e2-43bc-11e5-bc65-27401bad0015","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[16,17],"tindex":"31b339e3-43bc-11e5-bc65-4f13d69798a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"variableMap":{"c":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,5,6],"tindex":"31b339e4-43bc-11e5-bc65-e13ab900b6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = int ^ (int >>> 16)"},"variableMap":{"r":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"status":-1},{"failures":[19,0,1],"tindex":"31b339e5-43bc-11e5-bc65-159ce963619a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:648","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'H') {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n        }\n    } else {\n        if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n        }\n    }\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:471","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-1},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"31b360f6-43bc-11e5-bc65-7db458d203aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"C\")"},"status":-1},{"failures":[],"tindex":"31b360f7-43bc-11e5-bc65-9376d3321503","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:132","type":"CtIfImpl","sourcecode":"if (char == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else if (char == 'M') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_S":"org.apache.commons.codec.language.Nysiis.CHARS_AF","org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_AF","curr":"curr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:120","type":"CtIfImpl","sourcecode":"if ((char == 'E') && (char == 'V')) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-2},{"failures":[],"tindex":"31b38808-43bc-11e5-bc65-05ac8dc0e898","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:365","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"rightLength":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:380","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"31b38809-43bc-11e5-bc65-9fb06f3e8c9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest().digest(byte[])"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}