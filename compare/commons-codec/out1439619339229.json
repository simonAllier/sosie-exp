{"failureDictionary":{"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":2,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":33,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":22,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":14,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":30,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":8,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":26,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":3,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":10,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":15,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":11,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":24,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":21,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":28,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":13,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":16,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":29},"transformations":[{"failures":[],"tindex":"0cc7732c-4315-11e5-aa33-d3004fd43378","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"char = java.lang.Character.toLowerCase(char)"},"variableMap":{"ch":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:273","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.Soundex.getMappingCode(java.lang.String, int++)"},"status":-2},{"failures":[],"tindex":"0cc79a3d-4315-11e5-aa33-3b0e0fa2ef45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(byte[].int) << 3]"},"status":-2},{"failures":[0,1,2,3],"tindex":"0cc79a3e-4315-11e5-aa33-331c82d3153b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; int < 6 ; int++) {\n    int <<= 1;\n    if (((byte[][int]) & int) != 0) {\n        int |= 1;\n    } \n    int >>>= 1;\n    if (int == 0) {\n        int++;\n        int = 128;\n    } \n    java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n}"},"status":-1},{"failures":[],"tindex":"0cc79a3f-4315-11e5-aa33-7905500f32ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:201","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[4],"tindex":"0cc7c150-4315-11e5-aa33-675d52fd18ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:197","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[],"tindex":"0cc7c151-4315-11e5-aa33-ab6cd6c84bed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += int"},"variableMap":{"len":"pos","context":"context","readPos":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"0cc7c152-4315-11e5-aa33-e33cdd608964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"keyLen","t":"ii","n":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[5,6,7,8,9,10,11],"tindex":"0cc7c153-4315-11e5-aa33-f7cef9a94f45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:112","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final byte[] byte[] = new byte[int];\n    final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    if (int > 0) {\n        java.io.OutputStream.write(byte[], 0, int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"0cc7c154-4315-11e5-aa33-ffc013e7caed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:412","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'N') {\n    if (((int == 1) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 0)))) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\", \"N\");\n    } else if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n    }\n    int = int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"LI\")) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KL\", \"L\");\n    int += 2;\n} else if ((int == 0) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y') || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if ((((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ER\")) || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y')) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"E\", \"I\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"RGY\", \"OGY\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"E\", \"I\", \"Y\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n    }\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-2},{"failures":[12],"tindex":"0cc7e865-4315-11e5-aa33-69caa2ec6126","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-1},{"failures":[13],"tindex":"0cc7e866-4315-11e5-aa33-5ba17d6dec6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]), java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"0cc7e867-4315-11e5-aa33-cff934032cb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.caverphone(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"0cc7e868-4315-11e5-aa33-dd873d038446","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":0},{"failures":[14,15,16],"tindex":"0cc7e869-4315-11e5-aa33-c9266d58e256","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('|')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:320","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"0cc7e86a-4315-11e5-aa33-69721983a383","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:329","type":"CtIfImpl","sourcecode":"if (java.util.BitSet.get(int)) {\n    java.io.ByteArrayOutputStream.write(int);\n} else {\n    org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int, java.io.ByteArrayOutputStream);\n}"},"status":-1},{"failures":[29],"tindex":"0cc80f7b-4315-11e5-aa33-9f198dd27582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:160","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[],"tindex":"0cc80f7c-4315-11e5-aa33-cb351e7fc21c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:273","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-2},{"failures":[],"tindex":"0cc80f7d-4315-11e5-aa33-c9c99abf6ff0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:73","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[30,31,32,33,34,35],"tindex":"0cc80f7e-4315-11e5-aa33-c91da60ac8ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"variableMap":{"code":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:467","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0cc80f7f-4315-11e5-aa33-c96806337ffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"name","txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}