{"failureDictionary":{"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":31,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":29,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":2,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":3,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":27,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":4,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":8,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":6,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":26,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":28,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":9,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":10,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":15,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":23,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":25,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully":32,"org.apache.commons.codec.language.SoundexTest.testB650":5,"org.apache.commons.codec.language.SoundexTest.testNewInstance":13,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":19,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":21,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":30,"org.apache.commons.codec.language.SoundexTest.testDifference":12,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":14,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":24,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":16,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":22},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"3976d5e2-4342-11e5-af64-eba9a819a1a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"status":-1},{"failures":[],"tindex":"3976fcf3-4342-11e5-af64-23d912e187a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:700","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\")"},"status":-2},{"failures":[],"tindex":"3976fcf4-4342-11e5-af64-47e15366495c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:314","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"3976fcf5-4342-11e5-af64-c7807a4b11ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int / 8]"},"status":-2},{"failures":[],"tindex":"3976fcf6-4342-11e5-af64-d3c3ce3376d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    return int;\n} "},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"status":-2},{"failures":[],"tindex":"39772407-4342-11e5-af64-c5935ba78a2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(byte[])"},"status":-2},{"failures":[],"tindex":"39772408-4342-11e5-af64-23ab184a2b9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"buffer","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:250","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = new byte[org.apache.commons.codec.binary.BaseNCodec.getDefaultBufferSize()]"},"status":-2},{"failures":[],"tindex":"39772409-4342-11e5-af64-5f00a7388798","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:517","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[],"tindex":"3977240a-4342-11e5-af64-8fd919519915","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[22,23],"tindex":"3977240b-4342-11e5-af64-2dc646ca0a65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:353","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":-1},{"failures":[24,25,26],"tindex":"3977240c-4342-11e5-af64-b3da087dd111","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return int + 3"},"status":-1},{"failures":[27],"tindex":"3977240d-4342-11e5-af64-e5c12769090e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"39774b1e-4342-11e5-af64-aff62a8fcf42","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:448","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"variableMap":{"ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"modulus","context":"context","buffer":"buffer","modulus":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:445","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    } \n} "},"status":-2},{"failures":[22,28,29,23],"tindex":"39774b1f-4342-11e5-af64-53a3da9b9636","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][9], byte[][15], 4, java.lang.StringBuilder)"},"variableMap":{"finalb":"b","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; int < 13 ; int++) {\n    int int = 0;\n    int int = 0;\n    for ( ; int < 6 ; int++) {\n        int <<= 1;\n        if (((byte[][int]) & int) != 0) {\n            int |= 1;\n        } \n        int >>>= 1;\n        if (int == 0) {\n            int++;\n            int = 128;\n        } \n        java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n    }\n}"},"status":-1},{"failures":[],"tindex":"39774b20-4342-11e5-af64-d303e4bd58bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"status":0},{"failures":[],"tindex":"39774b21-4342-11e5-af64-2f670d139324","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"char = '5'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:399","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":1},{"failures":[],"tindex":"39774b22-4342-11e5-af64-250f43b109c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"ii":"pos","keyLen":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[24,25,30,26,31],"tindex":"39774b23-4342-11e5-af64-17d169607fd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[32],"tindex":"39777234-4342-11e5-af64-579e968a6a99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:353","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"39777235-4342-11e5-af64-edb6177cebef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:313","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encode(((byte[])(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:214","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.nysiis(((java.lang.String)(java.lang.Object)))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"3977240a-4342-11e5-af64-8fd919519915","diffs":[{"branches":{"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":["org.apache.commons.codec.binary.Base64_void_encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).s11","org.apache.commons.codec.binary.Base64_void_encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).t4","org.apache.commons.codec.binary.Base64_void_decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).s9"]},"type":"branch"}]}]}