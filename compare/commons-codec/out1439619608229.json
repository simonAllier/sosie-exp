{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":12,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":39,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":7,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":30,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":24,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":4,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":13,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":37,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":31,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":34,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":35,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":32,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":1,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":23,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":26,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData":16,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":28,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":19,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptNullData":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":27,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":38,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":21,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":36,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":25,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptNullData":14,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":22,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":41},"transformations":[{"failures":[],"tindex":"ad1ea906-4315-11e5-ab69-cf28b744e415","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"pObject":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"ad1ed017-4315-11e5-ab69-09e40c31d580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"variableMap":{"ctx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[7],"tindex":"ad1ed018-4315-11e5-ab69-cf8df53fa6a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r$\", \"3\")"},"status":-1},{"failures":[],"tindex":"ad1ed019-4315-11e5-ab69-0bc66cd30cca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:299","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base32.int) + (byte[].int)"},"status":-2},{"failures":[],"tindex":"ad1ed01a-4315-11e5-ab69-43caf04bb20e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((byte[][(int - int)]) == '1') {\n    byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int];\n} "},"variableMap":{"jj":"y","ii":"u","bits":"u","l_raw":"b","ascii":"b","org.apache.commons.codec.binary.BinaryCodec.BITS":"org.apache.commons.codec.digest.UnixCrypt.COV2CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:234","type":"CtForImpl","sourcecode":"for ( ; int < 13 ; int++) {\n    int int = 0;\n    int int = 0;\n    for ( ; int < 6 ; int++) {\n        int <<= 1;\n        if (((byte[][int]) & int) != 0) {\n            int |= 1;\n        } \n        int >>>= 1;\n        if (int == 0) {\n            int++;\n            int = 128;\n        } \n        java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"ad1ef72b-4315-11e5-ab69-c3bdbd6e6b76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 1"},"variableMap":{"ii":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:295","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":1},{"failures":[8,9,10,11,12],"tindex":"ad1ef72c-4315-11e5-ab69-b35f7daa9b44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"int = int + 2"},"variableMap":{"index":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:307","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, boolean, java.io.ByteArrayOutputStream)"},"status":-1},{"failures":[13],"tindex":"ad1ef72d-4315-11e5-ab69-67edd3a97528","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:174","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && (!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int)))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"ad1ef72e-4315-11e5-ab69-fdeed48a9073","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[14,15,16,17,3,18,19,5,20,21,22,23],"tindex":"ad1ef72f-4315-11e5-ab69-3fd878872742","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"variableMap":{"key":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:75","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.java.lang.String.length())))"},"status":-1},{"failures":[],"tindex":"ad1ef730-4315-11e5-ab69-232aa969aad2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[24,25,26],"tindex":"ad1f1e41-4315-11e5-ab69-bd247e026107","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:335","type":"CtReturnImpl","sourcecode":"return int"},"variableMap":{"el":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:366","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":-1},{"failures":[25,26],"tindex":"ad1f1e42-4315-11e5-ab69-cd1e7ef55bd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S')"},"status":-1},{"failures":[],"tindex":"ad1f1e43-4315-11e5-ab69-c5cde7240798","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[], ((org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[],"tindex":"ad1f1e44-4315-11e5-ab69-ff1c5d02e011","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:614","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"SIO\", \"SIA\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"SIAN\"))) {\n    if (boolean) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    }\n    int += 3;\n} else if (((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\") ? int + 2 : int + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"SC\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else {\n    if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"S\", \"Z\") ? int + 2 : int + 1;\n}"},"status":-2},{"failures":[7,27,28,29],"tindex":"ad1f1e45-4315-11e5-ab69-6ffed726f468","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"status":-1},{"failures":[],"tindex":"ad1f4556-4315-11e5-ab69-93abc122996e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(java.lang.String)"},"variableMap":{"base64String":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.nio.charset.Charset)"},"status":-2},{"failures":[28,29],"tindex":"ad1f4557-4315-11e5-ab69-cbc34fc2829c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r3\", \"R3\")"},"status":-1},{"failures":[30,31,32,33,34,35,36,37,38,39,40,41,42,13],"tindex":"ad1f4558-4315-11e5-ab69-55d16b87ea9e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:344","type":"CtIfImpl","sourcecode":"if ((int > 0) && (int < (java.lang.StringBuilder.length()))) {\n    boolean = (java.lang.StringBuilder.charAt((int - 1))) == char;\n} "},"status":-1},{"failures":[],"tindex":"ad1f4559-4315-11e5-ab69-bb59600532b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtConstructorCallImpl","sourcecode":"new org.apache.commons.codec.binary.Base64()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, org.apache.commons.codec.binary.Base64.byte[])"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}