{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":7,"org.apache.commons.codec.binary.Base64Test.testBase64":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":36,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":13,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":22,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":43,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":44,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":32,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":21,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":45,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":28,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":16,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":12,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":17,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":10,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":20,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":19,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":40,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":23,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":29,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":6,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":41,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":42,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":9,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":30,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":47,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":34,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":15,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":25,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":31,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":38,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":5,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":14,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":48},"transformations":[{"failures":[0,1,2,3],"tindex":"a9c5360f-431b-11e5-80c6-c12731eafbff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:137","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'K' ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:176","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[],"tindex":"a9c55d20-431b-11e5-80c6-fb7ece05841f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:125","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((java.lang.String)(java.lang.Object)).toCharArray());\n} "},"variableMap":{"this":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"a9c55d21-431b-11e5-80c6-7b7d502d4032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:509","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"a9c55d22-431b-11e5-80c6-af93f733788e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.binary.BaseNCodec.Context.int]"},"status":-2},{"failures":[],"tindex":"a9c55d23-431b-11e5-80c6-df31c07ef9c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"status":-2},{"failures":[],"tindex":"a9c55d24-431b-11e5-80c6-fb017096d2b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"chars","name2":"chars","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"chars","name1":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:240","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) == char) {\n        return true;\n    } \n}"},"status":-2},{"failures":[4,5,6],"tindex":"a9c55d25-431b-11e5-80c6-896ec1f4dc87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.encode(java.lang.String, org.apache.commons.codec.net.BCodec.getCharset())"},"status":-1},{"failures":[],"tindex":"a9c55d26-431b-11e5-80c6-9ddb407bf60f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"roundsCustom":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:441","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"a9c58437-431b-11e5-80c6-434b8a6def86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(byte[].int, long)))"},"status":-2},{"failures":[],"tindex":"a9c58438-431b-11e5-80c6-69a1fa04604d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(byte[]))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(byte[]))"},"status":-2},{"failures":[],"tindex":"a9c58439-431b-11e5-80c6-09e889dbaac7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"a9c5843a-431b-11e5-80c6-abc773ec34c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"found":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:878","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[7,8,9],"tindex":"a9c5843b-431b-11e5-80c6-9fafcfd0f005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][21], byte[][1], byte[][11], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][25], byte[][46], byte[][4], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[4,5,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"a9c5843c-431b-11e5-80c6-b977769e44b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:432","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(org.apache.commons.codec.binary.BaseNCodec.Context.int) - (org.apache.commons.codec.binary.BaseNCodec.Context.int)]"},"variableMap":{"pos":"decodeSize","context":"context","readPos":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:436","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[48,49],"tindex":"a9c5843d-431b-11e5-80c6-a7a5b86cc696","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"status":-1},{"failures":[],"tindex":"a9c5ab4e-431b-11e5-80c6-7dcdedb3dd3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 18) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:464","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 4))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"a9c5ab4f-431b-11e5-80c6-6f9eb80bd284","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"variableMap":{"ii":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"a9c5ab50-431b-11e5-80c6-7fe3245ccfec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '0'"},"variableMap":{"jj":"pos","l_ascii":"buffer","bits":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:454","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[1],"tindex":"a9c5ab51-431b-11e5-80c6-e5c978b90738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:830","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[50],"tindex":"a9c5ab52-431b-11e5-80c6-874772be16d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false, byte)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}