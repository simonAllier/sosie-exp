{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":50,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":14,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":49,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":29,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptNullData":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":12,"org.apache.commons.codec.language.NysiisTest.testDropBy":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":24,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":11,"org.apache.commons.codec.binary.Base64Test.testUUID":35,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":43,"org.apache.commons.codec.binary.Base64Test.testSingletons":48,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":19,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":31,"org.apache.commons.codec.binary.Base64Test.testPairs":34,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":3,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":17,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":4,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":21,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":37,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":33,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":38,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":25,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":41,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":53,"org.apache.commons.codec.language.NysiisTest.testBran":8,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":7,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":22,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":23,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":6,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":13,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":46,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":51,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":26,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":47,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":15,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":16,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":30,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":27,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":0,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":52,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":2,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":10,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":44,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":36},"transformations":[{"failures":[0],"tindex":"d35be0e0-42ac-11e5-90a9-23a468115255","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[1,2],"tindex":"d35c07f1-42ac-11e5-90a9-79b348e1b677","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:384","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:178","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + char) + \" at index \") + int))"},"status":-1},{"failures":[],"tindex":"d35c07f2-42ac-11e5-90a9-335af08839e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:313","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encode(((byte[])(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"d35c07f3-42ac-11e5-90a9-d51a446f1918","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"variableMap":{"a":"b","t":"b","n":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:290","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, !(java.util.BitSet.get(int)), java.io.ByteArrayOutputStream)"},"status":-1},{"failures":[8,9],"tindex":"d35c2f04-42ac-11e5-90a9-792c303fa58f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:158","type":"CtIfImpl","sourcecode":"if ((char == 'H') && ((!org.apache.commons.codec.language.Nysiis.(org.apache.commons.codec.language.Nysiis.isVowel(char))) || (!org.apache.commons.codec.language.Nysiis.(org.apache.commons.codec.language.Nysiis.isVowel(char))))) {\n    return new char[]{ char };\n} "},"variableMap":{"next":"curr","prev":"curr","this":"this","curr":"prev"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:163","type":"CtIfImpl","sourcecode":"if ((char == 'W') && org.apache.commons.codec.language.Nysiis.(org.apache.commons.codec.language.Nysiis.isVowel(char))) {\n    return new char[]{ char };\n} "},"status":-1},{"failures":[],"tindex":"d35c2f05-42ac-11e5-90a9-c13d3afaec74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:414","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"O\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"status":1},{"failures":[],"tindex":"d35c2f06-42ac-11e5-90a9-9dca9e22d7fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((int & 15), 16))"},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:282","type":"CtLocalVariableImpl","sourcecode":"final char char = int < (int - 2) ? char[][(int + 2)] : org.apache.commons.codec.language.Nysiis.char"},"status":-2},{"failures":[10,11,12,13,14],"tindex":"d35c2f07-42ac-11e5-90a9-415f856a80b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:399","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"status":-1},{"failures":[15],"tindex":"d35c2f08-42ac-11e5-90a9-69957d9b76cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"status":-1},{"failures":[16,17,18,19],"tindex":"d35c2f09-42ac-11e5-90a9-eb98e30999ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.BaseNCodec.encode(byte[]))"},"status":-1},{"failures":[20,21],"tindex":"d35c2f0a-42ac-11e5-90a9-85938d6793fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = (org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"status":-1},{"failures":[],"tindex":"d35c561b-42ac-11e5-90a9-b73f5caf57d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:289","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[22],"tindex":"d35c561c-42ac-11e5-90a9-3f8dd4ab8188","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:89","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3gh3\", \"3kh3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r$\", \"3\")"},"status":-1},{"failures":[],"tindex":"d35c561d-42ac-11e5-90a9-1506c4cf9751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:203","type":"CtInvocationImpl","sourcecode":"java.util.Random.nextInt(int)"},"status":0},{"failures":[],"tindex":"d35c561e-42ac-11e5-90a9-9dfd29837262","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (int > (-1)) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(int));\n} else {\n    java.lang.StringBuilder.append(char);\n}"},"status":-2},{"failures":[],"tindex":"d35c561f-42ac-11e5-90a9-058adeb70497","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.security.MessageDigest.digest()"},"status":-2},{"failures":[23,24,15,25,26,27,28,29,30],"tindex":"d35c5620-42ac-11e5-90a9-b50ba0c04ca5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:308","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"d35c5621-42ac-11e5-90a9-0bc6c5f495fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:749","type":"CtLocalVariableImpl","sourcecode":"int int = java.math.BigInteger.bitLength()"},"status":-2},{"failures":[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"d35c5622-42ac-11e5-90a9-7bab2fea3273","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"data":"base64Data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"status":-1},{"failures":[],"tindex":"d35c7d33-42ac-11e5-90a9-e3440bd0dae2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"variableMap":{"b":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int - 1) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String);\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}