{"failureDictionary":{"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":17,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":6,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":7,"org.apache.commons.codec.language.NysiisTest.testDropBy":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":33,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":20,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":32,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":31,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":29,"org.apache.commons.codec.language.NysiisTest.testRule7":37,"org.apache.commons.codec.language.NysiisTest.testRule6":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.language.NysiisTest.testRule5":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":21,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":23,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":12,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":40,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":24,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":4,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[0,1],"tindex":"215cc662-42b5-11e5-b12b-a72bdbbda06f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"right","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"left","minRating":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:311","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 4, 252645135, int[])"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"215cc663-42b5-11e5-b12b-e7671c637b43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:194","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.encodeUrl(org.apache.commons.codec.net.URLCodec.java.util.BitSet, byte[])"},"status":-1},{"failures":[],"tindex":"215ced74-42b5-11e5-b12b-1b43b50a072a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"215ced75-42b5-11e5-b12b-df0600653319","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[8,9,10,11,12,13],"tindex":"215ced76-42b5-11e5-b12b-ddd355a1bc15","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][25], byte[][46], byte[][4], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), byte[][31], byte[][30], 3, java.lang.StringBuilder)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"215ced77-42b5-11e5-b12b-4d90c6d27054","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cy\", \"sy\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[],"tindex":"215ced78-42b5-11e5-b12b-b3a49d9aab50","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:436","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"215ced79-42b5-11e5-b12b-bf7afcc44ac1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:293","type":"CtReturnImpl","sourcecode":"return this.java.util.Set<java.lang.String>"},"status":-2},{"failures":[27,28,29,30,31,32,33],"tindex":"215ced7a-42b5-11e5-b12b-2316e87dc324","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt((int & 63)))"},"variableMap":{"w":"pos","buffer":"sb","org.apache.commons.codec.digest.B64.B64T":"org.apache.commons.codec.language.MatchRatingApproachEncoder.PLAIN_ASCII"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(int))"},"status":-1},{"failures":[],"tindex":"215d148b-42b5-11e5-b12b-572417458533","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:249","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(java.lang.String))"},"status":-2},{"failures":[],"tindex":"215d148c-42b5-11e5-b12b-1b0fd56e18c9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:232","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null ? (org.apache.commons.codec.binary.BaseNCodec.Context.int) - (org.apache.commons.codec.binary.BaseNCodec.Context.int) : 0"},"variableMap":{"pos":"length","context":"context","buffer":"b","readPos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:129","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.NullPointerException();\n} else if ((int < 0) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((int > (byte[].int)) || ((int + int) > (byte[].int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (int == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (int == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(byte[]);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return int;\n}"},"status":-2},{"failures":[],"tindex":"215d148d-42b5-11e5-b12b-ff1797d88b0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w$\", \"3\")"},"status":1},{"failures":[],"tindex":"215d148e-42b5-11e5-b12b-85d4bef1bf73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:287","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"215d148f-42b5-11e5-b12b-efab2bc99b03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"215d1490-42b5-11e5-b12b-e13dad6b9a0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"variableMap":{"c":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:472","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4"},"status":-2},{"failures":[],"tindex":"215d3ba1-42b5-11e5-b12b-c7bfee96f5d2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.digest.Md5Crypt.int) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"pBytes","finalb":"pBytes","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"keyLen","saltBytes":"pBytes","org.apache.commons.codec.digest.Md5Crypt.ROUNDS":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:398","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-2},{"failures":[34,35,36,37,38],"tindex":"215d3ba2-42b5-11e5-b12b-af25422991ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"status":-1},{"failures":[],"tindex":"215d3ba3-42b5-11e5-b12b-cf27596ca176","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[39,40],"tindex":"215d3ba4-42b5-11e5-b12b-a1399042dae2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"startSrc","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"startSrc","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"startSrc","minRating":"startSrc","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"startSrc","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((java.math.BigInteger.bitLength()) % 8) == 0) {\n    int = 1;\n    int--;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}