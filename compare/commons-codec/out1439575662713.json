{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":40,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":48,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.binary.HexTest.testCustomCharset":58,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":11,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":50,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":39,"org.apache.commons.codec.language.NysiisTest.testDropBy":46,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":28,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":72,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":76,"org.apache.commons.codec.binary.Base64Test.testBase64":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":0,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":8,"org.apache.commons.codec.binary.Base64Test.testTriplets":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":49,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":69,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.binary.Base64Test.testUUID":21,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":16,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":31,"org.apache.commons.codec.binary.Base64Test.testSingletons":33,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":82,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":84,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":36,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":64,"org.apache.commons.codec.binary.Base64Test.testPairs":20,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":61,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":67,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":30,"org.apache.commons.codec.language.NysiisTest.testRule2":44,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":38,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":41,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":92,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":24,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":25,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":88,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":29,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":78,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":87,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":13,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":60,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":26,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":27,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":12,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":47,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":74,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":66,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":10,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":63,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":70,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":57,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":62,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":89,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":80,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":90,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":93,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":7,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":91,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":51,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":86,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":15,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":56,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":65,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":52,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":42,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":85,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":55,"org.apache.commons.codec.language.NysiisTest.testDad":43,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":18,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":59,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":71,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":79,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":23,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":35,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":54,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":14,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":94,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.language.NysiisTest.testSnad":45,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":75,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":3,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":22,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":81,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":53,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":68},"transformations":[{"failures":[0,1,2,3,4],"tindex":"5b8c009c-42af-11e5-b49a-eb8e29a8c033","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[3,4],"tindex":"5b8c27ad-42af-11e5-b49a-f30b82a2ba27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"5b8c27ae-42af-11e5-b49a-a94352e54c84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:62","type":"CtIfImpl","sourcecode":"if (char == char) {\n    continue;\n} "},"variableMap":{"c1":"code","c2":"lastCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:366","type":"CtIfImpl","sourcecode":"if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"5b8c27af-42af-11e5-b49a-c9a0e76b2dc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"text1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)"},"status":0},{"failures":[3,4],"tindex":"5b8c27b0-42af-11e5-b49a-25aaaa1b262c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:652","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"5b8c27b1-42af-11e5-b49a-399e28c5fc35","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:128","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"argument not a byte array\")"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"5b8c27b2-42af-11e5-b49a-e7356eb28f33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = int ^ (int >>> 16)"},"variableMap":{"r":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:381","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"status":-1},{"failures":[3,4],"tindex":"5b8c4ec3-42af-11e5-b49a-3550819c9fdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\")"},"status":-1},{"failures":[43,44,45,46],"tindex":"5b8c4ec4-42af-11e5-b49a-f5193cafdebe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:113","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y3\", \"Y3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:270","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"D\")"},"status":-1},{"failures":[],"tindex":"5b8c4ec5-42af-11e5-b49a-b58b15960bd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"status":1},{"failures":[47,48],"tindex":"5b8c4ec6-42af-11e5-b49a-5dddefbd8682","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[]), java.io.InputStream).doFinal()"},"status":-1},{"failures":[3,4],"tindex":"5b8c4ec7-42af-11e5-b49a-1f2384d9931a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[49,50,51,52,53,54,55,56],"tindex":"5b8c4ec8-42af-11e5-b49a-c5535d7dd1a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"5b8c4ec9-42af-11e5-b49a-df94cc721b1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"char = '7'"},"variableMap":{"code":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:549","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-2},{"failures":[3],"tindex":"5b8c75da-42af-11e5-b49a-157823c99ebc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:802","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65,66,67,68,69,70,47,71,72,48,73,74,75,76,77],"tindex":"5b8c75db-42af-11e5-b49a-5baaaa7f25f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:144","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; int < int ; int++) {\n    char[][int++] = char[][((240 & (byte[][int])) >>> 4)];\n    char[][int++] = char[][(15 & (byte[][int]))];\n}"},"status":-1},{"failures":[],"tindex":"5b8c75dc-42af-11e5-b49a-a71affe49374","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"ibitWorkArea","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"5b8c75dd-42af-11e5-b49a-e9b6b6013088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"result":"inExtendedComment","target":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END","element":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:184","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    boolean = false;\n} "},"status":-2},{"failures":[2,3,4],"tindex":"5b8c75de-42af-11e5-b49a-7dc6e06f763a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:682","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":-1},{"failures":[5,6,78,79,8,80,81,9,10,82,83,84,85,86,15,16,87,88,20,21,22,24,25,26,27,29,30,89,90,91,33,35,37,92,93,42,94],"tindex":"5b8c75df-42af-11e5-b49a-d13ad87561cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:295","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int]"},"variableMap":{"keyLen":"decodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:462","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}