{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":17,"org.apache.commons.codec.binary.HexTest.testCustomCharset":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":38,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":52,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":16,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":56,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":53,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":55,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":68,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":63,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":75,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":48,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":61,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":64,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":81,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":43,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":24,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":11,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":34,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":35,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":50,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":73,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":49,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":10,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":84,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":3,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":14,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":36,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":60,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":80,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":39,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":13,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":7,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":2,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":6,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":18,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":65,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":31,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":62,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":42,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":77,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":85,"org.apache.commons.codec.CharsetsTest.testToCharset":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":74,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":82,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":54,"org.apache.commons.codec.digest.B64Test.testB64from24bit":86,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":78,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":69,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":72,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":5,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":46,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":9,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":15,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":37,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":41,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":83,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":51,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":79,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":47,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":70,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":28,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":67},"transformations":[{"failures":[0,1,2,3,4],"tindex":"000d91a5-42ae-11e5-ac73-111981b2e60c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"char = '3'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"char = '7'"},"status":-1},{"failures":[5,6],"tindex":"000db8b6-42ae-11e5-ac73-4b3191e84d18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"variableMap":{"wdsz":"b","n":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:238","type":"CtReturnImpl","sourcecode":"return (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) || (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte))"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"000ddfc7-42ae-11e5-ac73-299f2915f969","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:138","type":"CtAssignmentImpl","sourcecode":"char[][0] = 'S'"},"variableMap":{"inwd":"toDigits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char[][((240 & (byte[][int])) >>> 4)]"},"status":-1},{"failures":[30,31,32,33],"tindex":"000ddfc8-42ae-11e5-ac73-fb0240f9c552","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset), java.lang.String)"},"status":-1},{"failures":[34,35,5,6,36],"tindex":"000ddfc9-42ae-11e5-ac73-35db2d38d79b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:222","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int, java.io.ByteArrayOutputStream);\n} else {\n    java.io.ByteArrayOutputStream.write(int);\n    return 1;\n}"},"status":-1},{"failures":[37,38,39,34,40,35,41,42,43,44,45,46],"tindex":"000ef13a-42ae-11e5-ac73-a16a276b9ddc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:362","type":"CtIfImpl","sourcecode":"if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    continue;\n} "},"status":-1},{"failures":[],"tindex":"000f184b-42ae-11e5-ac73-bdd7585a2757","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:256","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":0},{"failures":[47,48],"tindex":"000f184c-42ae-11e5-ac73-8d9d6c39d3d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:553","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"status":-1},{"failures":[],"tindex":"000f184d-42ae-11e5-ac73-190e6b0edbab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"variableMap":{"salt":"value","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:453","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-2},{"failures":[],"tindex":"000f3f5e-42ae-11e5-ac73-d3fe7118e0ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:321","type":"CtLocalVariableImpl","sourcecode":"final int int = byte"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"000f3f5f-42ae-11e5-ac73-a5816105eeb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 16) | (int & -65536)"},"variableMap":{"s":"j","t":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64],"tindex":"000f3f60-42ae-11e5-ac73-31d5b62cd8ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:179","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (java.util.Scanner.hasNextLine()) {\n        final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim();\n        if (boolean) {\n            if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                boolean = false;\n            } \n        } else {\n            if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                boolean = true;\n            } else if ((java.lang.String.length()) > 0) {\n                java.util.Set<java.lang.String>.add(java.lang.String);\n            } \n        }\n    }\n} finally {\n    java.util.Scanner.close();\n}"},"status":-1},{"failures":[],"tindex":"000f3f61-42ae-11e5-ac73-0b61fbc57f62","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.String.length()) - 2"},"variableMap":{"text":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:299","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.String.length()) - 1"},"status":-2},{"failures":[47,48,65],"tindex":"000f6672-42ae-11e5-ac73-f7e288221dd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:787","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[66],"tindex":"000f6673-42ae-11e5-ac73-bdd237d35725","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return java.nio.charset.Charset == null ? java.nio.charset.Charset.defaultCharset() : java.nio.charset.Charset"},"status":-1},{"failures":[47,48],"tindex":"000f6674-42ae-11e5-ac73-b38bb20b3e14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:641","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[47,48,65],"tindex":"000f6675-42ae-11e5-ac73-0fc44a74cfd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:532","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F')"},"status":-1},{"failures":[67,68],"tindex":"000f6676-42ae-11e5-ac73-359b3e7ada0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = int ^ (int >>> 16)"},"variableMap":{"r":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int >>> int) ^ int) & int"},"status":-1},{"failures":[30,69,31,32,33,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"000f8d87-42ae-11e5-ac73-0390c9944422","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:992","type":"CtInvocationImpl","sourcecode":"this.java.lang.StringBuilder.append(java.lang.String.substring(0, int))"},"variableMap":{"alternate":"buffer","addChars":"w","value":"org.apache.commons.codec.digest.B64.B64T"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt((int & 63)))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}