{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":4,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":30,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":17,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":18,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":8,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":15,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":22,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":21,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":2,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":7,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":10,"org.apache.commons.codec.language.SoundexTest.testB650":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":34,"org.apache.commons.codec.language.SoundexTest.testNewInstance":24,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":29,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":33,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":36,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":11,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":12,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":25,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":14,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":5,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":26,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":13,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":27,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":32,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":6},"transformations":[{"failures":[],"tindex":"2700ee56-4446-11e5-810b-9f65fe04c3af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:380","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[0,1,2,3,4],"tindex":"2700ee57-4446-11e5-810b-abeff79e04a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:368","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n    }\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:304","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[],"tindex":"27011568-4446-11e5-810b-d588f5d365cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"27011569-4446-11e5-810b-2b01f8c9d42a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 24) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:467","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[5],"tindex":"2701156a-4446-11e5-810b-377d51919e0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"wh3\", \"Wh3\")"},"status":-1},{"failures":[],"tindex":"2701156b-4446-11e5-810b-d5ab00b00164","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:134","type":"CtIfImpl","sourcecode":"if (char == 'M') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_SSS","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((char == 'S') && (char == 'C')) && (char == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-2},{"failures":[],"tindex":"2701156c-4446-11e5-810b-69b2a7ca4d43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"inPos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"inPos","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","minRating":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"inAvail","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"ibitWorkArea","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"decodeSize","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:435","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    final byte byte = byte[][int++];\n    if (byte == (byte)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true;\n        break;\n    } else {\n        if ((byte >= 0) && (byte < (org.apache.commons.codec.binary.Base64.byte[].int))) {\n            final int int = org.apache.commons.codec.binary.Base64.byte[][byte];\n            if (int >= 0) {\n                org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int);\n                org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int;\n                if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n                    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n                    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n                    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n                } \n            } \n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"27013c7d-4446-11e5-810b-6999decbc833","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine()"},"status":0},{"failures":[6,7],"tindex":"27013c7e-4446-11e5-810b-531d6865b582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"variableMap":{"b":"b","offset":"iValue","iValue":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 24) & 255))"},"status":-1},{"failures":[6,7],"tindex":"27013c7f-4446-11e5-810b-35c5b64dddd2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:287","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, int, int, int, int[])"},"status":-1},{"failures":[8,9,10],"tindex":"27013c80-4446-11e5-810b-fdcb86006538","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:471","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][44], byte[][2], byte[][23], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][33], byte[][54], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[11,12,13,14,15],"tindex":"27013c81-4446-11e5-810b-915ef8cd3fa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"variableMap":{"b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:139","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"27013c82-4446-11e5-810b-2174fea2a99d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('^')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29],"tindex":"27016393-4446-11e5-810b-312f356425fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"char = '-'"},"variableMap":{"nextChar":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[30],"tindex":"27016394-4446-11e5-810b-bdf9e38fb9be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:575","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[0,1],"tindex":"27016395-4446-11e5-810b-8ba5b574aa8d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"27016396-4446-11e5-810b-ab608db240b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:155","type":"CtWhileImpl","sourcecode":"while (int == 0) {\n    if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n        final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n        final int int = java.io.InputStream.read(byte[]);\n        if (boolean) {\n            org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n        } else {\n            org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n        }\n    } \n    int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[31,8,9,10,32,33,34,35],"tindex":"27016397-4446-11e5-810b-3173b87c0e9c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"variableMap":{"ctx":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[36],"tindex":"27016398-4446-11e5-810b-fb70733bbdea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"i","singleByte":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:161","type":"CtAssignmentImpl","sourcecode":"byte[][int] = org.apache.commons.codec.net.QCodec.byte"},"status":-1},{"failures":[37,38],"tindex":"27016399-4446-11e5-810b-0d56e4ed417d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[])"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}