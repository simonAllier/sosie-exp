{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":14,"org.apache.commons.codec.binary.HexTest.testCustomCharset":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":49,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":9,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":40,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":20,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":17,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":48,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":11,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":32,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":25,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":46,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":29,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":21,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":45,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":27,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":34,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":5,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":28,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":24,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":33,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":42,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":47,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":13,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":2,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":50,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":55,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":7,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":51,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":54,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":35,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":41,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":12,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":8,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":39,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":10,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":56,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":52,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":16,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":30},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"f79e2787-42e1-11e5-af26-419ea6957000","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:273","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())"},"variableMap":{"str":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((java.lang.String + java.lang.String) + \"$\"))"},"status":-1},{"failures":[9],"tindex":"f79e2788-42e1-11e5-af26-5961b59a0fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"key","txt":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(java.lang.String, java.lang.String))"},"status":-1},{"failures":[10,11,12,13,14],"tindex":"f79e4e99-42e1-11e5-af26-2fc1ca8f4920","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 1"},"variableMap":{"ii":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:639","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"S\", \"Z\") ? int + 2 : int + 1"},"status":-1},{"failures":[15],"tindex":"f79e4e9a-42e1-11e5-af26-072078a92a67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:295","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException)"},"status":-1},{"failures":[],"tindex":"f79e4e9b-42e1-11e5-af26-e3be096e1d03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:562","type":"CtReturnImpl","sourcecode":"return int"},"status":1},{"failures":[],"tindex":"f79e4e9c-42e1-11e5-af26-95983ced2ff4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('{')"},"status":-2},{"failures":[16,17],"tindex":"f79e4e9d-42e1-11e5-af26-eba02555194a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maxCodeLen":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:316","type":"CtAssignmentImpl","sourcecode":"int[][1] = int"},"status":-1},{"failures":[],"tindex":"f79e4e9e-42e1-11e5-af26-4d24d0cd6c82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:283","type":"CtIfImpl","sourcecode":"if ((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 6, \"CAESAR\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CH\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleCH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CZ\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 4, \"WICZ\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-2},{"failures":[18],"tindex":"f79e75af-42e1-11e5-af26-210ac37a2f7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"f79e75b0-42e1-11e5-af26-17fd646e1db8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"f79e75b1-42e1-11e5-af26-b31d88aabf88","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"variableMap":{"wdsz":"b","n":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:238","type":"CtReturnImpl","sourcecode":"return (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) || (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte))"},"status":-2},{"failures":[10,11,19,13,14],"tindex":"f79e75b2-42e1-11e5-af26-ff935037fc5d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[],"tindex":"f79e75b3-42e1-11e5-af26-5da46a27d66e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:159","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[16,17],"tindex":"f79e75b4-42e1-11e5-af26-a52c9748a357","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"blocksize":"t","cnt":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 16) | (int & -65536)"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,9,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"f79e9cc5-42e1-11e5-af26-a357d1152120","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[int]"},"variableMap":{"length":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:142","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[int << 1]"},"status":-1},{"failures":[48,49,50,51,52,53,54,55],"tindex":"f79e9cc6-42e1-11e5-af26-916768d704d8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:371","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"f79e9cc7-42e1-11e5-af26-dffa747f4580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"b":"eof","encodeBlanks":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[56],"tindex":"f79e9cc8-42e1-11e5-af26-673907cca693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[],"tindex":"f79e9cc9-42e1-11e5-af26-cdebc943ee93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"pos","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:394","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}