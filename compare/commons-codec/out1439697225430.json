{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":48,"org.apache.commons.codec.binary.HexTest.testCustomCharset":22,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":47,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":7,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":10,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":9,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":0,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":3,"org.apache.commons.codec.binary.Base64Test.testUUID":20,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":39,"org.apache.commons.codec.binary.Base64Test.testSingletons":45,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":28,"org.apache.commons.codec.binary.Base64Test.testPairs":31,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":5,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":12,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":30,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":34,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":27,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":4,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":16,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":19,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":23,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":35,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":15,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":36,"org.apache.commons.codec.binary.Base64Test.testCodec68":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":13,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":24,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":41,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":18,"org.apache.commons.codec.language.SoundexTest.testEncodeNull":51,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":42,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":25,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":1,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":43,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":17,"org.apache.commons.codec.binary.Base64Test.testEmptyBase64":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":8,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":29,"org.apache.commons.codec.language.SoundexTest.testDifference":50,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":14,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":6,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":40,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":32},"transformations":[{"failures":[],"tindex":"6493069f-43ca-11e5-838a-a102f23b43b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"variableMap":{"wdsz":"n","this":"this","n":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:193","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isNextChar(java.lang.StringBuilder, int, 'H')) {\n    if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n        java.lang.StringBuilder.append('K');\n    } else {\n        java.lang.StringBuilder.append('X');\n    }\n} else {\n    java.lang.StringBuilder.append('K');\n}"},"status":0},{"failures":[],"tindex":"64932db0-43ca-11e5-838a-13e10c3d7fbb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:744","type":"CtReturnImpl","sourcecode":"return javax.crypto.Mac"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"64932db1-43ca-11e5-838a-27867880d62a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:276","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} "},"variableMap":{"input":"input","suffix":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:706","type":"CtIfImpl","sourcecode":"if (int > (java.lang.CharSequence.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"64932db2-43ca-11e5-838a-d14ac1dedc98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encode(byte[])"},"variableMap":{"b64":"this","binaryData":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false)"},"status":-2},{"failures":[14,15,16,17,18],"tindex":"64932db3-43ca-11e5-838a-71db5f9a363c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.URLCodec.encode(java.lang.String.getBytes(java.lang.String)))"},"variableMap":{"str":"str","charset":"str","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:293","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset())"},"status":-1},{"failures":[],"tindex":"64932db4-43ca-11e5-838a-5176c02d5db4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:236","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"64932db5-43ca-11e5-838a-335bdedd63df","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:377","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.Phoneme(java.lang.String , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet)"},"variableMap":{"ph":"ph","org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE":"org.apache.commons.codec.language.bm.Languages.ANY_LANGUAGE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:367","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    if (!(java.lang.String.endsWith(\"]\"))) {\n        throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\");\n    } \n    final java.lang.String java.lang.String = java.lang.String.substring(0, int);\n    final java.lang.String java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n    final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(java.lang.String.split(\"[+]\")));\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(java.lang.String , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(java.util.Set<java.lang.String>));\n} else {\n    return new org.apache.commons.codec.language.bm.Rule.Phoneme(java.lang.String , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet);\n}"},"status":-2},{"failures":[19,20,21,22,23,24],"tindex":"649354c6-43ca-11e5-838a-f78c3332e860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"649354c7-43ca-11e5-838a-275f1c4a9b63","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"status":1},{"failures":[],"tindex":"649354c8-43ca-11e5-838a-7184f905169a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":1},{"failures":[],"tindex":"649354c9-43ca-11e5-838a-35b529ecc979","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"char = '1'"},"variableMap":{"code":"chr"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()"},"status":-2},{"failures":[],"tindex":"649354ca-43ca-11e5-838a-57b82d826a41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:280","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:161","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[]))"},"status":-2},{"failures":[],"tindex":"649354cb-43ca-11e5-838a-47e1d4799457","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & int) != 0) {\n    int |= 1;\n} "},"variableMap":{"b":"bytes","c":"b","u":"b","y":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:359","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n    try {\n        if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n            continue;\n        } \n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n    }\n} else if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    java.io.ByteArrayOutputStream.write(int);\n} "},"status":-2},{"failures":[25,26,27,28,29,30,31,20,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"64937bdc-43ca-11e5-838a-e7124c4b924b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"base64Data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"status":-1},{"failures":[],"tindex":"64937bdd-43ca-11e5-838a-2338e1cab17b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:188","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String)"},"status":-2},{"failures":[49],"tindex":"64937bde-43ca-11e5-838a-85bc5f41285e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"variableMap":{"todo":"len","len":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"long += (((long + (int)) - 1) / (int)) * (int)"},"status":-1},{"failures":[],"tindex":"64937bdf-43ca-11e5-838a-11f3c94bef2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:83","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Comparable<?> java.lang.Comparable<?> = ((java.lang.Comparable<?>)(this.org.apache.commons.codec.StringEncoder.encode(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"64937be0-43ca-11e5-838a-dded63d04e03","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:155","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[50,51],"tindex":"64937be1-43ca-11e5-838a-c9304d7215e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:259","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"6493a2f2-43ca-11e5-838a-ed53ecaba04d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:248","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.encode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset())"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}