{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":35,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":46,"org.apache.commons.codec.language.NysiisTest.testSnat":18,"org.apache.commons.codec.language.NysiisTest.testDropBy":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":39,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":6,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":33,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":25,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":27,"org.apache.commons.codec.language.NysiisTest.testRule2":12,"org.apache.commons.codec.language.NysiisTest.testRule1":11,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":2,"org.apache.commons.codec.language.NysiisTest.testRule7":15,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":4,"org.apache.commons.codec.language.NysiisTest.testRule6":14,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":3,"org.apache.commons.codec.language.NysiisTest.testRule5":13,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":44,"org.apache.commons.codec.language.NysiisTest.testCap":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":41,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":19,"org.apache.commons.codec.language.NysiisTest.testBran":16,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":45,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":0,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":29,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":26,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":34,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":30,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":42,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":40,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":31,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":47,"org.apache.commons.codec.language.NysiisTest.testDad":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":32,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":43,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":37,"org.apache.commons.codec.language.NysiisTest.testDan":9,"org.apache.commons.codec.language.NysiisTest.testFal":10,"org.apache.commons.codec.language.NysiisTest.testSnad":17,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":28,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":24,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":48,"org.apache.commons.codec.language.MetaphoneTest.testTCH":38},"transformations":[{"failures":[0,1],"tindex":"ec747c11-4311-11e5-b1f3-b7a2afe88fd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[]).doFinal(byte[])"},"variableMap":{"valueToDigest":"key","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:313","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[]).doFinal(byte[]);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(java.lang.IllegalStateException);\n}"},"status":-1},{"failures":[2,3,4],"tindex":"ec74a322-4311-11e5-b1f3-83753f7b3c86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:905","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (java.lang.String.length()))) {\n    return java.lang.Character.char;\n} "},"variableMap":{"index":"index","java.lang.Character.MIN_VALUE":"mappedChar","value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:189","type":"CtIfImpl","sourcecode":"if (('H' == char) || ('W' == char)) {\n    final char char = java.lang.String.charAt((int - 2));\n    final char char = org.apache.commons.codec.language.Soundex.map(char);\n    if (((char == char) || ('H' == char)) || ('W' == char)) {\n        return 0;\n    } \n} "},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"ec74a323-4311-11e5-b1f3-cf906732b6a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:460","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"-\")"},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:288","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[][int])"},"status":-1},{"failures":[],"tindex":"ec74a324-4311-11e5-b1f3-794a8aba79a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"pattern","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"pattern","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-2},{"failures":[24,25],"tindex":"ec74a325-4311-11e5-b1f3-e11e8e0e9c31","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\")"},"status":-1},{"failures":[],"tindex":"ec74a326-4311-11e5-b1f3-9311d5bb2ec2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:680","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TIA\", \"TCH\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"TH\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TTH\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"OM\", \"AM\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"T\", \"D\") ? int + 2 : int + 1;\n}"},"status":-2},{"failures":[],"tindex":"ec74ca37-4311-11e5-b1f3-3d77408e239b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:434","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[26,27,28,29,30,31,32],"tindex":"ec74ca38-4311-11e5-b1f3-87300afd2fd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"ii","minRating":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    java.security.MessageDigest.update(byte[], 0, (int > 16 ? 16 : int));\n    int -= 16;\n}"},"status":-1},{"failures":[33,34,35,24,25],"tindex":"ec74ca39-4311-11e5-b1f3-ed7d3be67099","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.String)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[25],"tindex":"ec74ca3a-4311-11e5-b1f3-11126f080cbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:830","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"ec74ca3b-4311-11e5-b1f3-8d10c217a1b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"ibitWorkArea","pos":"ibitWorkArea","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 18) & (org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"ec74f14c-4311-11e5-b1f3-a75164a92767","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int & 255))"},"variableMap":{"f":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","i":"pos","out":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"ec74f14d-4311-11e5-b1f3-cb38b90e9cb9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"variableMap":{"code":"code","this":"this","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:293","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIA\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIO\"))) {\n    java.lang.StringBuilder.append('X');\n    break;\n} "},"status":-1},{"failures":[24,25],"tindex":"ec74f14e-4311-11e5-b1f3-6f7e51d0a6b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:611","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[],"tindex":"ec74f14f-4311-11e5-b1f3-9bde0cd2fd50","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[48],"tindex":"ec74f150-4311-11e5-b1f3-4519fb61a952","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"status":-1},{"failures":[],"tindex":"ec74f151-4311-11e5-b1f3-ed6c5d85ca96","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"value","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n}"},"status":-2},{"failures":[],"tindex":"ec751862-4311-11e5-b1f3-2bcd60dfaef0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(java.lang.String);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException);\n}"},"status":-2},{"failures":[],"tindex":"ec751863-4311-11e5-b1f3-4742939273d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"variableMap":{"left":"minRating","right":"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}