{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":37,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":109,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":30,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":119,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":117,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":118,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":8,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":120,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":95,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":91,"org.apache.commons.codec.binary.Base64Test.testTriplets":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":2,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":101,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":132,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":138,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":47,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":88,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":67,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":28,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":80,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":12,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":85,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":130,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":0,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":131,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":61,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":56,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":62,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":36,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":66,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":129,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":127,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":63,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":64,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":128,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":45,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":96,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":136,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":70,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":92,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":75,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":55,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":121,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":13,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":103,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":14,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":112,"org.apache.commons.codec.language.SoundexTest.testB650":116,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":86,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":10,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":23,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":139,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":54,"org.apache.commons.codec.language.SoundexTest.testNewInstance":124,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":35,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":51,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":87,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":16,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":38,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":82,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":4,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":69,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":114,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":115,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":81,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":65,"org.apache.commons.codec.binary.Base64Test.testBase64":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":134,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":100,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":25,"org.apache.commons.codec.binary.Base64Test.testUUID":58,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":111,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":68,"org.apache.commons.codec.binary.Base64Test.testSingletons":74,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":104,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE":18,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":34,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":49,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":78,"org.apache.commons.codec.binary.Base64Test.testPairs":57,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":48,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":33,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":83,"org.apache.commons.codec.binary.Base64Test.testCodec112":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":15,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":107,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":125,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":53,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":46,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":98,"org.apache.commons.codec.binary.Base64Test.testCodec68":76,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":20,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":122,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":99,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":135,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":89,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":21,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":72,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":84,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":105,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":73,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":108,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":31,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":39,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":102,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":126,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":113,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":27,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":50,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":90,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":60,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":77,"org.apache.commons.codec.language.SoundexTest.testDifference":123,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":9,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":106,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":94,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":17,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":93,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":133,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":137},"transformations":[{"failures":[],"tindex":"2fca8db3-43c5-11e5-87ed-57e1dcbdec3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((char[][int]) == (char[][0])) {\n    char[][int] = char[][1];\n    break;\n} "},"variableMap":{"chrs":"chrs","index":"length","element":"chrs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:433","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if ((char[][int]) > 'Z') {\n        for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n            if ((char[][int]) == (char[][0])) {\n                char[][int] = char[][1];\n                break;\n            } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"2fca8db4-43c5-11e5-87ed-3da0c6119169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:426","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"status":0},{"failures":[],"tindex":"2fcab4c5-43c5-11e5-87ed-09171d7f7a63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final byte byte = byte[][0];\n    return byte < 0 ? 256 + byte : byte;\n} "},"variableMap":{"r":"pos","singleByte":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null) {\n    final int int = java.lang.Math.min(org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context), int);\n    java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[], int, int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n    } \n    return int;\n} "},"status":-2},{"failures":[],"tindex":"2fcab4c6-43c5-11e5-87ed-bdc2b65d8cb7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"2fcab4c7-43c5-11e5-87ed-496548346f3f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[0],"tindex":"2fcab4c8-43c5-11e5-87ed-f16638bf5950","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:77","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"v\", \"f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"2fcab4c9-43c5-11e5-87ed-8d878eb56a0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"name","lastThree":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[20,21,22,23,24,25,26],"tindex":"2fcab4ca-43c5-11e5-87ed-3f109477790e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:218","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108],"tindex":"2fcadbdb-43c5-11e5-87ed-558bef760746","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"2fcadbdc-43c5-11e5-87ed-d974c3948b69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(byte[].int, long)))"},"status":-2},{"failures":[109,110,111],"tindex":"2fcadbdd-43c5-11e5-87ed-4b6e0f3afb44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"status":-1},{"failures":[],"tindex":"2fcadbde-43c5-11e5-87ed-2704d6ef1278","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"j\", \"y\")"},"status":1},{"failures":[112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"2fcadbdf-43c5-11e5-87ed-05ba6511e2af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:138","type":"CtAssignmentImpl","sourcecode":"char[][0] = 'S'"},"variableMap":{"inwd":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:269","type":"CtAssignmentImpl","sourcecode":"char[][0] = java.lang.String.charAt(0)"},"status":-1},{"failures":[132,133,134,135,136],"tindex":"2fcadbe0-43c5-11e5-87ed-9d748c04b56c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"2fcb02f1-43c5-11e5-87ed-67ab82a41783","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(java.lang.String);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException);\n}"},"status":-2},{"failures":[137,138],"tindex":"2fcb02f2-43c5-11e5-87ed-2145e4d95a48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"c","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"2fcb02f3-43c5-11e5-87ed-414f2e1e6ade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"offset":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[],"tindex":"2fcb02f4-43c5-11e5-87ed-23c9c5975c6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(java.lang.String, org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[123,139],"tindex":"2fcb02f5-43c5-11e5-87ed-5959871ba416","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"int &= int"},"variableMap":{"v":"diff","e1":"diff"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:118","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"2fcb02f6-43c5-11e5-87ed-e7bf12cbcc16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"2fca8db4-43c5-11e5-87ed-3da0c6119169","diffs":[{"branches":{"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":["org.apache.commons.codec.binary.BaseNCodec_int_readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).e1","org.apache.commons.codec.binary.BaseNCodec_byte[]_encode(byte[]).t1"],"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":["org.apache.commons.codec.binary.BaseNCodec_int_readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).e1","org.apache.commons.codec.binary.BaseNCodec_byte[]_encode(byte[]).t1"],"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":["org.apache.commons.codec.binary.Base64_void_decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).t2","org.apache.commons.codec.binary.Base64_void_encode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).t3","org.apache.commons.codec.binary.Base64_void_decode(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).e7"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodec_int_readResults(byte[],int,int,org.apache.commons.codec.binary.BaseNCodec$Context).e1","org.apache.commons.codec.binary.BaseNCodec_byte[]_encode(byte[]).t1"],"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":["org.apache.commons.codec.binary.BaseNCodec_byte[]_encode(byte[]).t1"]},"type":"branch"}]}]}