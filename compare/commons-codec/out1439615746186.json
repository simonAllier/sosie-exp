{"failureDictionary":{"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":9,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":25,"org.apache.commons.codec.language.NysiisTest.testSnat":20,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":44,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":49,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":46,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":55,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":38,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":39,"org.apache.commons.codec.language.NysiisTest.testCap":14,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":33,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":52,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":37,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":35,"org.apache.commons.codec.language.NysiisTest.testBran":18,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":36,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":51,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":1,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":11,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":30,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":10,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":56,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":12,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":13,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":41,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":47,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":54,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":34,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":5,"org.apache.commons.codec.language.NysiisTest.testDad":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":42,"org.apache.commons.codec.language.SoundexTest.testNewInstance":32,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":53,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.language.SoundexTest.testDifference":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":48,"org.apache.commons.codec.language.NysiisTest.testEncodeNull":7,"org.apache.commons.codec.language.NysiisTest.testDan":16,"org.apache.commons.codec.language.NysiisTest.testFal":17,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":50,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":40,"org.apache.commons.codec.language.NysiisTest.testSnad":19,"org.apache.commons.codec.language.MetaphoneTest.testTCH":8},"transformations":[{"failures":[0,1,2],"tindex":"af290e7c-430c-11e5-b2f9-9bc842ceb8e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '0'"},"variableMap":{"jj":"index","l_ascii":"chrs","bits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"char[][int] = char[][1]"},"status":-1},{"failures":[3,4,5],"tindex":"af29358d-430c-11e5-b2f9-277b8fa709fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][33], byte[][54], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[6],"tindex":"af29358e-430c-11e5-b2f9-dd2675d78db9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:214","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:834","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"af29358f-430c-11e5-b2f9-7df11a519c23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w\", \"2\")"},"status":1},{"failures":[],"tindex":"af295ca0-430c-11e5-b2f9-8fccb686d26a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"af295ca1-430c-11e5-b2f9-f37074924af2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:475","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[], byte[]))"},"status":-2},{"failures":[],"tindex":"af295ca2-430c-11e5-b2f9-d3e6601c8db2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"variableMap":{"u":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[7],"tindex":"af295ca3-430c-11e5-b2f9-c3df448d7713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:248","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"af295ca4-430c-11e5-b2f9-698d042c5206","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encode(byte[])"},"variableMap":{"b64":"this","binaryData":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false)"},"status":-2},{"failures":[8,9],"tindex":"af295ca5-430c-11e5-b2f9-0fc1957628f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:313","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 1)))) {\n    java.lang.StringBuilder.append(char);\n} "},"status":-1},{"failures":[],"tindex":"af295ca6-430c-11e5-b2f9-57bb06edc152","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"int = (int << 4) | (int >>> 28)"},"variableMap":{"s":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:477","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"af2983b7-430c-11e5-b2f9-d58cda40bb27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:552","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.size()]"},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"af2983b8-430c-11e5-b2f9-df2222bfc2df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"af2983b9-430c-11e5-b2f9-35e51ff0f379","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49],"tindex":"af2983ba-430c-11e5-b2f9-bd14fa86ab9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:554","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch : java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>) {\n    org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.finish();\n    java.lang.String[][int++] = org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.toString();\n}"},"status":-1},{"failures":[50,51,52,53,54,55,56],"tindex":"af2983bb-430c-11e5-b2f9-4b2480cf5dc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-1},{"failures":[],"tindex":"af29aacc-430c-11e5-b2f9-558a28ead8cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[],"tindex":"af29d1dd-430c-11e5-b2f9-89b6cfa2d867","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:208","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:47","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[3,4,5],"tindex":"af29d1de-430c-11e5-b2f9-7b17f99c6b31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][37], byte[][58], byte[][16], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][31], byte[][52], byte[][10], 4, java.lang.StringBuilder)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}