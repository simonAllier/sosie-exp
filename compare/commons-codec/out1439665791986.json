{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":45,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":107,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":135,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":146,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":90,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":93,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":143,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":142,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":0,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":16,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":138,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":85,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":66,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":60,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":42,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":53,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":110,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":11,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":127,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":51,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":56,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":136,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":59,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":97,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":37,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":25,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":44,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":82,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":81,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":126,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":7,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":14,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":118,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":54,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":68,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":94,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":95,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":62,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":86,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":117,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":108,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":130,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":141,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":84,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":115,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":76,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":52,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":20,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":39,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":137,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":47,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":112,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":140,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":91,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":73,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":96,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":43,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":40,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":133,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":69,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":92,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":80,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":2,"org.apache.commons.codec.language.MetaphoneTest.testTCH":123,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":55,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":38,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":3,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":49,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":119,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":34,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":129,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":128,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":144,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":114,"org.apache.commons.codec.binary.Base64Test.testBase64":33,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":89,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":41,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":12,"org.apache.commons.codec.binary.Base64Test.testUUID":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":106,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":77,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":87,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":32,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":5,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":98,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":35,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":63,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":99,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":88,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":134,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":61,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":67,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":104,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":131,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":29,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":120,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":145,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":74,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":70,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":71,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":121,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":72,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":113,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":57,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":36,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":102,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":46,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":132,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":124,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":101,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":125,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":139,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":50,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":75,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":64,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":6,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":22,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":58,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":83,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":31,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":48,"org.apache.commons.codec.language.SoundexTest.testDifference":111,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":116,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":79,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":122,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":100,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":103,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":21,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":105,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":65,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":78,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":109},"transformations":[{"failures":[],"tindex":"34c7f59d-4381-11e5-b818-5f9b6b83c640","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:50","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest, java.io.InputStream)"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"34c7f59e-4381-11e5-b818-e18a9199d8f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(java.lang.String)"},"variableMap":{"base64String":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.nio.charset.Charset)"},"status":-1},{"failures":[105,106,107],"tindex":"34c81caf-4381-11e5-b818-613802204f0c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"status":-1},{"failures":[108],"tindex":"34c81cb0-4381-11e5-b818-b736a44b51e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[]))"},"status":-1},{"failures":[],"tindex":"34c81cb1-4381-11e5-b818-b1577043e160","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:143","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((int & 15), org.apache.commons.codec.net.URLCodec.int))"},"variableMap":{"b":"index","org.apache.commons.codec.net.URLCodec.RADIX":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:791","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 2))"},"status":-2},{"failures":[109,110],"tindex":"34c81cb2-4381-11e5-b818-5579d43f9db9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[111,112],"tindex":"34c81cb3-4381-11e5-b818-61bb76831e4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) == (java.lang.String.charAt(int))) {\n    int++;\n} "},"status":-1},{"failures":[],"tindex":"34c81cb4-4381-11e5-b818-6fabf7e6a7e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-2},{"failures":[],"tindex":"34c81cb5-4381-11e5-b818-abe4c79d5807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)"},"status":-2},{"failures":[],"tindex":"34c81cb6-4381-11e5-b818-5b01e3bf1e23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"index":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:452","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[113],"tindex":"34c843c7-4381-11e5-b818-c79857345c2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:317","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL encoded\"))"},"status":-1},{"failures":[114,115,116],"tindex":"34c843c8-4381-11e5-b818-e3ed7301c69b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"source","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"source","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:433","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[105,106],"tindex":"34c843c9-4381-11e5-b818-c56db51bb82b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"status":-1},{"failures":[],"tindex":"34c843ca-4381-11e5-b818-ab0d434ab4be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"status":-2},{"failures":[109,117,118,110],"tindex":"34c843cb-4381-11e5-b818-e17aa1605e03","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"status":-1},{"failures":[],"tindex":"34c843cc-4381-11e5-b818-373c76d5d16e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"status":-2},{"failures":[],"tindex":"34c86add-4381-11e5-b818-a93463bd6fc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"to","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"to","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"to","minRating":"to","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"to"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"status":1},{"failures":[119,108,120],"tindex":"34c86ade-4381-11e5-b818-8bbba8564c36","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '0'"},"variableMap":{"jj":"jj","l_ascii":"l_ascii","bits":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '1'"},"status":-1},{"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138],"tindex":"34c86adf-4381-11e5-b818-9d20eb827583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[139,140,141,142,143,114,115,116,144,145,146],"tindex":"34c86ae0-4381-11e5-b818-03f85c8badba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:493","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.add(new org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch())"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"34c86add-4381-11e5-b818-a93463bd6fc8","diffs":[{"branches":{"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":["org.apache.commons.codec.net.RFC1522Codec_java.lang.String_decodeText(java.lang.String).t5","org.apache.commons.codec.net.RFC1522Codec_java.lang.String_decodeText(java.lang.String).e5"],"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":["org.apache.commons.codec.net.RFC1522Codec_java.lang.String_decodeText(java.lang.String).t5","org.apache.commons.codec.net.RFC1522Codec_java.lang.String_decodeText(java.lang.String).e5"]},"type":"branch"}]}]}