{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":40,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":29,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":2,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":3,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":4,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":59,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":50,"org.apache.commons.codec.language.NysiisTest.testDropBy":35,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":6,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":54,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":9,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":53,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":21,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":43,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":46,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":30,"org.apache.commons.codec.language.NysiisTest.testRule1":34,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":17,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":19,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":18,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":48,"org.apache.commons.codec.language.NysiisTest.testCap":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":56,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":47,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":15,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":28,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":37,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":16,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":31,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":58,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":41,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":39,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":44,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":60,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":1,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":52,"org.apache.commons.codec.language.SoundexTest.testB650":5,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":61,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":32,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":42,"org.apache.commons.codec.language.SoundexTest.testNewInstance":13,"org.apache.commons.codec.language.NysiisTest.testOthers":36,"org.apache.commons.codec.language.SoundexTest.testDifference":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":20},"transformations":[{"failures":[],"tindex":"e15416a0-43ee-11e5-9023-1bd26a9a4ea9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:185","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"e15416a1-43ee-11e5-9023-c74833854b9f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char"},"status":-1},{"failures":[],"tindex":"e15416a2-43ee-11e5-9023-e90c435074d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"e15416a3-43ee-11e5-9023-0b8416438f12","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:314","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[20,21],"tindex":"e1543db4-43ee-11e5-9023-719b5a53e462","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:654","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[],"tindex":"e1543db5-43ee-11e5-9023-43cbdeb650b4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"e1543db6-43ee-11e5-9023-95d04641dba6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[], java.io.InputStream))"},"status":-2},{"failures":[],"tindex":"e1543db7-43ee-11e5-9023-d53732423788","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"encodeTable","ibitWorkArea":"org.apache.commons.codec.binary.Base64.MASK_6BITS","pos":"ibitWorkArea","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base64.MASK_6BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"e1543db8-43ee-11e5-9023-af820303d747","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException)"},"status":-2},{"failures":[],"tindex":"e1543db9-43ee-11e5-9023-d90fd2ce43ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int"},"variableMap":{"result":"pos","ibitWorkArea":"pos","context":"context","org.apache.commons.codec.binary.Base64.BITS_PER_ENCODED_BYTE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[22,23,24,25,26,27,28,29,30,31,32],"tindex":"e1543dba-43ee-11e5-9023-af23a9180977","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"roundsCustom":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:355","type":"CtAssignmentImpl","sourcecode":"boolean = (java.lang.StringBuilder.charAt((int + 1))) == char"},"status":-1},{"failures":[33,34,35,36,37],"tindex":"e15464cb-43ee-11e5-9023-053578b860bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"MCC\")"},"variableMap":{"str":"str","org.apache.commons.codec.language.Nysiis.PAT_MAC":"org.apache.commons.codec.language.Nysiis.PAT_K"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:263","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"C\")"},"status":-1},{"failures":[20,21,38,39,40],"tindex":"e15464cc-43ee-11e5-9023-a326a263e4f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:170","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[41,42],"tindex":"e15464cd-43ee-11e5-9023-7b11debeb1cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^trough\", \"trou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:115","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l3\", \"L3\")"},"status":-1},{"failures":[],"tindex":"e15464ce-43ee-11e5-9023-2b8a5ca063d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.char[].int"},"status":-2},{"failures":[],"tindex":"e15464cf-43ee-11e5-9023-57be74ee817f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"e15464d0-43ee-11e5-9023-0f9323723156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    boolean = true;\n} else if ((java.lang.String.length()) > 0) {\n    java.util.Set<java.lang.String>.add(java.lang.String);\n} "},"status":-1},{"failures":[59,60,61],"tindex":"e1548be1-43ee-11e5-9023-bbb193f40488","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][33], byte[][54], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"e1548be2-43ee-11e5-9023-9dd7a8514005","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[20,21],"tindex":"e1548be3-43ee-11e5-9023-012a665553f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:711","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1)))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A', 'F');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:528","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))) && (!boolean)) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'A') || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'O'))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n} else if (int == ((java.lang.String.length()) - 1)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}