{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":26,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":29,"org.apache.commons.codec.binary.HexTest.testCustomCharset":36,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":31,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":7,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":20,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":16,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":25,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":35,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":40,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":30,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":42,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":11,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":15,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":44,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":28,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":33,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":45,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":12,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":1,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":6,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":5,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":10,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":24,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":18,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":17,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":39,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":21,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":41,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":27,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":34,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":2,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":13,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":3,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":32,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":9,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":14,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":8,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":38,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":22,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":43},"transformations":[{"failures":[],"tindex":"5d70ffb4-42ad-11e5-9dca-1bf80838a490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:274","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    if ((char != '0') && (char != char)) {\n        char[][int++] = char;\n    } \n    char = char;\n} "},"variableMap":{"last":"lastChar","mapped":"chr","count":"rightLength","out":"org.apache.commons.codec.language.ColognePhonetic.AHKLOQRUX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:360","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '4';\n} else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"5d714dd5-42ad-11e5-9dca-07a47fb72a49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:461","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 11))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"5d714dd6-42ad-11e5-9dca-11987bc98d91","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:399","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)(int & 255))"},"variableMap":{"b":"singleByte","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"status":-2},{"failures":[],"tindex":"5d714dd7-42ad-11e5-9dca-0dbf4cc2ec82","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:222","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null"},"status":-2},{"failures":[],"tindex":"5d714dd8-42ad-11e5-9dca-cb530da03ae1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"5d7174e9-42ad-11e5-9dca-b3c19ab69ff9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:395","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"5d7174ea-42ad-11e5-9dca-33270f69b088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.map(char)"},"status":-2},{"failures":[],"tindex":"5d7174eb-42ad-11e5-9dca-aba87842f0f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:500","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"5d7174ec-42ad-11e5-9dca-b7628d10bff0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:666","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"variableMap":{"pattern":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:249","type":"CtReturnImpl","sourcecode":"return java.lang.String.format(\"org/apache/commons/codec/language/bm/%s_%s_%s.txt\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String)"},"status":-2},{"failures":[],"tindex":"5d7174ed-42ad-11e5-9dca-656166d36e17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:193","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Negative skip length: \" + long))"},"status":-2},{"failures":[],"tindex":"5d7174ee-42ad-11e5-9dca-a13988229a3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[9,10,11],"tindex":"5d7174ef-42ad-11e5-9dca-d5854fb3fd8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:160","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Q' ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:144","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.conditionM0(java.lang.String, int) ? int + 2 : int + 1"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"5d7174f0-42ad-11e5-9dca-ddf16661fa44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"5d719c01-42ad-11e5-9dca-819131f467af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:94","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"5d719c02-42ad-11e5-9dca-b74786a50179","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"value","org.apache.commons.codec.language.Caverphone1.SIX_1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String, false)"},"status":-2},{"failures":[],"tindex":"5d719c03-42ad-11e5-9dca-c79e3ad16168","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:600","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.lang.String)))"},"status":-2},{"failures":[],"tindex":"5d719c04-42ad-11e5-9dca-ab47a58f56a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.char[]"},"status":-2},{"failures":[41,42,43,44,45],"tindex":"5d719c05-42ad-11e5-9dca-b1b993b00709","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"5d719c06-42ad-11e5-9dca-d9d44ce1cf27","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:231","type":"CtReturnImpl","sourcecode":"return this.boolean"},"variableMap":{"found":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:348","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"5d719c07-42ad-11e5-9dca-3fe526df8d7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"variableMap":{"in":"keyBytes","inPos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:180","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}