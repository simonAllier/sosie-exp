{"failureDictionary":{"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":52,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":58,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":5,"org.apache.commons.codec.language.NysiisTest.testDropBy":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":12,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":18,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":69,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":68,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":33,"org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull":11,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":28,"org.apache.commons.codec.language.NysiisTest.testRule1":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":19,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":49,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":24,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":63,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":7,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":66,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":53,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":48,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":42,"org.apache.commons.codec.language.NysiisTest.testFal":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":38,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":55,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":57,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":56,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":39,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":45},"transformations":[{"failures":[],"tindex":"89591a7a-43a9-11e5-a67a-b380a0294c24","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"str1","name2":"str1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str1","name1":"str2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String).equals(org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String))"},"status":-2},{"failures":[],"tindex":"8959b6bb-43a9-11e5-a67a-514f0d0b7dcd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:738","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.toIntegerBytes(java.math.BigInteger), false)"},"status":-2},{"failures":[0],"tindex":"8959b6bc-43a9-11e5-a67a-15816afe931d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:598","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"8959ddcd-43a9-11e5-a67a-758c69424247","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"index":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.int"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9],"tindex":"8959ddce-43a9-11e5-a67a-fb6f78126c60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"n","minRating":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"status":-1},{"failures":[10],"tindex":"895a2bef-43a9-11e5-a67a-e3bd403b3450","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:281","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[11],"tindex":"895a5200-43a9-11e5-a67a-ad55370df629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"895a5201-43a9-11e5-a67a-25394a2de1a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"895a7912-43a9-11e5-a67a-d5deb7fbd606","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(byte[].int) << 3]"},"status":-2},{"failures":[12],"tindex":"895a7913-43a9-11e5-a67a-adaf5af85cc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[], java.io.InputStream))"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:495","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(byte[], java.io.InputStream))"},"status":-1},{"failures":[13],"tindex":"895aa024-43a9-11e5-a67a-452b915fac05","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:369","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException)"},"status":-1},{"failures":[14,15,16],"tindex":"895ac735-43a9-11e5-a67a-cf8e20139358","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][37], byte[][58], byte[][16], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"895ac736-43a9-11e5-a67a-95c8b6d11b28","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) != 1) || ((java.lang.String.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + java.lang.String) + \" in \") + java.lang.String));\n} "},"variableMap":{"rawLine":"replacedName","leftCharacter":"replacedName","rightCharacter":"replacedName","location":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:386","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String[]) {\n    if (java.lang.String.contains(java.lang.String)) {\n        final java.lang.String java.lang.String = java.lang.String.substring(0, 1);\n        java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String);\n    } \n}"},"status":-1},{"failures":[],"tindex":"895aee47-43a9-11e5-a67a-a73e6db3b344","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(java.lang.String.endsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"line","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"line","text":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n} "},"status":-2},{"failures":[],"tindex":"895b1558-43a9-11e5-a67a-3524b9d26e5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:328","type":"CtOperatorAssignmentImpl","sourcecode":"int &= int"},"variableMap":{"v":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","e1":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"status":-2},{"failures":[60,61,62,63,64],"tindex":"895b3c69-43a9-11e5-a67a-73e4f16d4331","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[65,66,67,68,69],"tindex":"895b637a-43a9-11e5-a67a-f900e02ab700","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[70,71,72],"tindex":"895b637b-43a9-11e5-a67a-2970a0be04e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:264","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"FF\")"},"status":-1},{"failures":[],"tindex":"895b8a8c-43a9-11e5-a67a-fdd266a13502","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}