{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":27,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":5,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":53,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":19,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":22,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":46,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":13,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":43,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":39,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":38,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":40,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":34,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":36,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":18,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":49,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":20,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":42,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":55,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":56,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":51,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":37,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":41,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":47,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":25,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":15,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":52},"transformations":[{"failures":[],"tindex":"fd12125e-42b2-11e5-8e4a-83b8e9d0eba5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"fd12125f-42b2-11e5-8e4a-31d1a30f37d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:358","type":"CtReturnImpl","sourcecode":"return int + 2"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"fd123970-42b2-11e5-8e4a-519516d3d69d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n    int += 2;\n} else {\n    int++;\n}"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:415","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n}"},"status":1},{"failures":[0,1,2],"tindex":"fd123971-42b2-11e5-8e4a-4194e473d222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:162","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.encode(java.lang.String, org.apache.commons.codec.net.BCodec.getCharset())"},"status":-1},{"failures":[],"tindex":"fd123972-42b2-11e5-8e4a-896d699b8617","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"status":0},{"failures":[3],"tindex":"fd123973-42b2-11e5-8e4a-fbf06b5d0fb1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:175","type":"CtIfImpl","sourcecode":"if (byte == (org.apache.commons.codec.net.QCodec.byte)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13],"tindex":"fd123974-42b2-11e5-8e4a-a5d6c5be90e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:326","type":"CtLocalVariableImpl","sourcecode":"int int = int ^ (int >>> 16)"},"variableMap":{"r":"inPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"status":-1},{"failures":[14,15,16],"tindex":"fd123975-42b2-11e5-8e4a-71096ee8d13e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:681","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[17,18,14,15,16],"tindex":"fd126086-42b2-11e5-8e4a-f7eb73708ae0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:395","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"DT\", \"DD\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int++;\n}"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34],"tindex":"fd126087-42b2-11e5-8e4a-e9b0b2c4ecdf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:223","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(java.lang.String, org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)))"},"status":-1},{"failures":[35,36,37,38,39,40,41,42],"tindex":"fd126088-42b2-11e5-8e4a-cfbbcc5c98f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"fd126089-42b2-11e5-8e4a-e34d167774a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"gh\", \"22\")"},"status":0},{"failures":[],"tindex":"fd12608a-42b2-11e5-8e4a-c7bf1001c9f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_NN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:141","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"fd12608b-42b2-11e5-8e4a-9338b358f585","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][0]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:291","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][1]"},"status":-2},{"failures":[43],"tindex":"fd12879c-42b2-11e5-8e4a-417f08d57d79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-1},{"failures":[44],"tindex":"fd12879d-42b2-11e5-8e4a-2d8df969bddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[45,46,47,48,49,50,51],"tindex":"fd12879e-42b2-11e5-8e4a-69fe341a2787","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[52,53],"tindex":"fd12879f-42b2-11e5-8e4a-796e77ce55ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"variableMap":{"c":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:368","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"status":-1},{"failures":[54,55,56],"tindex":"fd1287a0-42b2-11e5-8e4a-13a3d8c88c6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][27], byte[][7], byte[][17], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][24], byte[][45], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[52,53],"tindex":"fd1287a1-42b2-11e5-8e4a-75988c654c83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"left","minRating":"right","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"right","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"left","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 16, 65535, int[])"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}