{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":13,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":16,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":21,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":31,"org.apache.commons.codec.language.NysiisTest.testSnat":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":20,"org.apache.commons.codec.language.NysiisTest.testDropBy":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":15,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeNull":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":28,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":17,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":30,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":33,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":36,"org.apache.commons.codec.language.NysiisTest.testDad":2,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":37,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":24,"org.apache.commons.codec.language.NysiisTest.testOthers":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":26,"org.apache.commons.codec.language.NysiisTest.testTranan":11,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":32,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":19,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":0,"org.apache.commons.codec.language.NysiisTest.testDan":3,"org.apache.commons.codec.language.NysiisTest.testFal":4,"org.apache.commons.codec.language.NysiisTest.testCap":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":27,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":34,"org.apache.commons.codec.language.NysiisTest.testSnad":6,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":8,"org.apache.commons.codec.language.NysiisTest.testBran":5,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":14},"transformations":[{"failures":[],"tindex":"8aabd552-4336-11e5-ad64-fd6e0f429ef9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:475","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"8aabd553-4336-11e5-ad64-01f89934093f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:165","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"data":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(byte[])"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"8aabfc64-4336-11e5-ad64-0d60946dbe2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-1},{"failures":[],"tindex":"8aabfc65-4336-11e5-ad64-f3bcb41f94f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:69","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cq\", \"2q\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:100","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"status":1},{"failures":[13],"tindex":"8aabfc66-4336-11e5-ad64-3d80e0ffff41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"8aabfc67-4336-11e5-ad64-ad87b3dac9f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:287","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int, byte[])"},"status":-2},{"failures":[],"tindex":"8aabfc68-4336-11e5-ad64-1534b38ee8ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(java.lang.Object)));\n} "},"variableMap":{"this":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:312","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"8aabfc69-4336-11e5-ad64-59024b08fbb1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:222","type":"CtTryImpl","sourcecode":"try {\n    java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(java.lang.String, org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)));\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException);\n}"},"status":0},{"failures":[],"tindex":"8aac237a-4336-11e5-ad64-e5147d08b802","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:260","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[int]"},"variableMap":{"length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:273","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(byte[].int) << 3]"},"status":-2},{"failures":[],"tindex":"8aac237b-4336-11e5-ad64-2113dbb50c44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:196","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-2},{"failures":[14,15,16,17],"tindex":"8aac237c-4336-11e5-ad64-7f1daee99e5c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"status":-1},{"failures":[18],"tindex":"8aac237d-4336-11e5-ad64-af9a214f1d4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:321","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"8aac237e-4336-11e5-ad64-979ba52b645d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])"},"status":-1},{"failures":[29,30,31,32,33],"tindex":"8aac237f-4336-11e5-ad64-b192395fc8bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:111","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[],"tindex":"8aac2380-4336-11e5-ad64-7740ed6dd62f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('}')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('{')"},"status":-2},{"failures":[34,35,33,36],"tindex":"8aac2381-4336-11e5-ad64-6f449362ac1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"p+\", \"P\")"},"status":-1},{"failures":[37],"tindex":"8aac4a92-4336-11e5-ad64-116aaa718add","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"8aac4a93-4336-11e5-ad64-fd017cf4ae3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:487","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"8aac4a94-4336-11e5-ad64-b3ba240f0296","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"body","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"body"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:392","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"|\")) || (java.lang.String.endsWith(\"|\"))) {\n    java.util.List<org.apache.commons.codec.language.bm.Rule.Phoneme>.add(new org.apache.commons.codec.language.bm.Rule.Phoneme(\"\" , org.apache.commons.codec.language.bm.Languages.org.apache.commons.codec.language.bm.Languages.LanguageSet));\n} "},"status":-2},{"failures":[],"tindex":"8aac4a95-4336-11e5-ad64-eb869a56b76f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}