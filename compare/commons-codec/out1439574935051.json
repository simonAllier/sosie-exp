{"failureDictionary":{"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":16,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":29,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":37,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":21,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":20,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":26,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":6,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":4,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":27,"org.apache.commons.codec.binary.Base64Test.testUUID":11,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":25,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":28,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":23,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":7,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":35,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":22,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":13,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":38,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":15,"org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray":31,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":0,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":34},"transformations":[{"failures":[],"tindex":"a9d5943d-42ad-11e5-b454-93b4711bc134","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:538","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((!org.apache.commons.codec.binary.Base64.(org.apache.commons.codec.binary.Base64.isBase64(byte[][int]))) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))) {\n        return false;\n    } \n}"},"variableMap":{"arrayOctet":"arrayOctet","length":"length","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((!org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte[][int]))) && ((!boolean) || (((byte[][int]) != (byte)) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"a9d5e25e-42ad-11e5-b454-c5081187803a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"a9d5e25f-42ad-11e5-b454-1d6cbdf12448","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:181","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"a9d5e260-42ad-11e5-b454-07fb54abba50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(java.lang.String)) {\n    final java.lang.String java.lang.String = java.lang.String.substring(0, 1);\n    java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String);\n} "},"variableMap":{"replacedName":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_START","dc":"org.apache.commons.codec.language.bm.ResourceConstants.EXT_CMT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:179","type":"CtTryImpl","sourcecode":"try {\n    boolean boolean = false;\n    while (java.util.Scanner.hasNextLine()) {\n        final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim();\n        if (boolean) {\n            if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                boolean = false;\n            } \n        } else {\n            if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n                boolean = true;\n            } else if ((java.lang.String.length()) > 0) {\n                java.util.Set<java.lang.String>.add(java.lang.String);\n            } \n        }\n    }\n} finally {\n    java.util.Scanner.close();\n}"},"status":-2},{"failures":[8],"tindex":"a9d60971-42ad-11e5-b454-03b7dce31c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"variableMap":{"algorithm":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:510","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(java.lang.String, java.lang.String))"},"status":-1},{"failures":[0,1,2,3,4],"tindex":"a9d60972-42ad-11e5-b454-eb468f981415","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][24], byte[][4], byte[][14], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][10], byte[][20], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"a9d60973-42ad-11e5-b454-5d88b423419e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:157","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[boolean ? 4096 : 8192]"},"status":-2},{"failures":[9,10,11,12],"tindex":"a9d63084-42ad-11e5-b454-03180c80b941","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:433","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"a9d63085-42ad-11e5-b454-91f9095fb2bb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"status":-2},{"failures":[],"tindex":"a9d63086-42ad-11e5-b454-1191eff0bffb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[],"tindex":"a9d63087-42ad-11e5-b454-c34121f28507","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:420","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[]).doFinal(byte[]);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(java.lang.IllegalStateException);\n}"},"status":-2},{"failures":[],"tindex":"a9d63088-42ad-11e5-b454-b9f771483938","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:286","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][9], byte[][15], 4, java.lang.StringBuilder)"},"variableMap":{"finalb":"obj","passwd":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:150","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"a9d65799-42ad-11e5-b454-4d80fff0899b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:229","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(\"common\", org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\"), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\")))"},"status":-1},{"failures":[29,30],"tindex":"a9d6579a-42ad-11e5-b454-fb15004f6505","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        return false;\n    } \n}"},"variableMap":{"input":"cs2","prefix":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"a9d6579b-42ad-11e5-b454-f1df1c3e5b99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:327","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer = new org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer(java.lang.String.toCharArray())"},"status":-2},{"failures":[31],"tindex":"a9d6579c-42ad-11e5-b454-13b804628f24","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:162","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"a9d67ead-42ad-11e5-b454-632d2b5e5e1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[32,33,34,35,36,37,38],"tindex":"a9d67eae-42ad-11e5-b454-a19130433fd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":-1},{"failures":[],"tindex":"a9d67eaf-42ad-11e5-b454-9dc841df5bf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))"},"variableMap":{"ph":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:305","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}