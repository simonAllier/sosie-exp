{"failureDictionary":{"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":20,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":23,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":12,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":13,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":27,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":25,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":14,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":16,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":21},"transformations":[{"failures":[],"tindex":"7dd5ea85-436f-11e5-b619-bf767206c735","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:138","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(int, int)"},"status":-2},{"failures":[0,1,2],"tindex":"7dd5ea86-436f-11e5-b619-a133d45c5e04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '0'"},"status":-1},{"failures":[],"tindex":"7dd5ea87-436f-11e5-b619-2780c7a39171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"variableMap":{"result":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:389","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"7dd61198-436f-11e5-b619-757e47082af9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:471","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.lang.String)"},"status":-2},{"failures":[],"tindex":"7dd61199-436f-11e5-b619-d302ec6f4470","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"status":0},{"failures":[],"tindex":"7dd6119a-436f-11e5-b619-5d3598bb0e50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.int) + (byte[].int)"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"length","encodeSize":"length","length":"length","lineSeparator":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:394","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int"},"status":-2},{"failures":[3,4,5,6],"tindex":"7dd6119b-436f-11e5-b619-53656e03922c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:105","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"7dd6119c-436f-11e5-b619-0b981276106a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"cmtI"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:272","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    java.lang.String = java.lang.String.substring(0, int);\n} "},"status":-1},{"failures":[20],"tindex":"7dd6119d-436f-11e5-b619-61231a0eb6aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:500","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha256(byte[]))"},"status":-1},{"failures":[],"tindex":"7dd6119e-436f-11e5-b619-cda0b9d2d8e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale).toCharArray()"},"status":-2},{"failures":[21,22],"tindex":"7dd638af-436f-11e5-b619-cb01db03fecf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 8, 16711935, int[])"},"status":-1},{"failures":[],"tindex":"7dd638b0-436f-11e5-b619-2999432b5fae","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"len":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:446","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[23,3,4,24,25,6],"tindex":"7dd638b1-436f-11e5-b619-11ba1cfed400","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y\", \"3\")"},"status":-1},{"failures":[26,27,28],"tindex":"7dd638b2-436f-11e5-b619-ad46d69e42cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:309","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[26,27],"tindex":"7dd638b3-436f-11e5-b619-1b0079b4c2a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:468","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"7dd638b4-436f-11e5-b619-bf13fbc0f6b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(char))) {\n    return 0;\n} "},"variableMap":{"c":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.char"},"status":-2},{"failures":[],"tindex":"7dd638b5-436f-11e5-b619-0174ab79a143","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"7dd65fc6-436f-11e5-b619-cbc4e3b9ecd5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:394","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"7dd65fc7-436f-11e5-b619-49ec9838b55b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:184","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8);\n} else {\n    final java.util.regex.Pattern java.util.regex.Pattern = java.util.regex.Pattern.compile(((\"^\" + (java.lang.String.replace(\"$\", \"\\\\$\"))) + \"([\\\\.\\\\/a-zA-Z0-9]{1,8}).*\"));\n    final java.util.regex.Matcher java.util.regex.Matcher = java.util.regex.Pattern.matcher(java.lang.String);\n    if ((java.util.regex.Matcher == null) || (!(java.util.regex.Matcher.find()))) {\n        throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n    } \n    java.lang.String = java.util.regex.Matcher.group(1);\n}"},"variableMap":{"saltString":"str","salt":"str","prefix":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:272","type":"CtWhileImpl","sourcecode":"while ((int < (java.lang.String.length())) && (int < (char[].int))) {\n    char = org.apache.commons.codec.language.Soundex.getMappingCode(java.lang.String, int++);\n    if (char != 0) {\n        if ((char != '0') && (char != char)) {\n            char[][int++] = char;\n        } \n        char = char;\n    } \n}"},"status":-2},{"failures":[26,27,28],"tindex":"7dd65fc8-436f-11e5-b619-09cad393e3f1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:454","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}