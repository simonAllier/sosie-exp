{"failureDictionary":{"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":28,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":11,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":23,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":0,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":45,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":38,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":24,"org.apache.commons.codec.binary.Base64Test.testBase64":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":27,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":4,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":16,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":15,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":60,"org.apache.commons.codec.binary.Base64Test.testUUID":32,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":57,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":7,"org.apache.commons.codec.binary.Base64Test.testSingletons":42,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":26,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":22,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":13,"org.apache.commons.codec.binary.Base64Test.testPairs":31,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":40,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":14,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":21,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":46,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":25,"org.apache.commons.codec.binary.Base64Test.testCodec112":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":34,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":35,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":39,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":8,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":36,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":37,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":29,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":53,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":5,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":52,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":58,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":54,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":55,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":2,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":50,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":18,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":6,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":1,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":3,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":47,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":51,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":9,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":43,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":17,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":30,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":56,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":19,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":33,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":59},"transformations":[{"failures":[],"tindex":"104f4ac9-42af-11e5-a87a-771ae521dbaf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:223","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"104f71da-42af-11e5-a87a-15dc26157745","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:369","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:295","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException)"},"status":-2},{"failures":[0],"tindex":"104f71db-42af-11e5-a87a-773ed2ba96c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[1,2,3],"tindex":"104f71dc-42af-11e5-a87a-0701821cf1f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > org.apache.commons.codec.language.Metaphone.(getMaxCodeLen())) {\n    java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen());\n} "},"variableMap":{"code":"local","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:166","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n    break;\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14],"tindex":"104f98ed-42af-11e5-a87a-f570458811d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:373","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((org.apache.commons.codec.binary.BaseNCodec.Context.int) > 0)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int;\n} "},"status":-1},{"failures":[],"tindex":"104fe70e-42af-11e5-a87a-6fdf113454d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:282","type":"CtLocalVariableImpl","sourcecode":"final char char = int < (int - 2) ? char[][(int + 2)] : org.apache.commons.codec.language.Nysiis.char"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"104fe70f-42af-11e5-a87a-0762552f00ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:513","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 15))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"104fe710-42af-11e5-a87a-e9a71ec0c19f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.toString(), byte[])"},"variableMap":{"this":"this","key":"key","algorithm":"org.apache.commons.codec.digest.HmacAlgorithms.HMAC_SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, byte[])"},"status":-2},{"failures":[4,27,5,6,7,28,29,8,30,9,10,31,32,33,34,35,36,37,38,39,40,11,41,42,43,13,44,14,45,46,47,48,49,50],"tindex":"10500e21-42af-11e5-a87a-05c687ab44aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.binary.BaseNCodec.Context.int) {\n    case 0 :\n        break;\n    case 1 :\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 4) & (org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.byte[])) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n        } \n        break;\n    case 2 :\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 10) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.byte[])) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)));\n}"},"status":-1},{"failures":[51,52,53,54,55],"tindex":"10500e22-42af-11e5-a87a-f9e30905f9b0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:195","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    java.lang.StringBuilder.append(char);\n} "},"status":-1},{"failures":[],"tindex":"10500e23-42af-11e5-a87a-ddf6ee11d691","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maxCodeLen":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:463","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"10500e24-42af-11e5-a87a-fbd6234a1eae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:421","type":"CtAssignmentImpl","sourcecode":"int = int + 2"},"variableMap":{"index":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[56,57],"tindex":"10500e25-42af-11e5-a87a-f9c6948cec42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:437","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J')"},"status":-1},{"failures":[],"tindex":"10503536-42af-11e5-a87a-7b6b62586c24","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return java.nio.charset.Charset == null ? java.nio.charset.Charset.defaultCharset() : java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:240","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset"},"status":-2},{"failures":[56,57,58],"tindex":"10503537-42af-11e5-a87a-653830e0fed3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:876","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]) {\n    if (java.lang.String.startsWith(java.lang.String)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"10511f98-42af-11e5-a87a-b36694fa9499","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"int = (int << 4) | (int >>> 28)"},"variableMap":{"s":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"10511f99-42af-11e5-a87a-b13a358848b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:97","type":"CtForImpl","sourcecode":"for (int int = 'a' ; int <= 'z' ; int++) {\n    org.apache.commons.codec.net.QCodec.java.util.BitSet.set(int);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":-2},{"failures":[56,57],"tindex":"10511f9a-42af-11e5-a87a-8d9149c6071d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"index","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:707","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[59,60],"tindex":"10511f9b-42af-11e5-a87a-9f7eab5ddad6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"10511f9c-42af-11e5-a87a-91f735474b8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:501","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}