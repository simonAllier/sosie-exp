{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":39,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":32,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":47,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":13,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":42,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":2,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":44,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":36,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":18,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":14,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":7,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":3,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":33,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":12,"org.apache.commons.codec.CharsetsTest.testToCharset":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":15,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":21,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":8,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":24,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":37},"transformations":[{"failures":[0,1],"tindex":"7d6e4443-42cf-11e5-8d6d-cdbac71ccc09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:316","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":-1},{"failures":[],"tindex":"7d6e6b54-42cf-11e5-8d6d-1d0d99a69990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"status":-2},{"failures":[2,3],"tindex":"7d6e6b55-42cf-11e5-8d6d-f5b5eaaa40ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[4],"tindex":"7d6e9266-42cf-11e5-8d6d-5571407c84a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:312","type":"CtReturnImpl","sourcecode":"return this.java.nio.charset.Charset"},"variableMap":{"charset":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.Charsets:74","type":"CtReturnImpl","sourcecode":"return java.nio.charset.Charset == null ? java.nio.charset.Charset.defaultCharset() : java.nio.charset.Charset"},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14],"tindex":"7d6e9267-42cf-11e5-8d6d-0132e6c4f4d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"index":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:202","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[], 0, int)"},"status":-1},{"failures":[],"tindex":"7d6e9268-42cf-11e5-8d6d-2bbb51d5c2df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"salt","org.apache.commons.codec.language.Caverphone1.SIX_1":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:75","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String)"},"status":-2},{"failures":[],"tindex":"7d6e9269-42cf-11e5-8d6d-634d67a6432c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (char == char) {\n    return true;\n} "},"variableMap":{"key":"c","element":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:101","type":"CtReturnImpl","sourcecode":"return ((((char == 'A') || (char == 'E')) || (char == 'I')) || (char == 'O')) || (char == 'U')"},"status":-2},{"failures":[],"tindex":"7d6e926a-42cf-11e5-8d6d-757c7035c83c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"status":1},{"failures":[15,16,17,18,19,20,21,22,23,24],"tindex":"7d6e926b-42cf-11e5-8d6d-112062cb7612","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^rough\", \"rou2f\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:231","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7d6e926c-42cf-11e5-8d6d-81d05185deaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:530","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.encode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"7d6eb97d-42cf-11e5-8d6d-33dc2eae2955","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"int[][0] = int"},"variableMap":{"left":"c","out":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:356","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":1},{"failures":[25,26],"tindex":"7d6eb97e-42cf-11e5-8d6d-19fb6b3f2a82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(int)"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"7d6eb97f-42cf-11e5-8d6d-610c8829f0be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][3])"},"variableMap":{"parts":"parts","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][0])"},"status":-1},{"failures":[1],"tindex":"7d6eb980-42cf-11e5-8d6d-ad27b5a444b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:450","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:535","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[40],"tindex":"7d6eb981-42cf-11e5-8d6d-53dea02778ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('F')"},"status":-1},{"failures":[],"tindex":"7d6eb982-42cf-11e5-8d6d-b3c0f937150a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:62","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^rough\", \"rou2f\")"},"status":1},{"failures":[41,42,43,44,45,46],"tindex":"7d6ee093-42cf-11e5-8d6d-b13e80ac742f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y\", \"3\")"},"status":-1},{"failures":[0,1,47,48,49],"tindex":"7d6ee094-42cf-11e5-8d6d-411af50c150a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:727","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TS\", \"FX\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:302","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}