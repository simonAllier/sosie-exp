{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":14,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":21,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":1,"org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals":11,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":10,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":12,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":4,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":7,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":16,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":23,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":9,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":13,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":15,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":20},"transformations":[{"failures":[0,1],"tindex":"faead47e-42ac-11e5-be9b-9343e06993ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:170","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"faecd04f-42ac-11e5-be9b-798dc3d6febd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return int + 3"},"variableMap":{"index":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:336","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) > (java.lang.String.length())) {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (java.lang.String.length())));\n} else {\n    return java.lang.Math.abs(((org.apache.commons.codec.language.MatchRatingApproachEncoder.int) - (java.lang.String.length())));\n}"},"status":-1},{"failures":[0,9,10],"tindex":"faecd050-42ac-11e5-be9b-7539d64ba96a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:319","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[],"tindex":"faecd051-42ac-11e5-be9b-1906b47be88a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:142","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.getFirst3Last3(java.lang.String)"},"status":0},{"failures":[11,12,13,14],"tindex":"faecd052-42ac-11e5-be9b-d7ba09d665e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:118","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[15,16],"tindex":"faecf763-42ac-11e5-be9b-ef4174071b11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"int = (int << 4) | (int >>> 28)"},"variableMap":{"s":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:332","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= (((((((org.apache.commons.codec.digest.UnixCrypt.int[][][1][(int & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.int[][][3][((int >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][5][((int >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][7][((int >>> 24) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][0][(int & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][2][((int >>> 8) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][4][((int >>> 16) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][6][((int >>> 24) & 63)])"},"status":-1},{"failures":[17,18],"tindex":"faecf764-42ac-11e5-be9b-6713c23459f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:439","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"E\", \"I\", \"Y\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n    }\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:531","type":"CtIfImpl","sourcecode":"if (int == ((java.lang.String.length()) - 1)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1},{"failures":[],"tindex":"faecf765-42ac-11e5-be9b-35a40a83188e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"org.apache.commons.codec.language.Caverphone2.TEN_1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"faede1c6-42ac-11e5-be9b-7904cde05e5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:173","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int])"},"status":-2},{"failures":[],"tindex":"faede1c7-42ac-11e5-be9b-a9b73fe0f591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"charset","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"status":-2},{"failures":[],"tindex":"faede1c8-42ac-11e5-be9b-9719d487441e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:329","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:188","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt((int - 1))"},"status":-2},{"failures":[],"tindex":"faede1c9-42ac-11e5-be9b-6ff1a7e32751","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:160","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.length()"},"variableMap":{"name":"org.apache.commons.codec.language.DaitchMokotoffSoundex.COMMENT"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[19,20,21],"tindex":"faede1ca-42ac-11e5-be9b-fb9cef25fe61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(byte[])"},"status":-1},{"failures":[],"tindex":"faede1cb-42ac-11e5-be9b-a3d8677beb1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"num","y":"num"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:74","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= int ; int++) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt(new java.util.Random().nextInt(org.apache.commons.codec.digest.B64.java.lang.String.length())));\n}"},"status":-2},{"failures":[],"tindex":"faede1cc-42ac-11e5-be9b-6bbf1429a5c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int >> 1]"},"variableMap":{"len":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:412","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.binary.BaseNCodec.Context.int]"},"status":-2},{"failures":[22,23],"tindex":"faee08dd-42ac-11e5-be9b-5779849d473a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"status":-1},{"failures":[],"tindex":"faee08de-42ac-11e5-be9b-8dbdcb23cc6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"variableMap":{"base64Data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"faee08df-42ac-11e5-be9b-3b979930b438","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"status":0},{"failures":[],"tindex":"faee08e0-42ac-11e5-be9b-515beb10d3c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:382","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"status":-2},{"failures":[],"tindex":"faee08e1-42ac-11e5-be9b-5dc8d896d463","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"org.apache.commons.codec.net.URLCodec.RADIX","to":"org.apache.commons.codec.net.URLCodec.RADIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:130","type":"CtForEachImpl","sourcecode":"for (final byte byte : byte[]) {\n    int int = byte;\n    if (int < 0) {\n        int = 256 + int;\n    } \n    if (java.util.BitSet.get(int)) {\n        if (int == ' ') {\n            int = '+';\n        } \n        java.io.ByteArrayOutputStream.write(int);\n    } else {\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.URLCodec.byte);\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((int >> 4) & 15), org.apache.commons.codec.net.URLCodec.int));\n        final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((int & 15), org.apache.commons.codec.net.URLCodec.int));\n        java.io.ByteArrayOutputStream.write(char);\n        java.io.ByteArrayOutputStream.write(char);\n    }\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}