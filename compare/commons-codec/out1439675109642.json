{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":27,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":13,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":50,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":7,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":22,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":33,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":47,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":41,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":6,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":36,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":34,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":37,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":45,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":48,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":14,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":19,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":46,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":11,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":18,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":38,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":8,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":17,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":12,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":15,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":21,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":30,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":0,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":23,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":20,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":24,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":42,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":9,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":35,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":3,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":51,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":4,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":28,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":16,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":10,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":1,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":43,"org.apache.commons.codec.language.MetaphoneTest.testTCH":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":31,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":40},"transformations":[{"failures":[],"tindex":"e68f142a-4396-11e5-98e6-695c891abd2b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:481","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"e68f895b-4396-11e5-98e6-910c44bac1f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:346","type":"CtAssignmentImpl","sourcecode":"boolean = (java.lang.StringBuilder.charAt((int - 1))) == char"},"variableMap":{"c":"c","string":"string","index":"index","matches":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:355","type":"CtAssignmentImpl","sourcecode":"boolean = (java.lang.StringBuilder.charAt((int + 1))) == char"},"status":-1},{"failures":[17,18,19,20,21,22,23,24],"tindex":"e68fb06c-4396-11e5-98e6-db5dae75574d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:301","type":"CtIfImpl","sourcecode":"if (char == char) {\n    return true;\n} "},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33],"tindex":"e68fb06d-4396-11e5-98e6-ad541a1c50aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"byte[][8] = 0"},"variableMap":{"b":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:392","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[],"tindex":"e68fd77e-4396-11e5-98e6-597aa25d9c84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"str1","org.apache.commons.codec.language.Caverphone1.SIX_1":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)"},"status":-2},{"failures":[],"tindex":"e68ffe8f-4396-11e5-98e6-17a1edbf0ee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:397","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 6"},"variableMap":{"context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3"},"status":-2},{"failures":[],"tindex":"e69025a0-4396-11e5-98e6-8d89cac68d7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"e69025a1-4396-11e5-98e6-e7e3803b80a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"ibitWorkArea","d":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:447","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << (org.apache.commons.codec.binary.Base64.int)) + int"},"status":-2},{"failures":[34,35,36,37],"tindex":"e6904cb2-4396-11e5-98e6-45eb00b84507","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:714","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[38,39],"tindex":"e6904cb3-4396-11e5-98e6-99e6acc7a04d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int << 1))"},"variableMap":{"iChar":"bits","i":"bits","key":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '0'"},"status":-1},{"failures":[],"tindex":"e69073c4-4396-11e5-98e6-c183fe3a6dab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:337","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"e6909ad5-4396-11e5-98e6-33856dd373ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:190","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])"},"variableMap":{"tmp":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[40,41],"tindex":"e6909ad6-4396-11e5-98e6-fb2962c94181","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"right","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[42,43,44,45,46,47,48,49],"tindex":"e690c1e7-4396-11e5-98e6-6f6ce6c945fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:73","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)"},"status":-1},{"failures":[],"tindex":"e690e8f8-4396-11e5-98e6-65a71b4d9fff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":1},{"failures":[50],"tindex":"e690e8f9-4396-11e5-98e6-b97d5b3937f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":-1},{"failures":[],"tindex":"e690e8fa-4396-11e5-98e6-df303ae38999","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(java.lang.String.endsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"variableMap":{"org.apache.commons.codec.net.RFC1522Codec.POSTFIX":"org.apache.commons.codec.digest.B64.B64T","org.apache.commons.codec.net.RFC1522Codec.PREFIX":"org.apache.commons.codec.digest.B64.B64T","text":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    java.lang.String = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])) + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)]);\n} else if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"status":-2},{"failures":[51],"tindex":"e691100b-4396-11e5-98e6-ed506f46fb0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}