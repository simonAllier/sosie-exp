{"failureDictionary":{"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":8,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamMimeChunkSize":16,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":15,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamMimeChunkSize":22,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":13,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":26,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64EmptyOutputStreamPemChunkSize":17,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":25,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":12,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":7,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":14,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":18,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithEmptySalt":4,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":1,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":9,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":11,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithInvalidSalt":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":0,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":21,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":6},"transformations":[{"failures":[],"tindex":"584ffa41-42ad-11e5-b8fb-2bdd912b7a8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"variableMap":{"ii":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[0,1],"tindex":"58502152-42ad-11e5-b8fb-f778413e6c76","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:124","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[2],"tindex":"58502153-42ad-11e5-b8fb-51eef430500d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[3,4,5],"tindex":"58502154-42ad-11e5-b8fb-6b941cd9bfca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String))"},"status":-1},{"failures":[6,7],"tindex":"58504865-42ad-11e5-b8fb-9b95bc8d1417","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:299","type":"CtAssignmentImpl","sourcecode":"int = 1"},"variableMap":{"pos":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"58504866-42ad-11e5-b8fb-8be4f9cdacac","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:226","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"58504867-42ad-11e5-b8fb-0d3c858d97e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:86","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = new java.lang.String[]{ \"\\\\-\" , \"[&]\" , \"\\\\\\'\" , \"\\\\.\" , \"[\\\\,]\" }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:285","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = java.lang.String.split(\"=\")"},"status":-2},{"failures":[],"tindex":"58504868-42ad-11e5-b8fb-8bc27a3df700","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:100","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"wy\", \"Wy\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":0},{"failures":[],"tindex":"58504869-42ad-11e5-b8fb-7d4b942cd2aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"patternKey","chr":"patternKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:316","type":"CtIfImpl","sourcecode":"if (java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> == null) {\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = new java.util.ArrayList<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>();\n    java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.put(char, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>);\n} "},"status":-2},{"failures":[],"tindex":"5850486a-42ad-11e5-b8fb-5bb89df1f8f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:768","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], int, byte[], int, int)"},"variableMap":{"resizedBytes":"pArray","bigBytes":"pArray","len":"length","startSrc":"length","startDst":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:430","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, byte[].int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"58506f7b-42ad-11e5-b8fb-0929a1eb6f1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:383","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 7) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:475","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"58506f7c-42ad-11e5-b8fb-7b127721268d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"i","y":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"status":-2},{"failures":[8,9],"tindex":"58506f7d-42ad-11e5-b8fb-3758294d803c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"status":-1},{"failures":[],"tindex":"58506f7e-42ad-11e5-b8fb-65d0b621d998","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + java.lang.String"},"variableMap":{"remainder":"rawLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:258","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[10,11],"tindex":"58506f7f-42ad-11e5-b8fb-ed50145afae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"variableMap":{"u":"compareCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:84","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Comparable<java.lang.Comparable<?>>.compareTo(java.lang.Comparable<?>)"},"status":-1},{"failures":[],"tindex":"58506f80-42ad-11e5-b8fb-67a5ac86da26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.length()"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"58506f81-42ad-11e5-b8fb-0d520ab3d229","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:132","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(true)"},"status":-1},{"failures":[],"tindex":"58509692-42ad-11e5-b8fb-8d837855078d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"status":1},{"failures":[],"tindex":"58509693-42ad-11e5-b8fb-832b7891dbf3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('/')"},"status":0}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}