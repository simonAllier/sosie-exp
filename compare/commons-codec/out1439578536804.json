{"failureDictionary":{"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":3,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":19,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":33,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":15,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":25,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":5,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":8,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":32,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":30,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":18,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":10,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":9,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":12,"org.apache.commons.codec.language.MetaphoneTest.testTCH":22,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":4,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":27,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":24,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":31,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":1},"transformations":[{"failures":[],"tindex":"0ca418ed-42b6-11e5-b6b2-3f102e2b85eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"g\", \"k\")"},"variableMap":{"txt":"boxContent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:554","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":1},{"failures":[],"tindex":"0ca418ee-42b6-11e5-b6b2-b5e9d9d1b250","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:373","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(java.lang.String.split(\"[+]\")))"},"status":-2},{"failures":[],"tindex":"0ca43fff-42b6-11e5-b6b2-27568405c226","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:483","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 17))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"0ca44000-42b6-11e5-b6b2-af44fb7cebb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"status":-2},{"failures":[0,1,2],"tindex":"0ca44001-42b6-11e5-b6b2-715938c1fdf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"variableMap":{"name1Char":"element","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"char[][int] = char[][1]"},"status":-1},{"failures":[3],"tindex":"0ca44002-42b6-11e5-b6b2-3f5ea6d4950d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:191","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"0ca44003-42b6-11e5-b6b2-59a4476e1689","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:184","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"0ca44004-42b6-11e5-b6b2-4d0f4695dd5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"int = '+'"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"0ca44005-42b6-11e5-b6b2-eb37f62a68e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"0ca44006-42b6-11e5-b6b2-4da64498fa80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"variableMap":{"local":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][31], byte[][52], byte[][10], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[10,11],"tindex":"0ca46717-42b6-11e5-b6b2-27ad9079f481","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"variableMap":{"b":"startSrc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:763","type":"CtAssignmentImpl","sourcecode":"int = 1"},"status":-1},{"failures":[12,13],"tindex":"0ca46718-42b6-11e5-b6b2-dbca19dcd2e4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"S\", \"TS\")"},"status":-1},{"failures":[14,15,16,17,18,19,20,21],"tindex":"0ca46719-42b6-11e5-b6b2-0f3229b46565","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"0ca4671a-42b6-11e5-b6b2-d7e8ca32f962","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:650","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"OO\", \"ER\", \"EN\", \"UY\", \"ED\", \"EM\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 3), 2, \"ER\", \"EN\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"X\", \"SK\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n    }\n} else {\n    if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n}"},"status":-2},{"failures":[22,23,24,25,26,27,28],"tindex":"0ca4671b-42b6-11e5-b6b2-d9165a3bfad2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"0ca48e2c-42b6-11e5-b6b2-1179ee79f476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"status":-2},{"failures":[29,25,30,31,32],"tindex":"0ca48e2d-42b6-11e5-b6b2-351e08a055dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:204","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.Metaphone.FRONTV","org.apache.commons.codec.digest.B64.B64T":"org.apache.commons.codec.language.Metaphone.FRONTV"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:235","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) && (!boolean)) {\n    java.lang.StringBuilder.append('J');\n} else {\n    java.lang.StringBuilder.append('K');\n}"},"status":-1},{"failures":[],"tindex":"0ca48e2e-42b6-11e5-b6b2-557719e6ee17","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:417","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DaitchMokotoffSoundex.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[33],"tindex":"0ca48e2f-42b6-11e5-b6b2-25908271f41b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[]), java.io.InputStream).doFinal()"},"status":-1},{"failures":[12],"tindex":"0ca48e30-42b6-11e5-b6b2-d95183b16ee6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:388","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:437","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}