{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":26,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":70,"org.apache.commons.codec.binary.HexTest.testCustomCharset":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_1_Returns5_Successfully":4,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":25,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":65,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":32,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":60,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":3,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":64,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":8,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":43,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":54,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":52,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_8_Returns3_Successfully":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":62,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":61,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":49,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":41,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":51,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":57,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":56,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":14,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":48,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":39,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":11,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":23,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":28,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":69,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":36,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":22,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":45,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":27,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":16,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_10_Returns3_Successfully":19,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":24,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":31,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":9,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":18,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":34,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":5,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":20,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":42},"transformations":[{"failures":[],"tindex":"28fbe26e-4440-11e5-88af-9f2ca89e47df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.Base64.MASK_6BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[],"tindex":"28fc097f-4440-11e5-88af-012143a050dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:406","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[0,1,2,3],"tindex":"28fc3090-4440-11e5-88af-936dcdcd660b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:404","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"28fc3091-4440-11e5-88af-d1b0581e1abb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-1},{"failures":[],"tindex":"28fc3092-4440-11e5-88af-5f5b06741f6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:153","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Soundex.soundex(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[20,21],"tindex":"28fc57a3-4440-11e5-88af-071124ac755e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"d","d":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:355","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"28fc57a4-4440-11e5-88af-ad3868f7498a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:351","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 4) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:392","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"28fc57a5-4440-11e5-88af-670fbdf8f514","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException)"},"status":-2},{"failures":[],"tindex":"28fc57a6-4440-11e5-88af-4dbf32ae5bb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:146","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50],"tindex":"28fc7eb7-4440-11e5-88af-8705582791a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += int"},"variableMap":{"patternLength":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"28fc7eb8-4440-11e5-88af-ddb452fb1706","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.RefinedSoundex.soundex(java.lang.String)"},"status":-2},{"failures":[],"tindex":"28fc7eb9-4440-11e5-88af-4d9c9d8beced","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:281","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain base64 characters: [\" + java.lang.String) + \"]\"))"},"status":-2},{"failures":[],"tindex":"28fc7eba-4440-11e5-88af-3b2d8aca4502","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"name2":"name2","name1":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:218","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"status":0},{"failures":[51],"tindex":"28fca5cb-4440-11e5-88af-5112bdbe093d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"byte[][8] = 0"},"variableMap":{"b":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"28fca5cc-4440-11e5-88af-19c014fb6b27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:412","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"E\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"str","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":-1},{"failures":[],"tindex":"28fca5cd-4440-11e5-88af-e7c4912382aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"n","to":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:247","type":"CtIfImpl","sourcecode":"if ((int > 0) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int - 1)))) >= 0)) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"28fcccde-4440-11e5-88af-6fa400626fba","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"variableMap":{"str":"lang","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"28fcccdf-4440-11e5-88af-9f76b0ded027","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"status":-2},{"failures":[],"tindex":"28fccce0-4440-11e5-88af-eb7150be5998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"variableMap":{"binaryData":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:172","type":"CtIfImpl","sourcecode":"if ((char[] == null) || ((char[].int) == 0)) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-2},{"failures":[70],"tindex":"28fccce1-4440-11e5-88af-8797ddd6f8fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"lastReplacement":"txt","replacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}