{"failureDictionary":{"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":35,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":48,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":40,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":41,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":21,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":34,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":17,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":6,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":15,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":29,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":14,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":19,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":4,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":13,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":44,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":33,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":38,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":36,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":23,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":42,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":20,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":24,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":37,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":5,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":9,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":26,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":31},"transformations":[{"failures":[],"tindex":"fea28add-42e4-11e5-9a1e-0f02a32eabb2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:160","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String)"},"status":-2},{"failures":[],"tindex":"fea2b1ee-42e4-11e5-9a1e-678cbe99d94c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:493","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"variableMap":{"currentLinePos":"length","savedPos":"length","pos":"length","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:413","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], 0, byte[].int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[0],"tindex":"fea2b1ef-42e4-11e5-9a1e-efa3c29b92c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:367","type":"CtAssignmentImpl","sourcecode":"char = '8'"},"variableMap":{"code":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:386","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(char)"},"status":-1},{"failures":[],"tindex":"fea2b1f0-42e4-11e5-9a1e-e7265243f78c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"len","minRating":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"len","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"fea2b1f1-42e4-11e5-9a1e-e7da7a591751","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:410","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])"},"status":-1},{"failures":[],"tindex":"fea2b1f2-42e4-11e5-9a1e-f7b6c653c40b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String + java.lang.String"},"variableMap":{"l":"rawLine","remainder":"rawLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:258","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"fea2d903-42e4-11e5-9a1e-dd8973b232c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n        byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"status":-2},{"failures":[11,12,13,14,15,16,17,18],"tindex":"fea2d904-42e4-11e5-9a1e-dd59c6be912f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:67","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^gn\", \"2n\")"},"status":-1},{"failures":[],"tindex":"fea2d905-42e4-11e5-9a1e-07b14ed3a668","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:92","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"status":1},{"failures":[],"tindex":"fea2d906-42e4-11e5-9a1e-65259ca71ec0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)"},"variableMap":{"upperName":"name2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:236","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(java.lang.String)"},"status":0},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"fea2d907-42e4-11e5-9a1e-910f37c3a9e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:239","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & int) != 0) {\n    int |= 1;\n} "},"variableMap":{"b":"pBytes","c":"cp","u":"keyLen","y":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"fea30018-42e4-11e5-9a1e-819e42ca57b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(',')"},"status":-2},{"failures":[],"tindex":"fea30019-42e4-11e5-9a1e-6d9e327cb8fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"fea3001a-42e4-11e5-9a1e-5b656c88c423","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[31,32],"tindex":"fea3001b-42e4-11e5-9a1e-718be425926d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"left","d":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:303","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[33,34,35],"tindex":"fea3001c-42e4-11e5-9a1e-573ad62102ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"l_raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:188","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-1},{"failures":[],"tindex":"fea3001d-42e4-11e5-9a1e-cd5eb9268923","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:475","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[36,37,38,39,40,41,42,43,0],"tindex":"fea3001e-42e4-11e5-9a1e-6db0c82d9196","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:379","type":"CtForEachImpl","sourcecode":"for (char char : java.lang.String.toCharArray()) {\n    if (java.lang.Character.isWhitespace(char)) {\n        continue;\n    } \n    char = java.lang.Character.toLowerCase(char);\n    if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(char))) {\n        char = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(char);\n    } \n    java.lang.StringBuilder.append(char);\n}"},"status":-1},{"failures":[44,45,46,47,48,49],"tindex":"fea3001f-42e4-11e5-9a1e-d5b289c89d26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[36,37,38,39,40,41,42,43,0],"tindex":"fea32730-42e4-11e5-9a1e-2d88bdb8a6d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"char = '*'"},"variableMap":{"last":"ch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"char = java.lang.Character.toLowerCase(char)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"fea2d906-42e4-11e5-9a1e-65259ca71ec0","diffs":[{"nodes":{},"edges":{"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":["org.apache.commons.codec.language.MatchRatingApproachEncoder.boolean isEncodeEquals(java.lang.String,java.lang.String) -> org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String removeAccents(java.lang.String)"]},"type":"graph"}]}]}