{"failureDictionary":{"org.apache.commons.codec.binary.HexTest.testCustomCharset":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":21,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":35,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":27,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":28,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":2,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":13,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":16,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":32,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":7,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":31,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":4,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":33,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":34,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":20,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":9,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":22,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":25,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.binary.Base64Test.testUUID":15,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":24,"org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull":10,"org.apache.commons.codec.language.SoundexTest.testB650":29,"org.apache.commons.codec.language.SoundexTest.testNewInstance":37,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":41,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":43,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":23,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":42,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":44,"org.apache.commons.codec.language.SoundexTest.testDifference":36,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":38,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":14,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":5,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":39,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":12,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":18,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":40,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":8},"transformations":[{"failures":[0,1,2,3,4],"tindex":"5995a4b6-42ae-11e5-a138-bbeae8c3fbb7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:385","type":"CtAssignmentImpl","sourcecode":"char = '7'"},"status":-1},{"failures":[],"tindex":"5995cbc7-42ae-11e5-a138-e7d6173a967d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:225","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.desSetKey(byte[])"},"status":-2},{"failures":[],"tindex":"5995cbc8-42ae-11e5-a138-9356987a915d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"right","encodeSize":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:312","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":1},{"failures":[],"tindex":"5995cbc9-42ae-11e5-a138-f7753c3e9c69","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:77","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"5995f2da-42ae-11e5-a138-f30639273809","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"len","to":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"status":-2},{"failures":[],"tindex":"5995f2db-42ae-11e5-a138-431dcb7735d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[5,6,7],"tindex":"5995f2dc-42ae-11e5-a138-4781cd707c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A', 'F')"},"status":-1},{"failures":[8,9],"tindex":"5995f2dd-42ae-11e5-a138-b5fa5b761207","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"c","y":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.boolean[][int]) {\n    int = (int >>> 2) | (int << 26);\n    int = (int >>> 2) | (int << 26);\n} else {\n    int = (int >>> 1) | (int << 27);\n    int = (int >>> 1) | (int << 27);\n}"},"status":-1},{"failures":[],"tindex":"5995f2de-42ae-11e5-a138-7b99ec02f959","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:288","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CZ\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 4, \"WICZ\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-2},{"failures":[10],"tindex":"599619ef-42ae-11e5-a138-5bf776265fe5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:160","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[11,12,13,14,15,16],"tindex":"599619f0-42ae-11e5-a138-1bc8de7b8365","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:188","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[17,18,19,20],"tindex":"599619f1-42ae-11e5-a138-bb653aaa1b43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"status":-1},{"failures":[],"tindex":"599619f2-42ae-11e5-a138-c93bf30b7030","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:252","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[5,6,21],"tindex":"599619f3-42ae-11e5-a138-5ba90dd89e5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:177","type":"CtReturnImpl","sourcecode":"return java.lang.String.length()"},"variableMap":{"pattern":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:591","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'R' ? int + 2 : int + 1"},"status":-1},{"failures":[22,23],"tindex":"599619f4-42ae-11e5-a138-975e2ad0c83b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"variableMap":{"key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(int)"},"status":-1},{"failures":[3],"tindex":"599619f5-42ae-11e5-a138-eb41cffcdedc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:435","type":"CtForEachImpl","sourcecode":"for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n    if ((char[][int]) == (char[][0])) {\n        char[][int] = char[][1];\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"59964106-42ae-11e5-a138-8bb4b9dbcad9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} "},"variableMap":{"cs1":"suffix","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:279","type":"CtForImpl","sourcecode":"for (int int = (java.lang.CharSequence.length()) - 1, int int = (java.lang.CharSequence.length()) - 1 ; int >= 0 ; int-- , int--) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"59964107-42ae-11e5-a138-130f24f82dbc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"char[][int] = char[][1]"},"variableMap":{"chrs":"out","index":"count","element":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:276","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}