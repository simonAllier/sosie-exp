{"failureDictionary":{"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Space_to_Nothing":13,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":22,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":7,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":3,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":4,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":27,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_One_Letter_to_Nothing":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":25,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":34,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":10,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty":14,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":16,"org.apache.commons.codec.binary.HexTest.testDecodeClassCastException":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":20,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":29,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":31,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":33,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":5,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":30,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":32,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":9},"transformations":[{"failures":[0,1,2,3,4],"tindex":"fa9ac7c5-4315-11e5-96aa-0b5401877b2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, char)"},"variableMap":{"buffer":"sBuf","charZero":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:195","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    java.lang.StringBuilder.append(char);\n} "},"status":-1},{"failures":[5,6,7],"tindex":"fa9aeed6-4315-11e5-96aa-975706827203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:377","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":-1},{"failures":[],"tindex":"fa9aeed7-4315-11e5-96aa-fda69ab3cba6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"firstLetter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:421","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"status":-2},{"failures":[8],"tindex":"fa9aeed8-4315-11e5-96aa-8b641ac189f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"fa9aeed9-4315-11e5-96aa-c78b40eb9426","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:339","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt(int))) >= 0"},"status":-2},{"failures":[9,10],"tindex":"fa9aeeda-4315-11e5-96aa-df3763b0c90d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"status":-1},{"failures":[],"tindex":"fa9aeedb-4315-11e5-96aa-a1251fee1f2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"blocksize":"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK","tempResult":"decodeTable","pBytes":"buffer","cp":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((byte >= 0) && (byte < (this.byte[].int))) {\n    final int int = this.byte[][byte];\n    if (int >= 0) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int);\n        org.apache.commons.codec.binary.BaseNCodec.Context.long = ((org.apache.commons.codec.binary.BaseNCodec.Context.long) << (org.apache.commons.codec.binary.Base32.int)) + int;\n        if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"fa9b15ec-4315-11e5-96aa-bf572a592409","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:303","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n    java.lang.StringBuilder.append('0');\n} else {\n    java.lang.StringBuilder.append('T');\n}"},"variableMap":{"code":"local","this":"this","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:229","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isPreviousChar(java.lang.StringBuilder, int, 'G')) {\n    boolean = true;\n} else {\n    boolean = false;\n}"},"status":0},{"failures":[],"tindex":"fa9b15ed-4315-11e5-96aa-49fe27946693","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"source","printable":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:85","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"BeiderMorseEncoder encode parameter is not of type String\");\n} "},"status":-2},{"failures":[11,12,13,14],"tindex":"fa9b15ee-4315-11e5-96aa-3bb76b9de25e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"status":-1},{"failures":[15,16,17],"tindex":"fa9b15ef-4315-11e5-96aa-2f5275433ae0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:387","type":"CtIfImpl","sourcecode":"if (java.lang.String.contains(java.lang.String)) {\n    final java.lang.String java.lang.String = java.lang.String.substring(0, 1);\n    java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"fa9b15f0-4315-11e5-96aa-592cfc8288bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:791","type":"CtInvocationImpl","sourcecode":"javax.crypto.Mac.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27],"tindex":"fa9b15f1-4315-11e5-96aa-7f8f029e08d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} "},"variableMap":{"cs1":"prefix","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:601","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.length()) > (java.lang.CharSequence.length())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"fa9b3d02-4315-11e5-96aa-5307d96b906d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:371","type":"CtIfImpl","sourcecode":"if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    java.io.ByteArrayOutputStream.write(int);\n} "},"variableMap":{"b":"length","org.apache.commons.codec.net.QuotedPrintableCodec.LF":"org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR","buffer":"buffer","org.apache.commons.codec.net.QuotedPrintableCodec.CR":"org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final int int = byte[][int];\n    if (int == '+') {\n        java.io.ByteArrayOutputStream.write(' ');\n    } else if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n        }\n    } else {\n        java.io.ByteArrayOutputStream.write(int);\n    }\n}"},"status":-2},{"failures":[5,6,7],"tindex":"fa9b3d03-4315-11e5-96aa-b9b7d38d4a83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:285","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"fa9b3d04-4315-11e5-96aa-07ec54088bf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"variableMap":{"original":"finalb","length":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE","key":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:261","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int)"},"status":-2},{"failures":[28],"tindex":"fa9b3d05-4315-11e5-96aa-f311c0a1c79f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:254","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException)"},"status":-1},{"failures":[29,30,31,32,33,34],"tindex":"fa9b3d06-4315-11e5-96aa-85b6f20ffa97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:179","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"fa9b3d07-4315-11e5-96aa-1da21fc45e7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:72","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}