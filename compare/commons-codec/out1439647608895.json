{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":94,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":40,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":102,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":16,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":105,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":24,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":32,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":52,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":25,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":83,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":99,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":41,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":88,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":62,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":6,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":57,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":63,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":66,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":50,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":64,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":31,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":49,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":65,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":1,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":11,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":103,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":0,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":70,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":93,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":45,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":35,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":13,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":42,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":81,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":96,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":100,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3":92,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":82,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":101,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":48,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":89,"org.apache.commons.codec.language.MetaphoneTest.testTCH":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":87,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":46,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":78,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnly":76,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":34,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":14,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":33,"org.apache.commons.codec.binary.Base64Test.testBase64":77,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":98,"org.apache.commons.codec.binary.Base64Test.testUUID":59,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":91,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":68,"org.apache.commons.codec.binary.Base64Test.testSingletons":73,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":97,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":85,"org.apache.commons.codec.binary.Base64Test.testPairs":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":104,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":84,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":79,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":36,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":55,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":56,"org.apache.commons.codec.binary.Base64Test.testCodec68":74,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":26,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":51,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":10,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":71,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":80,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":12,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":19,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":53,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":37,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":72,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":29,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":106,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":21,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":18,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":75,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":27,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":47,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":54,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":90,"org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked":69,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":60,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual":95},"transformations":[{"failures":[],"tindex":"dee81c01-4356-11e5-af0c-f9cb037c8e7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:97","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"m+\", \"M\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:76","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cy\", \"sy\")"},"status":1},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"dee81c02-4356-11e5-af0c-a54c4d0e1903","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"status":-1},{"failures":[19],"tindex":"dee81c03-4356-11e5-af0c-8f07a587e02c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:43","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[],"tindex":"dee84314-4356-11e5-af0c-cda01d276fec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"value","name2":"value","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"value","name1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:806","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-2},{"failures":[20,21,22,23,24,25],"tindex":"dee84315-4356-11e5-af0c-5776c9f6936a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:713","type":"CtIfImpl","sourcecode":"if (!(java.lang.CharSequence.subSequence(int, int).equals(this.java.lang.String))) {\n    return false;\n} else if (!(this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length())))) {\n    return false;\n} "},"status":-1},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"dee84316-4356-11e5-af0c-274c9487f22e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:367","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[44,45,46],"tindex":"dee84317-4356-11e5-af0c-f183bdeed8cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"dee84318-4356-11e5-af0c-651af5f61bf0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[], byte[]))"},"status":-2},{"failures":[47,48,49,50,51],"tindex":"dee86a29-4356-11e5-af0c-51f1fe45d051","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:57","type":"CtLocalVariableImpl","sourcecode":"int int = (((byte << 16) & 16777215) | ((byte << 8) & 65535)) | (byte & 255)"},"variableMap":{"b2":"c","b0":"c","b1":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:131","type":"CtLocalVariableImpl","sourcecode":"int int = byte"},"status":-1},{"failures":[],"tindex":"dee86a2a-4356-11e5-af0c-4ba37a5a58e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"lineSeparator","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"lineSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"status":1},{"failures":[52],"tindex":"dee86a2b-4356-11e5-af0c-3f9c083bc284","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86],"tindex":"dee86a2c-4356-11e5-af0c-2932e14fd380","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:295","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BaseNCodec.containsAlphabetOrPad(byte[])) {\n    final java.lang.String java.lang.String = org.apache.commons.codec.binary.StringUtils.newStringUtf8(byte[]);\n    throw new java.lang.IllegalArgumentException(((\"lineSeparator must not contain Base32 characters: [\" + java.lang.String) + \"]\"));\n} "},"variableMap":{"this":"this","lineSeparator":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:411","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"dee86a2d-4356-11e5-af0c-f7383ead41ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:158","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.InputStream.read(byte[])"},"status":-2},{"failures":[87,88,89],"tindex":"dee86a2e-4356-11e5-af0c-635c7dc2a4b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, 1)"},"variableMap":{"dc":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:163","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, org.apache.commons.codec.language.MatchRatingApproachEncoder.int)"},"status":-1},{"failures":[],"tindex":"dee86a2f-4356-11e5-af0c-79b0f9ef9a51","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:245","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"dee89140-4356-11e5-af0c-8719b64313d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"offset","to":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:85","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.NullPointerException();\n} else if ((int < 0) || (int < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if ((int > (byte[].int)) || ((int + int) > (byte[].int))) {\n    throw new java.lang.IndexOutOfBoundsException();\n} else if (int > 0) {\n    if (boolean) {\n        org.apache.commons.codec.binary.BaseNCodec.encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    } else {\n        org.apache.commons.codec.binary.BaseNCodec.decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false);\n} "},"status":-2},{"failures":[90,91,92,93,94,95,96],"tindex":"dee89141-4356-11e5-af0c-8d5adfd8d2d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[97,98,99,100,101,102,103,104,105,106],"tindex":"dee89142-4356-11e5-af0c-735e05de4cd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:332","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int, java.io.ByteArrayOutputStream)"},"status":-1},{"failures":[],"tindex":"dee89143-4356-11e5-af0c-6bbdaef3300d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:251","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = 0"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}