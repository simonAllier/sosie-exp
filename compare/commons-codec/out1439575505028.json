{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":2,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":35,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":6,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":30,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":13,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":20,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":17,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":3,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":22,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":23,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":4,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":10,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":29,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":0,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":7,"org.apache.commons.codec.language.RefinedSoundexTest.testLocaleIndependence":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":28,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":11,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":26,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":27,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":21},"transformations":[{"failures":[],"tindex":"fd8f5549-42ae-11e5-934d-bdd9de86e411","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"charset","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"charset","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-2},{"failures":[],"tindex":"fd8f7c5a-42ae-11e5-934d-c39673fbe9df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.map(char)"},"status":-2},{"failures":[0],"tindex":"fd8f7c5b-42ae-11e5-934d-35fdca736a7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:277","type":"CtReturnImpl","sourcecode":"return ((((java.lang.String.equalsIgnoreCase(\"E\")) || (java.lang.String.equalsIgnoreCase(\"A\"))) || (java.lang.String.equalsIgnoreCase(\"O\"))) || (java.lang.String.equalsIgnoreCase(\"I\"))) || (java.lang.String.equalsIgnoreCase(\"U\"))"},"variableMap":{"letter":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:831","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 2), 2, \"AS\", \"OS\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 1), 1, \"A\", \"O\"))) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"fd8f7c5c-42ae-11e5-934d-01f44a40b226","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.RefinedSoundex.soundex(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[1,0],"tindex":"fd8f7c5d-42ae-11e5-934d-47c79ba70c73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"fd8f7c5e-42ae-11e5-934d-efdf77e33078","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"finalb","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":-1},{"failures":[9],"tindex":"fd8f7c5f-42ae-11e5-934d-d90fe22a473f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Unable to resolve required resource:\" + (org.apache.commons.codec.language.bm.Lang.java.lang.String)))"},"variableMap":{"org.apache.commons.codec.language.bm.Lang.LANGUAGE_RULES_RN":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-1},{"failures":[],"tindex":"fd8fa370-42ae-11e5-934d-ad12b2d43ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 1"},"variableMap":{"ii":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"fd8fa371-42ae-11e5-934d-b9ce26bb9848","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"pos","y":"org.apache.commons.codec.net.QuotedPrintableCodec.SAFE_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:312","type":"CtIfImpl","sourcecode":"if (int > ((org.apache.commons.codec.net.QuotedPrintableCodec.int) - 2)) {\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n    java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n} "},"status":-2},{"failures":[10,11,12,13,14],"tindex":"fd8fa372-42ae-11e5-934d-37ff7487104e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.addAll(java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>);\n} "},"status":-1},{"failures":[2,3,4,5,6,7,8],"tindex":"fd8fa373-42ae-11e5-934d-8f13d56e47a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= (16 + ((byte[][0]) & 255)) ; int++) {\n    java.security.MessageDigest.update(byte[]);\n}"},"variableMap":{"altCtx":"ctx1","altResult":"keyBytes","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"fd8fa374-42ae-11e5-934d-6ff62e069248","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"status":1},{"failures":[],"tindex":"fd8fa375-42ae-11e5-934d-4b7dad4a0476","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:254","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException)"},"status":-2},{"failures":[15],"tindex":"fd8fca86-42ae-11e5-934d-31f0bd973509","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"incl"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:440","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>.putAll(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(java.lang.String), ((java.lang.String + \"->\") + java.lang.String)))"},"status":-1},{"failures":[16],"tindex":"fd8fca87-42ae-11e5-934d-c7708e6f4676","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:139","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[1,0,17,18],"tindex":"fd8fca88-42ae-11e5-934d-0d9c465caabf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('L')"},"status":-1},{"failures":[19,20,21,22,23,24],"tindex":"fd8fca89-42ae-11e5-934d-c517afa2b715","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"variableMap":{"key":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:196","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[],"tindex":"fd8fca8a-42ae-11e5-934d-c7fde17abce1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:182","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim()"},"variableMap":{"lsScanner":"scanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine()"},"status":0},{"failures":[25,26,27,28,29,30],"tindex":"fd8fca8b-42ae-11e5-934d-cb6fe1cda764","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:521","type":"CtOperatorAssignmentImpl","sourcecode":"long += (((long + (int)) - 1) / (int)) * (int)"},"variableMap":{"chunkSeparatorLength":"len","len":"todo","lineLength":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:206","type":"CtOperatorAssignmentImpl","sourcecode":"long -= int"},"status":-1},{"failures":[31,32,33,34,35],"tindex":"fd8fca8c-42ae-11e5-934d-25053846795a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < ((byte[].int) - 3) ; int++) {\n    int int = org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.getUnsignedOctet(int, byte[]);\n    if (int < (org.apache.commons.codec.net.QuotedPrintableCodec.int)) {\n        int += org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, !(java.util.BitSet.get(int)), java.io.ByteArrayOutputStream);\n    } else {\n        org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeByte(int, ((!(java.util.BitSet.get(int))) || org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int))), java.io.ByteArrayOutputStream);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte);\n        int = 1;\n    }\n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}