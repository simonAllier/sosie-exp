{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":9,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":59,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":48,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":47,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":22,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":66,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":50,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":38,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":46,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":56,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":4,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":36,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":39,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":61,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":58,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":7,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":19,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":18,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":55,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":52,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":13,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":17,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":57,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":11,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":45,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":62,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":21,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":33,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":3,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":23,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":40,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":15,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":20,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":16,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":27,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":24,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":37,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":53,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":49,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":43,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":14,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":30,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":51,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":64,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":26,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":65,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":29,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":60,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":63,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":54,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":31,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":41,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":10,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":5,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":34,"org.apache.commons.codec.language.MetaphoneTest.testTCH":42,"org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":1},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"b9bb8da1-42ad-11e5-84c3-792a76e7db84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])"},"variableMap":{"keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:72","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"b9bbb4b2-42ad-11e5-84c3-4b3ae9114665","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.int]"},"status":-2},{"failures":[6],"tindex":"b9bbb4b3-42ad-11e5-84c3-f720c8e8cc8c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String));\n} "},"status":-1},{"failures":[7,8,9],"tindex":"b9bbb4b4-42ad-11e5-84c3-596f45ea4f9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:110","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ly\", \"Ly\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"h\", \"2\")"},"status":-1},{"failures":[10,11,12,13,14,15,16],"tindex":"b9bbdbc5-42ad-11e5-84c3-37933db8708e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:353","type":"CtReturnImpl","sourcecode":"return this.java.lang.String"},"status":-1},{"failures":[],"tindex":"b9bbdbc6-42ad-11e5-84c3-d5c23f442992","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"status":-2},{"failures":[],"tindex":"b9bbdbc7-42ad-11e5-84c3-dd7119f5d4da","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:71","type":"CtIfImpl","sourcecode":"if (((java.lang.Character.toUpperCase(char)) != (java.lang.Character.toUpperCase(char))) && ((java.lang.Character.toLowerCase(char)) != (java.lang.Character.toLowerCase(char)))) {\n    return false;\n} "},"variableMap":{"c1":"key","c2":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:300","type":"CtForEachImpl","sourcecode":"for (final char char : char[]) {\n    if (char == char) {\n        return true;\n    } \n}"},"status":0},{"failures":[17,18,19,20,21,22,23,24],"tindex":"b9bbdbc8-42ad-11e5-84c3-272e218694cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:305","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[25,26,27,28,29,3,4,30,5],"tindex":"b9bbdbc9-42ad-11e5-84c3-a525f5bd3851","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), byte[][31], byte[][30], 3, java.lang.StringBuilder)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:284","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][1], byte[][7], byte[][13], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"b9bbdbca-42ad-11e5-84c3-3bcc01ff2deb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:180","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[31],"tindex":"b9bbdbcb-42ad-11e5-84c3-dd6d2d0eb611","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[32,33],"tindex":"b9bc02dc-42ad-11e5-84c3-ab7358b22ca4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])"},"variableMap":{"keyBytes":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:182","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], null)"},"status":-1},{"failures":[25,26,27,28,29,3,4,30,5],"tindex":"b9bc02dd-42ad-11e5-84c3-379176f90454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:277","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":-1},{"failures":[],"tindex":"b9bc02de-42ad-11e5-84c3-fdc852607327","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[34,35],"tindex":"b9bc02df-42ad-11e5-84c3-ff0f9e0adab1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[36,37,38,39],"tindex":"b9bc02e0-42ad-11e5-84c3-81f3af653f9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} "},"variableMap":{"cs1":"input","cs2":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b9bc02e1-42ad-11e5-84c3-fda58ba0fcaf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"status":0},{"failures":[],"tindex":"b9bc02e2-42ad-11e5-84c3-71a7a8132977","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int])"},"status":-2},{"failures":[],"tindex":"b9bc29f3-42ad-11e5-84c3-c18ecaa9b9c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"b9bc29f4-42ad-11e5-84c3-93446fd7e2ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0) {\n    java.lang.StringBuilder.append(\"|\");\n} "},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > org.apache.commons.codec.language.Metaphone.(getMaxCodeLen())) {\n    java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen());\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}