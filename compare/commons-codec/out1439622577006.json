{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":125,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":47,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":38,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":1,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":14,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":15,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":39,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":108,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":104,"org.apache.commons.codec.binary.Base64Test.testTriplets":65,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":129,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":0,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":51,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":119,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":101,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":80,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":36,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":93,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":26,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":98,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":28,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":27,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":8,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":74,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":69,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":75,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":124,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":79,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":25,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":23,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":76,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":24,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":77,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":117,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":130,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":109,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":83,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":105,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":88,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":46,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":17,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":68,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":2,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":114,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":128,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":7,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":9,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":42,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":99,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":52,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":67,"org.apache.commons.codec.language.SoundexTest.testNewInstance":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":61,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":33,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":123,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":100,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":110,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":30,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":34,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":126,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":4,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":95,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":116,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":11,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":82,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":12,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":13,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":94,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":78,"org.apache.commons.codec.binary.Base64Test.testBase64":92,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":50,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":44,"org.apache.commons.codec.binary.Base64Test.testUUID":71,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":81,"org.apache.commons.codec.binary.Base64Test.testSingletons":87,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":115,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":41,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":48,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":121,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":91,"org.apache.commons.codec.binary.Base64Test.testPairs":70,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":120,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":40,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":96,"org.apache.commons.codec.binary.Base64Test.testCodec112":84,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":49,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":58,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":64,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":21,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":66,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":118,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":111,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":62,"org.apache.commons.codec.binary.Base64Test.testCodec68":89,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":18,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":112,"org.apache.commons.codec.language.SoundexTest.testEncodeEmpty":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":102,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":85,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":97,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":53,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":55,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":59,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":86,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":56,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":131,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":127,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":113,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":22,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":10,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":35,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":3,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":122,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":103,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":73,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":90,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":5,"org.apache.commons.codec.language.SoundexTest.testDifference":19,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":45,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":54,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":107,"org.apache.commons.codec.binary.Base64Test.testCodeIntegerNull":63,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":106},"transformations":[{"failures":[],"tindex":"96a52a23-431c-11e5-8a27-1d8d23b28c69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.int[][][4][(int & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((int >>> 7) & 3) | ((int >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][6][((int >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((int >>> 21) & 15) | ((int >>> 22) & 48))])"},"status":-2},{"failures":[],"tindex":"96a52a24-431c-11e5-8a27-f3054fbb6faa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:115","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"96a52a25-431c-11e5-8a27-ff2ffc4dc66d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:481","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"96a55136-431c-11e5-8a27-07dec961c617","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:386","type":"CtIfImpl","sourcecode":"if ((int % 7) != 0) {\n    java.security.MessageDigest.update(byte[], 0, int);\n} "},"variableMap":{"pBytes":"altResult","ctx":"ctx","i":"keyLen","keyLen":"saltLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int - 1) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String);\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"status":-1},{"failures":[],"tindex":"96a55137-431c-11e5-8a27-9d48622ce497","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_N"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[],"tindex":"96a55138-431c-11e5-8a27-e9a515f495fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:181","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[1,2,3],"tindex":"96a55139-431c-11e5-8a27-492c990bde41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:480","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][53], byte[][11], byte[][32], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"96a5513a-431c-11e5-8a27-f58639f92fe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        boolean = false;\n    } \n    continue;\n} "},"status":-2},{"failures":[],"tindex":"96a5513b-431c-11e5-8a27-1976d55a2789","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:391","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += org.apache.commons.codec.binary.Base64.int"},"variableMap":{"currentLinePos":"pos","org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"96a5784c-431c-11e5-8a27-ab309544f330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:262","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)"},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41],"tindex":"96a5784d-431c-11e5-8a27-d996d3a046db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:486","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"96a5784e-431c-11e5-8a27-8f5993e4a1a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maxCodeLen":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"status":1},{"failures":[42,43,44,45,46,47],"tindex":"96a5784f-431c-11e5-8a27-cdebabf0ae53","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:637","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[48,49,50,51,52,53,54,55],"tindex":"96a57850-431c-11e5-8a27-4517149eb8cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:77","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"96a57851-431c-11e5-8a27-6d10428fe9db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 16, 65535, int[])"},"status":-2},{"failures":[],"tindex":"96a57852-431c-11e5-8a27-0bf6b90327f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:295","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"status":-2},{"failures":[56,57,58,59,60,61,62],"tindex":"96a59f63-431c-11e5-8a27-290318ca18fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"variableMap":{"text":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale).toCharArray()"},"status":-1},{"failures":[63],"tindex":"96a59f64-431c-11e5-8a27-a1ab878f1988","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":-1},{"failures":[53,54,64,55,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,31,32,113,114,115,116,117,118,119,120,121,122,123,33,124,125,126,127,128,129,130,34,35,36,37,38,131,39,40,41],"tindex":"96a59f65-431c-11e5-8a27-b53304084c6e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:269","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) == null) || ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[].int) < ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + int))) {\n    return org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec.Context);\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}