{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":4,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":25,"org.apache.commons.codec.binary.HexTest.testCustomCharset":41,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":36,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":29,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":11,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":44,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":40,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":26,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":24,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":33,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":27,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":34,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":39,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":16,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":30,"org.apache.commons.codec.binary.Base64Test.testUUID":46,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":9,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":17,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":7,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":37,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":6,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":18,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":8,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":23,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":31,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":43,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":14,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":42,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":15,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":5,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":38},"transformations":[{"failures":[],"tindex":"efb1cc97-42ec-11e5-a2a5-db1b68860422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"ii":"c","keyLen":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:368","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"status":1},{"failures":[0,1,2,3,4],"tindex":"efb1f3a8-42ec-11e5-a2a5-4fb1f5171abb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:303","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"efb1f3a9-42ec-11e5-a2a5-2de08b25d89c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(java.lang.String);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException);\n}"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"efb1f3aa-42ec-11e5-a2a5-2fb8e494c320","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:256","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.digest.Md5Crypt.int) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest();\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[]);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"altResult","finalb":"altResult","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"cnt","saltBytes":"altResult","org.apache.commons.codec.digest.Md5Crypt.ROUNDS":"cnt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:223","type":"CtWhileImpl","sourcecode":"while (int > int) {\n    java.security.MessageDigest.update(byte[], 0, int);\n    int -= int;\n}"},"status":-1},{"failures":[],"tindex":"efb1f3ab-42ec-11e5-a2a5-f79d091cba04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:622","type":"CtIfImpl","sourcecode":"if (((int == 0) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"M\", \"N\", \"L\", \"W\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"Z\") ? int + 2 : int + 1;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"SC\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else {\n    if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"S\", \"Z\") ? int + 2 : int + 1;\n}"},"status":-2},{"failures":[6,10],"tindex":"efb21abc-42ec-11e5-a2a5-bf9b3b021922","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:424","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(\"$\");\n} "},"status":-1},{"failures":[0,1,3],"tindex":"efb21abd-42ec-11e5-a2a5-b13614b3b4fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:366","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":-1},{"failures":[17,18,19,20,21,22,23,24],"tindex":"efb21abe-42ec-11e5-a2a5-51ec2f9451ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:194","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"variableMap":{"saltString":"text","org.apache.commons.codec.Charsets.UTF_8":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.doEncoding(java.lang.String.getBytes(java.nio.charset.Charset))"},"status":-1},{"failures":[],"tindex":"efb21abf-42ec-11e5-a2a5-bbaa7c2c1aad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:147","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"lastReplacement":"txt","replacement":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ph\", \"fh\")"},"status":1},{"failures":[],"tindex":"efb21ac0-42ec-11e5-a2a5-835572d86f6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"blocksize":"pos","cp":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:387","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[25,26,27,28,29,30,31],"tindex":"efb21ac1-42ec-11e5-a2a5-a9f684a4d0fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:217","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"efb21ac2-42ec-11e5-a2a5-b1613876f669","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.nysiis(java.lang.String)"},"status":-2},{"failures":[],"tindex":"efb241d3-42ec-11e5-a2a5-f7e93f5508c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"efb241d4-42ec-11e5-a2a5-573d13f9b78c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:365","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int])"},"variableMap":{"bytes":"saltBytes","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:156","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[],"tindex":"efb241d5-42ec-11e5-a2a5-1d4c5cea07e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:452","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"encodeTable","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[32,33,34,35,36,37],"tindex":"efb241d6-42ec-11e5-a2a5-091d2af54e5b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[38,39],"tindex":"efb241d7-42ec-11e5-a2a5-37b6a2eb8986","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"variableMap":{"ii":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[40],"tindex":"efb241d8-42ec-11e5-a2a5-134527830333","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:385","type":"CtIfImpl","sourcecode":"if ((boolean) && (org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.containsKey(char))) {\n    char = org.apache.commons.codec.language.DaitchMokotoffSoundex.java.util.Map<java.lang.Character, java.lang.Character>.get(char);\n} "},"status":-1},{"failures":[5,6,7,9,10,11,12,13],"tindex":"efb241d9-42ec-11e5-a2a5-9dc1db610d7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:249","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[41,42,43,44,45,46,47],"tindex":"efb268ea-42ec-11e5-a2a5-558ebb08c672","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:362","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"variableMap":{"c":"f"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:91","type":"CtAssignmentImpl","sourcecode":"int = int | org.apache.commons.codec.binary.Hex.(org.apache.commons.codec.binary.Hex.toDigit(char[][int], int))"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}