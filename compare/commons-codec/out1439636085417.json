{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":17,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":10,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":20,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":13,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":11,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":16,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":19,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":3,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":4,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":21,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":0,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":14,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":15,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":9,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":12,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":1,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":18},"transformations":[{"failures":[0,1],"tindex":"0a5fb0a2-433c-11e5-bbf1-05841d894fdf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"variableMap":{"name1Char":"element","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"char[][int] = char[][1]"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"0a61d383-433c-11e5-bbf1-13ec2699b755","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[],"tindex":"0a61d384-433c-11e5-bbf1-75eabe17aad4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:85","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(';')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-2},{"failures":[],"tindex":"0a61d385-433c-11e5-bbf1-d7bcacdb805e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:315","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"))"},"status":-2},{"failures":[],"tindex":"0a61d386-433c-11e5-bbf1-8d1a0760d847","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:231","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (org.apache.commons.codec.language.Soundex.getSoundexMapping().int))) {\n    throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + char));\n} "},"status":-2},{"failures":[],"tindex":"0a61d387-433c-11e5-bbf1-c3ac129d26c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:222","type":"CtIfImpl","sourcecode":"if (!(this.boolean)) {\n    int = 1;\n} "},"variableMap":{"found":"eof","patternLength":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:432","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"0a61d388-433c-11e5-bbf1-cfdddde605c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:470","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha256Digest(), java.io.InputStream)"},"status":-2},{"failures":[],"tindex":"0a61d389-433c-11e5-bbf1-416a2ea18abc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:149","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush()"},"status":0},{"failures":[],"tindex":"0a61fa9a-433c-11e5-bbf1-5d0aa79e98c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[14,15,16,17],"tindex":"0a61fa9b-433c-11e5-bbf1-bdf805ab1f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:460","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"0a61fa9c-433c-11e5-bbf1-698ad385d08b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"pos","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:406","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"0a61fa9d-433c-11e5-bbf1-334c65499b1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:232","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"The character is not mapped: \" + char))"},"status":-2},{"failures":[],"tindex":"0a61fa9e-433c-11e5-bbf1-751aee69d1c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])"},"status":0},{"failures":[18,19,20,21],"tindex":"0a61fa9f-433c-11e5-bbf1-51c096d6e949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][47], byte[][5], byte[][26], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"b","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; int < 6 ; int++) {\n    int <<= 1;\n    if (((byte[][int]) & int) != 0) {\n        int |= 1;\n    } \n    int >>>= 1;\n    if (int == 0) {\n        int++;\n        int = 128;\n    } \n    java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n}"},"status":-1},{"failures":[],"tindex":"0a61faa0-433c-11e5-bbf1-b1431601387b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.RefinedSoundex.soundex(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"0a6221b1-433c-11e5-bbf1-d7456315e7c7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:300","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"0a6221b2-433c-11e5-bbf1-1f7b47ae024d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:102","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:231","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]), java.io.InputStream).doFinal()"},"status":-2},{"failures":[22],"tindex":"0a6221b3-433c-11e5-bbf1-e73a44aca480","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false, true))"},"status":-1},{"failures":[],"tindex":"0a6221b4-433c-11e5-bbf1-819a261df4c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"this":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"0a6221b5-433c-11e5-bbf1-7570373ee879","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(int)"},"variableMap":{"buffer":"local","rounds":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"0a61d389-433c-11e5-bbf1-416a2ea18abc","diffs":[{"branches":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush(boolean).t3","org.apache.commons.codec.binary.BaseNCodecOutputStream_void_flush().b"]},"type":"branch"},{"nodes":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()"]},"edges":{"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean) -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"],"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":["org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean) -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush()","org.apache.commons.codec.binary.BaseNCodecOutputStream.void close() -> org.apache.commons.codec.binary.BaseNCodecOutputStream.void flush(boolean)"]},"type":"graph"}]}]}