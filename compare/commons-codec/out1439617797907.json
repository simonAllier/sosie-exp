{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":51,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":67,"org.apache.commons.codec.binary.HexTest.testCustomCharset":4,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":38,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":3,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":24,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":50,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":62,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":37,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":47,"org.apache.commons.codec.binary.Base64Test.testUUID":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":8,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":42,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":12,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":58,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":61,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":29,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":17,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":26,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":1,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":5,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":16,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":48,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":11,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":21,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":44,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":14,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":22,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":65,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":10,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":56,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":6,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":52,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":59,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":63,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":9,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":68,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":25,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":18,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":39,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":19,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":32,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":36,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":43,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":40,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":31,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":35,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":49,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":55,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":57,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":60,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":34,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":66,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":15,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":23,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":53,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":7,"org.apache.commons.codec.language.MetaphoneTest.testTCH":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":64,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":33,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":46},"transformations":[{"failures":[0],"tindex":"76148737-4311-11e5-baf1-5d111a96acac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:300","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[1,2,3,4,5,6],"tindex":"76148738-4311-11e5-baf1-eda2b0a07041","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"76148739-4311-11e5-baf1-271d96a588aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-2},{"failures":[7,8,9],"tindex":"7614873a-4311-11e5-baf1-9f777a8b994e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"7614ae4b-4311-11e5-baf1-951d91d6531e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-2},{"failures":[10,11],"tindex":"7614ae4c-4311-11e5-baf1-91b1c94b756c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:281","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacMd5(byte[], java.io.InputStream))"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21],"tindex":"7614ae4d-4311-11e5-baf1-e32dc69bbe37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:200","type":"CtWhileImpl","sourcecode":"while (long > 0) {\n    int int = ((int)(java.lang.Math.min(byte[].int, long)));\n    int = org.apache.commons.codec.binary.BaseNCodecInputStream.read(byte[], 0, int);\n    if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n        break;\n    } \n    long -= int;\n}"},"status":-1},{"failures":[],"tindex":"7614ae4e-4311-11e5-baf1-5baf0d692d79","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:237","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(java.io.InputStream))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(java.io.InputStream))"},"status":-2},{"failures":[],"tindex":"7614ae4f-4311-11e5-baf1-c58d475dae07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"variableMap":{"base64Data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"7614ae50-4311-11e5-baf1-13a9e278d843","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:484","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[7,8],"tindex":"7614ae51-4311-11e5-baf1-2bb2a85bb9d3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:605","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"7614ae52-4311-11e5-baf1-0f0b43ad9761","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:74","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return false;\n} "},"variableMap":{"cs1":"cs2","cs2":"cs1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return java.lang.CharSequence.equals(java.lang.CharSequence)"},"status":-2},{"failures":[],"tindex":"7614d563-4311-11e5-baf1-7ffd6f39dc66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int >>> int) ^ int) & int"},"variableMap":{"a":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","b":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","m":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT","n":"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.int"},"status":-2},{"failures":[22,23,24,25,26,27,28,29,30,31],"tindex":"7614d564-4311-11e5-baf1-cbf459344aaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('F')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40],"tindex":"7614d565-4311-11e5-baf1-916950bc669d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:429","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7614d566-4311-11e5-baf1-d1e9f6deffba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[41,42,43,44,45,46,47,10,48,49,50,51,52,11,53,54,55,56,4,57,5,58,6],"tindex":"7614d567-4311-11e5-baf1-dd9a98d68aab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '1'"},"variableMap":{"jj":"j","l_ascii":"toDigits","bits":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:145","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char[][((240 & (byte[][int])) >>> 4)]"},"status":-1},{"failures":[],"tindex":"7614d568-4311-11e5-baf1-af0388f68c59","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:340","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[], 0)"},"status":-2},{"failures":[12,59,60,61,62,63,64,13,14,15,16,65,66,17,67,68,18,19,20,21,69],"tindex":"7614d569-4311-11e5-baf1-1727073b0beb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:135","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return 0;\n} else {\n    int int = 0;\n    while (int == 0) {\n        if (!(org.apache.commons.codec.binary.BaseNCodec.hasData(org.apache.commons.codec.binary.BaseNCodec.Context))) {\n            final byte[] byte[] = new byte[boolean ? 4096 : 8192];\n            final int int = java.io.InputStream.read(byte[]);\n            if (boolean) {\n                org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            } else {\n                org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n            }\n        } \n        int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n    }\n    return int;\n}"},"status":-1},{"failures":[],"tindex":"7614fc7a-4311-11e5-baf1-0fe58c707687","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:162","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isLetter(char))) {\n    return 0;\n} "},"variableMap":{"c":"java.lang.Character.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:906","type":"CtReturnImpl","sourcecode":"return java.lang.Character.char"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}