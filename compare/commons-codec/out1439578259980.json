{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":10,"org.apache.commons.codec.binary.HexTest.testCustomCharset":28,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":18,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":33,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testEncodeNull":53,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":2,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":1,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":12,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":21,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":24,"org.apache.commons.codec.binary.Base64Test.testUUID":32,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":4,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":37,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":39,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":0,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":45,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":31,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":29,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":36,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":47,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":15,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":26,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":48,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":46,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull":52,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":40,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":44,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":5,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":8,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":43,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":41,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":50,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":11,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":6,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":13},"transformations":[{"failures":[0],"tindex":"67a5a1e6-42b5-11e5-806b-11860709bf96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String));\n} "},"status":-1},{"failures":[],"tindex":"67a5c8f7-42b5-11e5-806b-f5cdd1999a1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"SSS\")"},"status":-2},{"failures":[],"tindex":"67a5f008-42b5-11e5-806b-d7d05cde3712","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:86","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('<')"},"status":0},{"failures":[],"tindex":"67a5f009-42b5-11e5-806b-8ba7d2229f5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:161","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"variableMap":{"salt":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX","keyBytes":"keyBytes","this":"this","org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[], ((org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[],"tindex":"67a5f00a-42b5-11e5-806b-094347b8c589","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"variableMap":{"left":"j","right":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:375","type":"CtAssignmentImpl","sourcecode":"int[][int++] = (int << 16) | (int & 65535)"},"status":-2},{"failures":[],"tindex":"67a6171b-42b5-11e5-806b-7932aa1db275","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((java.lang.String.indexOf('W')) > (-1)) || ((java.lang.String.indexOf('K')) > (-1))) || ((java.lang.String.indexOf(\"CZ\")) > (-1))) || ((java.lang.String.indexOf(\"WITZ\")) > (-1))"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"67a6171c-42b5-11e5-806b-5ba5d8722266","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:497","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int"},"status":-1},{"failures":[7,8,9,10,11,12],"tindex":"67a6171d-42b5-11e5-806b-5566edd0a59b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:105","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleAEIOUY(org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[13,14,15,16],"tindex":"67a6171e-42b5-11e5-806b-4f6d3e34c2cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][6], byte[][12], 4, java.lang.StringBuilder)"},"variableMap":{"finalb":"b","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:237","type":"CtForImpl","sourcecode":"for ( ; int < 6 ; int++) {\n    int <<= 1;\n    if (((byte[][int]) & int) != 0) {\n        int |= 1;\n    } \n    int >>>= 1;\n    if (int == 0) {\n        int++;\n        int = 128;\n    } \n    java.lang.StringBuilder.setCharAt(int, ((char)(org.apache.commons.codec.digest.UnixCrypt.int[][int])));\n}"},"status":-1},{"failures":[17,18,19,20,21,22,23,24],"tindex":"67a63e2f-42b5-11e5-806b-ef6b7caf83ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:621","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[25,26,27],"tindex":"67a63e30-42b5-11e5-806b-17026a74f016","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][37], byte[][58], byte[][16], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[28,29,30,31,32,33],"tindex":"67a63e31-42b5-11e5-806b-891d42557f16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"j","encodeSize":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:92","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"67a63e32-42b5-11e5-806b-f9af52087eaa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:101","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"wh3\", \"Wh3\")"},"variableMap":{"txt":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.StringEncoder.encode(java.lang.String)"},"status":-2},{"failures":[],"tindex":"67a66543-42b5-11e5-806b-73c732d52204","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-2},{"failures":[13,14,15,16],"tindex":"67a66544-42b5-11e5-806b-2f8489393580","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:286","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < 32 ; int += 4) {\n    int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, int, int, int, int[]);\n    int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, (int + 2), int, int, int[]);\n}"},"variableMap":{"schedule":"results","left":"right","this":"this","eSwap0":"left","right":"right","eSwap1":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 16, 65535, int[])"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,1,2],"tindex":"67a66545-42b5-11e5-806b-0761ee9e1851","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null) {\n    final int int = java.lang.Math.min(org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context), int);\n    java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[], int, int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n    } \n    return int;\n} "},"status":-2},{"failures":[42,43,44,45,46,47,48,49,25,26,27,50],"tindex":"67a68c56-42b5-11e5-806b-5de92a44e9a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:506","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[51,52,53],"tindex":"67a68c57-42b5-11e5-806b-8709dccc67e6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"67a68c58-42b5-11e5-806b-e3030583f9d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:265","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}