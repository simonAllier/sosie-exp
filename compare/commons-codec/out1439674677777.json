{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":2,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":14,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":1,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":13,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":4,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":16,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":5,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":24,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":0,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":18,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":3,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":7,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":9,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":26,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":8},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"e521bddf-4395-11e5-a9b7-3b3a16d2919b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n}"},"status":-1},{"failures":[6],"tindex":"e521e4f0-4395-11e5-a9b7-71da6eb0c1f4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:426","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"status":-1},{"failures":[],"tindex":"e521e4f1-4395-11e5-a9b7-955c39b728cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:332","type":"CtLocalVariableImpl","sourcecode":"char char = '/'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:191","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.Soundex.map(char)"},"status":-2},{"failures":[7],"tindex":"e5220c02-4395-11e5-a9b7-3d2629761c06","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"$\")"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[],"tindex":"e5220c03-4395-11e5-a9b7-7f0363f45b01","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][0])"},"variableMap":{"parts":"parts","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:311","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][3])"},"status":-2},{"failures":[],"tindex":"e5220c04-4395-11e5-a9b7-0b99c5456454","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:200","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"variableMap":{"this":"ascii","value":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"e5223315-4395-11e5-a9b7-658e971ca95e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:515","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 5))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"e5223316-4395-11e5-a9b7-d1c2a058c077","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"n","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"n","minRating":"wdsz","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"wdsz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:244","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isLastChar(int, int)) {\n    break;\n} "},"status":-2},{"failures":[1,3,4],"tindex":"e5223317-4395-11e5-a9b7-41d8ff141aa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:285","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[8],"tindex":"e5225a28-4395-11e5-a9b7-adddf5c4a2e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha384Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest()"},"status":-1},{"failures":[3,4],"tindex":"e5225a29-4395-11e5-a9b7-3b7f19f0f3d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:635","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:341","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[],"tindex":"e5225a2a-4395-11e5-a9b7-e351dc426f2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:283","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.transcodeRemaining(char[][(int - 1)], char[][int], char, char)"},"status":-2},{"failures":[],"tindex":"e5225a2b-4395-11e5-a9b7-154a8d8ea2a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"keyBytes","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"keyBytes","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"e522813c-4395-11e5-a9b7-813812d03005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(java.lang.String, org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"str":"txt","upperName":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"j\", \"y\")"},"status":1},{"failures":[9,10,11,12,13,14,15,16],"tindex":"e522813d-4395-11e5-a9b7-ad6dfde058b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= (16 + ((byte[][0]) & 255)) ; int++) {\n    java.security.MessageDigest.update(byte[]);\n}"},"variableMap":{"altCtx":"ctx","altResult":"keyBytes","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:251","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[14,15,16],"tindex":"e522813e-4395-11e5-a9b7-b757f9e04326","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][21], byte[][1], byte[][11], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][28], byte[][49], byte[][7], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[17,18,19,20,21,22,23,24,25],"tindex":"e522a84f-4395-11e5-a9b7-4507e3271c11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"status":-1},{"failures":[26],"tindex":"e522a850-4395-11e5-a9b7-03f8b165638e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"variableMap":{"name1Char":"chrs","i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:437","type":"CtAssignmentImpl","sourcecode":"char[][int] = char[][1]"},"status":-1},{"failures":[],"tindex":"e522a851-4395-11e5-a9b7-d145bc405e95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"status":1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}