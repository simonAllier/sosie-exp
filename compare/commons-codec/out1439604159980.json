{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":15,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":5,"org.apache.commons.codec.language.NysiisTest.testSnat":108,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch":40,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":80,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":78,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":79,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":52,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":6,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":96,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":13,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":47,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameJustSpace_ReturnsFalse":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJustSpace_ReturnsFalse":35,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":59,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":64,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":60,"org.apache.commons.codec.language.RefinedSoundexTest.testLocaleIndependence":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":29,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":4,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":3,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":91,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":93,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse":27,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":54,"org.apache.commons.codec.language.NysiisTest.testCap":97,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":43,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":20,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":90,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse":41,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":88,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":17,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":19,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":89,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_NoSpace_NoMatch":42,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":61,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully":32,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":14,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":69,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":70,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":58,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":38,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":39,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":72,"org.apache.commons.codec.language.SoundexTest.testB650":77,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":66,"org.apache.commons.codec.language.SoundexTest.testNewInstance":85,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":0,"org.apache.commons.codec.language.NysiisTest.testTranan":112,"org.apache.commons.codec.language.NysiisTest.testFal":100,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":18,"org.apache.commons.codec.language.SoundexTest.testLocaleIndependence":94,"org.apache.commons.codec.language.NysiisTest.testSnad":107,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":1,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":114,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":74,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":75,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":46,"org.apache.commons.codec.language.NysiisTest.testDropBy":110,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch":28,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":12,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":48,"org.apache.commons.codec.language.NysiisTest.testRule2":102,"org.apache.commons.codec.language.NysiisTest.testRule1":101,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":7,"org.apache.commons.codec.language.NysiisTest.testRule7":105,"org.apache.commons.codec.language.NysiisTest.testRule6":104,"org.apache.commons.codec.language.NysiisTest.testRule5":103,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":44,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":86,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":109,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":37,"org.apache.commons.codec.language.NysiisTest.testBran":106,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":113,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":68,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":83,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":56,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse":31,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":67,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":63,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":87,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse":33,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":73,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":2,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse":36,"org.apache.commons.codec.language.NysiisTest.testDad":98,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":21,"org.apache.commons.codec.language.NysiisTest.testOthers":111,"org.apache.commons.codec.language.SoundexTest.testDifference":84,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":95,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":16,"org.apache.commons.codec.language.NysiisTest.testDan":99,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnameCornerCase_Nulls_NoMatch":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse":25},"transformations":[{"failures":[],"tindex":"b5430db6-42f1-11e5-a0d4-1d75d516af42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:270","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"b5435bd7-42f1-11e5-a0d4-1b92cbcdf686","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:230","type":"CtAssignmentImpl","sourcecode":"byte[][8] = 0"},"variableMap":{"b":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:468","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[],"tindex":"b5435bd8-42f1-11e5-a0d4-9f13c44c6fa9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"length","to":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:126","type":"CtIfImpl","sourcecode":"if ((char[][1]) == 'R') {\n    java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n    break;\n} "},"status":-2},{"failures":[],"tindex":"b54382e9-42f1-11e5-a0d4-5f0691c05c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:103","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale).toCharArray()"},"variableMap":{"txt":"object","java.util.Locale.ENGLISH":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"b54382ea-42f1-11e5-a0d4-157d2ca6da34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"buffer","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:297","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null"},"status":-2},{"failures":[11,12,13,14,15],"tindex":"b54382eb-42f1-11e5-a0d4-778843295325","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:313","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"b54382ec-42f1-11e5-a0d4-3d89c8baa2b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:152","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"roundsCustom":"eof"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"b543a9fd-42f1-11e5-a0d4-c5dbf09b0095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"variableMap":{"binaryData":"bytes","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:180","type":"CtIfImpl","sourcecode":"if (boolean) {\n    final byte[] byte[] = new byte[byte[].int];\n    for (int int = 0 ; int < (byte[].int) ; int++) {\n        final byte byte = byte[][int];\n        if (byte != (org.apache.commons.codec.net.QCodec.byte)) {\n            byte[][int] = byte;\n        } else {\n            byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n        }\n    }\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[]);\n} "},"status":-2},{"failures":[16,17,18,19,20,21,22,23],"tindex":"b543a9fe-42f1-11e5-a0d4-e7936666c096","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:170","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n    }\n} else {\n    java.io.ByteArrayOutputStream.write(int);\n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"b543a9ff-42f1-11e5-a0d4-fd9cef8f4803","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"name2":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE","name1":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"status":-1},{"failures":[15],"tindex":"b543d110-42f1-11e5-a0d4-b5f41453ac39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"value","lastThree":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:217","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.doubleMetaphone(java.lang.String)"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"b543d111-42f1-11e5-a0d4-b79a0a44a1e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"variableMap":{"rawLine":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:254","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)"},"status":-1},{"failures":[61,62,63],"tindex":"b543d112-42f1-11e5-a0d4-1d24fe327b0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]).doFinal(byte[])"},"status":-1},{"failures":[],"tindex":"b543f823-42f1-11e5-a0d4-299a63ef2010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"b543f824-42f1-11e5-a0d4-cd98db332341","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:204","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:177","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Null key\")"},"status":-2},{"failures":[],"tindex":"b543f825-42f1-11e5-a0d4-63438814d728","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"b543f826-42f1-11e5-a0d4-69016461539a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"rightLength","to":"rightLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:356","type":"CtIfImpl","sourcecode":"if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '4';\n} else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[64],"tindex":"b5441f37-42f1-11e5-a0d4-434728635302","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:288","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base64.int"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"maxCodeLen","encodeSize":"maxCodeLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:428","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"b5441f38-42f1-11e5-a0d4-2505396092c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"variableMap":{"b":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"b5444649-42f1-11e5-a0d4-1f587b159587","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:106","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w3\", \"W3\")"},"status":1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}