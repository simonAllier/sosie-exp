{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":54,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":9,"org.apache.commons.codec.language.NysiisTest.testSnat":49,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":13,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":3,"org.apache.commons.codec.language.NysiisTest.testDropBy":50,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":16,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully":55,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":15,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTN11111111":37,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":42,"org.apache.commons.codec.language.NysiisTest.testRule1":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":31,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":51,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":52,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":8,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":41,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":11,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":5,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":46,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":35,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":36,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":30,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":38,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184":45,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":19,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":14,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":10,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":21,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":27,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":2,"org.apache.commons.codec.language.NysiisTest.testSnad":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":53,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":0},"transformations":[{"failures":[0],"tindex":"cdf745ec-432a-11e5-9f0f-1b598d452b0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:564","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha384Digest(), java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), java.io.InputStream)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"cdf76cfd-432a-11e5-9f0f-23d770a716cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:306","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"status":-1},{"failures":[11,12,13,14,15,16],"tindex":"cdf76cfe-432a-11e5-9f0f-f70716d028fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:277","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[17,18,19],"tindex":"cdf76cff-432a-11e5-9f0f-4707378f01d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:787","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28],"tindex":"cdf76d00-432a-11e5-9f0f-0bac9acd6909","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:290","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String[][0]"},"variableMap":{"parts":"parts"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:308","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.org.apache.commons.codec.language.DaitchMokotoffSoundex.stripQuotes(java.lang.String[][0])"},"status":-1},{"failures":[29,30,31,32,33,34,35],"tindex":"cdf76d01-432a-11e5-9f0f-7f9672375dcf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:107","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[],"tindex":"cdf76d02-432a-11e5-9f0f-d94765332a19","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:75","type":"CtForImpl","sourcecode":"for (int int = 'a' ; int <= 'z' ; int++) {\n    org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(int);\n}"},"variableMap":{"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":-2},{"failures":[],"tindex":"cdf79413-432a-11e5-9f0f-4f5c361a6944","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:235","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[17,18],"tindex":"cdf79414-432a-11e5-9f0f-3d526e6a4ba0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:375","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[5,7],"tindex":"cdf79415-432a-11e5-9f0f-6d77122912eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:219","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'H'))) && (!org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, (int + 2))))) {\n    break;\n} "},"status":-1},{"failures":[36,37,38,39,40,41,42,43],"tindex":"cdf79416-432a-11e5-9f0f-dd6d47225d4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3\", \"\")"},"status":-1},{"failures":[44,45],"tindex":"cdf79417-432a-11e5-9f0f-afb0b28a8a69","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:72","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"cdf79418-432a-11e5-9f0f-cd7cabd69aec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:671","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + long) + \") than the specified maximum size of \") + int))"},"status":-2},{"failures":[46],"tindex":"cdf79419-432a-11e5-9f0f-e9e20b5180f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((!org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte[][int]))) && ((!boolean) || (((byte[][int]) != (byte)) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"cdf7bb2a-432a-11e5-9f0f-69c44e303827","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:244","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"cdf7bb2b-432a-11e5-9f0f-fbdc9f20f22e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"gh\", \"22\")"},"status":1},{"failures":[47,48,49,50],"tindex":"cdf7bb2c-432a-11e5-9f0f-eb9a76802b41","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"SSS\")"},"status":-1},{"failures":[51,52,53,54],"tindex":"cdf7bb2d-432a-11e5-9f0f-4379868f9eca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"status":-1},{"failures":[],"tindex":"cdf7bb2e-432a-11e5-9f0f-0fc520d0d01c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"j\", \"y\")"},"status":1},{"failures":[55],"tindex":"cdf7bb2f-432a-11e5-9f0f-0bd4b220df93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}