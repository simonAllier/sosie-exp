{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":84,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":103,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":23,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":78,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":15,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":85,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":111,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":83,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":71,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":26,"org.apache.commons.codec.binary.Base64Test.testTriplets":33,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":66,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":9,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch":73,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":28,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":44,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":86,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":54,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":93,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":39,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":96,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":81,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":94,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":42,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean":114,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":62,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":49,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":110,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":8,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":13,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":116,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":102,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":17,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":104,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":69,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":82,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":65,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":91,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":74,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":97,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":89,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":92,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":64,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":106,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":70,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":115,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":53,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":19,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":101,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":16,"org.apache.commons.codec.binary.Base64Test.testBase64":52,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":80,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base64Test.testUUID":36,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":108,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":32,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":45,"org.apache.commons.codec.binary.Base64Test.testSingletons":48,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":51,"org.apache.commons.codec.binary.Base64Test.testPairs":35,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":113,"org.apache.commons.codec.binary.Base64Test.testCodec112":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":67,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":20,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":105,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":117,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":22,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":100,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":68,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":59,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":75,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":76,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":98,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":99,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":38,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":112,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":87,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemovalNormalString_NoChange":90,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":109,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":21,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":107,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":88,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":95,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":56},"transformations":[{"failures":[0,1,2,3],"tindex":"10fc48d6-42ae-11e5-8015-33f598324a14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:429","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:560","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('L')"},"status":-1},{"failures":[4,5,6],"tindex":"10fc96f7-42ae-11e5-8015-71f213aa6d49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"status":-1},{"failures":[],"tindex":"10fc96f8-42ae-11e5-8015-930f64223d86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:341","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.fourBytesToInt(byte[], 4)"},"status":-2},{"failures":[],"tindex":"10fc96f9-42ae-11e5-8015-edbbfc4802c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"variableMap":{"urlsafe":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS","org.apache.commons.codec.net.URLCodec.WWW_FORM_URL":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:103","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('~')"},"status":-2},{"failures":[7,8,9,10],"tindex":"10fcbe0a-42ae-11e5-8015-818ede69e2ff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:604","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.CharSequence.length()) ; int++) {\n    if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[0,1,2],"tindex":"10fcbe0b-42ae-11e5-8015-e16b29bd90c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:713","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A', 'F')"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"10fcbe0c-42ae-11e5-8015-3fd3f88a2621","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,4,5,6],"tindex":"10fce51d-42ae-11e5-8015-b576c46e686e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (long > int) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + long) + \") than the specified maximum size of \") + int));\n} "},"variableMap":{"len":"len","maxResultSize":"chunkSeparatorLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:519","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    long += (((long + (int)) - 1) / (int)) * (int);\n} "},"status":-1},{"failures":[0,1,3],"tindex":"10fce51e-42ae-11e5-8015-e98a2365e861","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:520","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"status":-1},{"failures":[56,57],"tindex":"10fce51f-42ae-11e5-8015-d936353e5a76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"variableMap":{"b":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.boolean[][int]) {\n    int = (int >>> 2) | (int << 26);\n    int = (int >>> 2) | (int << 26);\n} else {\n    int = (int >>> 1) | (int << 27);\n    int = (int >>> 1) | (int << 27);\n}"},"status":-1},{"failures":[],"tindex":"10fce520-42ae-11e5-8015-1b39f4ed4351","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:84","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(':')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\'')"},"status":-2},{"failures":[],"tindex":"10fd0c31-42ae-11e5-8015-094994f3e737","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-2},{"failures":[],"tindex":"10fd0c32-42ae-11e5-8015-dfa2f0a4f670","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:100","type":"CtReturnImpl","sourcecode":"return java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"status":0},{"failures":[58,59,60,61,62,63,64],"tindex":"10fd0c33-42ae-11e5-8015-7bb1341bdf8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:259","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"10fd0c34-42ae-11e5-8015-33b15cf2a973","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:82","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"dg\", \"2g\")"},"status":1},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"tindex":"10fd3345-42ae-11e5-8015-33ee1f81880e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:153","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)"},"variableMap":{"line":"accentedWord","org.apache.commons.codec.language.bm.ResourceConstants.CMT":"accentedWord"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.length()"},"status":-1},{"failures":[113],"tindex":"10fd3346-42ae-11e5-8015-ed49501fcf3d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[114],"tindex":"10fd3347-42ae-11e5-8015-07feaee62559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:500","type":"CtIfImpl","sourcecode":"if (((byte) == byte) || org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte))) {\n    return true;\n} "},"variableMap":{"pad":"pad","this":"this","element":"pad"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:464","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((!org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte[][int]))) && ((!boolean) || (((byte[][int]) != (byte)) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[115,116,117],"tindex":"10fd5a58-42ae-11e5-8015-8bd9778cde43","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '1'"},"variableMap":{"jj":"jj","l_ascii":"l_ascii","bits":"bits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:281","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '0'"},"status":-1},{"failures":[],"tindex":"10fd5a59-42ae-11e5-8015-176d081f224c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 24) & 255))"},"variableMap":{"b":"singleByte","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}