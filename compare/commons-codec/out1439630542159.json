{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":39,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":10,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":36,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeNull":47,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":11,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":30,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":41,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":16,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":28,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":24,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":48,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":23,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":27,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":33,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":9,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":6,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":46,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":35,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":37,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":34,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":0,"org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour":17,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":38,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":14,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":43,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":44,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":5,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":4,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":20,"org.apache.commons.codec.language.SoundexTest.testDifference":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":40},"transformations":[{"failures":[0,1,2],"tindex":"2241a739-432f-11e5-8147-d1b4ff2d6aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:787","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"2241ce4a-432f-11e5-8147-b3ab6a3ee344","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:117","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"2\", \"\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":0},{"failures":[3,4,5,6,7,8],"tindex":"2241f55b-432f-11e5-8147-ed028bb6d114","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:463","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][6], byte[][16], byte[][26], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16],"tindex":"2241f55c-432f-11e5-8147-1779dd69d91c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:150","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"inExtendedComment":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:414","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[17,18,19],"tindex":"2241f55d-432f-11e5-8147-591032ff9d57","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:111","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"2241f55e-432f-11e5-8147-c9461458a8e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:335","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"22421c6f-432f-11e5-8147-af47ef2d413c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[], ((org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30],"tindex":"22421c70-432f-11e5-8147-75e696890ccd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:475","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[31,32,33,34,35,36,37,38],"tindex":"22421c71-432f-11e5-8147-454b8161aac7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:443","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"status":-1},{"failures":[0,39,1,2],"tindex":"22421c72-432f-11e5-8147-b723c974d379","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:102","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:773","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[40,41],"tindex":"22424383-432f-11e5-8147-cfe664283555","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"variableMap":{"w":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:363","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 2) | (int << 26)"},"status":-1},{"failures":[],"tindex":"22424384-432f-11e5-8147-9777ac6ae57e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.toString()"},"status":-2},{"failures":[3,4,5,7,8,42,43,44],"tindex":"22424385-432f-11e5-8147-bb7969f444e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[], 0, int);\n} else {\n    java.security.MessageDigest.update(byte[]);\n}"},"status":-1},{"failures":[45,46],"tindex":"22424386-432f-11e5-8147-d7213a278e5f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    char[][(int - int)] = ' ';\n    char[][(int - int)] = ' ';\n} "},"status":-1},{"failures":[47],"tindex":"22426a97-432f-11e5-8147-7b3c1ac76dea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"22426a98-432f-11e5-8147-f574e363df0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.doEncoding(java.lang.String.getBytes(java.nio.charset.Charset))"},"status":-2},{"failures":[],"tindex":"22426a99-432f-11e5-8147-21ad94da143c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"variableMap":{"original":"encodeTable","length":"currentLinePos","key":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:386","type":"CtIfImpl","sourcecode":"if (0 == (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 18) & (org.apache.commons.codec.binary.Base64.int))];\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 12) & (org.apache.commons.codec.binary.Base64.int))];\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 6) & (org.apache.commons.codec.binary.Base64.int))];\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.Base64.int))];\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += org.apache.commons.codec.binary.Base64.int;\n    if (((int) > 0) && ((int) <= (org.apache.commons.codec.binary.BaseNCodec.Context.int))) {\n        java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int);\n        org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int;\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = 0;\n    } \n} "},"status":-2},{"failures":[40,41],"tindex":"224291aa-432f-11e5-8147-29631685448f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:408","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int"},"variableMap":{"b":"left","t":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[48],"tindex":"224291ab-432f-11e5-8147-b9cb317da138","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:889","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[39,1,2],"tindex":"224291ac-432f-11e5-8147-17987a8204ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:690","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:589","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}