{"failureDictionary":{"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":8,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":11,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":4,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":14,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":9,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":17,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":15,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":29,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":6,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":27,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":34,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":30,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":33,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":18,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":19,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":23,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":0,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":12,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":16,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":24,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":35,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":10,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":31,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":36,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":5,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":26},"transformations":[{"failures":[0,1],"tindex":"1ef9df42-42f9-11e5-bd0f-37e272936c6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '0'"},"variableMap":{"jj":"bits","l_ascii":"l_ascii","bits":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '1'"},"status":-1},{"failures":[],"tindex":"1efa2d63-42f9-11e5-bd0f-eb14dfc586a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"1efa2d64-42f9-11e5-bd0f-fd6730e303b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:362","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:406","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[2,3],"tindex":"1efa5475-42f9-11e5-bd0f-c5a2acf53a67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:199","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[],"tindex":"1efa5476-42f9-11e5-bd0f-85672e497ce8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:429","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"variableMap":{"java.util.Locale.GERMAN":"java.util.Locale.ENGLISH","text":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:52","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.toLowerCase(java.util.Locale.java.util.Locale)"},"status":-2},{"failures":[],"tindex":"1efa5477-42f9-11e5-bd0f-15d408a36ad3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:193","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(0, null, boolean, byte)"},"status":-2},{"failures":[4],"tindex":"1efa5478-42f9-11e5-bd0f-c972566789b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[]), java.io.InputStream)"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[]), java.io.InputStream)"},"status":-1},{"failures":[5,6],"tindex":"1efa7b89-42f9-11e5-bd0f-5fe8d2d697aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"left","d":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:309","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[7],"tindex":"1efa7b8a-42f9-11e5-bd0f-7f23a64255c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])"},"variableMap":{"keyBytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])"},"status":-1},{"failures":[8,9,10],"tindex":"1efa7b8b-42f9-11e5-bd0f-51c3ac93efbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:539","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.binary.Base64.(org.apache.commons.codec.binary.Base64.isBase64(byte[][int]))) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"1efaa29c-42f9-11e5-bd0f-c77192f5b64a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"variableMap":{"c":"pos","d":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:488","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19],"tindex":"1efaa29d-42f9-11e5-bd0f-256b34aa9eb4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:174","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'S')) && (!org.apache.commons.codec.language.Metaphone.(isLastChar(int, int)))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 1)))) >= 0)) {\n    break;\n} "},"variableMap":{"wdsz":"wdsz","this":"this","local":"local","n":"wdsz","org.apache.commons.codec.language.Metaphone.FRONTV":"org.apache.commons.codec.language.Metaphone.FRONTV"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:206","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'G'))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 2)))) >= 0)) {\n    java.lang.StringBuilder.append('J');\n    int += 2;\n} else {\n    java.lang.StringBuilder.append('T');\n}"},"status":-1},{"failures":[0,20,1,21,2,3,22,23],"tindex":"1efaa29e-42f9-11e5-bd0f-15db278967ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:306","type":"CtReturnImpl","sourcecode":"return (this.byte[]) == (org.apache.commons.codec.binary.Base64.byte[])"},"variableMap":{"encodeTable":"array","org.apache.commons.codec.binary.Base64.URL_SAFE_ENCODE_TABLE":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:226","type":"CtReturnImpl","sourcecode":"return (byte[] == null) || ((byte[].int) == 0)"},"status":-1},{"failures":[24,25],"tindex":"1efaa29f-42f9-11e5-bd0f-637cef357e18","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:718","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"1efac9b0-42f9-11e5-bd0f-974bb033e607","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:210","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.org.apache.commons.codec.net.URLCodec.decodeUrl(byte[])"},"status":-2},{"failures":[],"tindex":"1efac9b1-42f9-11e5-bd0f-0dc5705b76cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(byte[])"},"status":-2},{"failures":[26],"tindex":"1efac9b2-42f9-11e5-bd0f-453236480aef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), java.io.InputStream)"},"status":-1},{"failures":[27,28,29,30,31,32,33,34],"tindex":"1efac9b3-42f9-11e5-bd0f-d5b018557fbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"variableMap":{"length":"cnt","key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:230","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[35,36],"tindex":"1efaf0c4-42f9-11e5-bd0f-f39c58d832b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:348","type":"CtAssignmentImpl","sourcecode":"char = '0'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"char = '3'"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}