{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":15,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":28,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":10,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":14,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":32,"org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt":13,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":11,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt":16,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":6,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":18,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":4,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":30,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":29,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":7,"org.apache.commons.codec.language.MetaphoneTest.testTCH":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt":17,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":21},"transformations":[{"failures":[],"tindex":"7e61b0db-42ea-11e5-b4b9-4dcde6595a6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"index","len":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:518","type":"CtIfImpl","sourcecode":"if ((((int == 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 4))) == ' ')) || ((java.lang.String.length()) == 4)) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"SAN \"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"7e61fefc-42ea-11e5-b4b9-2330eb8df1ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), byte[][11], 2, java.lang.StringBuilder)"},"status":-1},{"failures":[8,9],"tindex":"7e61fefd-42ea-11e5-b4b9-c5cf40c6f441","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:199","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[],"tindex":"7e62260e-42ea-11e5-b4b9-dbdc8aef0c27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"gh\", \"22\")"},"status":1},{"failures":[10,11,12],"tindex":"7e62260f-42ea-11e5-b4b9-a992fcb0cd2f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:476","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][28], byte[][49], byte[][7], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"7e622610-42ea-11e5-b4b9-d5f198de2e0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"eSwap0"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, (int + 2), int, int, int[])"},"status":-2},{"failures":[],"tindex":"7e62e961-42ea-11e5-b4b9-af662647da09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:390","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\")"},"status":-2},{"failures":[],"tindex":"7e62e962-42ea-11e5-b4b9-73b62eeb23f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"7e633783-42ea-11e5-b4b9-9f6582573156","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.decodeHex(char[]);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"variableMap":{"e":"obj","this":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:288","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"7e635e94-42ea-11e5-b4b9-951d68440b83","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"org.apache.commons.codec.binary.Hex.DIGITS_UPPER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[], (boolean ? org.apache.commons.codec.binary.Hex.char[] : org.apache.commons.codec.binary.Hex.char[]))"},"status":-2},{"failures":[],"tindex":"7e635e95-42ea-11e5-b4b9-6b36e3c234c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"cs2","name2":"cs1","name1":"cs1","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"cs2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:78","type":"CtReturnImpl","sourcecode":"return java.lang.CharSequence.equals(java.lang.CharSequence)"},"status":-2},{"failures":[],"tindex":"7e635e96-42ea-11e5-b4b9-bfb00de8cc63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"int = '+'"},"variableMap":{"b":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:771","type":"CtAssignmentImpl","sourcecode":"int = java.io.InputStream.read(byte[], 0, org.apache.commons.codec.digest.HmacUtils.int)"},"status":-2},{"failures":[],"tindex":"7e635e97-42ea-11e5-b4b9-c100122b4933","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:402","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 24) & 255))"},"variableMap":{"b":"encodeTable","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.Base64.int))]"},"status":-2},{"failures":[13,14,15,16,17,18],"tindex":"7e635e98-42ea-11e5-b4b9-b93ae9d0f966","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    java.lang.String = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])) + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)]);\n} else if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"status":-1},{"failures":[19,20],"tindex":"7e6385a9-42ea-11e5-b4b9-176d84802ffc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:297","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[21],"tindex":"7e6385aa-42ea-11e5-b4b9-db490f0e3c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1(java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"7e63fadb-42ea-11e5-b4b9-0b7a59499e94","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"char = '-'"},"status":-2},{"failures":[],"tindex":"7e6421ec-42ea-11e5-b4b9-09c39e55f014","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('|')"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1))"},"status":0},{"failures":[22,23,24,25,26,27,28,29,30,19,31,32],"tindex":"7e6421ed-42ea-11e5-b4b9-49445bd1aa45","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"status":-1},{"failures":[],"tindex":"7e6421ee-42ea-11e5-b4b9-ebbcf3ecbd5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 3"},"variableMap":{"context":"context","lbitWorkArea":"lbitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:386","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = (org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 4"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}