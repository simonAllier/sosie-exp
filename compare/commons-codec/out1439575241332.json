{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":46,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":17,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamMimeChuckSize":49,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamMimeChuckSize":41,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":19,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":38,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":35,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":10,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":9,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":23,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":50,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":6,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":21,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":32,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64EmptyInputStreamPemChuckSize":40,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":15,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":20,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":45,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":43,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":26,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":5,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":51,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":44,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":52,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":36,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":2,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":27,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":28,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":3,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":18,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":30,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":14,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":48,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":7,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32EmptyInputStreamPemChuckSize":47,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":31,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":1,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":53,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":4,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":34,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":42,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":8,"org.apache.commons.codec.language.MetaphoneTest.testTCH":54,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":37,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":22},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"6062ac2f-42ae-11e5-9926-25f9cfd1d7d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:473","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][25], byte[][46], byte[][4], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"finalb","buffer":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:287","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][4], byte[][10], byte[][5], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"6062d340-42ae-11e5-9926-25433c100be6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:767","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int / 8]"},"variableMap":{"bitlen":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:501","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.binary.BaseNCodec.ensureBufferSize(int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[22,23],"tindex":"6062d341-42ae-11e5-9926-c1a04459b516","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"variableMap":{"c":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, (int + 2), int, int, int[])"},"status":-1},{"failures":[24,25,26,27,28],"tindex":"6062fa52-42ae-11e5-9926-350930b186d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char = org.apache.commons.codec.language.RefinedSoundex.getMappingCode(java.lang.String.charAt(int));\n    if (char == char) {\n        continue;\n    } else if (char != 0) {\n        java.lang.StringBuilder.append(char);\n    } \n    char = char;\n}"},"status":-1},{"failures":[],"tindex":"6062fa53-42ae-11e5-9926-c779c2dace71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[29,30,31],"tindex":"6062fa54-42ae-11e5-9926-8396bd94e3e0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:479","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][31], byte[][52], byte[][10], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"6062fa55-42ae-11e5-9926-73718a5309f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:296","type":"CtTryImpl","sourcecode":"try {\n    final byte[] byte[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).getBytes(org.apache.commons.codec.binary.Hex.getCharset()) : ((byte[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[]);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.EncoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"status":-2},{"failures":[],"tindex":"6062fa56-42ae-11e5-9926-2d22823d9e26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:386","type":"CtIfImpl","sourcecode":"if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"c","chr":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:362","type":"CtIfImpl","sourcecode":"if (int > (-1)) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(int));\n} else {\n    java.lang.StringBuilder.append(char);\n}"},"status":-2},{"failures":[],"tindex":"6062fa57-42ae-11e5-9926-07d3e1714f0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:223","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"6062fa58-42ae-11e5-9926-391d17955b41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:64","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.isEmpty()"},"variableMap":{"langs":"ls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:191","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.String>.add(java.lang.String)"},"status":1},{"failures":[],"tindex":"60632169-42ae-11e5-9926-81e05b9397bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"modulus","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"pos","minRating":"modulus","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:359","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n} "},"status":-2},{"failures":[],"tindex":"6063216a-42ae-11e5-9926-9b5b3e254a77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:147","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"6063216b-42ae-11e5-9926-59708fb1faad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:455","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"6063216c-42ae-11e5-9926-494a1d607394","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.ESCAPE_CHAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:183","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"6063216d-42ae-11e5-9926-c7818c43fbee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:201","type":"CtLocalVariableImpl","sourcecode":"int int = ((int)(java.lang.Math.min(byte[].int, long)))"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,11,45,46,47,12,48,49,50,51,13],"tindex":"6063216e-42ae-11e5-9926-539ded17bba7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"readLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:167","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"60636f8f-42ae-11e5-9926-83b08df7b7ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"60636f90-42ae-11e5-9926-739eeb25b626","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"j":"savedPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failures":[52,53],"tindex":"60636f91-42ae-11e5-9926-df8d7d1e85cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^gn\", \"2n\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:115","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l3\", \"L3\")"},"status":-1},{"failures":[54],"tindex":"60636f92-42ae-11e5-9926-d73357da2c50","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n    break;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}