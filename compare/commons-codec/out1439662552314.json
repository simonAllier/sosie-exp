{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":52,"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":68,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":25,"org.apache.commons.codec.language.NysiisTest.testSnat":18,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":61,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":60,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":31,"org.apache.commons.codec.language.NysiisTest.testDropBy":20,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":65,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":62,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":51,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":55,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":6,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":32,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":48,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":45,"org.apache.commons.codec.language.NysiisTest.testRule2":12,"org.apache.commons.codec.language.NysiisTest.testRule1":11,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":41,"org.apache.commons.codec.language.NysiisTest.testRule7":15,"org.apache.commons.codec.language.NysiisTest.testRule6":14,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":43,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":66,"org.apache.commons.codec.language.NysiisTest.testRule5":13,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":42,"org.apache.commons.codec.language.NysiisTest.testCap":7,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":36,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":19,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":40,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":38,"org.apache.commons.codec.language.NysiisTest.testBran":16,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":23,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":39,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":2,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":50,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":33,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":54,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":49,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":1,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":46,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":3,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":59,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":57,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":63,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":37,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":24,"org.apache.commons.codec.language.SoundexTest.testB650":28,"org.apache.commons.codec.language.NysiisTest.testDad":8,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":58,"org.apache.commons.codec.language.SoundexTest.testNewInstance":35,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":56,"org.apache.commons.codec.language.NysiisTest.testOthers":21,"org.apache.commons.codec.language.NysiisTest.testTranan":22,"org.apache.commons.codec.language.SoundexTest.testDifference":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":64,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":5,"org.apache.commons.codec.language.NysiisTest.testDan":9,"org.apache.commons.codec.language.NysiisTest.testFal":10,"org.apache.commons.codec.language.NysiisTest.testSnad":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":44,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":67,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":47},"transformations":[{"failures":[],"tindex":"a9c9656c-4379-11e5-99f0-370f7b5520d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:446","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int)"},"variableMap":{"org.apache.commons.codec.binary.Base64.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:387","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"a9c98c7d-4379-11e5-99f0-1f6ef92aa367","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"a9c98c7e-4379-11e5-99f0-a5a0984d8849","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:54","type":"CtReturnImpl","sourcecode":"return java.lang.String.toUpperCase(java.util.Locale.java.util.Locale)"},"status":-1},{"failures":[],"tindex":"a9c98c7f-4379-11e5-99f0-396a6370050c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:141","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Salt must not be null\");\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"a9c98c80-4379-11e5-99f0-cbd2dd3bb015","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:249","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(((java.lang.String + java.lang.String) + \"$\"))"},"variableMap":{"saltString":"str","prefix":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:273","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String.length())"},"status":-1},{"failures":[],"tindex":"a9c98c81-4379-11e5-99f0-0dd97fe60c1f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^enough\", \"enou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"status":1},{"failures":[],"tindex":"a9c9b392-4379-11e5-99f0-8f4d9bec829b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:640","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], boolean, boolean, java.lang.Integer.int)"},"status":-2},{"failures":[],"tindex":"a9c9b393-4379-11e5-99f0-09d04d1058e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:330","type":"CtLocalVariableImpl","sourcecode":"int int = ((int ^ (int << 16)) ^ int) ^ (int[][(int + 1)])"},"status":-2},{"failures":[],"tindex":"a9c9b394-4379-11e5-99f0-eff38ab68ff3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:222","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int << 1))"},"variableMap":{"iChar":"pos","i":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:465","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"a9c9b395-4379-11e5-99f0-a72d9f44bc6e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:238","type":"CtReturnImpl","sourcecode":"return (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) || (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte))"},"status":-2},{"failures":[44,45,46],"tindex":"a9c9b396-4379-11e5-99f0-a5279006c9a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:369","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n}"},"status":-1},{"failures":[],"tindex":"a9c9b397-4379-11e5-99f0-e11f71d32c48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"mb$\", \"m2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"status":1},{"failures":[47,48],"tindex":"a9c9b398-4379-11e5-99f0-4b007a62d21c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:327","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"variableMap":{"b":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"a9c9daa9-4379-11e5-99f0-e7663305bd74","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"variableMap":{"salt":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"status":-2},{"failures":[],"tindex":"a9c9daaa-4379-11e5-99f0-cb064a71a566","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[],"tindex":"a9c9daab-4379-11e5-99f0-49d2ea8ee62b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"element","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:877","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"status":-2},{"failures":[49,50,51,52,53,54,55,56],"tindex":"a9c9daac-4379-11e5-99f0-3b78fe659799","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"variableMap":{"original":"buffer","length":"read","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:770","type":"CtInvocationImpl","sourcecode":"javax.crypto.Mac.update(byte[], 0, int)"},"status":-1},{"failures":[57,58,59,60,61,62,63,64,65],"tindex":"a9c9daad-4379-11e5-99f0-0fdfe29b3cb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:544","type":"CtOperatorAssignmentImpl","sourcecode":"int += (org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getPatternLength()) - 1"},"status":-1},{"failures":[0,34],"tindex":"a9c9daae-4379-11e5-99f0-cf2416aa586a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:99","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:121","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[66,67,68],"tindex":"a9ca01bf-4379-11e5-99f0-1301c983e2a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}