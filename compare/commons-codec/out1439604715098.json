{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":13,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii":20,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":16,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":7,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be":21,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":25,"org.apache.commons.codec.language.NysiisTest.testDropBy":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":12,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringBadEnc":24,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":17,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":14,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":6,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":11,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":9,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16":23,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":5,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":8,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1":18,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":2,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":4,"org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Le":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":10,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":1,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":3},"transformations":[{"failures":[],"tindex":"0025ee53-42f3-11e5-9d80-29b9eb92fcb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:169","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleT(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"00266384-42f3-11e5-9d80-855d124f5332","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final int int = byte[][int];\n    if (int == '+') {\n        java.io.ByteArrayOutputStream.write(' ');\n    } else if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n        }\n    } else {\n        java.io.ByteArrayOutputStream.write(int);\n    }\n}"},"status":-1},{"failures":[8],"tindex":"00268a95-42f3-11e5-9d80-195d7f6d703f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"i","minRating":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"i","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:184","type":"CtIfImpl","sourcecode":"if (byte != (org.apache.commons.codec.net.QCodec.byte)) {\n    byte[][int] = byte;\n} else {\n    byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n}"},"status":-1},{"failures":[],"tindex":"0026b1a6-42f3-11e5-9d80-398b35a111ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"blocksize":"length","cp":"encodeSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:284","type":"CtAssignmentImpl","sourcecode":"this.int = (org.apache.commons.codec.binary.Base64.int) + (byte[].int)"},"status":-2},{"failures":[9],"tindex":"0026ffc7-42f3-11e5-9d80-9f66155b4914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:285","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[10,11,12,13],"tindex":"002726d8-42f3-11e5-9d80-37e36a92af16","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:300","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:293","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-1},{"failures":[14,15,16,17],"tindex":"00274de9-42f3-11e5-9d80-9f863cbba042","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"$\")"},"variableMap":{"buffer":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:323","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1},{"failures":[],"tindex":"00274dea-42f3-11e5-9d80-95d45dc14e40","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-2},{"failures":[],"tindex":"00274deb-42f3-11e5-9d80-07258bffe4e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:431","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"status":-2},{"failures":[18,19,20,21,22,23,24],"tindex":"00274dec-42f3-11e5-9d80-034c54adb8d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:68","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[], java.lang.String);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[], java.lang.String);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String);\n}"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX":"charsetName","salt":"charsetName","keyBytes":"bytes","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"charsetName","org.apache.commons.codec.digest.Md5Crypt.MD5_PREFIX":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:283","type":"CtTryImpl","sourcecode":"try {\n    return new java.lang.String(byte[] , java.lang.String);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String, java.io.UnsupportedEncodingException);\n}"},"status":-1},{"failures":[],"tindex":"002774fd-42f3-11e5-9d80-8730420b0bcc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:89","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (!(java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)))) {\n    java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String;\n} "},"variableMap":{"salt":"target","org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX":"target"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:921","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : java.lang.String[]) {\n    if (java.lang.String.equals(java.lang.String)) {\n        boolean = true;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"002774fe-42f3-11e5-9d80-9b5bf313bd55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:112","type":"CtIfImpl","sourcecode":"if ((char[][1]) == 'N') {\n    java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n} else {\n    java.lang.StringBuilder.append(char[]);\n}"},"status":-2},{"failures":[],"tindex":"00279c0f-42f3-11e5-9d80-a9f9af883707","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (org.apache.commons.codec.digest.UnixCrypt.int[][char]) << 4"},"status":-2},{"failures":[25],"tindex":"00279c10-42f3-11e5-9d80-919ce4d74bbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[]), java.io.InputStream)"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[]), java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"00279c11-42f3-11e5-9d80-efdf02b3560c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:393","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[26],"tindex":"0027c322-42f3-11e5-9d80-65075dd6c3ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:237","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-1},{"failures":[],"tindex":"0027c323-42f3-11e5-9d80-b1c3db019686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:688","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(byte[]))"},"status":-2},{"failures":[],"tindex":"0027c324-42f3-11e5-9d80-3d353ea5c67a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"pObject":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:505","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"0027c325-42f3-11e5-9d80-37894d257368","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:89","type":"CtForImpl","sourcecode":"for (int int = 'A' ; int <= 'Z' ; int++) {\n    org.apache.commons.codec.net.QCodec.java.util.BitSet.set(int);\n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:125","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.URLCodec.java.util.BitSet;\n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}