{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":15,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":1,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":84,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":73,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":69,"org.apache.commons.codec.binary.Base64Test.testTriplets":30,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":90,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":19,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":25,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":83,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":66,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":45,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":58,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":82,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":97,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":39,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":34,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":40,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":14,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":44,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":42,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":23,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":3,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":20,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":74,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":48,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":70,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":93,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":33,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":7,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":18,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":64,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":13,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":29,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":65,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":75,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":98,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder":94,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":16,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":60,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":22,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":47,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":59,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":43,"org.apache.commons.codec.binary.Base64Test.testBase64":57,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":89,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":4,"org.apache.commons.codec.binary.Base64Test.testUUID":36,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":92,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":46,"org.apache.commons.codec.binary.Base64Test.testSingletons":52,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":80,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":88,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":27,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":56,"org.apache.commons.codec.binary.Base64Test.testPairs":35,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":26,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":61,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":87,"org.apache.commons.codec.binary.Base64Test.testCodec112":49,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":11,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":31,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":76,"org.apache.commons.codec.binary.Base64Test.testCodec68":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":67,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":50,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":62,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":12,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":51,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":85,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":17,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":78,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":81,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":0,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":68,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":38,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":95,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":72,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":91,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":96},"transformations":[{"failures":[0,1],"tindex":"84001484-42f0-11e5-aa35-3f78227eaa42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tch\", \"2ch\")"},"variableMap":{"txt":"upperName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeAccents(java.lang.String)"},"status":-1},{"failures":[2],"tindex":"840089b5-42f0-11e5-aa35-6914b1b2152e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder, (int + 1))) {\n    java.lang.StringBuilder.append('H');\n} "},"variableMap":{"code":"local","this":"this","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:166","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(isPreviousChar(java.lang.StringBuilder, int, 'M')) && org.apache.commons.codec.language.Metaphone.(isLastChar(int, int))) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"8400b0c6-42f0-11e5-aa35-dd9f8aa8726a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"8400d7d7-42f0-11e5-aa35-c3bd362ac8c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:212","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Nysiis encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:82","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\")"},"status":-2},{"failures":[],"tindex":"8400d7d8-42f0-11e5-aa35-a357b97d3476","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:77","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence instanceof java.lang.String) && (java.lang.CharSequence instanceof java.lang.String)) {\n    return java.lang.CharSequence.equals(java.lang.CharSequence);\n} "},"variableMap":{"cs1":"input","cs2":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:718","type":"CtReturnImpl","sourcecode":"return this.org.apache.commons.codec.language.bm.Rule.RPattern.isMatch(java.lang.CharSequence.subSequence(0, int))"},"status":-2},{"failures":[3,4,5],"tindex":"8400fee9-42f0-11e5-aa35-816eb2ec51c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String)"},"status":-1},{"failures":[6,7,8],"tindex":"840125fa-42f0-11e5-aa35-3f50f6d5502c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), byte[][11], 2, java.lang.StringBuilder)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:475","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][6], byte[][27], byte[][48], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"840125fb-42f0-11e5-aa35-49d65be1ab4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"status":-2},{"failures":[],"tindex":"84014d0c-42f0-11e5-aa35-83ae053eaff8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"j":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:478","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"84014d0d-42f0-11e5-aa35-fdeefdbdc545","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:470","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"8401741e-42f0-11e5-aa35-799ebddc416c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"z\", \"s\")"},"status":1},{"failures":[],"tindex":"8401741f-42f0-11e5-aa35-c7184481377b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"offset","y":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:92","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], int, int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[],"tindex":"84019b30-42f0-11e5-aa35-69e9bd20a1c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:142","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"variableMap":{"rawLine":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:332","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(char[]).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":0},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"8401c241-42f0-11e5-aa35-1165b605d654","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[91,92,93],"tindex":"8401e952-42f0-11e5-aa35-d5aaa3aefc63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:470","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    }\n    int += 2;\n} else if ((((int > 1) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 1, \"B\", \"H\", \"D\"))) || ((int > 2) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"B\", \"H\", \"D\")))) || ((int > 3) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 1, \"B\", \"H\")))) {\n    int += 2;\n} else {\n    if (((int > 2) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'U')) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n    } else if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } \n    int += 2;\n}"},"status":-1},{"failures":[],"tindex":"84021063-42f0-11e5-aa35-edaa5c21a6c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"dg\", \"2g\")"},"status":1},{"failures":[],"tindex":"84023774-42f0-11e5-aa35-630ebb81e869","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"variableMap":{"salt":"txt","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:73","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cq\", \"2q\")"},"status":-2},{"failures":[94,95,96,97,98],"tindex":"84025e85-42f0-11e5-aa35-213e368ccd00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"variableMap":{"ph":"name","open":"nameLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring((int - (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)), int)"},"status":-1},{"failures":[],"tindex":"84025e86-42f0-11e5-aa35-af2bbb187241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:120","type":"CtIfImpl","sourcecode":"if ((char == 'E') && (char == 'V')) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"next":"aNext","org.apache.commons.codec.language.Nysiis.CHARS_AF":"org.apache.commons.codec.language.Nysiis.CHARS_SSS","curr":"aNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:148","type":"CtIfImpl","sourcecode":"if (((char == 'S') && (char == 'C')) && (char == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-2},{"failures":[],"tindex":"84028597-42f0-11e5-aa35-adc309a6e020","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false)"},"variableMap":{"this":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:119","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.io.OutputStream.flush();\n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}