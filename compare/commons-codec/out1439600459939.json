{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":20,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":60,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":9,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":62,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":58,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":16,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":28,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":37,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":41,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":40,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":64,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":57,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":39,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":35,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMacFail":21,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":34,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":38,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":55,"org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac":18,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":52,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":11,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":44,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":49,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":13,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":0,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":23,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":5,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":47,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":12,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":22,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":46,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":65,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":2,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":24,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMacFail":15,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":53,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":10,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":51,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":3,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":45,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":33,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":7,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMacNullKey":17,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":25,"org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphone":61,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":4,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":14,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":30,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":31,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":59,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":54,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":42,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":48,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":43,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":8,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":27,"org.apache.commons.codec.digest.HmacUtilsTest.testNullKey":29,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":56,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":32,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMacFail":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":63},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"17dada6a-42e9-11e5-905e-ffddd74e6b0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((int & 1) == 1) {\n    java.security.MessageDigest.update(byte[][int]);\n} else {\n    java.security.MessageDigest.update(byte[][int]);\n}"},"variableMap":{"ii":"i","keyBytes":"finalb","finalb":"finalb","ctx":"ctx1","j":"org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} else {\n    java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-1},{"failures":[9,10,11],"tindex":"17db288b-42e9-11e5-905e-374e926c1dc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"raw"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:279","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n    if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n        char[][(int - int)] = '0';\n    } else {\n        char[][(int - int)] = '1';\n    }\n}"},"status":-1},{"failures":[],"tindex":"17db288c-42e9-11e5-905e-4b9c2a9b0c2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:376","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 16) | (int & -65536)"},"variableMap":{"s":"pos","t":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"17db4f9d-42e9-11e5-905e-856600774671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"status":-1},{"failures":[31,32,33,34,35,36,37,38,39,40,41],"tindex":"17db4f9e-42e9-11e5-905e-cf685d971600","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:475","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 1))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-1},{"failures":[],"tindex":"17db4f9f-42e9-11e5-905e-bb2f8cc642c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:466","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[13,20],"tindex":"17db76b0-42e9-11e5-905e-0593d6762698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:528","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])"},"status":-1},{"failures":[],"tindex":"17db76b1-42e9-11e5-905e-db26e41a81cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:476","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2"},"variableMap":{"ibitWorkArea":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:466","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"17db76b2-42e9-11e5-905e-e53b5fb6b77b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:67","type":"CtTryImpl","sourcecode":"try {\n    return java.security.MessageDigest.getInstance(java.lang.String);\n} catch (final java.security.NoSuchAlgorithmException e) {\n    throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException);\n}"},"status":-2},{"failures":[42,43,44,45,46],"tindex":"17db76b3-42e9-11e5-905e-7344e121b906","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"status":-1},{"failures":[],"tindex":"17db9dc4-42e9-11e5-905e-f514feafe767","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:187","type":"CtAssignmentImpl","sourcecode":"byte[][int] = org.apache.commons.codec.net.QCodec.byte"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"pad","tmp":"buffer","i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:455","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55],"tindex":"17db9dc5-42e9-11e5-905e-815c490f3942","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:213","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[56,57,58,59,60,61],"tindex":"17db9dc6-42e9-11e5-905e-0f90102ac65f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"JOSE\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A');\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))) && (!boolean)) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'A') || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'O'))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n} else if (int == ((java.lang.String.length()) - 1)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1},{"failures":[62],"tindex":"17db9dc7-42e9-11e5-905e-797ae6b8a0af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('&')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"printable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"status":-1},{"failures":[],"tindex":"17dbc4d8-42e9-11e5-905e-6b4008c899e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:236","type":"CtLocalVariableImpl","sourcecode":"final int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:327","type":"CtLocalVariableImpl","sourcecode":"int int = int & int"},"status":-2},{"failures":[63,64],"tindex":"17dbc4d9-42e9-11e5-905e-cd2e0af80de8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 1, 1431655765, int[])"},"status":-1},{"failures":[],"tindex":"17dbc4da-42e9-11e5-905e-9bc6fc81045e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:504","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"variableMap":{"obj":"ascii","this":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-2},{"failures":[56,57,65],"tindex":"17dbc4db-42e9-11e5-905e-d191f44c1e9e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:309","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[65],"tindex":"17dbebec-42e9-11e5-905e-d9bc13ca7c19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}