{"failureDictionary":{"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":20,"org.apache.commons.codec.binary.HexTest.testCustomCharset":35,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiChars":21,"org.apache.commons.codec.language.NysiisTest.testSnat":11,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":27,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":36,"org.apache.commons.codec.language.NysiisTest.testDropBy":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":19,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":29,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":1,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":30,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":34,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":37,"org.apache.commons.codec.language.NysiisTest.testDad":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":25,"org.apache.commons.codec.language.NysiisTest.testRule2":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":18,"org.apache.commons.codec.language.NysiisTest.testRule1":6,"org.apache.commons.codec.language.NysiisTest.testOthers":14,"org.apache.commons.codec.language.NysiisTest.testRule6":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":17,"org.apache.commons.codec.language.NysiisTest.testTranan":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":31,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":0,"org.apache.commons.codec.language.NysiisTest.testDan":4,"org.apache.commons.codec.language.NysiisTest.testFal":5,"org.apache.commons.codec.language.NysiisTest.testCap":2,"org.apache.commons.codec.language.NysiisTest.testSnad":10,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":12,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject":23,"org.apache.commons.codec.language.NysiisTest.testBran":9,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":16,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":33},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"f0dd75c2-443c-11e5-af9d-e9f98b319f50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:436","type":"CtIfImpl","sourcecode":"if ((char[][int]) == (char[][0])) {\n    char[][int] = char[][1];\n    break;\n} "},"variableMap":{"chrs":"chars","index":"i","element":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:287","type":"CtIfImpl","sourcecode":"if ((char[][int]) != (char[][(int - 1)])) {\n    java.lang.StringBuilder.append(char[][int]);\n} "},"status":-1},{"failures":[],"tindex":"f0dd9cd3-443c-11e5-af9d-9d7efcc976a0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:359","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH0(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.conditionCH1(java.lang.String, int)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    return int + 2;\n} else {\n    if (int > 0) {\n        if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n        } else {\n            org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n        }\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    return int + 2;\n}"},"status":-2},{"failures":[],"tindex":"f0dd9cd4-443c-11e5-af9d-4b7225d96c04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(char)) {\n    continue;\n} "},"status":0},{"failures":[17,18,19,20],"tindex":"f0dd9cd5-443c-11e5-af9d-d92b565d506e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:223","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(int, java.io.ByteArrayOutputStream)"},"status":-1},{"failures":[],"tindex":"f0dd9cd6-443c-11e5-af9d-032238ed8115","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:188","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"pos","minRating":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:454","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[],"tindex":"f0dd9cd7-443c-11e5-af9d-efd828e98171","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"pos","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:457","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"f0ddc3e8-443c-11e5-af9d-45bc3888ca2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:409","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.binary.BaseNCodec.Context org.apache.commons.codec.binary.BaseNCodec.Context = new org.apache.commons.codec.binary.BaseNCodec.Context()"},"status":-2},{"failures":[],"tindex":"f0ddc3e9-443c-11e5-af9d-23de1bccd856","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:724","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"f0ddc3ea-443c-11e5-af9d-335061152807","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:139","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(\"\")) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\");\n} "},"variableMap":{"charset":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:335","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\");\n} "},"status":-2},{"failures":[],"tindex":"f0ddc3eb-443c-11e5-af9d-afb6c8cb6b56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-2},{"failures":[],"tindex":"f0ddc3ec-443c-11e5-af9d-8d9ffcf89fd0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"org.apache.commons.codec.binary.Base32.MASK_5BITS","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:512","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 20))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"f0ddc3ed-443c-11e5-af9d-d9713e6eae4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (int / 8) - int"},"variableMap":{"bitlen":"avail","len":"avail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:114","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.binary.BaseNCodec.readResults(byte[], 0, int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"f0ddc3ee-443c-11e5-af9d-c7fa10f1fbea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:291","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"))"},"status":-2},{"failures":[21,22,23],"tindex":"f0ddeaff-443c-11e5-af9d-21e22d7d0a70","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"blocksize":"bits","tempResult":"raw","pBytes":"raw","cp":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:280","type":"CtIfImpl","sourcecode":"if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n    char[][(int - int)] = '0';\n} else {\n    char[][(int - int)] = '1';\n}"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32],"tindex":"f0ddeb00-443c-11e5-af9d-57d8d21f5208","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:555","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch.finish()"},"variableMap":{"branch":"nextBranch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:532","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.add(org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch);\n} else {\n    break;\n}"},"status":-1},{"failures":[],"tindex":"f0ddeb01-443c-11e5-af9d-91d5295ad797","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:284","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[33,34],"tindex":"f0ddeb02-443c-11e5-af9d-039c12f74fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:301","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":-1},{"failures":[],"tindex":"f0ddeb03-443c-11e5-af9d-f197c08b0d39","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:84","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3gh3\", \"3kh3\")"},"status":1},{"failures":[35,36],"tindex":"f0ddeb04-443c-11e5-af9d-c7d1dacf9d83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.Charsets:87","type":"CtInvocationImpl","sourcecode":"java.nio.charset.Charset.defaultCharset()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Hex.getCharset()"},"status":-1},{"failures":[37],"tindex":"f0ddeb05-443c-11e5-af9d-ffbd462ab990","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:723","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('F')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:446","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"f0dd9cd4-443c-11e5-af9d-4b7225d96c04","diffs":[{"branches":{"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":["org.apache.commons.codec.language.DaitchMokotoffSoundex_java.lang.String[]_soundex(java.lang.String,boolean).t2"]},"type":"branch"}]}]}