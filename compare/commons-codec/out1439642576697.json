{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":19,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":27,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":3,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":0,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":6,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":26,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":9,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":1,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":21,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":2,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":16,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":10,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":11,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray":14,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":4,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":5,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":24,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":20},"transformations":[{"failures":[0,1,2],"tindex":"27649752-434b-11e5-a111-ed4f6205d341","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][59], byte[][17], byte[][38], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"2764be63-434b-11e5-a111-53f39258d10c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:116","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.String.charAt(int)) == (java.lang.String.charAt(int))) {\n        int++;\n    } \n}"},"variableMap":{"es1":"org.apache.commons.codec.language.Metaphone.FRONTV","es2":"org.apache.commons.codec.language.Metaphone.FRONTV","diff":"n","lengthToMatch":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:206","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.Metaphone.(isLastChar(int, (int + 1)))) && org.apache.commons.codec.language.Metaphone.(isNextChar(java.lang.StringBuilder, int, 'G'))) && ((org.apache.commons.codec.language.Metaphone.java.lang.String.indexOf(java.lang.StringBuilder.charAt((int + 2)))) >= 0)) {\n    java.lang.StringBuilder.append('J');\n    int += 2;\n} else {\n    java.lang.StringBuilder.append('T');\n}"},"status":-1},{"failures":[],"tindex":"2764be64-434b-11e5-a111-95afaf8c5272","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:333","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = new java.lang.String(char[]).replaceAll(\"\\\\s+\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[12,13,14],"tindex":"2764be65-434b-11e5-a111-516df8472b9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:210","type":"CtIfImpl","sourcecode":"if ((byte[][(int - int)]) == '1') {\n    byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int];\n} "},"status":-1},{"failures":[15,16],"tindex":"2764e576-434b-11e5-a111-09cd8f74c0ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:102","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"k+\", \"K\")"},"status":-1},{"failures":[],"tindex":"2764e577-434b-11e5-a111-23325cbcd7d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.URLCodec:172","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int])"},"variableMap":{"bytes":"keyBytes","i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:136","type":"CtLocalVariableImpl","sourcecode":"final int int = byte[].int"},"status":-2},{"failures":[17,18,19],"tindex":"2764e578-434b-11e5-a111-e733cacd8011","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"j":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:319","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"2764e579-434b-11e5-a111-3b96a7d7eba1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:326","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer = new org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer(((java.lang.String.length()) * 2))"},"status":-2},{"failures":[20,21],"tindex":"2764e57a-434b-11e5-a111-bbaf4b0b6cb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"status":-1},{"failures":[],"tindex":"2764e57b-434b-11e5-a111-513ec7048a4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:453","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-2},{"failures":[18],"tindex":"27650c8c-434b-11e5-a111-6d5733d62ed8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:371","type":"CtReturnImpl","sourcecode":"return (int + 1) == int"},"variableMap":{"wdsz":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:828","type":"CtIfImpl","sourcecode":"if ((int == ((java.lang.String.length()) - 3)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"ILLO\", \"ILLA\", \"ALLE\"))) {\n    return true;\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 2), 2, \"AS\", \"OS\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, ((java.lang.String.length()) - 1), 1, \"A\", \"O\"))) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"ALLE\"))) {\n    return true;\n} else {\n    return false;\n}"},"status":-1},{"failures":[19],"tindex":"27650c8d-434b-11e5-a111-5157f68b1234","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"variableMap":{"a":"index","t":"index","n":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:742","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[22,23,24,25,26],"tindex":"27650c8e-434b-11e5-a111-fb88bdd2cf72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:174","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"status":-1},{"failures":[0,1,2],"tindex":"27650c8f-434b-11e5-a111-7f94ead242b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:464","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][27], byte[][7], byte[][17], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[22],"tindex":"27650c90-434b-11e5-a111-392aaaa6d563","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:751","type":"CtAssignmentImpl","sourcecode":"int = ((int + 7) >> 3) << 3"},"variableMap":{"bitlen":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:133","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"status":-1},{"failures":[27],"tindex":"27650c91-434b-11e5-a111-7700aa43e674","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:168","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"276533a2-434b-11e5-a111-6311e9d71959","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:119","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)));\n} "},"variableMap":{"this":"object","ascii":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.decodeHex(char[]);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"status":-2},{"failures":[20,21],"tindex":"276533a3-434b-11e5-a111-49f8459efb42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"blocksize":"c","cnt":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:358","type":"CtOperatorAssignmentImpl","sourcecode":"int &= 268435455"},"status":-1},{"failures":[],"tindex":"276533a4-434b-11e5-a111-ff6d664234fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:452","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"pos","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:514","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 10))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}