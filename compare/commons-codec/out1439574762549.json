{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":41,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":97,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":96,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":11,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":93,"org.apache.commons.codec.binary.Base64Test.testTriplets":51,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":88,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":45,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":103,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":111,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":101,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":104,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":34,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":18,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":66,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":8,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":79,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":84,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":60,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":55,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":61,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":98,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":40,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":65,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":89,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":62,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":63,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":32,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":46,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":108,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":26,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":105,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":69,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":22,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":74,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":102,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":54,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":5,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":44,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":85,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":6,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":53,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":39,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":38,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":86,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":27,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":47,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105":42,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":110,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":81,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":31,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":68,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":80,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":92,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":64,"org.apache.commons.codec.binary.Base64Test.testBase64":78,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":87,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":95,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":1,"org.apache.commons.codec.binary.Base64Test.testUUID":57,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":50,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":67,"org.apache.commons.codec.binary.Base64Test.testSingletons":73,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":13,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":36,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":77,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":106,"org.apache.commons.codec.binary.Base64Test.testPairs":56,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":109,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":35,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":12,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":82,"org.apache.commons.codec.binary.Base64Test.testCodec112":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":90,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":16,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":52,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":33,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":28,"org.apache.commons.codec.binary.Base64Test.testCodec68":75,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":3,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":100,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":4,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":71,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":83,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":14,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":17,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":72,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":30,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":43,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":48,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":99,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":107,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":94,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":20,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":59,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":76,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":91,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec105":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":23,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":58},"transformations":[{"failures":[],"tindex":"43022efc-42ad-11e5-a4fc-e9035f64bcdd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:53","type":"CtIfImpl","sourcecode":"if (int == int) {\n    return java.lang.String.toUpperCase(java.util.Locale.java.util.Locale);\n} "},"status":0},{"failures":[],"tindex":"43022efd-42ad-11e5-a4fc-21a9945ed010","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:243","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 1"},"variableMap":{"ii":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:329","type":"CtAssignmentImpl","sourcecode":"int = ((int ^ (int << 16)) ^ int) ^ (int[][int])"},"status":-2},{"failures":[],"tindex":"4302560e-42ad-11e5-a4fc-b9c9153a315a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (int > int) {\n    break;\n} "},"variableMap":{"i":"pos","name2Size":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:364","type":"CtIfImpl","sourcecode":"if ((byte[]) == (org.apache.commons.codec.binary.Base64.byte[])) {\n    byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6],"tindex":"4302560f-42ad-11e5-a4fc-679ced92a2bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"variableMap":{"ctx":"ctx1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:265","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"43025610-42ad-11e5-a4fc-ef70998b3384","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"status":-2},{"failures":[],"tindex":"43025611-42ad-11e5-a4fc-6b85dc27e3f1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()"},"status":-2},{"failures":[],"tindex":"43025612-42ad-11e5-a4fc-437cc0b1fac0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:83","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tio\", \"sio\")"},"status":0},{"failures":[7,8,9,10,11,12,13],"tindex":"43025613-42ad-11e5-a4fc-4b1c6727c383","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:478","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,7,8,9,10,30,11,12,13,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"tindex":"43025614-42ad-11e5-a4fc-09cfd920e554","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:270","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.resizeBuffer(org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-1},{"failures":[],"tindex":"43027d25-42ad-11e5-a4fc-2d81126562ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":1},{"failures":[33,54,68,74],"tindex":"43027d26-42ad-11e5-a4fc-256ab82574fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:606","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], true)"},"status":-1},{"failures":[],"tindex":"43027d27-42ad-11e5-a4fc-1fa3f3df4c40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:247","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.encode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.EncoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"variableMap":{"str":"str","e":"e","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-2},{"failures":[],"tindex":"43027d28-42ad-11e5-a4fc-e3d95e22fcb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:313","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"43027d29-42ad-11e5-a4fc-9fbee3853d56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"variableMap":{"length":"keyLen","key":"pBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:387","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-2},{"failures":[],"tindex":"4302a43a-42ad-11e5-a4fc-af96fc65cef1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    return false;\n} "},"status":-1},{"failures":[89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"4302a43b-42ad-11e5-a4fc-df71e432c4c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:182","type":"CtInvocationImpl","sourcecode":"java.util.Scanner.close()"},"variableMap":{"scanner":"lsScanner"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:181","type":"CtWhileImpl","sourcecode":"while (java.util.Scanner.hasNextLine()) {\n    final java.lang.String java.lang.String = java.util.Scanner.nextLine().trim();\n    if (boolean) {\n        if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            boolean = false;\n        } \n    } else {\n        if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n            boolean = true;\n        } else if ((java.lang.String.length()) > 0) {\n            java.util.Set<java.lang.String>.add(java.lang.String);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"4302a43c-42ad-11e5-a4fc-9b91455b0be7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[],"tindex":"4302a43d-42ad-11e5-a4fc-878591eb96a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"i","to":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:284","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], 0, char[], int, char[].int)"},"status":-2},{"failures":[105,106,107,108,109,110,111],"tindex":"4302a43e-42ad-11e5-a4fc-2dcd8daae814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}