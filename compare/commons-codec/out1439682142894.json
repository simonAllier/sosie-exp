{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":45,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":22,"org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray":25,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":43,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":46,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":33,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":44,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":40,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":10,"org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":39,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":12,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":27,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":18,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":38,"org.apache.commons.codec.language.Caverphone1Test.testEncodeNull":2,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":28,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":26,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":29,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":5,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":8,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":35,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":9,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":41,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":32,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":3,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":20,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":4},"transformations":[{"failures":[0],"tindex":"46b514f0-43a7-11e5-8093-8176b787251e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(java.io.InputStream))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:517","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha256(java.io.InputStream))"},"status":-1},{"failures":[1],"tindex":"46b58a21-43a7-11e5-8093-6df52ab8b8dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:96","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"f+\", \"F\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[2],"tindex":"46b5b132-43a7-11e5-8093-5b5f434197ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":-1},{"failures":[3,4],"tindex":"46b5b133-43a7-11e5-8093-7ff536304ac9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:389","type":"CtAssignmentImpl","sourcecode":"char = '6'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:363","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"status":-1},{"failures":[5,6,7,8,9,10,11,12],"tindex":"46b5d844-43a7-11e5-8093-cbb557944a65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[13,14],"tindex":"46b5ff55-43a7-11e5-8093-57efb7fe37e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"variableMap":{"u":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:120","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleD(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-2},{"failures":[15,16,17],"tindex":"46b5ff56-43a7-11e5-8093-9fc33c3aab0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][13], byte[][23], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:477","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][50], byte[][8], byte[][29], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"46b62667-43a7-11e5-8093-454793386763","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:305","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 2, 858993459, int[])"},"status":-2},{"failures":[],"tindex":"46b64d78-43a7-11e5-8093-758852c0e47d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"variableMap":{"u":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:451","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"46b64d79-43a7-11e5-8093-33a8387238b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[18],"tindex":"46b6748a-43a7-11e5-8093-45efa0f4d7b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"j\", \"y\")"},"variableMap":{"txt":"name1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:235","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeDoubleConsonants(java.lang.String)"},"status":-1},{"failures":[19,20],"tindex":"46b69b9b-43a7-11e5-8093-a3061035165d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:136","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":-1},{"failures":[],"tindex":"46b69b9c-43a7-11e5-8093-c9d129426395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:356","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[21,22],"tindex":"46b6c2ad-43a7-11e5-8093-6966db122576","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('H')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[])"},"status":-1},{"failures":[23,24,25],"tindex":"46b6c2ae-43a7-11e5-8093-05a0576a4a2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:184","type":"CtOperatorAssignmentImpl","sourcecode":"byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int]"},"status":-1},{"failures":[],"tindex":"46b6e9bf-43a7-11e5-8093-ab6aef49b99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"keyBytes","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"keyBytes","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"46b710d0-43a7-11e5-8093-ff9f9f0c356a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:114","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(java.lang.String.length(), java.lang.String.length())"},"variableMap":{"es1":"ph","es2":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(\"[\")"},"status":-1},{"failures":[],"tindex":"46b737e1-43a7-11e5-8093-9bef395fca50","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"status":-2},{"failures":[13,44,45],"tindex":"46b737e2-43a7-11e5-8093-b17437e290f9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:969","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendPrimary(java.lang.String)"},"variableMap":{"this":"result","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((int == ((java.lang.String.length()) - 1)) && (!boolean)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"IE\"))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 2, \"ME\", \"MA\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R');\n}"},"status":-1},{"failures":[46],"tindex":"46b75ef3-43a7-11e5-8093-2b495128e2c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(java.lang.Object)))"},"variableMap":{"this":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:312","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}