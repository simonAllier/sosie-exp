{"failureDictionary":{"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":3,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":63,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":75,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":36,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":25,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":1,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":27,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":32,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":35,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":61,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":58,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE":17,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":72,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":48,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":68,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":69,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":73,"org.apache.commons.codec.language.Caverphone2Test.testIsCaverphoneEquals":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":43,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":52,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":33,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":77,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":81,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":4,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":45,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":57,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":46,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":64,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":65,"org.apache.commons.codec.net.URLCodecTest.testEncodeObjects":82,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":83,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":54,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":50,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":55,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":37,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":44,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":60,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":26,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":6,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":42,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":0,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":9,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":56,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":76,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":30,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":66,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":41,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":10,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":8,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":80,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":70,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":51,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":39,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMYTH_to_SMYTH":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":40,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":31},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"20194cfb-437d-11e5-a6eb-cbedec1258f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"name","lastThree":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[19],"tindex":"2019740c-437d-11e5-a6eb-6b7e0ac6b501","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:547","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha384Digest().digest(byte[])"},"status":-1},{"failures":[],"tindex":"2019740d-437d-11e5-a6eb-674b8ae2874c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (int > int) {\n    break;\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.EOF","name2Size":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:144","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29],"tindex":"2019740e-437d-11e5-a6eb-b161b82fe340","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:602","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[30],"tindex":"2019740f-437d-11e5-a6eb-b5f572c651f4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:742","type":"CtInvocationImpl","sourcecode":"javax.crypto.Mac.reset()"},"variableMap":{"mac":"mac"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:743","type":"CtInvocationImpl","sourcecode":"javax.crypto.Mac.update(byte[])"},"status":-1},{"failures":[31,32],"tindex":"20197410-437d-11e5-a6eb-fb88c8c5340a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"blocksize":"d","cp":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.hPermOp(int, -2, -859045888)"},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"20197411-437d-11e5-a6eb-6df792205480","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"variableMap":{"b":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"20199b22-437d-11e5-a6eb-4f8f2a7e7a8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"variableMap":{"length":"i","key":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} else {\n    java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"status":-2},{"failures":[45,46,47,48,49],"tindex":"20199b23-437d-11e5-a6eb-df394c4a8298","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:76","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cy\", \"sy\")"},"status":-1},{"failures":[50,51,52],"tindex":"20199b24-437d-11e5-a6eb-f191f5ae44d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"status":-1},{"failures":[53,54,55,56,57,58,59],"tindex":"20199b25-437d-11e5-a6eb-ebbcc98efaa6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((int & 1) == 1) {\n    java.security.MessageDigest.update(byte[][int]);\n} else {\n    java.security.MessageDigest.update(byte[][int]);\n}"},"status":-1},{"failures":[],"tindex":"20199b26-437d-11e5-a6eb-3b86521e8b34","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.CharSequenceUtils:66","type":"CtIfImpl","sourcecode":"if (!boolean) {\n    return false;\n} "},"variableMap":{"ignoreCase":"matches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:357","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[60,61],"tindex":"20199b27-437d-11e5-a6eb-438a24edae5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:426","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1(java.io.InputStream))"},"status":-1},{"failures":[],"tindex":"20199b28-437d-11e5-a6eb-b96241a51a5b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"string":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:674","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-2},{"failures":[],"tindex":"2019c239-437d-11e5-a6eb-759a31d7b5d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:209","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"variableMap":{"salt":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:314","type":"CtLocalVariableImpl","sourcecode":"final char char = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.java.lang.String.charAt(0)"},"status":0},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"2019c23a-437d-11e5-a6eb-b3817a45f9dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final int int = byte[][int];\n    if (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n        }\n    } else if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        java.io.ByteArrayOutputStream.write(int);\n    } \n}"},"status":-1},{"failures":[77],"tindex":"2019c23b-437d-11e5-a6eb-e119d10dfb32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:209","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('J')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[78],"tindex":"2019c23c-437d-11e5-a6eb-3b67ceeb27d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[79,80,81,82,83],"tindex":"2019c23d-437d-11e5-a6eb-3db92dc1ea44","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:185","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit((int & 15), 16))"},"variableMap":{"b":"org.apache.commons.codec.net.URLCodec.RADIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((int >> 4) & 15), org.apache.commons.codec.net.URLCodec.int))"},"status":-1},{"failures":[31,32],"tindex":"2019c23e-437d-11e5-a6eb-bd6c2a9e7df4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:347","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.hPermOp(int, -2, -859045888)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}