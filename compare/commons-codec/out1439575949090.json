{"failureDictionary":{"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":14,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":10,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":5,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":13,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":0,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":3,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":9,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":12,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":4,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":2,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":11,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":8},"transformations":[{"failures":[],"tindex":"063e1fb0-42b0-11e5-9d70-fdad2c03e01a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"variableMap":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"length","context":"context","modulus":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:394","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"063e46c1-42b0-11e5-9d70-afc7d91734e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:272","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n} else {\n    java.security.MessageDigest.update(byte[]);\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"altResult","finalb":"altResult","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"blocksize","i":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:396","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":1},{"failures":[],"tindex":"063e46c2-42b0-11e5-9d70-ffedf6f30866","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:310","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(java.io.InputStream))"},"status":-2},{"failures":[],"tindex":"063e46c3-42b0-11e5-9d70-eb148f4c405e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:496","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return false;\n} "},"variableMap":{"arrayOctet":"arrayOctet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:465","type":"CtIfImpl","sourcecode":"if ((!org.apache.commons.codec.binary.BaseNCodec.(isInAlphabet(byte[][int]))) && ((!boolean) || (((byte[][int]) != (byte)) && (!org.apache.commons.codec.binary.BaseNCodec.(org.apache.commons.codec.binary.BaseNCodec.isWhiteSpace(byte[][int])))))) {\n    return false;\n} "},"status":0},{"failures":[0],"tindex":"063e46c4-42b0-11e5-9d70-776f509d25c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:176","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException)"},"status":-1},{"failures":[],"tindex":"063e46c5-42b0-11e5-9d70-f3e9423c9556","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[1,2,3],"tindex":"063e6dd6-42b0-11e5-9d70-bf8ba327507a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\")"},"status":-1},{"failures":[4,5,6,7,8,9,10,11],"tindex":"063e6dd7-42b0-11e5-9d70-1da71007b54b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:194","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"063e6dd8-42b0-11e5-9d70-4fb3ad104bc7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:167","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[12],"tindex":"063e6dd9-42b0-11e5-9d70-2d7c42a05677","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"variableMap":{"i":"i","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[13],"tindex":"063e6dda-42b0-11e5-9d70-3511323bdb10","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Crypt:67","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[])"},"variableMap":{"keyBytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:689","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[], byte[]))"},"status":-1},{"failures":[],"tindex":"063e6ddb-42b0-11e5-9d70-17f233822ef1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"variableMap":{"str":"str","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:617","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"status":-2},{"failures":[1,2,14],"tindex":"063e94ec-42b0-11e5-9d70-d7cef1bb520b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:520","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"status":-1},{"failures":[5,6,7],"tindex":"063e94ed-42b0-11e5-9d70-958f260c70d6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:288","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), ((byte)(0)), byte[][11], 2, java.lang.StringBuilder)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:480","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][53], byte[][11], byte[][32], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"063e94ee-42b0-11e5-9d70-0b7c6ef8b4f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    int >>= 1;\n}"},"variableMap":{"blocksize":"j","altResult":"finalb","keyBytes":"finalb","ctx":"ctx","cnt":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[][int])"},"status":-2},{"failures":[4,8,9,10,11],"tindex":"063e94ef-42b0-11e5-9d70-c331b933aea4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:467","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(((byte)(0)), byte[][31], byte[][30], 3, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][12], byte[][22], byte[][2], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"063e94f0-42b0-11e5-9d70-9134184df01c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:93","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    return int;\n} "},"variableMap":{"c":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:377","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":-2},{"failures":[],"tindex":"063e94f1-42b0-11e5-9d70-f91ea5af0a07","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:373","type":"CtLocalVariableImpl","sourcecode":"final int int = (((org.apache.commons.codec.digest.UnixCrypt.int[][][4][(int & 63)]) | (org.apache.commons.codec.digest.UnixCrypt.int[][][5][(((int >>> 7) & 3) | ((int >>> 8) & 60))])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][6][((int >>> 15) & 63)])) | (org.apache.commons.codec.digest.UnixCrypt.int[][][7][(((int >>> 21) & 15) | ((int >>> 22) & 48))])"},"status":-2},{"failures":[15,16,17],"tindex":"063ebc02-42b0-11e5-9d70-496b8f1981bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1) {\n    char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    if (char == 'S') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n        char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    } \n    if ((java.lang.StringBuilder.length()) > 2) {\n        final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2));\n        if ((char == 'A') && (char == 'Y')) {\n            java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2));\n        } \n    } \n    if (char == 'A') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n    } \n} "},"variableMap":{"key":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:108","type":"CtSwitchImpl","sourcecode":"switch (char[][0]) {\n    case 'K' :\n    case 'G' :\n    case 'P' :\n        if ((char[][1]) == 'N') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'A' :\n        if ((char[][1]) == 'E') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'W' :\n        if ((char[][1]) == 'R') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            break;\n        } \n        if ((char[][1]) == 'H') {\n            java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1));\n            java.lang.StringBuilder.setCharAt(0, 'W');\n        } else {\n            java.lang.StringBuilder.append(char[]);\n        }\n        break;\n    case 'X' :\n        char[][0] = 'S';\n        java.lang.StringBuilder.append(char[]);\n        break;\n    default :\n        java.lang.StringBuilder.append(char[]);\n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}