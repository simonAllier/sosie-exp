{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":32,"org.apache.commons.codec.binary.HexTest.testCustomCharset":92,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":85,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":30,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":8,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":6,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":16,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":7,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":31,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":91,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":9,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":75,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":69,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":66,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":96,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved":81,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":68,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":56,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":15,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":14,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":17,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_ComprehensiveAccentMix_AllSuccessfullyRemoved":80,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":12,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":13,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":23,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":29,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":34,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":24,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":20,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":28,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":94,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_WithSpaces_SuccessfullyRemovedAndSpacesInvariant":87,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":39,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":35,"org.apache.commons.codec.language.SoundexTest.testB650":5,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":58,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":43,"org.apache.commons.codec.language.SoundexTest.testNewInstance":10,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":63,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":41,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":59,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":18,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":47,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":57,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":25,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":45,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":3,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":4,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":84,"org.apache.commons.codec.binary.Base64Test.testBase64":52,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":65,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":27,"org.apache.commons.codec.binary.Base64Test.testUUID":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved":86,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":40,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":51,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":21,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":93,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":0,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":54,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":72,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":70,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":11,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":48,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":64,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":76,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":62,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":33,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":55,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithByteArray":89,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":42,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":61,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_MixedWithUnusualChars_SuccessfullyRemovedAndUnusualcharactersInvariant":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":46,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":38,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_UpperandLower_SuccessfullyRemovedAndCaseInvariant":82,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean":83,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter":1,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":37,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":67,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":90,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":50,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":44,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":36,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":77,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":74,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":95},"transformations":[{"failures":[],"tindex":"f672374f-42cc-11e5-908f-67045f70bece","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:464","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[0],"tindex":"f6725e60-42cc-11e5-908f-c5c163c7d1cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[],"tindex":"f6725e61-42cc-11e5-908f-ed39f90ef2d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"Y\")"},"status":1},{"failures":[1],"tindex":"f6725e62-42cc-11e5-908f-07858182cf7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"f6725e63-42cc-11e5-908f-59dac9c8b58e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"char = '*'"},"variableMap":{"last":"mapped"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[0],"tindex":"f6728574-42cc-11e5-908f-0795b27aeeea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:626","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(java.lang.String))"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,0,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"tindex":"f6728575-42cc-11e5-908f-675d61446cea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(java.lang.String)"},"variableMap":{"base64String":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:235","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"f6728576-42cc-11e5-908f-bdcdeeebaa2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:360","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 10) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"f672ac87-42cc-11e5-908f-03db021780e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:793","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.DigestUtils.int]"},"variableMap":{"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:243","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(byte[].int) << 3]"},"status":-2},{"failures":[],"tindex":"f672ac88-42cc-11e5-908f-0d34082182cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:388","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha1(byte[], java.io.InputStream))"},"status":-2},{"failures":[],"tindex":"f672ac89-42cc-11e5-908f-7d6f4a82e070","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"hex1","chr":"hex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:144","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(char)"},"status":-2},{"failures":[77,78],"tindex":"f672ac8a-42cc-11e5-908f-c5e4ec2719af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:522","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H')"},"status":-1},{"failures":[79,80,81,82,83,84,85,86,87],"tindex":"f672d39b-42cc-11e5-908f-09ff68e81093","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:426","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(int)"},"variableMap":{"buffer":"sb","rounds":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:363","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.charAt(int))"},"status":-1},{"failures":[88,17,18,89,20,21,22,23,24,0,25,26,27,28,29,90,31,32,33,34,36,91,37,62,92,63,64,93,94],"tindex":"f672d39c-42cc-11e5-908f-a3947b94969c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:320","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"variableMap":{"name1Char":"toDigits","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:146","type":"CtAssignmentImpl","sourcecode":"char[][int++] = char[][(15 & (byte[][int]))]"},"status":-1},{"failures":[],"tindex":"f672d39d-42cc-11e5-908f-59d480670336","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:378","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:379","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"status":-2},{"failures":[95,96],"tindex":"f672d39e-42cc-11e5-908f-e397c115ecc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"d","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"d","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"d","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"c","minRating":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"d","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"c","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 4, 252645135, int[])"},"status":-1},{"failures":[],"tindex":"f672faaf-42cc-11e5-908f-0384ac684f30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = 0"},"variableMap":{"currentLinePos":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:449","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"f672fab0-42cc-11e5-908f-810499cff1ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"variableMap":{"bigBytes":"b","length":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:385","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte[][int++])"},"status":-2},{"failures":[],"tindex":"f672fab1-42cc-11e5-908f-612f979cff08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"status":-2},{"failures":[],"tindex":"f67321c2-42cc-11e5-908f-8ff60c6e314f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"n","to":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.isVowel(java.lang.StringBuilder, (int + 1))) {\n    java.lang.StringBuilder.append('H');\n} "},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}