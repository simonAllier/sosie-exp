{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":68,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":39,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":55,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":31,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":3,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":62,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":52,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":23,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":9,"org.apache.commons.codec.binary.Base64Test.testBase64":60,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":4,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":34,"org.apache.commons.codec.binary.Base64Test.testTriplets":43,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":16,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":30,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":70,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":14,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":17,"org.apache.commons.codec.binary.Base64Test.testUUID":46,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":72,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":38,"org.apache.commons.codec.binary.Base64Test.testSingletons":56,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":59,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":5,"org.apache.commons.codec.binary.Base64Test.testPairs":45,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":54,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":63,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":20,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":19,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":48,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":49,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":0,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":18,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":50,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":51,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":22,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":40,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":76,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":13,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":36,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":79,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":21,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":75,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":57,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":77,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":78,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":25,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":65,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":80,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":15,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":67,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":32,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":37,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":12,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":33,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":64,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":73,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":74,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":44,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":58,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":27,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":42,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":66,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":71,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":47,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":81,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":26},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"49c26cba-433e-11e5-add1-dbd86ef0a379","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:412","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = \"d\" + java.lang.String"},"variableMap":{"remainder":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:388","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1))"},"status":-1},{"failures":[18,19,20,21,22,23,24,25],"tindex":"49c293cb-433e-11e5-add1-6f4eceb1bb51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"lastCode","chr":"lastCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:394","type":"CtIfImpl","sourcecode":"if ((char != '-') && ((((char != char) && ((char != '0') || (char == '/'))) || (char < '0')) || (char > '8'))) {\n    org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.addRight(char);\n} "},"status":-1},{"failures":[],"tindex":"49c293cc-433e-11e5-add1-f1bb46dc2fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:176","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[(char[].int) >> 3]"},"status":-2},{"failures":[26,27,28,29,30,31,32,33],"tindex":"49c293cd-433e-11e5-add1-31fc90e0ae7a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:276","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"49c2bade-433e-11e5-add1-7be9bd63f8e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"variableMap":{"i":"org.apache.commons.codec.binary.Base64.MASK_6BITS","key":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))]"},"status":-1},{"failures":[68],"tindex":"49c2badf-433e-11e5-add1-d5d74b1f07e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:59","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^cough\", \"cou2f\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:86","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"49c2bae0-433e-11e5-add1-9b0fb49e9854","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"variableMap":{"b":"org.apache.commons.codec.net.QCodec.BLANK","tmp":"tmp","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:187","type":"CtAssignmentImpl","sourcecode":"byte[][int] = org.apache.commons.codec.net.QCodec.byte"},"status":0},{"failures":[69,70],"tindex":"49c2bae1-433e-11e5-add1-db65d90d0023","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:658","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest(), java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:389","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest(), java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"49c2bae2-433e-11e5-add1-11be2a9c6151","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:72","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:106","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(10)"},"status":-2},{"failures":[71,72],"tindex":"49c2bae3-433e-11e5-add1-f984c20286e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:656","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"49c2e1f4-433e-11e5-add1-e38ab3b7cd21","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:230","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(int, byte[], false, org.apache.commons.codec.binary.BaseNCodec.byte)"},"status":-2},{"failures":[],"tindex":"49c2e1f5-433e-11e5-add1-03aa527befdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(2)"},"variableMap":{"input":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"status":-2},{"failures":[],"tindex":"49c2e1f6-433e-11e5-add1-0fe189131404","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(java.util.BitSet.get(int))) || (org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)) && (int > ((org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2},{"failures":[73],"tindex":"49c2e1f7-433e-11e5-add1-354100a2a21f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[74,75,76,77,78],"tindex":"49c2e1f8-433e-11e5-add1-9186602a6ab8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"variableMap":{"code":"current","chr":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:190","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.String.length()) ; int++) {\n    char = org.apache.commons.codec.language.RefinedSoundex.getMappingCode(java.lang.String.charAt(int));\n    if (char == char) {\n        continue;\n    } else if (char != 0) {\n        java.lang.StringBuilder.append(char);\n    } \n    char = char;\n}"},"status":-1},{"failures":[79,80,81],"tindex":"49c2e1f9-433e-11e5-add1-f52c61ccde6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"49c2e1fa-433e-11e5-add1-0db7651f4bb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:337","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"obj","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:312","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.encode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL encoded\"));\n}"},"status":-2},{"failures":[],"tindex":"49c3090b-433e-11e5-add1-71f047fec60a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:634","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]).doFinal(byte[]);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(java.lang.IllegalStateException);\n}"},"status":-2},{"failures":[],"tindex":"49c3090c-433e-11e5-add1-9524f559b374","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:85","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"z\", \"s\")"},"variableMap":{"txt":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + java.lang.String"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}