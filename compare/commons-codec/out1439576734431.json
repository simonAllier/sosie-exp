{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":31,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":35,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":23,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":5,"org.apache.commons.codec.language.NysiisTest.testDropBy":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":30,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":32,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":20,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":33,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":3,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":16,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":6,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":4,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":29,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":11,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":14,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":7,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":19,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":10,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":27,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":34,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":18,"org.apache.commons.codec.language.NysiisTest.testRule1":25,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":0,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":9,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":15,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":24,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":21,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":22,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":37,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":28,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":8,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":12},"transformations":[{"failures":[],"tindex":"da5730ec-42b1-11e5-bece-f1e996709631","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone:77","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone.caverphone(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"da5757fd-42b1-11e5-bece-ff0db6528525","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:495","type":"CtLocalVariableImpl","sourcecode":"char char = '\u0000'"},"status":-2},{"failures":[0,1,2,3],"tindex":"da5757fe-42b1-11e5-bece-530193f05988","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"status":-1},{"failures":[],"tindex":"da5757ff-42b1-11e5-bece-ebdf63ee194f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:296","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.String.toCharArray()"},"status":-2},{"failures":[],"tindex":"da575800-42b1-11e5-bece-498b190b7286","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:78","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"dg\", \"2g\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":-2},{"failures":[4,5,6,7,8,9,10,11],"tindex":"da575801-42b1-11e5-bece-657e7b067688","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:248","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[], 0, int);\n} else {\n    java.security.MessageDigest.update(byte[]);\n}"},"status":-1},{"failures":[],"tindex":"da577f12-42b1-11e5-bece-5db3f7a7a411","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:132","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.String.length()) - 2"},"variableMap":{"text":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:256","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.language.MatchRatingApproachEncoder.leftToRightThenRightToLeftProcessing(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"da577f13-42b1-11e5-bece-897a3432be75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:214","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"text1","name2":"text2","name1":"text2","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"text1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String).equals(org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String))"},"status":-2},{"failures":[],"tindex":"da577f14-42b1-11e5-bece-a956c69729e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"b","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:133","type":"CtAssignmentImpl","sourcecode":"int = 256 + int"},"status":0},{"failures":[],"tindex":"da577f15-42b1-11e5-bece-259ca24f158a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:141","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.URLCodec.byte)"},"variableMap":{"buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.CR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:314","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-2},{"failures":[],"tindex":"da577f16-42b1-11e5-bece-9d9c4ed2300a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:410","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'H') {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleGH(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'N') {\n    if (((int == 1) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 0)))) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\", \"N\");\n    } else if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n    }\n    int = int + 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"LI\")) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KL\", \"L\");\n    int += 2;\n} else if ((int == 0) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y') || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[])))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if ((((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ER\")) || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Y')) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 6, \"DANGER\", \"RANGER\", \"MANGER\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"E\", \"I\")))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 3, \"RGY\", \"OGY\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'J');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"E\", \"I\", \"Y\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 4, \"AGGI\", \"OGGI\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ET\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"IER\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'K');\n    }\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'G') {\n    int += 2;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n} else {\n    int++;\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n}"},"status":-2},{"failures":[12,13],"tindex":"da57a627-42b1-11e5-bece-bddc1a1fd7d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"status":-1},{"failures":[14,15,16,17,18],"tindex":"da57a628-42b1-11e5-bece-f391faef3c1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.RFC1522Codec.encodeText(java.lang.String, java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"da57a629-42b1-11e5-bece-a1c3fbfc08a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:766","type":"CtLocalVariableImpl","sourcecode":"final int int = (int / 8) - int"},"status":-2},{"failures":[19],"tindex":"da57a62a-42b1-11e5-bece-139da81ccc75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:185","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd2Digest()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-1},{"failures":[20,21,22,14,15,16,23,18,24],"tindex":"da57a62b-42b1-11e5-bece-f98450a89baf","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:126","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[25,26],"tindex":"da57cd3c-42b1-11e5-bece-6d2ee11aeaa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:105","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"h\", \"2\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:261","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"MCC\")"},"status":-1},{"failures":[27],"tindex":"da57cd3d-42b1-11e5-bece-19c2295e2f91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:303","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TH\")) {\n    java.lang.StringBuilder.append('0');\n} else {\n    java.lang.StringBuilder.append('T');\n}"},"variableMap":{"code":"local","this":"this","local":"local","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:179","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n    java.lang.StringBuilder.append('X');\n    break;\n} "},"status":-1},{"failures":[28,29,30],"tindex":"da57cd3e-42b1-11e5-bece-c5bcf645d0bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"TION\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TIA\", \"TCH\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"TH\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TTH\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"OM\", \"AM\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"T\", \"D\") ? int + 2 : int + 1;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:306","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n}"},"status":-1},{"failures":[31,32,33,34,35,36,37],"tindex":"da57cd3f-42b1-11e5-bece-f32225808490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:258","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} else {\n    java.security.MessageDigest.update(byte[], 0, org.apache.commons.codec.digest.Md5Crypt.int);\n}"},"variableMap":{"ctx1":"ctx","keyBytes":"finalb","finalb":"finalb","org.apache.commons.codec.digest.Md5Crypt.BLOCKSIZE":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:237","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    if ((int & 1) == 1) {\n        java.security.MessageDigest.update(byte[][int]);\n    } else {\n        java.security.MessageDigest.update(byte[][int]);\n    }\n    int >>= 1;\n}"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}