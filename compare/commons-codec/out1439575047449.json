{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":3,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":12,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":7,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":13,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":10,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":4,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":6,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":9,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":5},"transformations":[{"failures":[],"tindex":"ecd2c79b-42ad-11e5-b879-81b6f01b3dad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:220","type":"CtIfImpl","sourcecode":"if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"variableMap":{"name2":"value","name1":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:801","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    return false;\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 5, \"HARAC\", \"HARIS\"))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 3, \"HOR\", \"HYM\", \"HIA\", \"HEM\")))) {\n    return false;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 5, \"CHORE\")) {\n    return false;\n} else {\n    return true;\n}"},"status":-2},{"failures":[0,1],"tindex":"ecd2eeac-42ad-11e5-b879-81164d9e55d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:633","type":"CtIfImpl","sourcecode":"if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:677","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"TION\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TIA\", \"TCH\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    int += 3;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"TH\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"TTH\"))) {\n    if ((org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"OM\", \"AM\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"VAN \", \"VON \"))) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 3, \"SCH\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('0', 'T');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T');\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"T\", \"D\") ? int + 2 : int + 1;\n}"},"status":-2},{"failures":[],"tindex":"ecd2eead-42ad-11e5-b879-fd93b6460099","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:45","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.int)) + \"): \") + byte))"},"status":-2},{"failures":[],"tindex":"ecd2eeae-42ad-11e5-b879-d12ece54bbf8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:182","type":"CtReturnImpl","sourcecode":"return java.io.ByteArrayOutputStream.toByteArray()"},"status":-2},{"failures":[],"tindex":"ecd2eeaf-42ad-11e5-b879-ab3c62a45bd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:257","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.util.Scanner.nextLine()"},"status":-2},{"failures":[2,3],"tindex":"ecd2eeb0-42ad-11e5-b879-47f8fe07f62a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:207","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[])"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:314","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha1(byte[])"},"status":-1},{"failures":[],"tindex":"ecd315c1-42ad-11e5-b879-d16c4c18e713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:171","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:373","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.lang.String> java.util.Set<java.lang.String> = new java.util.HashSet<java.lang.String>(java.util.Arrays.asList(java.lang.String.split(\"[+]\")))"},"status":-2},{"failures":[4,5],"tindex":"ecd315c2-42ad-11e5-b879-bf3201ea3f07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:383","type":"CtAssignmentImpl","sourcecode":"char = '8'"},"status":-1},{"failures":[],"tindex":"ecd315c3-42ad-11e5-b879-d3a630f4af83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:76","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"x\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"status":1},{"failures":[6,7,8,9],"tindex":"ecd315c4-42ad-11e5-b879-f7b3ed12e9a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:361","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.BaseNCodec.encode(byte[]))"},"status":-1},{"failures":[],"tindex":"ecd315c5-42ad-11e5-b879-c777aee2cd02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:380","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isWhitespace(char)) {\n    continue;\n} "},"variableMap":{"ch":"nextChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:354","type":"CtIfImpl","sourcecode":"if ((char == 'B') || ((char == 'P') && (char != 'H'))) {\n    char = '1';\n} else if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '4';\n} else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"ecd33cd6-42ad-11e5-b879-f7786f44dd1c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"ecd33cd7-42ad-11e5-b879-cdb66c5c03b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:492","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[0,1,10,11,12],"tindex":"ecd33cd8-42ad-11e5-b879-bd199ae1c147","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:923","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"ecd33cd9-42ad-11e5-b879-3f6cca04c3df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:67","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\"')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:96","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('`')"},"status":-2},{"failures":[],"tindex":"ecd33cda-42ad-11e5-b879-2feae6a872c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String)"},"variableMap":{"singleLetter":"txt","replacedName":"txt","dc":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:94","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y\", \"A\")"},"status":1},{"failures":[],"tindex":"ecd33cdb-42ad-11e5-b879-f741a3bf41af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:251","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '0'"},"variableMap":{"jj":"pos","l_ascii":"buffer","bits":"ibitWorkArea"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:451","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[13],"tindex":"ecd33cdc-42ad-11e5-b879-d98c67645068","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"variableMap":{"sb":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:120","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1))"},"status":-1},{"failures":[],"tindex":"ecd33cdd-42ad-11e5-b879-03261ba069ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"pos","minRating":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int)"},"status":-2},{"failures":[],"tindex":"ecd363ee-42ad-11e5-b879-4d14b9802831","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"sh\", \"s2\")"},"status":1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}