{"failureDictionary":{"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":47,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":9,"org.apache.commons.codec.language.NysiisTest.testDropBy":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":4,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":29,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":16,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":14,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":7,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":19,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":46,"org.apache.commons.codec.language.NysiisTest.testRule7":22,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":48,"org.apache.commons.codec.language.NysiisTest.testRule6":21,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":6,"org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy":26,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":45,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":30,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":0,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":20,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":42,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":35,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":3,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":5,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":15,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":41,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":37,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":43,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":44,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":2,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":24,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":38,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":10,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":32,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":13,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":33,"org.apache.commons.codec.digest.B64Test.testB64from24bit":31,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":36,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":39,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":40,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":27,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":25,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":34,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":18,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":12,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":1},"transformations":[{"failures":[0],"tindex":"6ea202ac-42d0-11e5-86ca-f565590cb309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-1},{"failures":[1,2,3,4],"tindex":"6ea229bd-42d0-11e5-86ca-c9a7ab46b998","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"variableMap":{"b":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.apache.commons.codec.digest.UnixCrypt.(org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte[][int++])) << 16"},"status":-1},{"failures":[],"tindex":"6ea229be-42d0-11e5-86ca-9532fa65372e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_AF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[5,6,7,8],"tindex":"6ea229bf-42d0-11e5-86ca-cf553181ef49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:99","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"s+\", \"S\")"},"status":-1},{"failures":[9,10,11],"tindex":"6ea229c0-42d0-11e5-86ca-e9f5940737dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:462","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][15], byte[][25], byte[][5], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][59], byte[][17], byte[][38], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[9,10,11],"tindex":"6ea250d1-42d0-11e5-86ca-f7ed101039bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][2], byte[][8], byte[][14], 4, java.lang.StringBuilder)"},"variableMap":{"finalb":"altResult","passwd":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][40], byte[][61], byte[][19], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[1,4],"tindex":"6ea250d2-42d0-11e5-86ca-7d58497e37b5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:225","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"blocksize":"left","cnt":"t"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:290","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"6ea250d3-42d0-11e5-86ca-bd327fefae86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((java.lang.String.indexOf('W')) > (-1)) || ((java.lang.String.indexOf('K')) > (-1))) || ((java.lang.String.indexOf(\"CZ\")) > (-1))) || ((java.lang.String.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:216","type":"CtIfImpl","sourcecode":"if (((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) {\n    return false;\n} else if (((java.lang.String.length()) == 1) || ((java.lang.String.length()) == 1)) {\n    return false;\n} else if (java.lang.String.equalsIgnoreCase(java.lang.String)) {\n    return true;\n} "},"status":-2},{"failures":[12,13,14,15,16,17,1,4],"tindex":"6ea250d4-42d0-11e5-86ca-770cc7b7a85c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:70","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[], java.lang.String);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String);\n}"},"status":-1},{"failures":[18,19],"tindex":"6ea250d5-42d0-11e5-86ca-f1cf11170a76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:594","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(byte[]))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(byte[]))"},"status":-1},{"failures":[20],"tindex":"6ea277e6-42d0-11e5-86ca-59eb329f8b51","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[21,22,23],"tindex":"6ea277e7-42d0-11e5-86ca-39e6d357e2d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:384","type":"CtAssignmentImpl","sourcecode":"char = java.lang.Character.toLowerCase(char)"},"variableMap":{"ch":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:298","type":"CtAssignmentImpl","sourcecode":"char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-1},{"failures":[24,25,0],"tindex":"6ea277e8-42d0-11e5-86ca-b9a558fd88b7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"binaryData":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"status":-1},{"failures":[],"tindex":"6ea277e9-42d0-11e5-86ca-cbf82130f3d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:364","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S')"},"variableMap":{"input":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:349","type":"CtIfImpl","sourcecode":"if (((char == 'H') || (char < 'A')) || (char > 'Z')) {\n    if (char == '/') {\n        continue;\n    } \n    char = '-';\n} else if ((char == 'B') || ((char == 'P') && (char != 'H'))) {\n    char = '1';\n} else if (((char == 'D') || (char == 'T')) && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '2';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '3';\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '4';\n} else if ((char == 'X') && (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n    char = '4';\n    org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.addLeft('S');\n    int++;\n} else if ((char == 'S') || (char == 'Z')) {\n    char = '8';\n} else if (char == 'C') {\n    if (char == '/') {\n        if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n            char = '4';\n        } else {\n            char = '8';\n        }\n    } else {\n        if (org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) || (!org.apache.commons.codec.language.ColognePhonetic.(org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)))) {\n            char = '8';\n        } else {\n            char = '4';\n        }\n    }\n} else if (org.apache.commons.codec.language.ColognePhonetic.org.apache.commons.codec.language.ColognePhonetic.arrayContains(org.apache.commons.codec.language.ColognePhonetic.char[], char)) {\n    char = '8';\n} else if (char == 'R') {\n    char = '7';\n} else if (char == 'L') {\n    char = '5';\n} else if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[26],"tindex":"6ea29efa-42d0-11e5-86ca-89e5f486448b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-1},{"failures":[12,27,28,13,29,9,10,11],"tindex":"6ea29efb-42d0-11e5-86ca-7709963763cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:379","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[12,27,28,30,13,31,32,15,16,33,17,29,9,10,11,34,35,36,37,38,39],"tindex":"6ea29efc-42d0-11e5-86ca-537328f34876","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"variableMap":{"key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:61","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.B64.java.lang.String.charAt((int & 63)))"},"status":-1},{"failures":[40,41,42,43,44],"tindex":"6ea29efd-42d0-11e5-86ca-15b7da352bd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[45,46],"tindex":"6ea29efe-42d0-11e5-86ca-fb107f06acd1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"variableMap":{"i":"bits","key":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '1'"},"status":-1},{"failures":[47,48],"tindex":"6ea29eff-42d0-11e5-86ca-119a56f2b534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}