{"failureDictionary":{"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":2,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":10,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":0,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":12,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":26,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":16,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":14,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":34,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":17,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":8,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":27,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":30,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":33,"org.apache.commons.codec.language.SoundexTest.testB650":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":28,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":4,"org.apache.commons.codec.language.SoundexTest.testNewInstance":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":3,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":6,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":24,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":23,"org.apache.commons.codec.language.SoundexTest.testDifference":18,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":7,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":32,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":21,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":22,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":29,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":31},"transformations":[{"failures":[],"tindex":"ed2ab5e6-42ae-11e5-a9be-cd77e5c5f407","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:502","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"ed2b0407-42ae-11e5-a9be-479220ff2425","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"ed2b0408-42ae-11e5-a9be-41402f466278","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"org.apache.commons.codec.digest.B64.B64T","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"salt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:204","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"ed2b0409-42ae-11e5-a9be-47b983a3adf1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:248","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (byte[].int) - 1 ; int < (byte[].int) ; int++ , int -= 8) {\n    for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n        if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n            byte[][(int - int)] = '0';\n        } else {\n            byte[][(int - int)] = '1';\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"ed2b2b1a-42ae-11e5-a9be-6516897a3e80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"variableMap":{"u":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:362","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"ed2b2b1b-42ae-11e5-a9be-f7449a801d00","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:359","type":"CtAssignmentImpl","sourcecode":"char = '3'"},"variableMap":{"code":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[25],"tindex":"ed2b2b1c-42ae-11e5-a9be-8b916e1dc491","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:299","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.toAsciiChars(byte[])"},"status":-1},{"failures":[],"tindex":"ed2b522d-42ae-11e5-a9be-73db62ba9ffe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(java.io.InputStream))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:749","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1Hex(java.io.InputStream)"},"status":-2},{"failures":[],"tindex":"ed2b522e-42ae-11e5-a9be-6d14df9a4424","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"j","minRating":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"j","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:239","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[][int])"},"status":-2},{"failures":[],"tindex":"ed2b522f-42ae-11e5-a9be-3317a4c824c2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:264","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[26,27,28],"tindex":"ed2b7940-42ae-11e5-a9be-719ab94c59b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][24], byte[][45], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[29,30],"tindex":"ed2b7941-42ae-11e5-a9be-4d665fbade8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:303","type":"CtAssignmentImpl","sourcecode":"this.int = org.apache.commons.codec.binary.Base32.int"},"variableMap":{"encodeSize":"right","org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:292","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"ed2b7942-42ae-11e5-a9be-b57c274b2418","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:357","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.length()"},"status":-2},{"failures":[31],"tindex":"ed2b7943-42ae-11e5-a9be-b3ef9b4dfbfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone2.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:720","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(java.lang.String))"},"status":-1},{"failures":[],"tindex":"ed2ba054-42ae-11e5-a9be-790b8fffbfb6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:296","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[32,33],"tindex":"ed2ba055-42ae-11e5-a9be-135c4c6290fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:295","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X')"},"status":-1},{"failures":[34],"tindex":"ed2ba056-42ae-11e5-a9be-3549ee6b043e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n}"},"status":-1},{"failures":[],"tindex":"ed2ba057-42ae-11e5-a9be-ed2d5a909582","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"int = (int << 4) | (int >>> 28)"},"variableMap":{"s":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:487","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"ed2ba058-42ae-11e5-a9be-2db5f1c7eb22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:186","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.security.NoSuchAlgorithmException)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}