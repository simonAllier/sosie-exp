{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":14,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":16,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":11,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":13,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":6,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":7,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":1,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":4,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":8,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":0,"org.apache.commons.codec.language.SoundexTest.testDifference":18,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":5,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":9,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":10,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":2,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":17,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":3,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":15,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":12},"transformations":[{"failures":[0],"tindex":"a4f3a5a0-4394-11e5-a05e-51e2b72d352c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:259","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the any language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"status":-1},{"failures":[],"tindex":"a4f3ccb1-4394-11e5-a05e-85f91608c3aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"messageDigest":"ctx","valueToDigest":"prefix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:206","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":1},{"failures":[],"tindex":"a4f3ccb2-4394-11e5-a05e-a378eca9930f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:194","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[],"tindex":"a4f3f3c3-4394-11e5-a05e-ad271ebbf296","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:486","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][59], byte[][17], byte[][38], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"source","buffer":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:57","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Caverphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"a4f41ad4-4394-11e5-a05e-e15cddcecabe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:216","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    byte[][int] = 0;\n}"},"variableMap":{"length":"pos","key":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:519","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int)"},"status":-2},{"failures":[1,2],"tindex":"a4f41ad5-4394-11e5-a05e-8d659ea85119","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:425","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)"},"status":-1},{"failures":[],"tindex":"a4f441e6-4394-11e5-a05e-6711b24579ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"languagesResourceName","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"languagesResourceName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:174","type":"CtIfImpl","sourcecode":"if (java.io.InputStream == null) {\n    throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"a4f441e7-4394-11e5-a05e-990e724882e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"string":"ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:156","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(java.lang.String.toCharArray())"},"status":-2},{"failures":[3,4,5,6,7,8,9,10],"tindex":"a4f441e8-4394-11e5-a05e-319d8ede28d5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:152","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(org.apache.commons.codec.net.RFC1522Codec.char, int)"},"status":-1},{"failures":[],"tindex":"a4f441e9-4394-11e5-a05e-359ba32b51b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:363","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:361","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"a4f468fa-4394-11e5-a05e-fdab3fd82309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:528","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"status":-2},{"failures":[11,12,13],"tindex":"a4f468fb-4394-11e5-a05e-836c3c42e4f8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l$\", \"3\")"},"status":-1},{"failures":[14],"tindex":"a4f468fc-4394-11e5-a05e-652378e34b7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.B64:77","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[15,1,16,17,2],"tindex":"a4f468fd-4394-11e5-a05e-7b87a0b919c4","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:461","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][24], byte[][4], byte[][14], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:460","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][3], byte[][13], byte[][23], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[4],"tindex":"a4f4900e-4394-11e5-a05e-d9fc439caebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n    byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n} "},"status":-1},{"failures":[],"tindex":"a4f4900f-4394-11e5-a05e-a7e3c5754f93","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:752","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.math.BigInteger.toByteArray()"},"status":-2},{"failures":[],"tindex":"a4f49010-4394-11e5-a05e-a305826a3b41","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))"},"variableMap":{"salt":"txt","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:112","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"r3\", \"R3\")"},"status":-2},{"failures":[18],"tindex":"a4f4b721-4394-11e5-a05e-3791f8e3b263","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:136","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.SoundexUtils.difference(this, java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"a4f4b722-4394-11e5-a05e-05219d44fb39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:362","type":"CtReturnImpl","sourcecode":"return int + 2"},"status":1},{"failures":[],"tindex":"a4f4b723-4394-11e5-a05e-3db813da4e2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.toString(), byte[])"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"a4f3ccb1-4394-11e5-a05e-85f91608c3aa","diffs":[{"nodes":{"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":["org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"],"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":["org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"]},"edges":{"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":["org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.digest.Md5Crypt.java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"],"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":["org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytes(java.lang.String,java.nio.charset.Charset)","org.apache.commons.codec.digest.Md5Crypt.java.lang.String md5Crypt(byte[],java.lang.String,java.lang.String) -> org.apache.commons.codec.binary.StringUtils.byte[] getBytesUtf8(java.lang.String)"]},"type":"graph"}]}]}