{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":15,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":24,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":9,"org.apache.commons.codec.language.NysiisTest.testDropBy":3,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":23,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":0,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":22,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":19,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":10,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":18,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":8,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":21,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":11,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":6,"org.apache.commons.codec.language.NysiisTest.testRule7":2,"org.apache.commons.codec.language.NysiisTest.testRule6":1,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":12,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":5,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":16,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":25,"org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla":28,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":14,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":20,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":17,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":4,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":26},"transformations":[{"failures":[0],"tindex":"eb2f0ca7-42ae-11e5-8718-633958196410","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:310","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('F')"},"status":-1},{"failures":[],"tindex":"eb2f5ac8-42ae-11e5-8718-03b444657604","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:346","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-2},{"failures":[1,2,3],"tindex":"eb2f5ac9-42ae-11e5-8718-e156f09b1ec6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:355","type":"CtAssignmentImpl","sourcecode":"char = '1'"},"variableMap":{"code":"lastChar"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:298","type":"CtAssignmentImpl","sourcecode":"char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-1},{"failures":[],"tindex":"eb2f5aca-42ae-11e5-8718-496291ea53e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"variableMap":{"index":"eSwap1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:288","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.dEncrypt(int, int, (int + 2), int, int, int[])"},"status":-2},{"failures":[],"tindex":"eb2f5acb-42ae-11e5-8718-cb664f677cf5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"salt","txt":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-2},{"failures":[4,5,6,7,8,9,10,11],"tindex":"eb2f5acc-42ae-11e5-8718-8536db56422e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"variableMap":{"ctx":"altCtx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:276","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"eb2f5acd-42ae-11e5-8718-b3b6fa6e2f0c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:387","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 18) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:486","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 2))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[12,13,14,15],"tindex":"eb2f81de-42ae-11e5-8718-5718602971c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:98","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"n+\", \"N\")"},"status":-1},{"failures":[],"tindex":"eb2f81df-42ae-11e5-8718-dd706235fee6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:441","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true"},"status":-2},{"failures":[],"tindex":"eb2f81e0-42ae-11e5-8718-c11f1a4dfc9b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:595","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false, true))"},"variableMap":{"binaryData":"binaryData","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:569","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUtf8(org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false))"},"status":-2},{"failures":[],"tindex":"eb2f81e1-42ae-11e5-8718-9b8a4ee07fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:1005","type":"CtReturnImpl","sourcecode":"return ((this.java.lang.StringBuilder.length()) >= (this.int)) && ((this.java.lang.StringBuilder.length()) >= (this.int))"},"variableMap":{"alternate":"input","maxLength":"i","primary":"suffix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:280","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence.charAt(int)) != (java.lang.CharSequence.charAt(int))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"eb2f81e2-42ae-11e5-8718-4f90439a0349","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"status":-2},{"failures":[16,17,18,19],"tindex":"eb2fa8f3-42ae-11e5-8718-09dd2a5ccb33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:404","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-1},{"failures":[20,21,22,23,24],"tindex":"eb2fa8f4-42ae-11e5-8718-efc9459d552a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:189","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:317","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n    int += 2;\n} else {\n    int++;\n}"},"status":-1},{"failures":[25],"tindex":"eb2fa8f5-42ae-11e5-8718-d1a3757785be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:332","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"finalRules can not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:140","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset not specified\")"},"status":-1},{"failures":[20,21,23],"tindex":"eb2fa8f6-42ae-11e5-8718-0ff36592fc3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:338","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:372","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K')"},"status":-1},{"failures":[26,27],"tindex":"eb2fd007-42ae-11e5-8718-43ed5b1bc467","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"variableMap":{"u":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:310","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":-1},{"failures":[28],"tindex":"eb2fd008-42ae-11e5-8718-b37bdb4df0fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:392","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"TK\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:113","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[23],"tindex":"eb2fd009-42ae-11e5-8718-e9b89747a5d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:396","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:307","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X')"},"status":-1},{"failures":[],"tindex":"eb2fd00a-42ae-11e5-8718-37292f8dfc79","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:89","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"z\", \"s\")"},"status":1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}