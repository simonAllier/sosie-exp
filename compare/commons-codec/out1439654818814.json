{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":20,"org.apache.commons.codec.language.NysiisTest.testSnat":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan":5,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":4,"org.apache.commons.codec.language.NysiisTest.testDropBy":52,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":6,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":31,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":16,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":24,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty":42,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":22,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":11,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":39,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":41,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":25,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":40,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedCommonCodeAT11111111":21,"org.apache.commons.codec.language.NysiisTest.testCap":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":8,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualRay":14,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":51,"org.apache.commons.codec.language.NysiisTest.testBran":48,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":55,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":19,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":0,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":1,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":2,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":33,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":38,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert":7,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":34,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":37,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":23,"org.apache.commons.codec.language.NysiisTest.testDad":45,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero":10,"org.apache.commons.codec.language.NysiisTest.testOthers":53,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":18,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":36,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualMary":13,"org.apache.commons.codec.language.NysiisTest.testTranan":54,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":9,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":43,"org.apache.commons.codec.language.NysiisTest.testDan":46,"org.apache.commons.codec.language.NysiisTest.testFal":47,"org.apache.commons.codec.language.NysiisTest.testSnad":49,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":15,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":35},"transformations":[{"failures":[],"tindex":"a848bdf2-4367-11e5-bcae-bda26ca2b2ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"variableMap":{"org.apache.commons.codec.binary.Base32.BYTES_PER_ENCODED_BLOCK":"pos","context":"context","modulus":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:364","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"a8493323-4367-11e5-bcae-97a0869a607c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:194","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"variableMap":{"saltString":"text","org.apache.commons.codec.Charsets.UTF_8":"charset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:78","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = org.apache.commons.codec.net.RFC1522Codec.doEncoding(java.lang.String.getBytes(java.nio.charset.Charset))"},"status":-2},{"failures":[0],"tindex":"a8495a34-4367-11e5-bcae-0119d6784f0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"variableMap":{"code":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:131","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], 1, ((char[].int) - 1))"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"a8498145-4367-11e5-bcae-fda7e6c978ca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:858","type":"CtReturnImpl","sourcecode":"return ((((java.lang.String.indexOf('W')) > (-1)) || ((java.lang.String.indexOf('K')) > (-1))) || ((java.lang.String.indexOf(\"CZ\")) > (-1))) || ((java.lang.String.indexOf(\"WITZ\")) > (-1))"},"variableMap":{"value":"str2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:415","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String).equals(org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String))"},"status":-1},{"failures":[],"tindex":"a849a856-4367-11e5-bcae-55aae7c4cdfe","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"variableMap":{"index":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:798","type":"CtAssignmentImpl","sourcecode":"int = java.io.InputStream.read(byte[], 0, org.apache.commons.codec.digest.DigestUtils.int)"},"status":-2},{"failures":[15,16,17,18,19,20],"tindex":"a849a857-4367-11e5-bcae-854c9da7ad47","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return int + 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[21,22,23],"tindex":"a849cf68-4367-11e5-bcae-0177e8f70817","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^[aeiou]\", \"A\")"},"status":-1},{"failures":[],"tindex":"a849f679-4367-11e5-bcae-27d5bc74405b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:61","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:337","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))"},"status":0},{"failures":[24,25,26,27,28,29],"tindex":"a849f67a-4367-11e5-bcae-ab6f3e512405","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"variableMap":{"base64Data":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet, byte[], false)"},"status":-1},{"failures":[30],"tindex":"a84a1d8b-4367-11e5-bcae-adf96ee2b254","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:576","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[31,32,33,34,35,36,37,38],"tindex":"a84a449c-4367-11e5-bcae-b5e05e854d82","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:797","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"variableMap":{"read":"keyLen","digest":"ctx","buffer":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:368","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[], 0, int);\n} else {\n    java.security.MessageDigest.update(byte[], 0, int);\n}"},"status":-1},{"failures":[39,40,41],"tindex":"a84a449d-4367-11e5-bcae-b5a4ea210d62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:193","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"a84a6bae-4367-11e5-bcae-4fa7d40d09c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:322","type":"CtReturnImpl","sourcecode":"return int < 0 ? int + 256 : int"},"variableMap":{"value":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:544","type":"CtReturnImpl","sourcecode":"return int"},"status":1},{"failures":[],"tindex":"a84a6baf-4367-11e5-bcae-c5aa3820e194","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[42],"tindex":"a84a92c0-4367-11e5-bcae-ad9d416bfc1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:894","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"a84a92c1-4367-11e5-bcae-5fd75d9262ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:125","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Nysiis.org.apache.commons.codec.language.Nysiis.isVowel(char)) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[],"tindex":"a84ab9d2-4367-11e5-bcae-e75d2b94ea79","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:766","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[org.apache.commons.codec.digest.HmacUtils.int]"},"status":-2},{"failures":[],"tindex":"a84ab9d3-4367-11e5-bcae-6b1cbb84b15f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += int"},"variableMap":{"len":"length","context":"context","readPos":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:497","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int"},"status":-2},{"failures":[],"tindex":"a84ae0e4-4367-11e5-bcae-0f36a805c9c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:704","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"patternLength":"j","i":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:89","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.binary.Hex.(org.apache.commons.codec.binary.Hex.toDigit(char[][int], int)) << 4"},"status":-2},{"failures":[],"tindex":"a84b07f5-4367-11e5-bcae-134e34f3fa11","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:181","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (char[].int) - 1 ; int < (byte[].int) ; int++ , int -= 8) {\n    for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n        if ((char[][(int - int)]) == '1') {\n            byte[][int] |= org.apache.commons.codec.binary.BinaryCodec.int[][int];\n        } \n    }\n}"},"variableMap":{"length":"jj","l_raw":"raw","ascii":"l_ascii","org.apache.commons.codec.binary.BinaryCodec.BITS":"org.apache.commons.codec.binary.BinaryCodec.BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:279","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n    if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n        char[][(int - int)] = '0';\n    } else {\n        char[][(int - int)] = '1';\n    }\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}