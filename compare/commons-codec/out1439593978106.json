{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":0,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":1,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":6,"org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":21,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMacFail":14,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":26,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":23,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":24,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":12,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":3,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":10,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":19,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":15,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":17,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":25,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":2,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":7},"transformations":[{"failures":[0,1],"tindex":"005f56c6-42da-11e5-84e2-3dbef1da9346","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[2,3,4,5,6],"tindex":"005f56c7-42da-11e5-84e2-7bfe0a2c7b75","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:159","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"005f56c8-42da-11e5-84e2-33636cf9f13d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"this":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[7,8],"tindex":"005f7dd9-42da-11e5-84e2-5b9c613741c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"variableMap":{"w":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:365","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 27)"},"status":-1},{"failures":[],"tindex":"005f7dda-42da-11e5-84e2-8bd3444e8694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"modulus","y":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:344","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.binary.BaseNCodec.Context.int) {\n    case 0 :\n        break;\n    case 1 :\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 4) & (org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.byte[])) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n        } \n        break;\n    case 2 :\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 10) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4) & (org.apache.commons.codec.binary.Base64.int))];\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 2) & (org.apache.commons.codec.binary.Base64.int))];\n        if ((byte[]) == (org.apache.commons.codec.binary.Base64.byte[])) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte;\n        } \n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)));\n}"},"status":-2},{"failures":[],"tindex":"005f7ddb-42da-11e5-84e2-cd8d6c7fe534","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md2(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-2},{"failures":[9],"tindex":"005f7ddc-42da-11e5-84e2-e39dce5de964","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:226","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"005f7ddd-42da-11e5-84e2-f3eb938e5023","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:255","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return java.lang.String;\n} "},"variableMap":{"str":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:138","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"005f7dde-42da-11e5-84e2-3bb226a82a59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"005fa4ef-42da-11e5-84e2-3f4e09ae0ed1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:641","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha512Digest()"},"status":0},{"failures":[10,11,12,13],"tindex":"005fa4f0-42da-11e5-84e2-0f65a1c7d400","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:606","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"005fa4f1-42da-11e5-84e2-c96f0848ec05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"pos","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:488","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[14,15],"tindex":"005fa4f2-42da-11e5-84e2-9fcdd1b4ef45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:663","type":"CtReturnImpl","sourcecode":"return byte[]"},"variableMap":{"binaryData":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:635","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]).doFinal(byte[])"},"status":-1},{"failures":[],"tindex":"005fa4f3-42da-11e5-84e2-53cb7e944a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:203","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"))"},"status":-2},{"failures":[],"tindex":"005fa4f4-42da-11e5-84e2-b52d94ea8dd5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:454","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[16,17],"tindex":"005fa4f5-42da-11e5-84e2-43786e73389f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:148","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 0) {\n    java.lang.StringBuilder.append(\"|\");\n} "},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen())"},"status":-1},{"failures":[],"tindex":"005fa4f6-42da-11e5-84e2-570e3e6e7e32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:90","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"j":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:456","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"005fcc07-42da-11e5-84e2-03cc3fbe30f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26],"tindex":"005fcc08-42da-11e5-84e2-d112410e73eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:922","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"result":"inMultilineComment","target":"line","element":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:261","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    boolean = false;\n} "},"status":-1},{"failures":[],"tindex":"005fcc09-42da-11e5-84e2-f314ea2a4875","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:387","type":"CtAssignmentImpl","sourcecode":"char = '5'"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}