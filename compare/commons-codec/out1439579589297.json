{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":5,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":18,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":2,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":14,"org.apache.commons.codec.language.Caverphone1Test.testEncodeEmpty":12,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":27,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":4,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":32,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":31,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":23,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":3,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":21,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":28,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":30,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":24,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":7,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":15,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":22,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":8,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":25,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":33,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":34,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":6,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":10,"org.apache.commons.codec.language.MetaphoneTest.testTCH":0,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":13},"transformations":[{"failures":[],"tindex":"7ffb4eee-42b8-11e5-b002-6fc75a7f5ada","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:297","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CC\")) && (!((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 0)) == 'M')))) {\n    return org.apache.commons.codec.language.DoubleMetaphone.handleCC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CK\", \"CG\", \"CQ\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"CI\", \"CE\", \"CY\")) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 3, \"CIO\", \"CIE\", \"CIA\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int += 2;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \" C\", \" Q\", \" G\")) {\n        int += 3;\n    } else if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"K\", \"Q\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"CE\", \"CI\")))) {\n        int += 2;\n    } else {\n        int++;\n    }\n}"},"status":-2},{"failures":[],"tindex":"7ffb9d0f-42b8-11e5-b002-c5be50db2361","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:159","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.trim()"},"variableMap":{"line":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:73","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tch\", \"2ch\")"},"status":1},{"failures":[],"tindex":"7ffb9d10-42b8-11e5-b002-f30bd6622414","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:97","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodecOutputStream.flush(false)"},"variableMap":{"this":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:120","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"status":-2},{"failures":[],"tindex":"7ffb9d11-42b8-11e5-b002-15d5b560fa48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[0,1,2],"tindex":"7ffbc422-42b8-11e5-b002-cf88481b7451","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:297","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:315","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[],"tindex":"7ffbc423-42b8-11e5-b002-87b1ac1120ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"str","lastThree":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:268","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.RFC1522Codec.decodeText(java.lang.String);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-2},{"failures":[3,4,5,6,7],"tindex":"7ffbc424-42b8-11e5-b002-754f12ca745f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:587","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[8,9,10,11,12],"tindex":"7ffbc425-42b8-11e5-b002-43e5da92e543","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"variableMap":{"str":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:62","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^enough\", \"enou2f\")"},"status":-1},{"failures":[],"tindex":"7ffbeb36-42b8-11e5-b002-79bd4755f1c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"variableMap":{"txt":"saltString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"status":-2},{"failures":[],"tindex":"7ffbeb37-42b8-11e5-b002-b31b80916d7f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:241","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.int"},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.DEFAULT_BUFFER_SIZE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return int + 3"},"status":-2},{"failures":[],"tindex":"7ffbeb38-42b8-11e5-b002-6b79c540c6e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:552","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha384(byte[]), java.io.InputStream)"},"status":0},{"failures":[],"tindex":"7ffbeb39-42b8-11e5-b002-c74f2443df69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:379","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:222","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"));\n}"},"status":-2},{"failures":[13],"tindex":"7ffc124a-42b8-11e5-b002-41b1af2c5eab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:199","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-1},{"failures":[14,15,16,17,18,19,20,21,22],"tindex":"7ffc124b-42b8-11e5-b002-e5cccfb1d038","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"blocksize":"i","tempResult":"saltBytes","pBytes":"saltBytes","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:264","type":"CtIfImpl","sourcecode":"if ((int % 3) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} "},"status":-1},{"failures":[3,6,7],"tindex":"7ffc124c-42b8-11e5-b002-f3a5ea22a29f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:176","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleW(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[],"tindex":"7ffc124d-42b8-11e5-b002-39f63cb8741b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += int"},"variableMap":{"len":"pos","context":"context","readPos":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:394","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32],"tindex":"7ffc395e-42b8-11e5-b002-4b88b014b725","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:602","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[6,7],"tindex":"7ffc395f-42b8-11e5-b002-d14e6157700a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"status":-1},{"failures":[33,34],"tindex":"7ffc3960-42b8-11e5-b002-5389339629f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:326","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 256 + int;\n} "},"variableMap":{"b":"startSrc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:762","type":"CtIfImpl","sourcecode":"if (((java.math.BigInteger.bitLength()) % 8) == 0) {\n    int = 1;\n    int--;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}