{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":0,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":12,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":32,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":26,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":3,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":4,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":5,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":9,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":7,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":31,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":25,"org.apache.commons.codec.language.ColognePhoneticTest.testEncodeNull":28,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":10,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":11,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":27,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":30,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":1,"org.apache.commons.codec.language.SoundexTest.testB650":6,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":22,"org.apache.commons.codec.language.SoundexTest.testNewInstance":14,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":18,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":20,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":19,"org.apache.commons.codec.language.SoundexTest.testDifference":13,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":33,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":21,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":15,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":29,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":16,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":23,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":24},"transformations":[{"failures":[],"tindex":"be28e9be-4368-11e5-ad93-cfb1db77ded7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"status":-2},{"failures":[],"tindex":"be295eef-4368-11e5-ad93-5d4708636f9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:375","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.language.bm.Rule.Phoneme(java.lang.String , org.apache.commons.codec.language.bm.Languages.LanguageSet.from(java.util.Set<java.lang.String>))"},"status":-2},{"failures":[0],"tindex":"be295ef0-4368-11e5-ad93-2fd00e13204d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:88","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[aeiou]\", \"3\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:72","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"cy\", \"sy\")"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"be298501-4368-11e5-ad93-e564193c648f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:275","type":"CtIfImpl","sourcecode":"if ((char != '0') && (char != char)) {\n    char[][int++] = char;\n} "},"status":-1},{"failures":[],"tindex":"be29ac12-4368-11e5-ad93-81c85103fbc0","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"ii":"len","keyLen":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += int"},"status":-2},{"failures":[21,22],"tindex":"be29ac13-4368-11e5-ad93-5358b5b0c1ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"variableMap":{"b":"l_ascii","offset":"bits","iValue":"jj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:253","type":"CtAssignmentImpl","sourcecode":"byte[][(int - int)] = '1'"},"status":-1},{"failures":[],"tindex":"be29d324-4368-11e5-ad93-353deaf0836d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX","txt":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.org.apache.commons.codec.digest.Md5Crypt.apr1Crypt(byte[], ((org.apache.commons.codec.digest.Md5Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8))))"},"status":-2},{"failures":[],"tindex":"be29fa35-4368-11e5-ad93-a7f916c6214b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:511","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 25))) & (org.apache.commons.codec.binary.Base32.int))]"},"variableMap":{"encodeTable":"buffer","pos":"org.apache.commons.codec.binary.Base32.MASK_5BITS","org.apache.commons.codec.binary.Base32.MASK_5BITS":"org.apache.commons.codec.binary.Base32.MASK_5BITS","context":"context","lbitWorkArea":"lbitWorkArea","buffer":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:484","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 12))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"be2a2146-4368-11e5-ad93-4d44b4be43c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:531","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((byte[])(java.lang.Object)))"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:198","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[],"tindex":"be2a4857-4368-11e5-ad93-ddf377eada39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:254","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"variableMap":{"length":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:502","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[],"tindex":"be2a4858-4368-11e5-ad93-9d3b090c0dc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)))"},"variableMap":{"this":"object","ascii":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:250","type":"CtTryImpl","sourcecode":"try {\n    final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object));\n    return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.decodeHex(char[]);\n} catch (final java.lang.ClassCastException e) {\n    throw new org.apache.commons.codec.DecoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException);\n}"},"status":-2},{"failures":[],"tindex":"be2a6f69-4368-11e5-ad93-67d491ad4125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"t+\", \"T\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"g\", \"k\")"},"status":1},{"failures":[23],"tindex":"be2a967a-4368-11e5-ad93-17c405dded6f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[24,25,26,27],"tindex":"be2a967b-4368-11e5-ad93-9d954c267aad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:217","type":"CtAssignmentImpl","sourcecode":"byte[][int] = 0"},"variableMap":{"i":"iValue","key":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 8) & 255))"},"status":-1},{"failures":[28],"tindex":"be2abd8c-4368-11e5-ad93-d7c928f09690","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:320","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":-1},{"failures":[29,30,31,32],"tindex":"be2abd8d-4368-11e5-ad93-8ba642da1373","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:771","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Z' ? int + 2 : int + 1"},"status":-1},{"failures":[33],"tindex":"be2ae49e-4368-11e5-ad93-1962ef8a1c75","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:148","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.net.RFC1522Codec.getEncoding().equalsIgnoreCase(java.lang.String))) {\n    throw new org.apache.commons.codec.DecoderException(((\"This codec cannot decode \" + java.lang.String) + \" encoded content\"));\n} "},"status":-1},{"failures":[],"tindex":"be2ae49f-4368-11e5-ad93-879fb1996be2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"string":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.lang.String)"},"status":-2},{"failures":[],"tindex":"be2b0bb0-4368-11e5-ad93-f926370e4ddd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"variableMap":{"terminator":"n","to":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:284","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SH\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIO\"))) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"SIA\"))) {\n    java.lang.StringBuilder.append('X');\n} else {\n    java.lang.StringBuilder.append('S');\n}"},"status":-2},{"failures":[],"tindex":"be2b32c1-4368-11e5-ad93-ad1bd49b311f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Crypt.org.apache.commons.codec.digest.Crypt.crypt(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset), java.lang.String)"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}