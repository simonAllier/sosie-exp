{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":66,"org.apache.commons.codec.binary.HexTest.testCustomCharset":56,"org.apache.commons.codec.language.NysiisTest.testSnat":49,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":2,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":11,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":82,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":23,"org.apache.commons.codec.language.NysiisTest.testDropBy":51,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":30,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":65,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream":70,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":29,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":39,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":24,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":36,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":80,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":34,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":37,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":26,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":74,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":25,"org.apache.commons.codec.binary.HexTest.testEncodeZeroes":59,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":78,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":5,"org.apache.commons.codec.language.NysiisTest.testRule2":45,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":4,"org.apache.commons.codec.language.NysiisTest.testRule1":44,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":6,"org.apache.commons.codec.language.NysiisTest.testRule6":46,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":81,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":21,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":13,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":88,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":14,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":31,"org.apache.commons.codec.language.NysiisTest.testCap":40,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":20,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":50,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":58,"org.apache.commons.codec.language.NysiisTest.testBran":47,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":54,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":90,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":76,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":63,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":68,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":33,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":77,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":73,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":62,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":55,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":61,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":67,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteOutOfBounds":19,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":35,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":8,"org.apache.commons.codec.binary.HexTest.testEncodeEmpty":60,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":83,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":91,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":89,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":32,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":75,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull":0,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":27,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":84,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":87,"org.apache.commons.codec.language.NysiisTest.testDad":41,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":12,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":57,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray":64,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":71,"org.apache.commons.codec.language.NysiisTest.testOthers":52,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":17,"org.apache.commons.codec.language.NysiisTest.testTranan":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":38,"org.apache.commons.codec.language.NysiisTest.testDan":42,"org.apache.commons.codec.language.NysiisTest.testFal":43,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":7,"org.apache.commons.codec.language.NysiisTest.testSnad":48,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":69,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":22,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":85,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":72,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":86,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":79},"transformations":[{"failures":[0],"tindex":"bd33dcc9-42b3-11e5-b1dd-ed346aaa2cbf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:275","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"bd3403da-42b3-11e5-b1dd-b1f478408ea0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"status":-1},{"failures":[],"tindex":"bd3403db-42b3-11e5-b1dd-f3cb093c0532","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"status":-2},{"failures":[],"tindex":"bd3403dc-42b3-11e5-b1dd-b746e4b76008","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:349","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:476","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[13,14],"tindex":"bd3403dd-42b3-11e5-b1dd-ffa13f52418b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:331","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 4) | (int << 28)"},"variableMap":{"t":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-1},{"failures":[],"tindex":"bd3403de-42b3-11e5-b1dd-87ac9385f566","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.B64:62","type":"CtOperatorAssignmentImpl","sourcecode":"int >>= 6"},"variableMap":{"w":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:235","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[15],"tindex":"bd3403df-42b3-11e5-b1dd-d19fe2fb5695","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)))"},"status":-1},{"failures":[16,17],"tindex":"bd3403e0-42b3-11e5-b1dd-a3eb7765f1dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"rounds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:424","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.lang.StringBuilder.append(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(\"$\");\n} "},"status":-1},{"failures":[],"tindex":"bd342af1-42b3-11e5-b1dd-93db717fc182","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:102","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:181","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[18,19],"tindex":"bd342af2-42b3-11e5-b1dd-372687004d2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException()"},"status":-1},{"failures":[],"tindex":"bd342af3-42b3-11e5-b1dd-9bc03c5a012f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:50","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest, java.io.InputStream)"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"bd342af4-42b3-11e5-b1dd-3bbae1284090","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:207","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"found":"inExtendedComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:189","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"bd342af5-42b3-11e5-b1dd-ffb55ba31ce6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:166","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final int int = byte[][int];\n    if (int == '+') {\n        java.io.ByteArrayOutputStream.write(' ');\n    } else if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n        try {\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n        }\n    } else {\n        java.io.ByteArrayOutputStream.write(int);\n    }\n}"},"variableMap":{"e":"e","bytes":"bytes","length":"length","buffer":"buffer","org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR":"org.apache.commons.codec.net.QuotedPrintableCodec.LF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:357","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final int int = byte[][int];\n    if (int == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n        try {\n            if ((byte[][++int]) == (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) {\n                continue;\n            } \n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][int]);\n            final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n            java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n        } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n            throw new org.apache.commons.codec.DecoderException(\"Invalid quoted-printable encoding\" , java.lang.ArrayIndexOutOfBoundsException);\n        }\n    } else if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n        java.io.ByteArrayOutputStream.write(int);\n    } \n}"},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"bd342af6-42b3-11e5-b1dd-034dcfcaa0be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:101","type":"CtReturnImpl","sourcecode":"return ((((char == 'A') || (char == 'E')) || (char == 'I')) || (char == 'O')) || (char == 'U')"},"status":-1},{"failures":[55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"bd345207-42b3-11e5-b1dd-418845f918bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:262","type":"CtReturnImpl","sourcecode":"return char[]"},"variableMap":{"newData":"org.apache.commons.codec.binary.Hex.DIGITS_LOWER"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.encodeHex(byte[], (boolean ? org.apache.commons.codec.binary.Hex.char[] : org.apache.commons.codec.binary.Hex.char[]))"},"status":-1},{"failures":[9,81,10,11,12],"tindex":"bd345208-42b3-11e5-b1dd-152cb05eaca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:102","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:192","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.decodeQuotedPrintable(byte[])"},"status":-1},{"failures":[],"tindex":"bd345209-42b3-11e5-b1dd-4f2513f59c07","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:366","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(\"[\")"},"variableMap":{"ph":"pattern"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:703","type":"CtLocalVariableImpl","sourcecode":"final int int = this.java.lang.String.length()"},"status":-2},{"failures":[16,82,83,84,85,86,17,87,88,89,90,91],"tindex":"bd34520a-42b3-11e5-b1dd-bfb27a2c4b15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:324","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":-1},{"failures":[],"tindex":"bd34520b-42b3-11e5-b1dd-f9409e2af63c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:130","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:317","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL encoded\"))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}