{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":55,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEFAN_SuccessfullyMatched":19,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":9,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":68,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":60,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":59,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":33,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":61,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_HAILEY_HALLEY_SuccessfullyMatched":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ShortNames_AL_ED_WorksButNoMatch":17,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":47,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":51,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":2,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":27,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":48,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":52,"org.apache.commons.codec.language.Caverphone1Test.testWikipediaExamples":53,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEPHEN_STEVEN_SuccessfullyMatched":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":65,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":67,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_AUERBACH_UHRBACH_SuccessfullyMatched":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected":32,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":11,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":41,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":71,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_MOSKOWITZ_MOSKOVITZ_SuccessfullyMatched":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":69,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4":20,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":74,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":44,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":42,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":58,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":13,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surnames_MURPHY_LYNCH_NoMatchExpected":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SMITH_SMYTH_SuccessfullyMatched":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SmallInput_CARK_Kl_SuccessfullyMatched":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":57,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_STEVEN_STEFAN_SuccessfullyMatched":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":24,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":63,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":26,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_COOPERFLYNN_SUPERLYN_SuccessfullyMatched":22,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_EINSTEIN_MICHAELA_Returns0":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":38,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":50,"org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples":54,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_SZLAMAWICZ_SHLAMOVITZ_SuccessfullyMatched":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":66,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":23,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":29,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":1},"transformations":[{"failures":[0,1,2],"tindex":"e648ce1a-42db-11e5-91ce-03eb15afa387","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:200","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"variableMap":{"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:260","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest().digest(byte[])"},"status":-1},{"failures":[],"tindex":"e648ce1b-42db-11e5-91ce-ffb2bfd637dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.BCodec.this(java.nio.charset.Charset.forName(java.lang.String))"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"e648ce1c-42db-11e5-91ce-456fb554a00f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:117","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) == (java.lang.String.charAt(int))) {\n    int++;\n} "},"variableMap":{"es1":"name1LtREnd","es2":"name1LtREnd","i":"name1Size","diff":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:325","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    char[][(int - int)] = ' ';\n    char[][(int - int)] = ' ';\n} "},"status":-1},{"failures":[],"tindex":"e648f52d-42db-11e5-91ce-5d14bd8fa26d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:331","type":"CtLocalVariableImpl","sourcecode":"char char = '-'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:302","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2))"},"status":-2},{"failures":[],"tindex":"e648f52e-42db-11e5-91ce-4b86d8bbe095","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:385","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) << 8) + int"},"variableMap":{"ibitWorkArea":"pos","b":"pos","context":"context"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:465","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[41,42,43,44,45,46],"tindex":"e648f52f-42db-11e5-91ce-07ec50fc713b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:202","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"status":-1},{"failures":[],"tindex":"e648f530-42db-11e5-91ce-1992eee2f417","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:530","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable decoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:337","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-2},{"failures":[44,47,48,49],"tindex":"e648f531-42db-11e5-91ce-1de7080bf27d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1) {\n    char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    if (char == 'S') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n        char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    } \n    if ((java.lang.StringBuilder.length()) > 2) {\n        final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2));\n        if ((char == 'A') && (char == 'Y')) {\n            java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2));\n        } \n    } \n    if (char == 'A') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n    } \n} "},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:331","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > org.apache.commons.codec.language.Metaphone.(getMaxCodeLen())) {\n    java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen());\n} "},"status":-1},{"failures":[],"tindex":"e6491c42-42db-11e5-91ce-9576023e3d39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:468","type":"CtIfImpl","sourcecode":"if ((++int) < (java.lang.String[].int)) {\n    java.lang.StringBuilder.append('|');\n} "},"status":-2},{"failures":[50,51],"tindex":"e6491c43-42db-11e5-91ce-5766303a972a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:357","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:762","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[52,53,54,55],"tindex":"e6491c44-42db-11e5-91ce-f5f3373562e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone1.java.lang.String)"},"variableMap":{"txt":"txt","org.apache.commons.codec.language.Caverphone1.SIX_1":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"status":-1},{"failures":[56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"e6491c45-42db-11e5-91ce-e9ff194b80af","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:383","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\")\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme starts with \\'(\\' so must end with \\')\\'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        boolean = false;\n    } \n    continue;\n} "},"status":-1},{"failures":[50,51,69],"tindex":"e6491c46-42db-11e5-91ce-ddc5d7cb2f03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:659","type":"CtIfImpl","sourcecode":"if (((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, 3))))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, 3)) != 'W')) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"status":-1},{"failures":[],"tindex":"e6494357-42db-11e5-91ce-d5298cdb620b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:613","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.Rule.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"value","org.apache.commons.codec.language.bm.Rule.DOUBLE_QUOTE":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:584","type":"CtIfImpl","sourcecode":"if ((((int == ((java.lang.String.length()) - 1)) && (!boolean)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"IE\"))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 2, \"ME\", \"MA\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('R');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R');\n}"},"status":-2},{"failures":[70,71,72,73,74],"tindex":"e6494358-42db-11e5-91ce-7b64719f7a74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:95","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y\", \"3\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:179","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)"},"status":-1},{"failures":[],"tindex":"e6494359-42db-11e5-91ce-c142db0374b7","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:99","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w3\", \"W3\")"},"variableMap":{"txt":"str1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.AbstractCaverphone:77","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.StringEncoder.encode(java.lang.String)"},"status":0},{"failures":[],"tindex":"e649435a-42db-11e5-91ce-43ec8775c517","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:69","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:728","type":"CtOperatorAssignmentImpl","sourcecode":"int += 4"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":17,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}