{"failureDictionary":{"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":30,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":28,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":16,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":1,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":20,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":43,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":6,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":23,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":5,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":7,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":36,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":14,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":35,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":26,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":47,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":22,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":12,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":19,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":39,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":9,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":10,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":11,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":17,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":32,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":46,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":31,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":27,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":51,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMacFail":33,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":37,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":52,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":0,"org.apache.commons.codec.language.SoundexTest.testB650":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":15,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":50,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":13,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":53,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":44,"org.apache.commons.codec.language.SoundexTest.testNewInstance":8,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LIPSHITZ_LIPPSZYC_SuccessfullyMatched":18,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":45,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":21,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":48,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":34},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"e5147ea1-439d-11e5-add9-2f0fa96c1634","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:344","type":"CtAssignmentImpl","sourcecode":"char = '-'"},"variableMap":{"nextChar":"last"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:278","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1},{"failures":[],"tindex":"e514f3d2-439d-11e5-add9-5fe421c3897b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:677","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encode(byte[])"},"status":-2},{"failures":[],"tindex":"e514f3d3-439d-11e5-add9-1bcbba1a365d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"sumLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"e5151ae4-439d-11e5-add9-9b3073271dc3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":-1},{"failures":[],"tindex":"e51541f5-439d-11e5-add9-9b969ac7a216","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:253","type":"CtReturnImpl","sourcecode":"return this.int"},"status":-2},{"failures":[],"tindex":"e51541f6-439d-11e5-add9-737e8366f6b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:339","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[32]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:342","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[25,26,27,28],"tindex":"e5156907-439d-11e5-add9-df93a692b3df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:291","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:458","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[29,30],"tindex":"e5156908-439d-11e5-add9-09e3bc2f54bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:353","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha1(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[],"tindex":"e5159019-439d-11e5-add9-e53d2350243b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:114","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"y\", \"2\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:232","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.removeVowels(java.lang.String)"},"status":1},{"failures":[31,32,33],"tindex":"e515b72a-439d-11e5-add9-591709e27232","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.encodeBase64(byte[])"},"variableMap":{"bytes":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:206","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacMd5(byte[]).doFinal(byte[]);\n} catch (final java.lang.IllegalStateException e) {\n    throw new java.lang.IllegalArgumentException(java.lang.IllegalStateException);\n}"},"status":-1},{"failures":[],"tindex":"e515de3b-439d-11e5-add9-69630c709284","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:65","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^trough\", \"trou2f\")"},"status":1},{"failures":[],"tindex":"e515de3c-439d-11e5-add9-c9f9afe306fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:576","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e516054d-439d-11e5-add9-3750c09b3f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:706","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(byte[])"},"variableMap":{"base64Data":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:240","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.byte[]"},"status":0},{"failures":[],"tindex":"e516054e-439d-11e5-add9-f77ef244c903","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:340","type":"CtReturnImpl","sourcecode":"return "},"status":-2},{"failures":[34,35],"tindex":"e5162c5f-439d-11e5-add9-b55e53960574","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:230","type":"CtLocalVariableImpl","sourcecode":"final int int = char - 'A'"},"variableMap":{"ch":"charZero"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:213","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.int[][char]"},"status":-1},{"failures":[25,26,28],"tindex":"e5162c60-439d-11e5-add9-dde30dc33924","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H')"},"status":-1},{"failures":[25,26,36,27,28],"tindex":"e5165371-439d-11e5-add9-dd10c3269031","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:281","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:172","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F')"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45],"tindex":"e5165372-439d-11e5-add9-077aadd09ab2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:368","type":"CtIfImpl","sourcecode":"if (!(java.lang.String.endsWith(\"]\"))) {\n    throw new java.lang.IllegalArgumentException(\"Phoneme expression contains a \\'[\\' but does not end in \\']\\'\");\n} "},"variableMap":{"ph":"org.apache.commons.codec.net.RFC1522Codec.PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:129","type":"CtIfImpl","sourcecode":"if ((!(java.lang.String.startsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String))) || (!(java.lang.String.endsWith(org.apache.commons.codec.net.RFC1522Codec.java.lang.String)))) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: malformed encoded content\");\n} "},"status":-1},{"failures":[],"tindex":"e5167a83-439d-11e5-add9-55047e83d825","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.toAsciiBytes(byte[])"},"status":-2},{"failures":[46,47,48,49,50,51,52,53],"tindex":"e5167a84-439d-11e5-add9-6bd07e909c5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:283","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][6], byte[][12], 4, java.lang.StringBuilder)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"},"diffs":[{"transformation":"e516054d-439d-11e5-add9-3750c09b3f31","diffs":[{"nodes":{"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":["org.apache.commons.codec.binary.BaseNCodec.boolean containsAlphabetOrPad(byte[])","org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)","org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int,byte[])","org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int)","org.apache.commons.codec.binary.Base64.boolean isInAlphabet(byte)","org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64()","org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec(int,int,int,int)","org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int,byte[],boolean)","org.apache.commons.codec.binary.BaseNCodec.byte[] decode(byte[])"]},"edges":{"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":["org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.BaseNCodec.byte[] decode(byte[])","org.apache.commons.codec.binary.BaseNCodec.boolean containsAlphabetOrPad(byte[]) -> org.apache.commons.codec.binary.Base64.boolean isInAlphabet(byte)","org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int,byte[],boolean) -> org.apache.commons.codec.binary.BaseNCodec.boolean containsAlphabetOrPad(byte[])","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec(int,int,int,int,byte)","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int)","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int,byte[],boolean)","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64()","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.BaseNCodec.org.apache.commons.codec.binary.BaseNCodec(int,int,int,int)","org.apache.commons.codec.binary.BinaryCodec.byte[] toAsciiBytes(byte[]) -> org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64(int,byte[])"]},"type":"graph"}]}]}