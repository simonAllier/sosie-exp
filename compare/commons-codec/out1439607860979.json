{"failureDictionary":{"org.apache.commons.codec.binary.HexTest.testCustomCharset":21,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":12,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":6,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":14,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":23,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":8,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":9,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":15,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":13,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":20,"org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":19,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":27,"org.apache.commons.codec.binary.HexTest.testDecodeArrayOddCharacters":24,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":26,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":10,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":33,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":17},"transformations":[{"failures":[],"tindex":"53375347-42fa-11e5-9b1c-13cbf9934e7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:139","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.codec.digest.Sha2Crypt.int"},"variableMap":{"org.apache.commons.codec.digest.Sha2Crypt.ROUNDS_DEFAULT":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"status":-2},{"failures":[0,1,2],"tindex":"53377a58-42fa-11e5-9b1c-5ffb0b28d556","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:368","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 2, \"MC\")) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'K');\n    }\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n}"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12],"tindex":"5337a169-42fa-11e5-9b1c-41bbab901c7d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:541","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear()"},"variableMap":{"currentBranches":"currentBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.addAll(java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>);\n} "},"status":-1},{"failures":[],"tindex":"5337a16a-42fa-11e5-9b1c-6ddb47fa354e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return char[]"},"variableMap":{"l_ascii":"org.apache.commons.codec.language.Nysiis.CHARS_SSS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":0},{"failures":[],"tindex":"5337a16b-42fa-11e5-9b1c-f304b824470a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:177","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"value":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:578","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.nio.charset.Charset)))"},"status":-2},{"failures":[],"tindex":"5337a16c-42fa-11e5-9b1c-531d295ef652","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getInitializedMac(org.apache.commons.codec.digest.HmacAlgorithms.org.apache.commons.codec.digest.HmacAlgorithms, byte[])"},"status":-2},{"failures":[],"tindex":"5337c87d-42fa-11e5-9b1c-b1ee999f4617","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:466","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.codec.binary.BaseNCodec.Context.int) {\n    case 1 :\n        break;\n    case 2 :\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 4;\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    case 3 :\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = (org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 2;\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Impossible modulus \" + (org.apache.commons.codec.binary.BaseNCodec.Context.int)));\n}"},"variableMap":{"ibitWorkArea":"org.apache.commons.codec.binary.BaseNCodec.EOF","pos":"org.apache.commons.codec.binary.BaseNCodec.EOF","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"org.apache.commons.codec.binary.BaseNCodec.EOF","context":"context","buffer":"pArray","modulus":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:431","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[13,14,15,16,17,18,19,20],"tindex":"5337c87e-42fa-11e5-9b1c-c9f359a99c07","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= (16 + ((byte[][0]) & 255)) ; int++) {\n    java.security.MessageDigest.update(byte[]);\n}"},"variableMap":{"altCtx":"altCtx","altResult":"keyBytes","saltBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:206","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[21,22,23,24],"tindex":"5337ef8f-42fa-11e5-9b1c-3945d161fd9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.org.apache.commons.codec.binary.Hex.decodeHex(new java.lang.String(byte[] , org.apache.commons.codec.binary.Hex.getCharset()).toCharArray())"},"status":-1},{"failures":[],"tindex":"5337ef90-42fa-11e5-9b1c-d34c3d8597c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:176","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"5337ef91-42fa-11e5-9b1c-fbfe76cc549f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.BCodec.this(java.nio.charset.Charset.forName(java.lang.String))"},"status":-2},{"failures":[0,1],"tindex":"5337ef92-42fa-11e5-9b1c-b3030522f5b6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('R')"},"status":-1},{"failures":[],"tindex":"5337ef93-42fa-11e5-9b1c-9db0e37526c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"pos","singleByte":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:355","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[25,26,27,28,29],"tindex":"533816a4-42fa-11e5-9b1c-298d8fff2b19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:367","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)))"},"variableMap":{"u":"b","buffer":"buffer","l":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:225","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(int)"},"status":-1},{"failures":[],"tindex":"533816a5-42fa-11e5-9b1c-e32d274b2c4c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String + java.lang.String"},"variableMap":{"l":"source","remainder":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)"},"status":-2},{"failures":[],"tindex":"533816a6-42fa-11e5-9b1c-a7225554d20e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:197","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[512]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:337","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int]"},"status":-2},{"failures":[30],"tindex":"533816a7-42fa-11e5-9b1c-4b0f9fdc007e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:116","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[0,1,31],"tindex":"53383db8-42fa-11e5-9b1c-652e88f9f51a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"index","minRating":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"index","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:518","type":"CtIfImpl","sourcecode":"if ((((int == 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 4))) == ' ')) || ((java.lang.String.length()) == 4)) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, 0, 4, \"SAN \"))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n}"},"status":-1},{"failures":[32],"tindex":"53383db9-42fa-11e5-9b1c-a5d275ea16bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:673","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha512(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:579","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[33,34],"tindex":"533864ca-42fa-11e5-9b1c-9397632b6e55","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:398","type":"CtAssignmentImpl","sourcecode":"char = char"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}