{"failureDictionary":{"org.apache.commons.codec.language.NysiisTest.testSnat":45,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":20,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":5,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":35,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":29,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":50,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":33,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":49,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":23,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":16,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":21,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":24,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":53,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":31,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":18,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testNegativeIndexForRuleMatchIndexOutOfBoundsException":30,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":36,"org.apache.commons.codec.language.NysiisTest.testCap":39,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":7,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":25,"org.apache.commons.codec.language.NysiisTest.testBran":43,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":48,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":4,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":15,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":38,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":2,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":12,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":8,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":22,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":6,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":13,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":32,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":19,"org.apache.commons.codec.language.NysiisTest.testDad":40,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":14,"org.apache.commons.codec.language.NysiisTest.testOthers":46,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":51,"org.apache.commons.codec.language.NysiisTest.testTranan":47,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":9,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":3,"org.apache.commons.codec.language.NysiisTest.testDan":41,"org.apache.commons.codec.language.NysiisTest.testFal":42,"org.apache.commons.codec.language.NysiisTest.testSnad":44,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":17,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":27,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":52},"transformations":[{"failures":[],"tindex":"642463ce-42ad-11e5-bb09-076e9313e5f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:332","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(1);\n} "},"variableMap":{"str":"lang","org.apache.commons.codec.language.DaitchMokotoffSoundex.DOUBLE_QUOTE":"lang"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:357","type":"CtIfImpl","sourcecode":"if (java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>> == null) {\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(\"No rules found for %s, %s, %s.\", org.apache.commons.codec.language.bm.NameType.getName(), org.apache.commons.codec.language.bm.RuleType.getName(), java.lang.String));\n} "},"status":-2},{"failures":[],"tindex":"64248adf-42ad-11e5-bb09-d9f7575fa8c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:133","type":"CtLocalVariableImpl","sourcecode":"int int = 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:759","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"status":-2},{"failures":[0,1],"tindex":"64248ae0-42ad-11e5-bb09-59d587735e11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:370","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"64248ae1-42ad-11e5-bb09-3b3fed13c4a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:181","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(\"mark/reset not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:175","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Unable to resolve required resource: \" + java.lang.String))"},"status":-2},{"failures":[],"tindex":"64248ae2-42ad-11e5-bb09-a5859a9d5edd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"status":-2},{"failures":[],"tindex":"64248ae3-42ad-11e5-bb09-13fd30a33dc9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:226","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:112","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"6424b1f4-42ad-11e5-bb09-e1693849b238","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:339","type":"CtAssignmentImpl","sourcecode":"char = org.apache.commons.codec.language.ColognePhonetic.CologneInputBuffer.removeNext()"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10],"tindex":"6424b1f5-42ad-11e5-bb09-6db5319c131d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:117","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('0')"},"variableMap":{"builder":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"status":-1},{"failures":[0,1],"tindex":"6424b1f6-42ad-11e5-bb09-a3463b7402f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:555","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('L')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:666","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S')"},"status":-1},{"failures":[11,12,13,14,15,16,17],"tindex":"6424b1f7-42ad-11e5-bb09-25bac5350e76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"ii","minRating":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    java.security.MessageDigest.update(byte[], 0, (int > 16 ? 16 : int));\n    int -= 16;\n}"},"status":-1},{"failures":[],"tindex":"6424b1f8-42ad-11e5-bb09-512cf4b28c88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:102","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = (org.apache.commons.codec.digest.Sha2Crypt.java.lang.String) + (org.apache.commons.codec.digest.B64.getRandomSalt(8));\n} "},"variableMap":{"salt":"value","org.apache.commons.codec.digest.Sha2Crypt.SHA256_PREFIX":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:531","type":"CtIfImpl","sourcecode":"if (int == ((java.lang.String.length()) - 1)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-2},{"failures":[0,1],"tindex":"6424b1f9-42ad-11e5-bb09-2f521ad46c0f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:143","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('M')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:472","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J')"},"status":-1},{"failures":[],"tindex":"6424d90a-42ad-11e5-bb09-379e2991ff8b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:406","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int >>> int) ^ int) & int"},"variableMap":{"a":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH","b":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH","m":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH","n":"org.apache.commons.codec.digest.DigestUtils.STREAM_BUFFER_LENGTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:794","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.InputStream.read(byte[], 0, org.apache.commons.codec.digest.DigestUtils.int)"},"status":-2},{"failures":[],"tindex":"6424d90b-42ad-11e5-bb09-d54192ac8778","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:94","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.lang.String)"},"status":-2},{"failures":[18],"tindex":"6424d90c-42ad-11e5-bb09-9dd567a3de96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1(java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), java.io.InputStream)"},"status":-1},{"failures":[19,20],"tindex":"6424d90d-42ad-11e5-bb09-bb9c0e005af1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:238","type":"CtIfImpl","sourcecode":"if ((int & 1) == 1) {\n    java.security.MessageDigest.update(byte[][int]);\n} else {\n    java.security.MessageDigest.update(byte[][int]);\n}"},"variableMap":{"ii":"blocksize","keyBytes":"altResult","finalb":"altResult","ctx":"ctx","j":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:224","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[21,22,23,24],"tindex":"6424d90e-42ad-11e5-bb09-43003f50aaf3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:301","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"ph"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38],"tindex":"6424d90f-42ad-11e5-bb09-ed851b3e6269","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[^a-z]\", \"\")"},"variableMap":{"txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:614","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48],"tindex":"64250020-42ad-11e5-bb09-2367523e6648","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:253","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.SoundexUtils.clean(java.lang.String)"},"status":-1},{"failures":[49,50,51,52,53],"tindex":"64250021-42ad-11e5-bb09-c54fae0b9113","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:170","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(false, byte)"},"variableMap":{"pad":"org.apache.commons.codec.binary.BaseNCodec.PAD_DEFAULT","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:230","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base32.this(int, byte[], false, org.apache.commons.codec.binary.BaseNCodec.byte)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}