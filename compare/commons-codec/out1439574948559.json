{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":14,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":30,"org.apache.commons.codec.binary.HexTest.testEncodeClassCastException":0,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":18,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":11,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":15,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":6,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":8,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":13,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":16,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":10,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":23,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":28,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":4,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":26,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":17,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":5,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":2,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":25,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":27,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":7,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":20,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":21,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":12,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":24,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":9},"transformations":[{"failures":[],"tindex":"b1e3589c-42ad-11e5-a154-290b618ee6c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:413","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.encode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"this":"obj","object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.encode(((byte[])(java.lang.Object)))"},"status":-2},{"failures":[0],"tindex":"b1e37fad-42ad-11e5-a154-27ec3351774a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:130","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:301","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(java.lang.ClassCastException.getMessage() , java.lang.ClassCastException)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"tindex":"b1e37fae-42ad-11e5-a154-fdc05ed0b473","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('T')"},"variableMap":{"code":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:75","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.codec.net.RFC1522Codec.char)"},"status":-1},{"failures":[],"tindex":"b1e3a6bf-42ad-11e5-a154-0f23cfc179fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:105","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(40)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:464","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[],"tindex":"b1e3a6c0-42ad-11e5-a154-a5377c471814","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:110","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\");\n} "},"status":0},{"failures":[],"tindex":"b1e41bf1-42ad-11e5-a154-4d250f51a7da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:140","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:92","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.codec.language.DoubleMetaphone.isSlavoGermanic(java.lang.String)"},"status":-2},{"failures":[9,10],"tindex":"b1e44302-42ad-11e5-a154-1772d6633eff","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:301","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"variableMap":{"left":"right","results":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[11],"tindex":"b1e46a13-42ad-11e5-a154-51d9ebc13f04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:275","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('F')"},"status":-1},{"failures":[],"tindex":"b1e49124-42ad-11e5-a154-7527a0ca7cf8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:187","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.SEVEN":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"jj","org.apache.commons.codec.language.MatchRatingApproachEncoder.FIVE":"jj","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.FOUR":"jj","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"ii","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:279","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n    if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n        char[][(int - int)] = '0';\n    } else {\n        char[][(int - int)] = '1';\n    }\n}"},"status":-2},{"failures":[12],"tindex":"b1e49125-42ad-11e5-a154-db57b81485ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:435","type":"CtForEachImpl","sourcecode":"for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n    if ((char[][int]) == (char[][0])) {\n        char[][int] = char[][1];\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"b1e4b836-42ad-11e5-a154-c5716675c8f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:275","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"length":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:516","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[13],"tindex":"b1e4b837-42ad-11e5-a154-792ce475e8e2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:469","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('|')"},"variableMap":{"sb":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('H')"},"status":-1},{"failures":[],"tindex":"b1e4b838-42ad-11e5-a154-9764f10ba7fe","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:324","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[14,15,16,17,18,19,20],"tindex":"b1e4b839-42ad-11e5-a154-f121be595ff1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:269","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1},{"failures":[],"tindex":"b1e4b83a-42ad-11e5-a154-138322d5f395","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:215","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[8]"},"status":-2},{"failures":[21,22],"tindex":"b1e4b83b-42ad-11e5-a154-2b3b61537dc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:527","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:688","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('T')"},"status":-1},{"failures":[],"tindex":"b1e4df4c-42ad-11e5-a154-8de540dbbe21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:380","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using Q codec\"));\n}"},"status":-2},{"failures":[23,24,25,26,27,28],"tindex":"b1e4df4d-42ad-11e5-a154-6f6857079df2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:470","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][22], byte[][43], byte[][1], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:457","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][0], byte[][10], byte[][20], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[21,22,29,30],"tindex":"b1e4df4e-42ad-11e5-a154-d7f74c91a49e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:670","type":"CtReturnImpl","sourcecode":"return int + 3"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:508","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"b1e4df4f-42ad-11e5-a154-5d70f7ff001a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"string":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:141","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.String.getBytes(java.lang.String);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String, java.io.UnsupportedEncodingException);\n}"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}