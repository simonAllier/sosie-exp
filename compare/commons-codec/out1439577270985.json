{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":38,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":34,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":25,"org.apache.commons.codec.language.NysiisTest.testSnat":50,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":10,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":28,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":60,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":59,"org.apache.commons.codec.language.NysiisTest.testDropBy":51,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":33,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":64,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":61,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":19,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":42,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic":36,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":6,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":23,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":40,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":4,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":15,"org.apache.commons.codec.language.NysiisTest.testRule2":47,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":14,"org.apache.commons.codec.language.NysiisTest.testRule1":46,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":31,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":16,"org.apache.commons.codec.language.NysiisTest.testRule6":48,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":35,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":27,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":67,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":1,"org.apache.commons.codec.language.NysiisTest.testBran":49,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":54,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":2,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":26,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":11,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":13,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":18,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":37,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":3,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":65,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":68,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":62,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":22,"org.apache.commons.codec.language.NysiisTest.testDad":43,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":57,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":8,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":17,"org.apache.commons.codec.language.NysiisTest.testOthers":52,"org.apache.commons.codec.language.NysiisTest.testTranan":53,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":63,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":30,"org.apache.commons.codec.language.NysiisTest.testDan":44,"org.apache.commons.codec.language.NysiisTest.testFal":45,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":66,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":39,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":32,"org.apache.commons.codec.language.NysiisTest.testLocaleIndependence":55},"transformations":[{"failures":[],"tindex":"1a28d16b-42b3-11e5-aebc-c32a2b8e133d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"original","txt":"original"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:263","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.crypt(java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset))"},"status":-2},{"failures":[0],"tindex":"1a28f87c-42b3-11e5-aebc-8da022bebb3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:78","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"c\", \"k\")"},"status":-1},{"failures":[1,2,3],"tindex":"1a28f87d-42b3-11e5-aebc-ff7446a85e67","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.RefinedSoundex:188","type":"CtAssignmentImpl","sourcecode":"char = '*'"},"variableMap":{"last":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:361","type":"CtAssignmentImpl","sourcecode":"char = '4'"},"status":-1},{"failures":[],"tindex":"1a291f8e-42b3-11e5-aebc-b3ff3a17f10b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"cp","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"saltLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"saltLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"saltLen","minRating":"saltLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"saltLen","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"cp","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"cp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:343","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, (int - int))"},"status":-2},{"failures":[],"tindex":"1a291f8f-42b3-11e5-aebc-678ff8ca789f","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:185","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.digest.B64.getRandomSalt(8)"},"variableMap":{"saltString":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l$\", \"3\")"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"1a291f90-42b3-11e5-aebc-97f108f49db8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:102","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:336","type":"CtReturnImpl","sourcecode":"return java.io.ByteArrayOutputStream.toByteArray()"},"status":-1},{"failures":[5],"tindex":"1a2946a1-42b3-11e5-aebc-97a8adcb2018","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:175","type":"CtIfImpl","sourcecode":"if (byte == (org.apache.commons.codec.net.QCodec.byte)) {\n    boolean = true;\n    break;\n} "},"status":-1},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"1a2946a2-42b3-11e5-aebc-f175fb661c47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(java.lang.String)"},"status":-1},{"failures":[],"tindex":"1a2946a3-42b3-11e5-aebc-254f08c9a5fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:63","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^tough\", \"tou2f\")"},"status":1},{"failures":[],"tindex":"1a2946a4-42b3-11e5-aebc-73aace0592a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:151","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Soundex encode is not of type java.lang.String\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:736","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"encodeInteger called with null parameter\")"},"status":-2},{"failures":[],"tindex":"1a296db5-42b3-11e5-aebc-a9457859c787","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:99","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[36,37,38,39,40],"tindex":"1a296db6-42b3-11e5-aebc-2d881d5722e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:570","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F')"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55],"tindex":"1a296db7-42b3-11e5-aebc-f5429a95906b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:618","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1))"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:269","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"Y\")"},"status":-1},{"failures":[],"tindex":"1a296db8-42b3-11e5-aebc-47f501ba7aec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"status":-2},{"failures":[56,57,58,59,60,61,62,63,64],"tindex":"1a2994c9-42b3-11e5-aebc-d9d511124f42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:285","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = java.lang.String.split(\"=\")"},"variableMap":{"line":"inputContext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:519","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String[] java.lang.String[] = org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule.getReplacements(java.lang.String, (char == '\u0000'))"},"status":-1},{"failures":[],"tindex":"1a2994ca-42b3-11e5-aebc-f51c7a972f7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"org.apache.commons.codec.binary.BaseNCodec.EOF"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context)"},"status":-2},{"failures":[],"tindex":"1a2994cb-42b3-11e5-aebc-dfd4fe2a813f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"pos","singleByte":"encodeTable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:471","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][(((int)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 19))) & (org.apache.commons.codec.binary.Base32.int))]"},"status":-2},{"failures":[],"tindex":"1a29bbdc-42b3-11e5-aebc-bb0d34ce71ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:127","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"status":-2},{"failures":[],"tindex":"1a29bbdd-42b3-11e5-aebc-e3f006cbb533","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:55","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"[^a-z]\", \"\")"},"status":0},{"failures":[65,66,67,68],"tindex":"1a29bbde-42b3-11e5-aebc-9d76ad4d4eeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:96","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}