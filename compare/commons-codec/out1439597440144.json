{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":3,"org.apache.commons.codec.language.ColognePhoneticTest.testAaclan":26,"org.apache.commons.codec.language.NysiisTest.testSnat":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":9,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":8,"org.apache.commons.codec.language.ColognePhoneticTest.testAychlmajrForCodec122":23,"org.apache.commons.codec.language.NysiisTest.testDropBy":17,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":13,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":2,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":10,"org.apache.commons.codec.language.ColognePhoneticTest.testAabjoe":25,"org.apache.commons.codec.language.ColognePhoneticTest.testHyphen":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":5,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":11,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":19,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":6,"org.apache.commons.codec.language.NysiisTest.testRule1":14,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMeyer":22,"org.apache.commons.codec.language.ColognePhoneticTest.testVariationsMella":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":12,"org.apache.commons.codec.language.NysiisTest.testSnad":15,"org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull":4,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":0,"org.apache.commons.codec.language.ColognePhoneticTest.testExamples":20,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":24,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":18},"transformations":[{"failures":[],"tindex":"0fe86ac4-42e2-11e5-938d-450b04b8f7d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:316","type":"CtForImpl","sourcecode":"for (int int = 1 ; int <= (16 + ((byte[][0]) & 255)) ; int++) {\n    java.security.MessageDigest.update(byte[]);\n}"},"variableMap":{"altCtx":"obj","altResult":"obj","saltBytes":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:389","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Metaphone encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[],"tindex":"0fe86ac5-42e2-11e5-938d-d39311c6829f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.StringUtils:142","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.lang.String)"},"variableMap":{"string":"string","charsetName":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:163","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.org.apache.commons.codec.binary.StringUtils.getBytes(java.lang.String, org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[0,1,2,3],"tindex":"0fe891d6-42e2-11e5-938d-c7ef65ecef81","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:160","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'Q' ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:117","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[],"tindex":"0fe891d7-42e2-11e5-938d-cf8b4536b588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone2.java.lang.String;\n} "},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"value","txt":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:138","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":1},{"failures":[4],"tindex":"0fe891d8-42e2-11e5-938d-7b7b9a4765c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:139","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"0fe891d9-42e2-11e5-938d-03d3f5c077a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:274","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.digest(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getMd5Digest(), java.io.InputStream)"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:50","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.updateDigest(java.security.MessageDigest, java.io.InputStream).digest()"},"status":-2},{"failures":[],"tindex":"0fe891da-42e2-11e5-938d-65154827046e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:354","type":"CtLocalVariableImpl","sourcecode":"final int int = this.byte[][byte]"},"status":-2},{"failures":[],"tindex":"0fe891db-42e2-11e5-938d-b9dc808b1dda","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"status":-2},{"failures":[2],"tindex":"0fe891dc-42e2-11e5-938d-dfd0753ce9c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:679","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"status":-1},{"failures":[],"tindex":"0fe8b8ed-42e2-11e5-938d-35cd44457a0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:297","type":"CtWhileImpl","sourcecode":"while (int < (int - int)) {\n    java.lang.System.arraycopy(byte[], 0, byte[], int, int);\n    int += int;\n}"},"variableMap":{"blocksize":"b","tempResult":"bytes","pBytes":"bytes","keyLen":"b","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (int == '+') {\n    java.io.ByteArrayOutputStream.write(' ');\n} else if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n    }\n} else {\n    java.io.ByteArrayOutputStream.write(int);\n}"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13],"tindex":"0fe8b8ee-42e2-11e5-938d-adbceb99de04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String)"},"variableMap":{"singleLetter":"str","replacedName":"str","dc":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:333","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":-1},{"failures":[14,15,16,17],"tindex":"0fe8b8ef-42e2-11e5-938d-431ca4333240","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:265","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.Nysiis.java.util.regex.Pattern.matcher(java.lang.String).replaceFirst(\"SSS\")"},"status":-1},{"failures":[18,19],"tindex":"0fe8b8f0-42e2-11e5-938d-d1cd78e50bb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:300","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"variableMap":{"right":"s","results":"schedule"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:378","type":"CtAssignmentImpl","sourcecode":"int[][int++] = int"},"status":-1},{"failures":[],"tindex":"0fe8b8f1-42e2-11e5-938d-cde124aabd82","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:224","type":"CtIfImpl","sourcecode":"if ((int > 0) && (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GN\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"GNED\")))) {\n    break;\n} "},"variableMap":{"this":"this","n":"n","local":"local"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:298","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"TCH\")) {\n    break;\n} "},"status":0},{"failures":[0,1,2,3],"tindex":"0fe8b8f2-42e2-11e5-938d-83453cb989ef","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('N')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:332","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"H\")) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"HU\")))) {\n    if (((int == 1) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'A')) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 5, \"UCCEE\", \"UCCES\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\");\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X');\n    }\n    int += 3;\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n}"},"status":-1},{"failures":[],"tindex":"0fe8e003-42e2-11e5-938d-27bf3cb60e9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:240","type":"CtOperatorAssignmentImpl","sourcecode":"int |= 1"},"variableMap":{"c":"org.apache.commons.codec.binary.Base64.BYTES_PER_UNENCODED_BLOCK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:380","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base64.int)"},"status":-2},{"failures":[],"tindex":"0fe8e004-42e2-11e5-938d-853bbfab294b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:407","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int << int"},"variableMap":{"a":"currentLine","t":"currentLine","n":"currentLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:256","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":0},{"failures":[20,21,22,23,24,25,26,27],"tindex":"0fe8e005-42e2-11e5-938d-ab913608055e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:149","type":"CtReturnImpl","sourcecode":"return \"Q\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:401","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.CologneOutputBuffer.toString()"},"status":-1},{"failures":[],"tindex":"0fe8e006-42e2-11e5-938d-3db82f4c45a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"status":-2},{"failures":[5,6,8,9,13],"tindex":"0fe8e007-42e2-11e5-938d-df7e1ce19bc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:427","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"$\")"},"variableMap":{"buffer":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}