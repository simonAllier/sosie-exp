{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":2,"org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac":99,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":57,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":69,"org.apache.commons.codec.digest.HmacUtilsTest.testInternalNoSuchAlgorithmException":97,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length":82,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":98,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":77,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":33,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":52,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":10,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":106,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":93,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument":8,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":29,"org.apache.commons.codec.binary.Base64InputStreamTest.testRead0":32,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":61,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":22,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":47,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":83,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":1,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot":111,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":74,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":73,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength":89,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex":96,"org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac":101,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":11,"org.apache.commons.codec.digest.DigestUtilsTest.testSha256":90,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":41,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":58,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":59,"org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex":86,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex":95,"org.apache.commons.codec.binary.Base64InputStreamTest.testInputStreamReader":35,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":78,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":113,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":76,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":54,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":9,"org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac":102,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":24,"org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported":4,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":70,"org.apache.commons.codec.binary.HexTest.testHelloWorldUpperCaseHex":27,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid":60,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":0,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":25,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":56,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":72,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_6_Returns4_Successfully":108,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":84,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":12,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":23,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Length":85,"org.apache.commons.codec.digest.DigestUtilsTest.testSha512":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadNull":6,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":19,"org.apache.commons.codec.binary.Base64Test.testBase64":18,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":68,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":51,"org.apache.commons.codec.binary.Base64Test.testUUID":15,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":94,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":55,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":66,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":17,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":87,"org.apache.commons.codec.digest.DigestUtilsTest.testSha384":91,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":62,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":20,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadOutOfBounds":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":63,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":67,"org.apache.commons.codec.binary.Base64InputStreamTest.testMarkSupported":34,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipWrongArgument":40,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":81,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":14,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":28,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":43,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":49,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully2":110,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":44,"org.apache.commons.codec.binary.HexTest.testHelloWorldLowerCaseHex":26,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":30,"org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac":100,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":21,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":79,"org.apache.commons.codec.binary.Base32InputStreamTest.testRead0":3,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":46,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":65,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":7,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":53,"org.apache.commons.codec.binary.Base64InputStreamTest.testReadNull":37,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":31,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":50,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":104,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":75,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":16,"org.apache.commons.codec.binary.Base32InputStreamTest.testReadOutOfBounds":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_7_Returns4_Successfully":109,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":71,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":64,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":80,"org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString":103,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":48,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_5_Returns4_Successfully":112,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully":107,"org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString":13,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec101":38,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":45,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":105},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"f28069d7-42f9-11e5-abf5-f1299b77154a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(java.lang.String)"},"variableMap":{"base64String":"string"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:96","type":"CtReturnImpl","sourcecode":"return java.lang.String.getBytes(java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"f28090e8-42f9-11e5-abf5-addb7da218cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (char == 'N') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.char[];\n}"},"variableMap":{"next":"curr","org.apache.commons.codec.language.Nysiis.CHARS_NN":"org.apache.commons.codec.language.Nysiis.CHARS_N","org.apache.commons.codec.language.Nysiis.CHARS_C":"org.apache.commons.codec.language.Nysiis.CHARS_S"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:132","type":"CtIfImpl","sourcecode":"if (char == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else if (char == 'M') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-2},{"failures":[],"tindex":"f28090e9-42f9-11e5-abf5-e161f6f80975","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:450","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.int) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"variableMap":{"ibitWorkArea":"pos","pos":"pos","org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS":"pos","context":"context","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:457","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[66,67,68,69,70,79,80,81],"tindex":"f28090ea-42f9-11e5-abf5-234c3337f443","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:338","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"cp":"from"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:143","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(org.apache.commons.codec.net.RFC1522Codec.char, int)"},"status":-1},{"failures":[105,106],"tindex":"f28090eb-42f9-11e5-abf5-f30c867ec1a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:296","type":"CtOperatorAssignmentImpl","sourcecode":"int += 3"},"variableMap":{"index":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:352","type":"CtAssignmentImpl","sourcecode":"int = int[][0]"},"status":-1},{"failures":[],"tindex":"f28090ec-42f9-11e5-abf5-e7541158465b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:238","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"c":"modulus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:356","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int)"},"status":-2},{"failures":[71,72,73,74,75,76,77,78],"tindex":"f280b7fd-42f9-11e5-abf5-570b635e16d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:273","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.URLCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.lang.String)"},"status":-1},{"failures":[],"tindex":"f280b7fe-42f9-11e5-abf5-d379cd00a93d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"binaryData"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:582","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.encodeBase64(byte[], false, true)"},"status":-2},{"failures":[],"tindex":"f280b7ff-42f9-11e5-abf5-e1d62ce113f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:228","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.URLCodec.encode(java.lang.String.getBytes(java.lang.String)))"},"status":-2},{"failures":[107,108,109,110,111,112],"tindex":"f280b800-42f9-11e5-abf5-fd69c774e481","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:242","type":"CtOperatorAssignmentImpl","sourcecode":"int >>>= 1"},"variableMap":{"u":"minRating"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:190","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int"},"status":-1},{"failures":[],"tindex":"f280b801-42f9-11e5-abf5-e7d2ef8e4148","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:503","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"f280b802-42f9-11e5-abf5-8fa1ff3bdbb8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:221","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"f280b803-42f9-11e5-abf5-53a8e5bac783","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Crypt:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[], java.lang.String)"},"variableMap":{"salt":"org.apache.commons.codec.digest.Md5Crypt.APR1_PREFIX","keyBytes":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Md5Crypt.java.lang.String)"},"status":-2},{"failures":[],"tindex":"f280df14-42f9-11e5-abf5-5d3d03a519ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:115","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f280df15-42f9-11e5-abf5-cb5a59b5aef0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:245","type":"CtAssignmentImpl","sourcecode":"int = 128"},"variableMap":{"u":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:493","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failures":[],"tindex":"f280df16-42f9-11e5-abf5-87bd1a1e1d78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.SoundexUtils:42","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:247","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"f280df17-42f9-11e5-abf5-d1839d481e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:338","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.encode(((byte[])(java.lang.Object)))"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:340","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"f280df18-42f9-11e5-abf5-0db01fe4130a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:127","type":"CtIfImpl","sourcecode":"if ((((java.lang.String == null) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || (org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String.equalsIgnoreCase(java.lang.String))) || ((java.lang.String.length()) == 1)) {\n    return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String;\n} "},"variableMap":{"name":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE":"text","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:418","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.ColognePhonetic.colognePhonetic(java.lang.String)"},"status":-2},{"failures":[113],"tindex":"f280df19-42f9-11e5-abf5-e347918e9085","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:616","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S', 'X');\n}"},"status":-1},{"failures":[],"tindex":"f281062a-42f9-11e5-abf5-499c8d104861","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maxCodeLen":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:464","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}