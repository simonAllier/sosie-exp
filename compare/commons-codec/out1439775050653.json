{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":33,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":3,"org.apache.commons.codec.language.NysiisTest.testDropBy":55,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":29,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":26,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":9,"org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":4,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":54,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":7,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":53,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":15,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":57,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":13,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":20,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":36,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":52,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully":43,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":50,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":51,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":58,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":1,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":10,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":0,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":32,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn":42,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":12,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":35,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":17,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":39,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":14,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":56,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":23,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_MORIARTY_OMUIRCHEARTAIGH_DoesNotSuccessfulMatch":45,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":47,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":27,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":49,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":11,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":22,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":41,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleConsonants_MISSISSIPPI_RemovedSuccessfully":44,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":46,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":28,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":37,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":19,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":48,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":31},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"980a38a5-447f-11e5-a11f-93e6761eac9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:235","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.bm.Rule.java.util.Map<org.apache.commons.codec.language.bm.NameType, java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>>.put(org.apache.commons.codec.language.bm.NameType, java.util.Collections.unmodifiableMap(java.util.Map<org.apache.commons.codec.language.bm.RuleType, java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>>))"},"status":-1},{"failures":[],"tindex":"980a86c6-447f-11e5-a11f-d72e5952e7bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:407","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":0},{"failures":[17,18,19,20],"tindex":"980a86c7-447f-11e5-a11f-331b0868d8a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:765","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 2, \"ZO\", \"ZI\", \"ZA\")) || (boolean && ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'T')))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"S\", \"TS\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n}"},"status":-1},{"failures":[0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16],"tindex":"980aadd8-447f-11e5-a11f-715a507e6c76","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:228","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.codec.language.bm.RuleType.equals(org.apache.commons.codec.language.bm.RuleType.org.apache.commons.codec.language.bm.RuleType))) {\n    java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(\"common\", org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\"), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, \"common\")));\n} "},"variableMap":{"org.apache.commons.codec.language.bm.RuleType.RULES":"rt","rs":"rs","rt":"rt","s":"s","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:221","type":"CtForEachImpl","sourcecode":"for (final java.lang.String java.lang.String : org.apache.commons.codec.language.bm.Languages.getLanguages()) {\n    try {\n        java.util.Map<java.lang.String, java.util.Map<java.lang.String, java.util.List<org.apache.commons.codec.language.bm.Rule>>>.put(java.lang.String, org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parseRules(org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createScanner(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String), org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String)));\n    } catch (final java.lang.IllegalStateException e) {\n        throw new java.lang.IllegalStateException((\"Problem processing \" + org.apache.commons.codec.language.bm.Rule.(org.apache.commons.codec.language.bm.Rule.createResourceName(org.apache.commons.codec.language.bm.NameType, org.apache.commons.codec.language.bm.RuleType, java.lang.String))) , java.lang.IllegalStateException);\n    }\n}"},"status":-1},{"failures":[],"tindex":"980aadd9-447f-11e5-a11f-5f697d05b42a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:173","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"980aadda-447f-11e5-a11f-4f888a5680cb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.BeiderMorseEncoder:93","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"source":"algorithm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacAlgorithms:91","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"980ad4eb-447f-11e5-a11f-bfc4ac96c808","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:224","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:217","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"980ad4ec-447f-11e5-a11f-0d0d8b0c6a93","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:503","type":"CtLocalVariableImpl","sourcecode":"int int = byte[][int++]"},"status":-2},{"failures":[],"tindex":"980ad4ed-447f-11e5-a11f-89f1bcba6a15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:421","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[])"},"status":0},{"failures":[],"tindex":"980ad4ee-447f-11e5-a11f-d72645b5f207","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:371","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(0, int)"},"variableMap":{"ph":"value","open":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:919","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(int, (int + int))"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"980afbff-447f-11e5-a11f-0791dd1d2d28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:273","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(0, int)"},"status":-1},{"failures":[34],"tindex":"980afc00-447f-11e5-a11f-0d9bcb871d59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:567","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha384(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:460","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha256(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String), org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[35,36,37,38,39,40,41],"tindex":"980afc01-447f-11e5-a11f-3173567bf28a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:284","type":"CtAssignmentImpl","sourcecode":"this.byte[] = org.apache.commons.codec.binary.Base32.byte[]"},"variableMap":{"encodeTable":"finalb","org.apache.commons.codec.binary.Base32.HEX_ENCODE_TABLE":"finalb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:250","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":-1},{"failures":[42],"tindex":"980b2312-447f-11e5-a11f-e7af6c9c74a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:238","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('J')"},"status":-1},{"failures":[],"tindex":"980b2313-447f-11e5-a11f-53a15e88702b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:295","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += int"},"variableMap":{"len":"savedPos","context":"context","readPos":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:371","type":"CtOperatorAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int += (org.apache.commons.codec.binary.BaseNCodec.Context.int) - int"},"status":-2},{"failures":[43,44,45],"tindex":"980b2314-447f-11e5-a11f-3517e7c18d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"variableMap":{"txt":"replacedName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:389","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replace(java.lang.String, java.lang.String)"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54],"tindex":"980b2315-447f-11e5-a11f-db0e6b212bd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:507","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.long = ((org.apache.commons.codec.binary.BaseNCodec.Context.long) << 8) + int"},"status":-1},{"failures":[],"tindex":"980b2316-447f-11e5-a11f-e97c61894c49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:63","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^gn\", \"2n\")"},"status":0},{"failures":[55],"tindex":"980b4a27-447f-11e5-a11f-2333e9349ea4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:153","type":"CtIfImpl","sourcecode":"if ((char == 'P') && (char == 'H')) {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"status":-1},{"failures":[56,57,58],"tindex":"980b4a28-447f-11e5-a11f-9da907c87af7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:320","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}