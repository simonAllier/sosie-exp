{"failureDictionary":{"org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes":32,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":3,"org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64":14,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":24,"org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad":23,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding":25,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":21,"org.apache.commons.codec.binary.Base64Test.testNonBase64Test":15,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects":30,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":5,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUnsafeEncodeDecode":31,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":13,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":12,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":18,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":9,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":8,"org.apache.commons.codec.binary.Base64Test.testConstructors":22,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":26,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":28,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException":19,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":27,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":10,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":20,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":6,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":17,"org.apache.commons.codec.language.MetaphoneTest.testTCH":2,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":11,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":7,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":4,"org.apache.commons.codec.binary.Base64Test.testIsStringBase64":16},"transformations":[{"failures":[],"tindex":"db760c0e-42f7-11e5-9693-095052f87a2a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:337","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.net.URLCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:507","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"db76331f-42f7-11e5-9693-9b7f73678c87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^rough\", \"rou2f\")"},"status":0},{"failures":[0,1],"tindex":"db763320-42f7-11e5-9693-6d5d798e1334","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[],"tindex":"db763321-42f7-11e5-9693-47505efb7f1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"status":0},{"failures":[],"tindex":"db763322-42f7-11e5-9693-cbdb02b89bfb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:90","type":"CtReturnImpl","sourcecode":"return +1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:112","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"db763323-42f7-11e5-9693-69681047bbf2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.StringEncoderComparator:82","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.lang.Comparable<java.lang.Comparable<?>> java.lang.Comparable<java.lang.Comparable<?>> = ((java.lang.Comparable<java.lang.Comparable<?>>)(this.org.apache.commons.codec.StringEncoder.encode(java.lang.Object)))"},"status":-2},{"failures":[2,3,4,5,6,7,8],"tindex":"db763324-42f7-11e5-9693-5b751bb8a66c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:420","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String + java.lang.String"},"variableMap":{"l":"test","remainder":"test"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:364","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.StringBuilder.substring(int, (int + (java.lang.String.length())))"},"status":-1},{"failures":[],"tindex":"db763325-42f7-11e5-9693-3355a33539ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Lang:161","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    continue;\n} "},"variableMap":{"line":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:413","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to DaitchMokotoffSoundex encode is not of type java.lang.String\");\n} "},"status":-2},{"failures":[9,10,11,12,13],"tindex":"db765a36-42f7-11e5-9693-2107a028f4e7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:496","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int)"},"status":-1},{"failures":[14,15,16],"tindex":"db765a37-42f7-11e5-9693-5786f584813b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:543","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[17,18],"tindex":"db765a38-42f7-11e5-9693-2bd9ac1d657f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:540","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:809","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[19],"tindex":"db765a39-42f7-11e5-9693-3ffaff966b97","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:98","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof byte[])) {\n    throw new org.apache.commons.codec.EncoderException(\"argument not a byte array\");\n} "},"status":-1},{"failures":[20],"tindex":"db765a3a-42f7-11e5-9693-73c7065c4f0b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:401","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 16) & 255))"},"variableMap":{"b":"tmp","offset":"i","iValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:185","type":"CtAssignmentImpl","sourcecode":"byte[][int] = byte"},"status":-1},{"failures":[],"tindex":"db765a3b-42f7-11e5-9693-6f2f310f9990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Soundex:217","type":"CtReturnImpl","sourcecode":"return this.char[]"},"variableMap":{"soundexMapping":"org.apache.commons.codec.language.Nysiis.CHARS_SSS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:149","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"status":-2},{"failures":[17,18,21],"tindex":"db765a3c-42f7-11e5-9693-5fa4526ee203","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:273","type":"CtReturnImpl","sourcecode":"return int + 1"},"variableMap":{"index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:402","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"db765a3d-42f7-11e5-9693-35cd27e28b7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:377","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof byte[]) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.binary.BaseNCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(\"Parameter supplied to Base-N decode is not a byte[] or a String\");\n}"},"variableMap":{"obj":"value","this":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:200","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"status":-2},{"failures":[22,23],"tindex":"db76814e-42f7-11e5-9693-0532cc0b16ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:501","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"db76814f-42f7-11e5-9693-197ce25da17c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:185","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32],"tindex":"db768150-42f7-11e5-9693-5785c5388382","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:578","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.nio.charset.Charset)))"},"status":-1},{"failures":[17,18],"tindex":"db768151-42f7-11e5-9693-a368403875a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:604","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('X', 'S')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:419","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\")"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}