{"failureDictionary":{"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":6,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":5,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":15,"org.apache.commons.codec.binary.Base64OutputStreamTest.testWriteToNullCoverage":25,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":28,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":20,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":14,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":22,"org.apache.commons.codec.binary.Base64Test.testBase64":18,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":4,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":43,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":29,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":42,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":1,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":27,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":37,"org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString":39,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":3,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":34,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":17,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":30,"org.apache.commons.codec.binary.Base64Test.testPairs":10,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":33,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":35,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":19,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":21,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":16,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":32,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":40,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":9,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString":38,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":11,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":12,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":23,"org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteToNullCoverage":26,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":36,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":8,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":41,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":13,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":7,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":31,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":0},"transformations":[{"failures":[],"tindex":"d9fae89d-4342-11e5-85a9-a3ba19037720","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:340","type":"CtReturnImpl","sourcecode":"return "},"status":-2},{"failures":[0,1],"tindex":"d9fb36be-4342-11e5-85a9-953598dc7182","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:224","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 16"},"variableMap":{"ii":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:387","type":"CtOperatorAssignmentImpl","sourcecode":"int |= org.apache.commons.codec.digest.UnixCrypt.(org.apache.commons.codec.digest.UnixCrypt.byteToUnsigned(byte[][int++])) << 16"},"status":-1},{"failures":[],"tindex":"d9fb36bf-4342-11e5-85a9-916c0201266a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:315","type":"CtLocalVariableImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule> = java.util.Map<java.lang.Character, java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Rule>>.get(char)"},"status":-2},{"failures":[],"tindex":"d9fb36c0-4342-11e5-85a9-a1565f1eb79b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:893","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) == 0) {\n    return null;\n} "},"variableMap":{"input":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:47","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((java.lang.String.length()) == 0)) {\n    return org.apache.commons.codec.language.Caverphone1.java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"d9fb36c1-4342-11e5-85a9-032e830b6002","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:455","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[],"tindex":"d9fb84e2-4342-11e5-85a9-55f87c25c8f0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:390","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte[][((org.apache.commons.codec.binary.BaseNCodec.Context.int) & (org.apache.commons.codec.binary.Base64.int))]"},"variableMap":{"encodeTable":"buffer","ibitWorkArea":"pos","pos":"pos","context":"context","org.apache.commons.codec.binary.Base64.MASK_6BITS":"pos","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:466","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"d9fb84e3-4342-11e5-85a9-3b39f72bab9b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:365","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-1},{"failures":[0,1],"tindex":"d9fb84e4-4342-11e5-85a9-8f17ca4db03f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:343","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.UnixCrypt.org.apache.commons.codec.digest.UnixCrypt.permOp(int, int, 4, 252645135, int[])"},"status":-1},{"failures":[25,26],"tindex":"d9fb84e5-4342-11e5-85a9-b18a3c98a233","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:86","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[27,28,29,30,31,32,33,34],"tindex":"d9fb84e6-4342-11e5-85a9-d5818529a2ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:294","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"variableMap":{"ctx":"ctx"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:395","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    java.security.MessageDigest.update(byte[], 0, int);\n} else {\n    java.security.MessageDigest.update(byte[], 0, int);\n}"},"status":-1},{"failures":[35],"tindex":"d9fb84e7-4342-11e5-85a9-eb2194ed6af8","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:269","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1},{"failures":[36,37],"tindex":"d9fbabf8-4342-11e5-85a9-35983a865036","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:166","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleS(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"variableMap":{"result":"result","this":"this","index":"index","slavoGermanic":"slavoGermanic","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:182","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleZ(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"status":-1},{"failures":[28,29,30],"tindex":"d9fbabf9-4342-11e5-85a9-711b527a09eb","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:465","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][18], byte[][28], byte[][8], 4, java.lang.StringBuilder)"},"variableMap":{"altResult":"altResult","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:474","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][47], byte[][5], byte[][26], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[0,1],"tindex":"d9fbabfa-4342-11e5-85a9-dbde93c51d39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"variableMap":{"a":"left","t":"right","n":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:296","type":"CtAssignmentImpl","sourcecode":"int = (int >>> 1) | (int << 31)"},"status":-1},{"failures":[38,39],"tindex":"d9fbabfb-4342-11e5-85a9-e11c32a86fc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) != 1) || ((java.lang.String.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + java.lang.String) + \" in \") + java.lang.String));\n} "},"variableMap":{"rawLine":"valueToDigest","leftCharacter":"valueToDigest","rightCharacter":"valueToDigest","location":"valueToDigest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:816","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(org.apache.commons.codec.binary.StringUtils.getBytesUtf8(java.lang.String))"},"status":-1},{"failures":[],"tindex":"d9fbabfc-4342-11e5-85a9-4d1de2e88b21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:94","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:213","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.codec.digest.UnixCrypt.int[][char]"},"status":-2},{"failures":[],"tindex":"d9fbabfd-4342-11e5-85a9-c77ef260a36c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:102","type":"CtLocalVariableImpl","sourcecode":"final byte byte = byte[][0]"},"status":-2},{"failures":[],"tindex":"d9fbd30e-4342-11e5-85a9-ef0c29696093","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:128","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String"},"variableMap":{"org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"org.apache.commons.codec.language.Caverphone1.SIX_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Caverphone1.java.lang.String"},"status":0},{"failures":[40,41,42,43],"tindex":"d9fbd30f-4342-11e5-85a9-613815fd60ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:193","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"b","minRating":"b","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:504","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int += 256;\n} "},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}