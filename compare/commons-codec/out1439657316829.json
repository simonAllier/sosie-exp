{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":19,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":12,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testBasicEncodeDecode":33,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSafeCharEncodeDecode":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":4,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet":29,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":31,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":3,"org.apache.commons.codec.language.MetaphoneTest.testEncodeNull":30,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":8,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":41,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":5,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":21,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":2,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":22,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":0,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":26,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":6,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":14,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":16,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":40,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":24,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":27,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":17,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":1,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":23,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":28,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakDecode":36,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSkipNotEncodedCRLF":35,"org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac":42,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testSoftLineBreakEncode":37,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":7,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeWithInvalidObject":9,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects":38,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":18,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":11,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":39,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull":10,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":13},"transformations":[{"failures":[],"tindex":"79334ed8-436d-11e5-aa4e-6f55ddcee093","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"pArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:721","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12],"tindex":"793375e9-436d-11e5-aa4e-cfdc2983eb9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:293","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) != 1) || ((java.lang.String.length()) != 1)) {\n    throw new java.lang.IllegalArgumentException(((((\"Malformed folding statement - \" + \"patterns are not single characters: \") + java.lang.String) + \" in \") + java.lang.String));\n} "},"variableMap":{"rawLine":"str","leftCharacter":"str","rightCharacter":"str","location":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:336","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"status":-1},{"failures":[],"tindex":"79339cfa-436d-11e5-aa4e-bf9feccc0884","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Crypt:66","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[]);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha512Crypt(byte[], java.lang.String);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Sha2Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Sha2Crypt.sha256Crypt(byte[], java.lang.String);\n} else if (java.lang.String.startsWith(org.apache.commons.codec.digest.Md5Crypt.java.lang.String)) {\n    return org.apache.commons.codec.digest.Md5Crypt.md5Crypt(byte[], java.lang.String);\n} else {\n    return org.apache.commons.codec.digest.UnixCrypt.crypt(byte[], java.lang.String);\n}"},"status":-2},{"failures":[],"tindex":"79339cfb-436d-11e5-aa4e-1ff4b2a33a1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:298","type":"CtLocalVariableImpl","sourcecode":"final int[] int[] = new int[2]"},"status":-2},{"failures":[],"tindex":"79339cfc-436d-11e5-aa4e-9574b2bab1eb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:194","type":"CtContinueImpl","sourcecode":"continue"},"status":0},{"failures":[13,14],"tindex":"79339cfd-436d-11e5-aa4e-13f04e365548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:764","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"variableMap":{"len":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:291","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"7933c40e-436d-11e5-aa4e-07110b4e150d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:122","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof char[]) {\n    return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((char[])(java.lang.Object)));\n} "},"variableMap":{"this":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:286","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} else if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using Q codec\"));\n}"},"status":-2},{"failures":[],"tindex":"7933c40f-436d-11e5-aa4e-3f09a3fed843","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:268","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"status":-2},{"failures":[],"tindex":"7933c410-436d-11e5-aa4e-85447253c0e3","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base32:309","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"pad must not be in alphabet or whitespace\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.BCodec:227","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be decoded using BCodec\"))"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23],"tindex":"7933c411-436d-11e5-aa4e-99d83ac5b466","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:298","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(byte[], 0, byte[], int, int)"},"variableMap":{"blocksize":"i","tempResult":"saltBytes","pBytes":"saltBytes","cp":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:264","type":"CtIfImpl","sourcecode":"if ((int % 3) != 0) {\n    java.security.MessageDigest.update(byte[]);\n} "},"status":-1},{"failures":[],"tindex":"7933eb22-436d-11e5-aa4e-7bf35901773e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:261","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"variableMap":{"maxCodeLen":"currentLinePos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:395","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.codec.binary.BaseNCodec.Context.int = 0"},"status":-2},{"failures":[24,25,26,27,28,29],"tindex":"7933eb23-436d-11e5-aa4e-d3d93c33c57c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"bytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:254","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.net.QuotedPrintableCodec.org.apache.commons.codec.net.QuotedPrintableCodec.encodeQuotedPrintable(java.util.BitSet, byte[], false)"},"status":-1},{"failures":[30],"tindex":"7933eb24-436d-11e5-aa4e-b78909c7e328","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"str","org.apache.commons.codec.language.Caverphone1.SIX_1":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:403","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Metaphone.metaphone(java.lang.String)"},"status":-1},{"failures":[],"tindex":"7933eb25-436d-11e5-aa4e-09ad4a569091","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.BCodec:88","type":"CtReturnImpl","sourcecode":"return \"B\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:271","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"79341236-436d-11e5-aa4e-870eec978aa8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:94","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[24,25,26,31,32,29,33,34,35,36,37,38],"tindex":"79341237-436d-11e5-aa4e-edafd234dac0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.Utils:44","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Invalid URL encoding: not a valid digit (radix \" + (org.apache.commons.codec.net.URLCodec.int)) + \"): \") + byte));\n} "},"variableMap":{"b":"org.apache.commons.codec.net.QuotedPrintableCodec.CR","org.apache.commons.codec.net.URLCodec.RADIX":"b","i":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:371","type":"CtIfImpl","sourcecode":"if ((int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte)) && (int != (org.apache.commons.codec.net.QuotedPrintableCodec.byte))) {\n    java.io.ByteArrayOutputStream.write(int);\n} "},"status":-1},{"failures":[39,40,41],"tindex":"79341238-436d-11e5-aa4e-b7e3b2ed943b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:173","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'V' ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:631","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int)"},"status":-1},{"failures":[42],"tindex":"79341239-436d-11e5-aa4e-197436c00fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:602","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha384(byte[], java.io.InputStream))"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:709","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.hmacSha512(byte[], java.io.InputStream))"},"status":-1},{"failures":[],"tindex":"7934394a-436d-11e5-aa4e-4569334c026c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Nysiis:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.Nysiis.char[]"},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_AF":"l_ascii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:287","type":"CtReturnImpl","sourcecode":"return char[]"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":19,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}