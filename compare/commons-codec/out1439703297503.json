{"failureDictionary":{"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":13,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":19,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":5,"org.apache.commons.codec.net.URLCodecTest.testInvalidEncoding":4,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":18,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":16,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":3,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":14,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":24,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":22,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":27,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":17,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le":11,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":2,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName":12,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1":8,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":0,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":26,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":28,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":1,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be":10,"org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16":6,"org.apache.commons.codec.language.ColognePhoneticTest.testEdgeCases":25,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":23},"transformations":[{"failures":[],"tindex":"87cf60ff-43d8-11e5-973d-5d67f72403dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodec:336","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Base-N encode is not a byte[]\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:136","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\")"},"status":-2},{"failures":[],"tindex":"87cf8810-43d8-11e5-973d-67905875b1d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:758","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"87cf8811-43d8-11e5-973d-4361a5ff1434","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:128","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone2.java.lang.String.length())"},"variableMap":{"org.apache.commons.codec.language.Caverphone2.TEN_1":"str","txt":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:292","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.codec.net.URLCodec.decode(java.lang.String, org.apache.commons.codec.net.URLCodec.getDefaultCharset());\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw new org.apache.commons.codec.DecoderException(java.io.UnsupportedEncodingException.getMessage() , java.io.UnsupportedEncodingException);\n}"},"status":-1},{"failures":[],"tindex":"87cf8812-43d8-11e5-973d-df8901732a94","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:445","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha256(byte[]), java.io.InputStream)"},"variableMap":{"valueToDigest":"valueToDigest","this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:659","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.updateHmac(org.apache.commons.codec.digest.HmacUtils.org.apache.commons.codec.digest.HmacUtils.getHmacSha512(byte[]), java.io.InputStream)"},"status":0},{"failures":[6,7,8,9,10,11,12],"tindex":"87cf8813-43d8-11e5-973d-93a4a9988d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:692","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.codec.binary.Base64().decode(java.lang.String)"},"variableMap":{"base64String":"charsetName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.StringUtils:141","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.String.getBytes(java.lang.String);\n} catch (final java.io.UnsupportedEncodingException e) {\n    throw org.apache.commons.codec.binary.StringUtils.newIllegalStateException(java.lang.String, java.io.UnsupportedEncodingException);\n}"},"status":-1},{"failures":[13,14,15],"tindex":"87cfaf24-43d8-11e5-973d-3d45d7f8af88","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:488","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][40], byte[][61], byte[][19], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[],"tindex":"87cfaf25-43d8-11e5-973d-3549b6519c0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n    byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n} "},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"org.apache.commons.codec.net.QCodec.UNDERSCORE","data":"data","i":"length","org.apache.commons.codec.net.QCodec.UNDERSCORE":"org.apache.commons.codec.net.QCodec.BLANK"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:158","type":"CtIfImpl","sourcecode":"if (this.boolean) {\n    for (int int = 0 ; int < (byte[].int) ; int++) {\n        if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n            byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n        } \n    }\n} "},"status":-2},{"failures":[],"tindex":"87cfaf26-43d8-11e5-973d-3b4170317071","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:250","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.abs(((java.lang.String.length()) + (java.lang.String.length())))"},"status":-2},{"failures":[],"tindex":"87cfaf27-43d8-11e5-973d-f53e7b9d8a7f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:124","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(0, org.apache.commons.codec.language.Caverphone1.java.lang.String.length())"},"variableMap":{"txt":"salt","org.apache.commons.codec.language.Caverphone1.SIX_1":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_256"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[16,17,18,19,20],"tindex":"87cfaf28-43d8-11e5-973d-0dd5e0d39309","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:517","type":"CtInvocationImpl","sourcecode":"java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear()"},"variableMap":{"nextBranches":"nextBranches"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:540","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.clear();\n    java.util.Set<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>.addAll(java.util.List<org.apache.commons.codec.language.DaitchMokotoffSoundex.Branch>);\n} "},"status":-1},{"failures":[21,22],"tindex":"87cfaf29-43d8-11e5-973d-73da696973f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:532","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha256(java.lang.String))"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1(java.lang.String))"},"status":-1},{"failures":[23,24],"tindex":"87cfd63a-43d8-11e5-973d-e94fcc5ec69f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Rule:699","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(\"Can not match pattern at negative indexes\");\n} "},"variableMap":{"i":"d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:361","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.digest.UnixCrypt.boolean[][int]) {\n    int = (int >>> 2) | (int << 26);\n    int = (int >>> 2) | (int << 26);\n} else {\n    int = (int >>> 1) | (int << 27);\n    int = (int >>> 1) | (int << 27);\n}"},"status":-1},{"failures":[],"tindex":"87cfd63b-43d8-11e5-973d-03fa2c50e215","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.ColognePhonetic:435","type":"CtForEachImpl","sourcecode":"for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n    if ((char[][int]) == (char[][0])) {\n        char[][int] = char[][1];\n        break;\n    } \n}"},"variableMap":{"org.apache.commons.codec.language.ColognePhonetic.PREPROCESS_MAP":"org.apache.commons.codec.language.ColognePhonetic.PREPROCESS_MAP","chrs":"chrs","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:434","type":"CtIfImpl","sourcecode":"if ((char[][int]) > 'Z') {\n    for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n        if ((char[][int]) == (char[][0])) {\n            char[][int] = char[][1];\n            break;\n        } \n    }\n} "},"status":1},{"failures":[25],"tindex":"87cfd63c-43d8-11e5-973d-f3ee14340fab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:243","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n    int = 128;\n} "},"variableMap":{"u":"index","y":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:434","type":"CtIfImpl","sourcecode":"if ((char[][int]) > 'Z') {\n    for (final char[] char[] : org.apache.commons.codec.language.ColognePhonetic.char[][]) {\n        if ((char[][int]) == (char[][0])) {\n            char[][int] = char[][1];\n            break;\n        } \n    }\n} "},"status":-1},{"failures":[26,27],"tindex":"87cfd63d-43d8-11e5-973d-41729749c113","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:282","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"87cfd63e-43d8-11e5-973d-e7bc49c32a04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"org.apache.commons.codec.language.MatchRatingApproachEncoder.SPACE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:417","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"\\\\s{2,}\\\\b\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"status":-2},{"failures":[],"tindex":"87cfd63f-43d8-11e5-973d-cb6cf92418b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:159","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n        byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n    } \n}"},"variableMap":{"org.apache.commons.codec.net.QCodec.BLANK":"b","data":"decodeTable","length":"pos","org.apache.commons.codec.net.QCodec.UNDERSCORE":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:353","type":"CtIfImpl","sourcecode":"if ((byte >= 0) && (byte < (this.byte[].int))) {\n    final int int = this.byte[][byte];\n    if (int >= 0) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.int = ((org.apache.commons.codec.binary.BaseNCodec.Context.int) + 1) % (org.apache.commons.codec.binary.Base32.int);\n        org.apache.commons.codec.binary.BaseNCodec.Context.long = ((org.apache.commons.codec.binary.BaseNCodec.Context.long) << (org.apache.commons.codec.binary.Base32.int)) + int;\n        if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) == 0) {\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 24) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 16) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 8) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n            byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)((org.apache.commons.codec.binary.BaseNCodec.Context.long) & (org.apache.commons.codec.binary.BaseNCodec.int)));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"87cffd50-43d8-11e5-973d-31792e9ed02f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:107","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ry\", \"Ry\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:93","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^y3\", \"Y3\")"},"status":1},{"failures":[28],"tindex":"87cffd51-43d8-11e5-973d-551c8f8858ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:295","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[],"tindex":"87cffd52-43d8-11e5-973d-5bd33af1d38c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:233","type":"CtLocalVariableImpl","sourcecode":"int int = 128"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:282","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}