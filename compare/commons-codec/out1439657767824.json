{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":11,"org.apache.commons.codec.binary.HexTest.testCustomCharset":14,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":40,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MCGOWAN_MCGEOGHEGAN_SuccessfullyMatched":37,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":25,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":24,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_LEWINSKY_LEVINSKI_SuccessfullyMatched":42,"org.apache.commons.codec.binary.HexTest.testRequiredCharset":16,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":19,"org.apache.commons.codec.net.URLCodecTest.testUnsafeEncodeDecode":7,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":29,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":26,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":23,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":31,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_CATHERINE_KATHRYN_SuccessfullyMatched":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":21,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":33,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":6,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":27,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":30,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":9,"org.apache.commons.codec.binary.Base64Test.testUUID":18,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":34,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":22,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid":5,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BRIAN_BRYAN_SuccessfullyMatched":43,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched":38,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":28,"org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":39,"org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet":2,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":36,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":13,"org.apache.commons.codec.net.URLCodecTest.testSafeCharEncodeDecode":4,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":12,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_FRANCISZEK_FRANCES_SuccessfullyMatched":41,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":8,"org.apache.commons.codec.binary.HexTest.testEncodeDecodeRandom":15,"org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent":1,"org.apache.commons.codec.net.URLCodecTest.testBasicEncodeDecode":3},"transformations":[{"failures":[],"tindex":"8601dac8-436e-11e5-94ac-8f2ef29f9220","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:103","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w\", \"2\")"},"variableMap":{"txt":"org.apache.commons.codec.language.Caverphone2.TEN_1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:125","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String + (org.apache.commons.codec.language.Caverphone2.java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7],"tindex":"860201d9-436e-11e5-94ac-b1a72feee5cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:168","type":"CtIfImpl","sourcecode":"if (int == '+') {\n    java.io.ByteArrayOutputStream.write(' ');\n} else if (int == (org.apache.commons.codec.net.URLCodec.byte)) {\n    try {\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        final int int = org.apache.commons.codec.net.Utils.digit16(byte[][++int]);\n        java.io.ByteArrayOutputStream.write(((char)((int << 4) + int)));\n    } catch (final java.lang.ArrayIndexOutOfBoundsException e) {\n        throw new org.apache.commons.codec.DecoderException(\"Invalid URL encoding: \" , java.lang.ArrayIndexOutOfBoundsException);\n    }\n} else {\n    java.io.ByteArrayOutputStream.write(int);\n}"},"status":-1},{"failures":[],"tindex":"860201da-436e-11e5-94ac-3fa21f2d14f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:142","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"from":"sumLength","to":"sumLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:252","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.MatchRatingApproachEncoder.getMinRating(int)"},"status":-2},{"failures":[],"tindex":"860201db-436e-11e5-94ac-d121f4cefae7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:297","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"860201dc-436e-11e5-94ac-0bc5350e3b74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:277","type":"CtIfImpl","sourcecode":"if (java.util.BitSet == null) {\n    java.util.BitSet = org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet;\n} "},"variableMap":{"org.apache.commons.codec.net.QuotedPrintableCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL","printable":"org.apache.commons.codec.net.URLCodec.WWW_FORM_URL"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:83","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.URLCodec.java.util.BitSet.set(int)"},"status":-2},{"failures":[],"tindex":"860201dd-436e-11e5-94ac-b14fc8fa2547","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:406","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":0},{"failures":[8,9,10,11],"tindex":"860201de-436e-11e5-94ac-3fbd5571fa38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:574","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"P\", \"B\") ? int + 2 : int + 1"},"variableMap":{"this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:127","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.codec.language.DoubleMetaphone.handleG(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int, boolean)"},"status":-1},{"failures":[],"tindex":"860201df-436e-11e5-94ac-396740209186","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"tempResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:498","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"860228f0-436e-11e5-94ac-911589bc4b8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:208","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(\"             \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:184","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[12,13],"tindex":"860228f1-436e-11e5-94ac-2707ef6aab49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:219","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Can\\'t fetch any language from the empty language set.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:178","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + char) + \" at index \") + int))"},"status":-1},{"failures":[14,15,16,17,18,19],"tindex":"860228f2-436e-11e5-94ac-e1c2f26cc305","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:61","type":"CtAssignmentImpl","sourcecode":"byte[][0] = ((byte)(int))"},"variableMap":{"i":"i","singleByte":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int & 255))"},"status":-1},{"failures":[20],"tindex":"860228f3-436e-11e5-94ac-e1f58f6ac62d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:252","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('H')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29],"tindex":"860228f4-436e-11e5-94ac-7b99a09ec5b1","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:216","type":"CtAssignmentImpl","sourcecode":"this.boolean = true"},"variableMap":{"found":"inMultilineComment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:262","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"860228f5-436e-11e5-94ac-d3e1415c4f83","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:114","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.this(org.apache.commons.codec.Charsets.java.nio.charset.Charset, false)"},"status":-2},{"failures":[],"tindex":"860228f6-436e-11e5-94ac-eb3923fc35e6","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.HmacUtils:176","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"Null key\");\n} "},"variableMap":{"key":"saltBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:504","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[],"tindex":"86025007-436e-11e5-94ac-afc591da4559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"terminator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:135","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: charset token not found\");\n} "},"status":-2},{"failures":[],"tindex":"86025008-436e-11e5-94ac-133e577c089d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:101","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final byte byte = byte[][0];\n    return byte < 0 ? 256 + byte : byte;\n} "},"variableMap":{"r":"bAvail","singleByte":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:292","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.codec.binary.BaseNCodec.Context.byte[]) != null) {\n    final int int = java.lang.Math.min(org.apache.commons.codec.binary.BaseNCodec.available(org.apache.commons.codec.binary.BaseNCodec.Context), int);\n    java.lang.System.arraycopy(org.apache.commons.codec.binary.BaseNCodec.Context.byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[], int, int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += int;\n    if ((org.apache.commons.codec.binary.BaseNCodec.Context.int) >= (org.apache.commons.codec.binary.BaseNCodec.Context.int)) {\n        org.apache.commons.codec.binary.BaseNCodec.Context.byte[] = null;\n    } \n    return int;\n} "},"status":-2},{"failures":[30,31,32],"tindex":"86025009-436e-11e5-94ac-89eaef2c1462","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:190","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('K')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"status":-1},{"failures":[],"tindex":"8602500a-436e-11e5-94ac-477912d1a7a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"currentLinePos","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"lineLength","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"currentLinePos","minRating":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"pos","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:518","type":"CtIfImpl","sourcecode":"if (((int) > 0) && ((int) <= (org.apache.commons.codec.binary.BaseNCodec.Context.int))) {\n    java.lang.System.arraycopy(byte[], 0, byte[], org.apache.commons.codec.binary.BaseNCodec.Context.int, byte[].int);\n    org.apache.commons.codec.binary.BaseNCodec.Context.int += byte[].int;\n    org.apache.commons.codec.binary.BaseNCodec.Context.int = 0;\n} "},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43],"tindex":"8602500b-436e-11e5-94ac-99bbdcd52235","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:283","type":"CtAssignmentImpl","sourcecode":"char[][(int - int)] = '1'"},"variableMap":{"jj":"i","l_ascii":"name2Char","bits":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:321","type":"CtAssignmentImpl","sourcecode":"char[][int] = ' '"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}