{"failureDictionary":{"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":15,"org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB":77,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_OSULLIVAN_OSUILLEABHAIN_SuccessfulMatch":105,"org.apache.commons.codec.language.NysiisTest.testSnat":58,"org.apache.commons.codec.net.QCodecTest.testDecodeObjects":4,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_MICKY_MICHAEL_SuccessfullyMatched":99,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":26,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":24,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":25,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY":80,"org.apache.commons.codec.language.NysiisTest.testRule4Dot2":46,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":27,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualXalan":83,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SAM_SAMUEL_SuccessfullyMatched":94,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":92,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":65,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualParis":82,"org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation":74,"org.apache.commons.codec.net.QCodecTest.testEncodeObjects":16,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualGary":84,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":37,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_ROSOCHOWACIEC_ROSOKHOVATSETS_SuccessfullyMatched":102,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":39,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":38,"org.apache.commons.codec.language.NysiisTest.testCap":47,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_ZACH_ZAKARIA_SuccessfullyMatched":98,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":36,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":34,"org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX":75,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":35,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN":71,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":43,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":44,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":64,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":28,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite":86,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":18,"org.apache.commons.codec.language.SoundexTest.testB650":23,"org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG":78,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_OONA_OONAGH_SuccessfullyMatched":95,"org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA":79,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SOPHIE_SOFIA_SuccessfullyMatched":93,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":40,"org.apache.commons.codec.net.QCodecTest.testUnsafeEncodeDecode":5,"org.apache.commons.codec.language.SoundexTest.testNewInstance":31,"org.apache.commons.codec.language.MetaphoneTest.testWhy":69,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2":14,"org.apache.commons.codec.language.NysiisTest.testTranan":62,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright":88,"org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid":0,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_PETERSON_PETERS_SuccessfullyMatched":101,"org.apache.commons.codec.language.NysiisTest.testFal":50,"org.apache.commons.codec.language.NysiisTest.testSnad":57,"org.apache.commons.codec.language.MetaphoneTest.testTCH":68,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLength":89,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":20,"org.apache.commons.codec.language.MetaphoneTest.testPHTOF":70,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected":96,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":21,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":22,"org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength":13,"org.apache.commons.codec.language.NysiisTest.testDropBy":60,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualPeter":85,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_COLM_COLIN_WithAccentsAndSymbolsAndSpaces_SuccessfullyMatched":104,"org.apache.commons.codec.net.QCodecTest.testBasicEncodeDecode":3,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":12,"org.apache.commons.codec.net.QCodecTest.testUTF8RoundTrip":1,"org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex":90,"org.apache.commons.codec.language.NysiisTest.testRule2":52,"org.apache.commons.codec.language.NysiisTest.testRule1":51,"org.apache.commons.codec.language.NysiisTest.testRule7":55,"org.apache.commons.codec.language.MetaphoneTest.testExceedLength":76,"org.apache.commons.codec.language.NysiisTest.testRule6":54,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":2,"org.apache.commons.codec.language.NysiisTest.testRule5":53,"org.apache.commons.codec.language.MetaphoneTest.testSHAndSIOAndSIAToX":73,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SEAN_SHAUN_SuccessfullyMatched":106,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":8,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight":87,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":32,"org.apache.commons.codec.language.NysiisTest.testTrueVariant":59,"org.apache.commons.codec.language.NysiisTest.testBran":56,"org.apache.commons.codec.language.NysiisTest.testSpecialBranches":63,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":42,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":29,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched":97,"org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH":66,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":41,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":6,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":17,"org.apache.commons.codec.language.MetaphoneTest.testMetaphone":72,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2":81,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":33,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":19,"org.apache.commons.codec.language.NysiisTest.testDad":48,"org.apache.commons.codec.language.NysiisTest.testOthers":61,"org.apache.commons.codec.language.SoundexTest.testDifference":30,"org.apache.commons.codec.language.NysiisTest.testRule4Dot1":45,"org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY":67,"org.apache.commons.codec.language.NysiisTest.testDan":49,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":7,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1":10,"org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos0":9,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":11,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Surname_PRZEMYSL_PSHEMESHIL_SuccessfullyMatched":100,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_LongSurnames_OMUIRCHEARTAIGH_OMIREADHAIGH_SuccessfulMatch":103,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":91},"transformations":[{"failures":[],"tindex":"3076db9d-42ce-11e5-bc95-5118721a71ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('>')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:65","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set(' ')"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"307702ae-42ce-11e5-bc95-7bc3827a5cff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.length()) + 1))"},"variableMap":{"input":"text","l":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:147","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(int, int)"},"status":-1},{"failures":[],"tindex":"307702af-42ce-11e5-bc95-cdefe05cae69","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.Base64:662","type":"CtIfImpl","sourcecode":"if ((byte[] == null) || ((byte[].int) == 0)) {\n    return byte[];\n} "},"variableMap":{"binaryData":"bigBytes","length":"bitlen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:754","type":"CtIfImpl","sourcecode":"if ((((java.math.BigInteger.bitLength()) % 8) != 0) && ((((java.math.BigInteger.bitLength()) / 8) + 1) == (int / 8))) {\n    return byte[];\n} "},"status":0},{"failures":[],"tindex":"307702b0-42ce-11e5-bc95-bdbab2f54c61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QuotedPrintableCodec.java.util.BitSet.set(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":0},{"failures":[9,10],"tindex":"307702b1-42ce-11e5-bc95-175c0429edfd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:177","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    throw new org.apache.commons.codec.DecoderException((((\"Illegal hexadecimal character \" + char) + \" at index \") + int));\n} "},"status":-1},{"failures":[11,12,13,14,15],"tindex":"30779ef2-42ce-11e5-bc95-3bfb2d484867","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:767","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"S\", \"TS\")"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:526","type":"CtIfImpl","sourcecode":"if ((int == 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 4, \"JOSE\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'A');\n} else if ((org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))) && (!boolean)) && ((org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'A') || (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) == 'O'))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', 'H');\n} else if (int == ((java.lang.String.length()) - 1)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J', ' ');\n} else if ((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, org.apache.commons.codec.language.DoubleMetaphone.java.lang.String[]))) && (!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 1), 1, \"S\", \"K\", \"L\")))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n} "},"status":-1},{"failures":[1,2,3,16,5,6,7,17],"tindex":"3077c603-42ce-11e5-bc95-bf19ab2f832c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:149","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"|\")"},"variableMap":{"sb":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.RFC1522Codec:74","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"3077c604-42ce-11e5-bc95-6d1166fa360b","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_384"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[],"tindex":"3077ed15-42ce-11e5-bc95-ff2251c2582a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:68","type":"CtReturnImpl","sourcecode":"return java.security.MessageDigest.getInstance(java.lang.String)"},"variableMap":{"algorithm":"org.apache.commons.codec.digest.MessageDigestAlgorithms.SHA_512"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:160","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getDigest(org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"3077ed16-42ce-11e5-bc95-d7e1a5d2b920","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.SoundexUtils:50","type":"CtAssignmentImpl","sourcecode":"char[][int++] = java.lang.String.charAt(int)"},"status":-1},{"failures":[64,65],"tindex":"30781427-42ce-11e5-bc95-cd651c23528c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:242","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"30781428-42ce-11e5-bc95-5f9da4a64bc9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:284","type":"CtReturnImpl","sourcecode":"return \"ANY_LANGUAGE\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:335","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-1},{"failures":[],"tindex":"30781429-42ce-11e5-bc95-23d875d7c86a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:285","type":"CtAssignmentImpl","sourcecode":"this.byte[] = new byte[byte[].int]"},"status":-2},{"failures":[66,68,81,82,83,72,77,84,79,80],"tindex":"3078895a-42ce-11e5-bc95-bd60fbe4495e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"n","len":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:179","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.regionMatch(java.lang.StringBuilder, int, \"CIA\")) {\n    java.lang.StringBuilder.append('X');\n    break;\n} "},"status":-1},{"failures":[66,67,68,85,86,87,72,88,73,75,77,78],"tindex":"3078895b-42ce-11e5-bc95-35500a977f2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:194","type":"CtIfImpl","sourcecode":"if (((int == 0) && (int >= 3)) && org.apache.commons.codec.language.Metaphone.(isVowel(java.lang.StringBuilder, 2))) {\n    java.lang.StringBuilder.append('K');\n} else {\n    java.lang.StringBuilder.append('X');\n}"},"variableMap":{"wdsz":"n","code":"code","this":"this","n":"n","local":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:293","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIA\")) || org.apache.commons.codec.language.Metaphone.(regionMatch(java.lang.StringBuilder, int, \"TIO\"))) {\n    java.lang.StringBuilder.append('X');\n    break;\n} "},"status":-1},{"failures":[89,90],"tindex":"3078895c-42ce-11e5-bc95-394acf93a7fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.DigestUtils:733","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.sha1Hex(byte[])"},"variableMap":{"data":"data","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:296","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Hex.encodeHexString(org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.md5(byte[]))"},"status":-1},{"failures":[],"tindex":"3078895d-42ce-11e5-bc95-2953e7987bfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:292","type":"CtIfImpl","sourcecode":"if ((java.lang.StringBuilder.length()) > 1) {\n    char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    if (char == 'S') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n        char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1));\n    } \n    if ((java.lang.StringBuilder.length()) > 2) {\n        final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2));\n        if ((char == 'A') && (char == 'Y')) {\n            java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2));\n        } \n    } \n    if (char == 'A') {\n        java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 1));\n    } \n} "},"variableMap":{"key":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:332","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setLength(org.apache.commons.codec.language.Metaphone.getMaxCodeLen())"},"status":0},{"failures":[],"tindex":"3078895e-42ce-11e5-bc95-d93b774dcfce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:293","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 1))"},"status":-2},{"failures":[91,92],"tindex":"3078895f-42ce-11e5-bc95-c706080c8a54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:315","type":"CtAssignmentImpl","sourcecode":"int[][0] = int"},"variableMap":{"left":"c","out":"results"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:356","type":"CtAssignmentImpl","sourcecode":"int = int[][1]"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106],"tindex":"3078b070-42ce-11e5-bc95-19a6303a004e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone2:108","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"w$\", \"3\")"},"variableMap":{"txt":"name2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:226","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(java.lang.String)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}