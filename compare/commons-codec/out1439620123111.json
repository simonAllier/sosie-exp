{"failureDictionary":{"org.apache.commons.codec.language.Caverphone1Test.testCaverphoneRevisitedCommonCodeAT1111":19,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":39,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":35,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testLocaleIndependence":34,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic3":28,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":3,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic2":27,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding":32,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreHyphens":29,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":41,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":15,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSpecialRomanianCharacters":26,"org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1":44,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":42,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic":24,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":13,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":14,"org.apache.commons.codec.net.URLCodecTest.testDecodeObjects":0,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":4,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":12,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":16,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreTrimmable":30,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":2,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":17,"org.apache.commons.codec.digest.CryptTest.testCryptWithBytes":23,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":36,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":9,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":18,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall":37,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":5,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":8,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt":40,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes":25,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":43,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":1,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":7,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":10,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes":31,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall":21,"org.apache.commons.codec.language.Caverphone2Test.testEndMb":11,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":38,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCall":20,"org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty":33,"org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant":22,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":6},"transformations":[{"failures":[0],"tindex":"e0045542-4316-11e5-b5cc-9717cf68bb35","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BinaryCodec:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.fromAscii(((byte[])(java.lang.Object)))"},"variableMap":{"this":"obj","ascii":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:339","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.URLCodec.decode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.DecoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be URL decoded\"));\n}"},"status":-1},{"failures":[],"tindex":"e004a363-4316-11e5-b5cc-9f65a157638f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('@')"},"variableMap":{"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS":"org.apache.commons.codec.net.QCodec.PRINTABLE_CHARS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:93","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.net.QCodec.java.util.BitSet.set('\\\\')"},"status":-2},{"failures":[],"tindex":"e004a364-4316-11e5-b5cc-ed3872fd9aff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Nysiis:130","type":"CtIfImpl","sourcecode":"if (char == 'Q') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else if (char == 'Z') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else if (char == 'M') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} "},"variableMap":{"org.apache.commons.codec.language.Nysiis.CHARS_S":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_G":"org.apache.commons.codec.language.Nysiis.CHARS_NN","org.apache.commons.codec.language.Nysiis.CHARS_N":"org.apache.commons.codec.language.Nysiis.CHARS_NN","curr":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:140","type":"CtIfImpl","sourcecode":"if (char == 'N') {\n    return org.apache.commons.codec.language.Nysiis.char[];\n} else {\n    return org.apache.commons.codec.language.Nysiis.char[];\n}"},"status":-2},{"failures":[1],"tindex":"e004a365-4316-11e5-b5cc-bd55ec373be4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:356","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"b":"hasUnderscores","encodeBlanks":"hasUnderscores"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:176","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"e004a366-4316-11e5-b5cc-b140ac04127b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:183","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9],"tindex":"e004ca77-4316-11e5-b5cc-f733ea22d68f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:308","type":"CtIfImpl","sourcecode":"if (int > int) {\n    break;\n} "},"variableMap":{"i":"blocksize","name2Size":"blocksize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:249","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[], 0, int)"},"status":-1},{"failures":[10],"tindex":"e004ca78-4316-11e5-b5cc-eb7320706891","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:441","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"e004ca79-4316-11e5-b5cc-3148ed45ccbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:191","type":"CtIfImpl","sourcecode":"if ((int >= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) && (int <= (org.apache.commons.codec.language.MatchRatingApproachEncoder.int))) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else if (int == (org.apache.commons.codec.language.MatchRatingApproachEncoder.int)) {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n} else {\n    int = org.apache.commons.codec.language.MatchRatingApproachEncoder.int;\n}"},"variableMap":{"sumLength":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWELVE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.TWO":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.EIGHT":"length","minRating":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ELEVEN":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.THREE":"length","org.apache.commons.codec.language.MatchRatingApproachEncoder.ONE":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:278","type":"CtForImpl","sourcecode":"for (int int = 0, int int = (char[].int) - 1 ; int < (byte[].int) ; int++ , int -= 8) {\n    for (int int = 0 ; int < (org.apache.commons.codec.binary.BinaryCodec.int[].int) ; ++int) {\n        if (((byte[][int]) & (org.apache.commons.codec.binary.BinaryCodec.int[][int])) == 0) {\n            char[][(int - int)] = '0';\n        } else {\n            char[][(int - int)] = '1';\n        }\n    }\n}"},"status":-2},{"failures":[11],"tindex":"e004f18a-4316-11e5-b5cc-af08e555312c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:70","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"e004f18b-4316-11e5-b5cc-6f09e139c40a","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:411","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"A\", org.apache.commons.codec.language.MatchRatingApproachEncoder.java.lang.String)"},"variableMap":{"name":"txt","org.apache.commons.codec.language.MatchRatingApproachEncoder.EMPTY":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:87","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"b\", \"p\")"},"status":1},{"failures":[12,13,14,15,16,17,18],"tindex":"e004f18c-4316-11e5-b5cc-65ca02ac8fc8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodecOutputStream:144","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.codec.binary.BaseNCodec.encode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n} else {\n    org.apache.commons.codec.binary.BaseNCodec.decode(byte[], 0, org.apache.commons.codec.binary.BaseNCodec.int, org.apache.commons.codec.binary.BaseNCodec.Context);\n}"},"status":-1},{"failures":[19],"tindex":"e004f18d-4316-11e5-b5cc-658e82af20bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:80","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"tia\", \"sia\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:104","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^h\", \"A\")"},"status":-1},{"failures":[],"tindex":"e005189e-4316-11e5-b5cc-0bb194a9bfc2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:298","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"status":0},{"failures":[2,3,4,5,20,6,7,8,21,9,22,23],"tindex":"e005189f-4316-11e5-b5cc-0f5ba4fe2cfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:304","type":"CtAssignmentImpl","sourcecode":"this.byte[] = null"},"variableMap":{"lineSeparator":"altResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:260","type":"CtAssignmentImpl","sourcecode":"byte[] = java.security.MessageDigest.digest()"},"status":-1},{"failures":[],"tindex":"e00518a0-4316-11e5-b5cc-8940cc44c4a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:220","type":"CtForImpl","sourcecode":"for (int int = 0 ; (int < (byte[].int)) && (int < (byte[].int)) ; int++) {\n    final int int = byte[][int];\n    byte[][int] = ((byte)(int << 1));\n}"},"variableMap":{"original":"bytes","length":"length","key":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:182","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (byte[].int) ; int++) {\n    final byte byte = byte[][int];\n    if (byte != (org.apache.commons.codec.net.QCodec.byte)) {\n        byte[][int] = byte;\n    } else {\n        byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n    }\n}"},"status":-2},{"failures":[24,25,26,27,28,29,30,31,32,33,34],"tindex":"e00518a1-4316-11e5-b5cc-f3fd4c601cdc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:411","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(2)"},"variableMap":{"input":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:490","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.codec.language.DaitchMokotoffSoundex.cleanup(java.lang.String)"},"status":-1},{"failures":[],"tindex":"e0053fb2-4316-11e5-b5cc-3d93688c96f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:450","type":"CtReturnImpl","sourcecode":"return new java.lang.String(org.apache.commons.codec.net.QuotedPrintableCodec.decode(org.apache.commons.codec.binary.StringUtils.getBytesUsAscii(java.lang.String)) , java.nio.charset.Charset)"},"variableMap":{"str":"str","charset":"charset","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:578","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.StringUtils.newStringUsAscii(org.apache.commons.codec.net.QuotedPrintableCodec.encode(java.lang.String.getBytes(java.nio.charset.Charset)))"},"status":-2},{"failures":[],"tindex":"e0053fb3-4316-11e5-b5cc-377ef11e2e7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:283","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:222","type":"CtLocalVariableImpl","sourcecode":"int int = byte[].int"},"status":-2},{"failures":[35,36,37,38,39,40,41,42,43],"tindex":"e0053fb4-4316-11e5-b5cc-d3ace8fb4afc","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Metaphone:132","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.setCharAt(0, 'W')"},"variableMap":{"local":"passwd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:285","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.digest.B64.b64from24bit(byte[][2], byte[][8], byte[][14], 4, java.lang.StringBuilder)"},"status":-1},{"failures":[44],"tindex":"e0053fb5-4316-11e5-b5cc-813c2f645eab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('S')"},"variableMap":{"code":"code"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Metaphone:266","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}