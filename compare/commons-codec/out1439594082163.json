{"failureDictionary":{"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytes":28,"org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone":36,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt":9,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLocaleIndependence":26,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptBytes":32,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":38,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty":18,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":10,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt":29,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck3":23,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall":8,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck2":22,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrSEPHARDIC":12,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptExplicitCall":30,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testOOM":19,"org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt":1,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSpeedCheck":21,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":39,"org.apache.commons.codec.digest.DigestUtilsTest.testShaHex":7,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testCompatibilityWithOriginalVersion":13,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds":37,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithEmptySalt":2,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":5,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrGENERIC":11,"org.apache.commons.codec.language.bm.PhoneticEngineRegressionTest.testSolrASHKENAZI":14,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput":33,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptStrings":44,"org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt":0,"org.apache.commons.codec.digest.DigestUtilsTest.testSha1Hex":6,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty":25,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty2Letters":20,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":40,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize":43,"org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptStrings":31,"org.apache.commons.codec.language.Caverphone1Test.testEndMb":27,"org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRounds":42,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter":16,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testLongestEnglishSurname":24,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeGna":15,"org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptStrings":34,"org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars":17,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":4,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithHalfSalt":3,"org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_SMITH_to_SMTH":35,"org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes":41},"transformations":[{"failures":[0,1,2,3],"tindex":"3e652d95-42da-11e5-8bfc-e990b1ea1285","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String))"},"status":-1},{"failures":[],"tindex":"3e6554a6-42da-11e5-8bfc-534def34285a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:93","type":"CtAssignmentImpl","sourcecode":"byte[][int] = ((byte)(int & 255))"},"variableMap":{"f":"pos","i":"pos","out":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:454","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = byte"},"status":-2},{"failures":[4,5],"tindex":"3e6554a7-42da-11e5-8bfc-f170edc4821d","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:630","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, int, 2, \"SC\")) {\n    int = org.apache.commons.codec.language.DoubleMetaphone.handleSC(java.lang.String, org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult, int);\n} else {\n    if ((int == ((java.lang.String.length()) - 1)) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AI\", \"OI\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.appendAlternate('S');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    }\n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"S\", \"Z\") ? int + 2 : int + 1;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:415","type":"CtIfImpl","sourcecode":"if (((!org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 2, \"EY\"))) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 1))) != 'Y')) && (!boolean)) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\");\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KN\");\n}"},"status":-1},{"failures":[],"tindex":"3e6554a8-42da-11e5-8bfc-f564892900a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:227","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[9]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:220","type":"CtLocalVariableImpl","sourcecode":"byte[] byte[] = java.security.MessageDigest.digest()"},"status":-2},{"failures":[6,7],"tindex":"3e6554a9-42da-11e5-8bfc-73f560158049","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.Base64.decodeBase64(byte[])"},"variableMap":{"bytes":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.DigestUtils:375","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.DigestUtils.org.apache.commons.codec.digest.DigestUtils.getSha1Digest().digest(byte[])"},"status":-1},{"failures":[0,1,8,9,2,3],"tindex":"3e6554aa-42da-11e5-8bfc-7153982c735b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:199","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    final java.util.Random java.util.Random = new java.util.Random();\n    final int int = org.apache.commons.codec.digest.UnixCrypt.char[].int;\n    java.lang.String = (\"\" + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)])) + (org.apache.commons.codec.digest.UnixCrypt.char[][java.util.Random.nextInt(int)]);\n} else if (!(java.lang.String.matches(((\"^[\" + (org.apache.commons.codec.digest.B64.java.lang.String)) + \"]{2,}$\")))) {\n    throw new java.lang.IllegalArgumentException((\"Invalid salt value: \" + java.lang.String));\n} "},"status":-1},{"failures":[10,4,5],"tindex":"3e6554ab-42da-11e5-8bfc-b391f2ccd61f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:137","type":"CtAssignmentImpl","sourcecode":"int = '+'"},"variableMap":{"b":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:506","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"3e657bbc-42da-11e5-8bfc-71b4399c05d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:260","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if (java.lang.String.endsWith(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)) {\n        boolean = false;\n    } \n    continue;\n} "},"variableMap":{"line":"line","inMultilineComment":"inExtendedComment","org.apache.commons.codec.language.DaitchMokotoffSoundex.MULTILINE_COMMENT_END":"line"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Languages:188","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(org.apache.commons.codec.language.bm.ResourceConstants.java.lang.String)) {\n    boolean = true;\n} else if ((java.lang.String.length()) > 0) {\n    java.util.Set<java.lang.String>.add(java.lang.String);\n} "},"status":-1},{"failures":[27],"tindex":"3e657bbd-42da-11e5-8bfc-f3da91ffab9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:66","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"mb$\", \"m2\")"},"status":-1},{"failures":[],"tindex":"3e657bbe-42da-11e5-8bfc-154405f15363","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:216","type":"CtLocalVariableImpl","sourcecode":"java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:196","type":"CtLocalVariableImpl","sourcecode":"final java.security.MessageDigest java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getMd5Digest()"},"status":-2},{"failures":[],"tindex":"3e657bbf-42da-11e5-8bfc-412da1a1bfd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Soundex:266","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[]{ '0' , '0' , '0' , '0' }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:251","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.Object instanceof java.lang.String ? ((java.lang.String)(java.lang.Object)).toCharArray() : ((char[])(java.lang.Object))"},"status":-2},{"failures":[],"tindex":"3e657bc0-42da-11e5-8bfc-e1564b1a847c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:226","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += int"},"variableMap":{"patternLength":"pos","i":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:405","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[],"tindex":"3e657bc1-42da-11e5-8bfc-6fec20bdee3c","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:75","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"q\", \"k\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:122","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3\", \"\")"},"status":1},{"failures":[],"tindex":"3e657bc2-42da-11e5-8bfc-25cad0e050a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.Utils:47","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"3e65a2d3-42da-11e5-8bfc-85ca33faa6d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:136","type":"CtIfImpl","sourcecode":"if (int == ' ') {\n    int = '+';\n} "},"variableMap":{"b":"inAvail"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:342","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    org.apache.commons.codec.binary.BaseNCodec.Context.boolean = true;\n} "},"status":-2},{"failures":[28,29,30,31,32,33,34],"tindex":"3e65a2d4-42da-11e5-8bfc-e34cfd821ae3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:247","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[]);\n    }\n    int >>= 1;\n}"},"variableMap":{"blocksize":"ii","altResult":"finalb","keyBytes":"finalb","ctx":"ctx","cnt":"ii"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:222","type":"CtWhileImpl","sourcecode":"while (int > 0) {\n    java.security.MessageDigest.update(byte[], 0, (int > 16 ? 16 : int));\n    int -= 16;\n}"},"status":-1},{"failures":[35],"tindex":"3e65a2d5-42da-11e5-8bfc-cb84636cdddd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:81","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"d\", \"t\")"},"variableMap":{"txt":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:132","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.codec.language.MatchRatingApproachEncoder.cleanName(java.lang.String)"},"status":-1},{"failures":[],"tindex":"3e65a2d6-42da-11e5-8bfc-63c406f2aca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Md5Crypt:194","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = java.lang.String.getBytes(org.apache.commons.codec.Charsets.java.nio.charset.Charset)"},"status":-2},{"failures":[10,36,4,5],"tindex":"3e65a2d7-42da-11e5-8bfc-c1381d6812eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:500","type":"CtIfImpl","sourcecode":"if (((int == 0) || org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1))))) && org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int + 1))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('H');\n    int += 2;\n} else {\n    int++;\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:740","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n    int++;\n} else {\n    if (!((int == ((java.lang.String.length()) - 1)) && (org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 3, \"IAU\", \"EAU\")) || org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 2, \"AU\", \"OU\"))))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"KS\");\n    } \n    int = org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 1), 1, \"C\", \"X\") ? int + 2 : int + 1;\n}"},"status":-1},{"failures":[37,38,39,40,41,42,43,44],"tindex":"3e65a2d8-42da-11e5-8bfc-7d7add6ee629","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Md5Crypt:230","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.fill(byte[], ((byte)(0)))"},"variableMap":{"finalb":"keyBytes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:166","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.update(byte[])"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}