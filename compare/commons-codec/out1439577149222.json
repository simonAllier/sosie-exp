{"failureDictionary":{"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone":31,"org.apache.commons.codec.binary.Base32Test.testRandomBytesHex":86,"org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize":10,"org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked":88,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec130":24,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByChunk":23,"org.apache.commons.codec.binary.Base64Test.testTriplets":47,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte":46,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipPastEnd":34,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":99,"org.apache.commons.codec.binary.Base64Codec13Test.testDecoder":40,"org.apache.commons.codec.binary.Base32Test.testRandomBytes":85,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptNullData":14,"org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray":16,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipToEnd":20,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom":62,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean":75,"org.apache.commons.codec.binary.Base32Test.testBase32SamplesNonDefaultPadding":84,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode":80,"org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiBytes":15,"org.apache.commons.codec.binary.Base64Test.testCodeInteger1":56,"org.apache.commons.codec.binary.Base64Test.testKnownDecodings":51,"org.apache.commons.codec.binary.Base64Test.testCodeInteger2":57,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipToEnd":30,"org.apache.commons.codec.binary.Base64Test.testUrlSafe":61,"org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt":9,"org.apache.commons.codec.binary.Base64Test.testCodeInteger3":58,"org.apache.commons.codec.binary.Base64Test.testCodeInteger4":59,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryEncoder":38,"org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig":35,"org.apache.commons.codec.binary.Base64InputStreamTest.testAvailable":25,"org.apache.commons.codec.binary.Base64Test.testIgnoringNonBase64InDecode":65,"org.apache.commons.codec.binary.Base64Test.testTripletsChunked":70,"org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES":8,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2":3,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance3":4,"org.apache.commons.codec.binary.Base64Test.testSingletonsChunked":50,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptBytes":12,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByteByByte":92,"org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable":33,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10EncodeDecode":81,"org.apache.commons.codec.language.RefinedSoundexTest.testDifference":0,"org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak":5,"org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean_UrlSafe":49,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte":29,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncode":44,"org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad":82,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipPastEnd":26,"org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByChunk":36,"org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithValidParameter":77,"org.apache.commons.codec.binary.Base64Codec13Test.testEncoder":37,"org.apache.commons.codec.binary.Base64Test.testKnownEncodings":64,"org.apache.commons.codec.binary.Base64Test.testByteToStringVariations":76,"org.apache.commons.codec.language.NysiisTest.testDropBy":18,"org.apache.commons.codec.binary.Base64Test.testObjectEncode":60,"org.apache.commons.codec.binary.Base64Test.testBase64":74,"org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk":45,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":7,"org.apache.commons.codec.binary.Base64Test.testUUID":53,"org.apache.commons.codec.binary.Base64Test.testDecodeWithWhitespace":63,"org.apache.commons.codec.binary.Base64Test.testSingletons":69,"org.apache.commons.codec.binary.Base64OutputStreamTest.testBase64OutputStreamByChunk":93,"org.apache.commons.codec.binary.Base32Test.testBase32Chunked":90,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecodeChunked":42,"org.apache.commons.codec.binary.Base64Test.testChunkedEncodeMultipleOf76":73,"org.apache.commons.codec.binary.Base64Test.testPairs":52,"org.apache.commons.codec.binary.Base64Codec13Test.testBinaryDecoder":41,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeWithCrLf":78,"org.apache.commons.codec.binary.Base32Test.testBase32HexSamples":89,"org.apache.commons.codec.language.NysiisTest.testRule6":17,"org.apache.commons.codec.binary.Base64Test.testCodec112":66,"org.apache.commons.codec.net.BCodecTest.testDecodeObjects":96,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptWithEmptySalt":11,"org.apache.commons.codec.binary.Base64Test.testStringToByteVariations":48,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked":39,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipBig":27,"org.apache.commons.codec.binary.Base64Test.testCodec68":71,"org.apache.commons.codec.language.RefinedSoundexTest.testEncode":2,"org.apache.commons.codec.binary.Base64InputStreamTest.testBase64InputStreamByteByByte":28,"org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance":1,"org.apache.commons.codec.binary.Base64InputStreamTest.testSkipNone":21,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2":67,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Decode":79,"org.apache.commons.codec.net.BCodecTest.testUTF8RoundTrip":94,"org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex3":68,"org.apache.commons.codec.net.BCodecTest.testEncodeObjects":97,"org.apache.commons.codec.binary.Base32Test.testSingleCharEncoding":87,"org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130":32,"org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE":91,"org.apache.commons.codec.binary.Base32Test.testBase32Samples":83,"org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptStrings":13,"org.apache.commons.codec.binary.Base64Codec13Test.testStaticDecode":43,"org.apache.commons.codec.binary.Base64InputStreamTest.testCodec98NPE":22,"org.apache.commons.codec.language.NysiisTest.testOthers":19,"org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithValidParameter":55,"org.apache.commons.codec.binary.Base64Test.testRfc4648Section10DecodeEncode":72,"org.apache.commons.codec.net.BCodecTest.testBasicEncodeDecode":95,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":6,"org.apache.commons.codec.binary.Base64Test.testEncodeDecodeSmall":54,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":98},"transformations":[{"failures":[],"tindex":"d1936e3a-42b2-11e5-ad42-63e1893b81c2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:388","type":"CtIfImpl","sourcecode":"if ((char == 'M') || (char == 'N')) {\n    char = '6';\n} else {\n    char = char;\n}"},"status":-2},{"failures":[],"tindex":"d1936e3b-42b2-11e5-ad42-63531ceb7f60","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Hex:81","type":"CtIfImpl","sourcecode":"if ((int & 1) != 0) {\n    throw new org.apache.commons.codec.DecoderException(\"Odd number of characters.\");\n} "},"variableMap":{"len":"maxResultSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:670","type":"CtIfImpl","sourcecode":"if (long > int) {\n    throw new java.lang.IllegalArgumentException((((\"Input array too big, the output array would be bigger (\" + long) + \") than the specified maximum size of \") + int));\n} "},"status":-2},{"failures":[],"tindex":"d193954c-42b2-11e5-ad42-47bb7e7a27f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.ColognePhonetic:438","type":"CtBreakImpl","sourcecode":"break"},"status":0},{"failures":[],"tindex":"d193954d-42b2-11e5-ad42-5d5ddd15f771","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:463","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.substring(1)"},"variableMap":{"result":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:203","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"d193954e-42b2-11e5-ad42-1d17bd5e8c9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:271","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.indexOf(org.apache.commons.codec.language.DaitchMokotoffSoundex.java.lang.String)"},"status":-2},{"failures":[0,1,2,3,4],"tindex":"d193954f-42b2-11e5-ad42-619ae0eb40c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Metaphone:180","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('X')"},"variableMap":{"code":"sBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.RefinedSoundex:185","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String.charAt(0))"},"status":-1},{"failures":[5],"tindex":"d1939550-42b2-11e5-ad42-61a85ae8a915","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:313","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(org.apache.commons.codec.net.QuotedPrintableCodec.byte)"},"status":-1},{"failures":[6,7,8],"tindex":"d1939551-42b2-11e5-ad42-5943838c74ed","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:665","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.language.DoubleMetaphone.org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int + 2), 1, \"I\", \"E\", \"Y\")) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('S');\n} else {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"SK\");\n}"},"variableMap":{"result":"result","this":"this","index":"index","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:467","type":"CtIfImpl","sourcecode":"if ((int > 0) && (!org.apache.commons.codec.language.DoubleMetaphone.(isVowel(org.apache.commons.codec.language.DoubleMetaphone.charAt(java.lang.String, (int - 1)))))) {\n    org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    int += 2;\n} else if (int == 0) {\n    if (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int + 2))) == 'I') {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('J');\n    } else {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    }\n    int += 2;\n} else if ((((int > 1) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 2), 1, \"B\", \"H\", \"D\"))) || ((int > 2) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"B\", \"H\", \"D\")))) || ((int > 3) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 4), 1, \"B\", \"H\")))) {\n    int += 2;\n} else {\n    if (((int > 2) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) == 'U')) && org.apache.commons.codec.language.DoubleMetaphone.(org.apache.commons.codec.language.DoubleMetaphone.contains(java.lang.String, (int - 3), 1, \"C\", \"G\", \"L\", \"R\", \"T\"))) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('F');\n    } else if ((int > 0) && (org.apache.commons.codec.language.DoubleMetaphone.(charAt(java.lang.String, (int - 1))) != 'I')) {\n        org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K');\n    } \n    int += 2;\n}"},"status":-1},{"failures":[],"tindex":"d193bc62-42b2-11e5-ad42-0172c100e1a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.bm.Rule:398","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.language.bm.Rule.org.apache.commons.codec.language.bm.Rule.parsePhoneme(java.lang.String)"},"status":-2},{"failures":[9,10,11,12,13,14],"tindex":"d193bc63-42b2-11e5-ad42-390161aa42c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:165","type":"CtReturnImpl","sourcecode":"return java.lang.String + java.lang.String"},"variableMap":{"firstThree":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX","lastThree":"org.apache.commons.codec.digest.Sha2Crypt.SHA512_PREFIX"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:543","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.digest.Sha2Crypt.org.apache.commons.codec.digest.Sha2Crypt.sha2Crypt(byte[], java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.java.lang.String, org.apache.commons.codec.digest.Sha2Crypt.int, org.apache.commons.codec.digest.MessageDigestAlgorithms.java.lang.String)"},"status":-1},{"failures":[6,7,8],"tindex":"d193bc64-42b2-11e5-ad42-7d4a83c64acc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.DoubleMetaphone:271","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('A')"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:417","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append(\"N\", \"KN\")"},"status":-1},{"failures":[15,16],"tindex":"d193bc65-42b2-11e5-ad42-4b25764215ac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:101","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"bytes":"org.apache.commons.codec.binary.BinaryCodec.EMPTY_BYTE_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BinaryCodec:239","type":"CtIfImpl","sourcecode":"if (org.apache.commons.codec.binary.BinaryCodec.org.apache.commons.codec.binary.BinaryCodec.isEmpty(byte[])) {\n    return org.apache.commons.codec.binary.BinaryCodec.byte[];\n} "},"status":-1},{"failures":[17,18,19],"tindex":"d193bc66-42b2-11e5-ad42-1f0de6a0e98f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:305","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.deleteCharAt(((java.lang.StringBuilder.length()) - 2))"},"status":-1},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"d193bc67-42b2-11e5-ad42-ab4e3338323b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:102","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.BaseNCodec:272","type":"CtReturnImpl","sourcecode":"return org.apache.commons.codec.binary.BaseNCodec.Context.byte[]"},"status":-1},{"failures":[],"tindex":"d193e378-42b2-11e5-ad42-974b6b94b4d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.BCodec:200","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.BCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be encoded using BCodec\"));\n}"},"variableMap":{"this":"obj","value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:506","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.String) {\n    return org.apache.commons.codec.net.QuotedPrintableCodec.encode(((java.lang.String)(java.lang.Object)));\n} else {\n    throw new org.apache.commons.codec.EncoderException(((\"Objects of type \" + (java.lang.Object.getClass().getName())) + \" cannot be quoted-printable encoded\"));\n}"},"status":-2},{"failures":[98,99],"tindex":"d193e379-42b2-11e5-ad42-7fc70f829205","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.Sha2Crypt:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"blocksize":"s","cp":"s"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:377","type":"CtAssignmentImpl","sourcecode":"int = (int << 4) | (int >>> 28)"},"status":-1},{"failures":[6,7,8],"tindex":"d193e37a-42b2-11e5-ad42-c1463f05555d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:557","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"d193e37b-42b2-11e5-ad42-9f61ec4237df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.QCodec:173","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QuotedPrintableCodec:306","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = (!(java.util.BitSet.get(int))) || (org.apache.commons.codec.net.QuotedPrintableCodec.(org.apache.commons.codec.net.QuotedPrintableCodec.isWhitespace(int)) && (int > ((org.apache.commons.codec.net.QuotedPrintableCodec.int) - 5)))"},"status":-2}],"header":{"groupId":"commons-codec","transformationCount":18,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}