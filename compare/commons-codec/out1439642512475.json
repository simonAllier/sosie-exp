{"failureDictionary":{"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreApostrophes":11,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameTTA1111111":23,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer1":2,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomNameKLN1111111":24,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer2":3,"org.apache.commons.codec.language.SoundexTest.testMsSqlServer3":4,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch4":8,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch2":6,"org.apache.commons.codec.language.SoundexTest.testEncodeBatch3":7,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreHyphens":9,"org.apache.commons.codec.language.SoundexTest.testEncodeIgnoreTrimmable":10,"org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute":15,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes":31,"org.apache.commons.codec.language.SoundexTest.testUsEnglishStatic":1,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate":28,"org.apache.commons.codec.language.SoundexTest.testBadCharacters":0,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords":25,"org.apache.commons.codec.language.SoundexTest.testB650":5,"org.apache.commons.codec.language.Caverphone2Test.testSpecificationExamples":26,"org.apache.commons.codec.language.SoundexTest.testNewInstance":13,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx1":19,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx3":21,"org.apache.commons.codec.language.SoundexTest.testHWRuleEx2":20,"org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks":22,"org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedExamples":29,"org.apache.commons.codec.language.SoundexTest.testDifference":12,"org.apache.commons.codec.language.SoundexTest.testEncodeBasic":14,"org.apache.commons.codec.language.SoundexTest.testUsMappingOWithDiaeresis":18,"org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary":27,"org.apache.commons.codec.language.SoundexTest.testNewInstance2":16,"org.apache.commons.codec.language.SoundexTest.testNewInstance3":17,"org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings":30},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"011c543e-434b-11e5-945a-e9b9edace238","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.Languages:244","type":"CtReturnImpl","sourcecode":"return \"NO_LANGUAGES\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Soundex:281","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[])"},"status":-1},{"failures":[],"tindex":"011c7b4f-434b-11e5-945a-95dc55edf770","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Nysiis:302","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.StringBuilder.charAt(((java.lang.StringBuilder.length()) - 2))"},"status":-2},{"failures":[],"tindex":"011c7b50-434b-11e5-945a-43e8f061b9ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base32:505","type":"CtOperatorAssignmentImpl","sourcecode":"int += 256"},"variableMap":{"b":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:483","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.codec.binary.BaseNCodec.Context.int)++"},"status":-2},{"failures":[22],"tindex":"011c7b51-434b-11e5-945a-054bc09cd686","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.QCodec:160","type":"CtIfImpl","sourcecode":"if ((byte[][int]) == (org.apache.commons.codec.net.QCodec.byte)) {\n    byte[][int] = org.apache.commons.codec.net.QCodec.byte;\n} "},"status":-1},{"failures":[],"tindex":"011c7b52-434b-11e5-945a-53125bf61383","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:85","type":"CtLocalVariableImpl","sourcecode":"final byte[] byte[] = new byte[int >> 1]"},"status":-2},{"failures":[23,24,25,26],"tindex":"011c7b53-434b-11e5-945a-bb9690b860bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:111","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"l\", \"2\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:74","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ci\", \"si\")"},"status":-1},{"failures":[],"tindex":"011c7b54-434b-11e5-945a-1951fdcbc864","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:400","type":"CtAssignmentImpl","sourcecode":"byte[][int++] = ((byte)((int >>> 8) & 255))"},"variableMap":{"b":"buffer","offset":"pos","iValue":"org.apache.commons.codec.binary.BaseNCodec.MASK_8BITS"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base32:360","type":"CtAssignmentImpl","sourcecode":"byte[][(org.apache.commons.codec.binary.BaseNCodec.Context.int)++] = ((byte)(((org.apache.commons.codec.binary.BaseNCodec.Context.long) >> 32) & (org.apache.commons.codec.binary.BaseNCodec.int)))"},"status":-2},{"failures":[],"tindex":"011ca265-434b-11e5-945a-ade0e7c3ce33","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"org.apache.commons.codec.digest.HmacUtils.STREAM_BUFFER_LENGTH","len":"read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.HmacUtils:769","type":"CtWhileImpl","sourcecode":"while (int > (-1)) {\n    javax.crypto.Mac.update(byte[], 0, int);\n    int = java.io.InputStream.read(byte[], 0, org.apache.commons.codec.digest.HmacUtils.int);\n}"},"status":-2},{"failures":[],"tindex":"011ca266-434b-11e5-945a-3dc66a3c9f3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:90","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"gh\", \"22\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone1:60","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"^rough\", \"rou2f\")"},"status":1},{"failures":[],"tindex":"011ca267-434b-11e5-945a-5d4432717c62","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.URLCodec:169","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.write(' ')"},"variableMap":{"buffer":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:203","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.lang.String)) {\n    throw new org.apache.commons.codec.EncoderException(\"DoubleMetaphone encode parameter is not of type String\");\n} "},"status":-2},{"failures":[],"tindex":"011ca268-434b-11e5-945a-f72bb2d51aa3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.MatchRatingApproachEncoder:111","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.codec.EncoderException(\"Parameter supplied to Match Rating Approach encoder is not of type java.lang.String\")"},"status":0},{"failures":[],"tindex":"011ca269-434b-11e5-945a-1773d9613f67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.net.URLCodec:142","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.Character.toUpperCase(java.lang.Character.forDigit(((int >> 4) & 15), org.apache.commons.codec.net.URLCodec.int))"},"status":-2},{"failures":[27,28],"tindex":"011ca26a-434b-11e5-945a-8f23108aff66","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DoubleMetaphone:361","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.language.DoubleMetaphone.DoubleMetaphoneResult.append('K')"},"status":-1},{"failures":[],"tindex":"011cc97b-434b-11e5-945a-37775c6d8301","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:502","type":"CtInvocationImpl","sourcecode":"java.security.MessageDigest.reset()"},"status":0},{"failures":[],"tindex":"011cc97c-434b-11e5-945a-f91f9ed7db25","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.bm.PhoneticEngine:419","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = java.lang.String.substring(((java.lang.String.length()) + 1))"},"variableMap":{"input":"rawLine","l":"rawLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.DaitchMokotoffSoundex:258","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = java.lang.String"},"status":-2},{"failures":[],"tindex":"011cc97d-434b-11e5-945a-e93078ab7c48","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.Base64:242","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, byte[], false)"},"variableMap":{"this":"this","lineSeparator":"org.apache.commons.codec.binary.Base64.CHUNK_SEPARATOR","lineLength":"lineLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Base64:215","type":"CtInvocationImpl","sourcecode":"org.apache.commons.codec.binary.Base64.this(int, org.apache.commons.codec.binary.Base64.byte[])"},"status":0},{"failures":[],"tindex":"011cc97e-434b-11e5-945a-e7e4678a6845","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.net.RFC1522Codec:144","type":"CtIfImpl","sourcecode":"if (int == int) {\n    throw new org.apache.commons.codec.DecoderException(\"RFC 1522 violation: encoding token not found\");\n} "},"variableMap":{"terminator":"blocksize","to":"keyLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.Sha2Crypt:356","type":"CtForImpl","sourcecode":"for (int int = 0 ; int <= (int - 1) ; int++) {\n    java.security.MessageDigest = org.apache.commons.codec.digest.DigestUtils.getDigest(java.lang.String);\n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    if ((int % 3) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int % 7) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } \n    if ((int & 1) != 0) {\n        java.security.MessageDigest.update(byte[], 0, int);\n    } else {\n        java.security.MessageDigest.update(byte[], 0, int);\n    }\n    byte[] = java.security.MessageDigest.digest();\n}"},"status":-2},{"failures":[],"tindex":"011cc97f-434b-11e5-945a-fdb8a3fde36c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.binary.BaseNCodecInputStream:203","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.codec.binary.BaseNCodec.int)) {\n    break;\n} "},"variableMap":{"org.apache.commons.codec.binary.BaseNCodec.EOF":"l","len":"l"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.binary.Hex:144","type":"CtForImpl","sourcecode":"for (int int = 0, int int = 0 ; int < int ; int++) {\n    char[][int++] = char[][((240 & (byte[][int])) >>> 4)];\n    char[][int++] = char[][(15 & (byte[][int]))];\n}"},"status":-2},{"failures":[23,29,25,26],"tindex":"011cc980-434b-11e5-945a-2551563ada0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.codec.language.Caverphone1:71","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"ce\", \"se\")"},"variableMap":{"txt":"txt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.language.Caverphone2:121","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.replaceAll(\"3$\", \"A\")"},"status":-1},{"failures":[30,31],"tindex":"011cc981-434b-11e5-945a-f325d11fde15","series":0,"name":"add","transplant":{"position":"org.apache.commons.codec.digest.UnixCrypt:394","type":"CtAssignmentImpl","sourcecode":"int = (int ^ int) ^ (int >>> (16 - int))"},"variableMap":{"a":"c","t":"c","n":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.codec.digest.UnixCrypt:357","type":"CtAssignmentImpl","sourcecode":"int = ((((int & 255) << 16) | (int & 65280)) | ((int & 16711680) >>> 16)) | ((int & -268435456) >>> 4)"},"status":-1}],"header":{"groupId":"commons-codec","transformationCount":20,"projectType":"maven","artifactId":"commons-codec","generatorVersion":"1.0","version":"1.10"}}