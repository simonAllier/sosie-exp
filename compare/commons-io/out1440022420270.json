{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"8bcd668f-46bf-11e5-a41c-93e2459ba49f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.Tailer:260","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.start()"},"variableMap":{"thread":"reaper"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileCleaningTracker:193","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.interrupt()"},"status":-1},{"failures":[],"tindex":"8bcd8da0-46bf-11e5-a41c-c793c25a696d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:336","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.monitor.FileEntry[][int] = org.apache.commons.io.monitor.FileEntry"},"status":-1},{"failures":[],"tindex":"8bcd8da1-46bf-11e5-a41c-09cd9f9746f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:296","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.io.input.ClosedInputStream()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:1152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.toInputStream(java.lang.CharSequence, java.nio.charset.Charset.defaultCharset())"},"status":-1},{"failures":[],"tindex":"8bcd8da2-46bf-11e5-a41c-9bb19fb3300f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:657","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.indexOf(\";\")"},"variableMap":{"httpContentType":"filename"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:626","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"status":-1},{"failures":[],"tindex":"8bcd8da3-46bf-11e5-a41c-791a43a1aad1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.StringBuilderWriter:138","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[], int, int)"},"variableMap":{"offset":"j","builder":"_lbuffer","length":"j","value":"org.apache.commons.io.HexDump._hexcodes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.HexDump:141","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.io.HexDump.char[][(((int)((long >> (org.apache.commons.io.HexDump.int[][int])))) & 15)])"},"status":-1},{"failures":[],"tindex":"8bcd8da4-46bf-11e5-a41c-db406a9b5c50","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:478","type":"CtIfImpl","sourcecode":"if ((java.lang.String != null) && (java.lang.String.startsWith(\"text/html\"))) {\n    java.lang.String = java.lang.String.substring(\"text/html\".length());\n    java.lang.String = \"text/xml\" + java.lang.String;\n    try {\n        return org.apache.commons.io.input.XmlStreamReader.calculateHttpEncoding(java.lang.String, org.apache.commons.io.input.XmlStreamReaderException.getBomEncoding(), org.apache.commons.io.input.XmlStreamReaderException.getXmlGuessEncoding(), org.apache.commons.io.input.XmlStreamReaderException.getXmlEncoding(), true);\n    } catch (org.apache.commons.io.input.XmlStreamReaderException ex2) {\n        org.apache.commons.io.input.XmlStreamReaderException = org.apache.commons.io.input.XmlStreamReaderException;\n    }\n} "},"variableMap":{"ex":"ex","this":"this","httpContentType":"bomEnc","ex2":"ex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.XmlStreamReader:428","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.io.input.XmlStreamReader.calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String);\n} catch (org.apache.commons.io.input.XmlStreamReaderException ex) {\n    if (boolean) {\n        return org.apache.commons.io.input.XmlStreamReader.doLenientDetection(null, org.apache.commons.io.input.XmlStreamReaderException);\n    } else {\n        throw org.apache.commons.io.input.XmlStreamReaderException;\n    }\n}"},"status":-2},{"failures":[],"tindex":"8bcdb4b5-46bf-11e5-a41c-7fc6eb0c5963","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:256","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:492","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"8bcdb4b6-46bf-11e5-a41c-d9dc1a4db90b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.BOMInputStream:145","type":"CtIfImpl","sourcecode":"if (int > int) {\n    return 1;\n} "},"variableMap":{"len1":"len","len2":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:627","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return 0;\n} "},"status":-1},{"failures":[],"tindex":"8bcdb4b7-46bf-11e5-a41c-974dbb06d438","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:1373","type":"CtIfImpl","sourcecode":"if (java.io.File.getCanonicalPath().equals(java.io.File.getCanonicalPath())) {\n    throw new java.io.IOException(((((\"Source \\'\" + java.io.File) + \"\\' and destination \\'\") + java.io.File) + \"\\' are the same\"));\n} "},"variableMap":{"srcDir":"outputFile","destDir":"outputFile"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.DeferredFileOutputStream:175","type":"CtIfImpl","sourcecode":"if ((java.lang.String) != null) {\n    java.io.File = java.io.File.createTempFile(java.lang.String, java.lang.String, java.io.File);\n} "},"status":-1},{"failures":[],"tindex":"8bcdb4b8-46bf-11e5-a41c-596d2103dbc4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1488","type":"CtInvocationImpl","sourcecode":"java.net.URLConnection.setReadTimeout(int)"},"status":0},{"failures":[],"tindex":"8bcdb4b9-46bf-11e5-a41c-057aebeaf49b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:2596","type":"CtIfImpl","sourcecode":"if (java.io.File == null) {\n    throw new java.lang.IllegalArgumentException(\"No specified file\");\n} "},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.Tailer:338","type":"CtTryImpl","sourcecode":"try {\n    long long = 0;\n    long long = 0;\n    while ((boolean) && (java.io.RandomAccessFile == null)) {\n        try {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n        } catch (java.io.FileNotFoundException e) {\n            org.apache.commons.io.input.TailerListener.fileNotFound();\n        }\n        if (java.io.RandomAccessFile == null) {\n            try {\n                java.lang.Thread.sleep(long);\n            } catch (java.lang.InterruptedException e) {\n            }\n        } else {\n            long = boolean ? java.io.File.length() : 0;\n            long = java.lang.System.currentTimeMillis();\n            java.io.RandomAccessFile.seek(long);\n        }\n    }\n    while (boolean) {\n        boolean boolean = org.apache.commons.io.FileUtils.isFileNewer(java.io.File, long);\n        long long = java.io.File.length();\n        if (long < long) {\n            org.apache.commons.io.input.TailerListener.fileRotated();\n            try {\n                java.io.RandomAccessFile java.io.RandomAccessFile = java.io.RandomAccessFile;\n                java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n                long = 0;\n                org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n            } catch (java.io.FileNotFoundException e) {\n                org.apache.commons.io.input.TailerListener.fileNotFound();\n            }\n            continue;\n        } else {\n            if (long > long) {\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } else if (boolean) {\n                long = 0;\n                java.io.RandomAccessFile.seek(long);\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } \n        }\n        if (boolean) {\n            org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n        } \n        try {\n            java.lang.Thread.sleep(long);\n        } catch (java.lang.InterruptedException e) {\n        }\n        if ((boolean) && (boolean)) {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n            java.io.RandomAccessFile.seek(long);\n        } \n    }\n} catch (java.lang.Exception e) {\n    org.apache.commons.io.input.TailerListener.handle(java.lang.Exception);\n} finally {\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n}"},"status":-2},{"failures":[],"tindex":"8bcddbca-46bf-11e5-a41c-c74b22c8be9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:2294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File)"},"variableMap":{"file":"directory","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2503","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.checkDirectory(java.io.File)"},"status":-2},{"failures":[],"tindex":"8bcddbcb-46bf-11e5-a41c-417e11521ff8","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.ReaderInputStream:224","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Byte array must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.NameFileFilter:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of names must not be null\")"},"status":-2},{"failures":[],"tindex":"8bcddbcc-46bf-11e5-a41c-37b3fb21188b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:216","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceKb(-1)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:171","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.FileSystemUtils.org.apache.commons.io.FileSystemUtils.freeSpaceKb(java.lang.String, -1)"},"status":1},{"failures":[],"tindex":"8bcddbcd-46bf-11e5-a41c-59e3e679fd3f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:121","type":"CtInvocationImpl","sourcecode":"java.io.PrintWriter.close()"},"status":0},{"failures":[],"tindex":"8bcddbce-46bf-11e5-a41c-6dc0c94a4ff7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:256","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:2000","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8bcddbcf-46bf-11e5-a41c-e7d285a5509c","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:169","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2213","type":"CtInvocationImpl","sourcecode":"java.io.FileOutputStream.close()"},"status":-1},{"failures":[],"tindex":"8bce02e0-46bf-11e5-a41c-2ba4324e4eaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:2409","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.io.IOUtils.int) == int) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"8bce02e1-46bf-11e5-a41c-d12df9e36e19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:489","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"variableMap":{"basePath":"filename"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:352","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"8bce02e2-46bf-11e5-a41c-e1896e5ed6a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.filefilter.WildcardFilter:114","type":"CtIfImpl","sourcecode":"if (org.apache.commons.io.FilenameUtils.wildcardMatch(java.lang.String, java.lang.String)) {\n    return true;\n} "},"variableMap":{"name":"name","wildcard":"name"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.NameFileFilter:145","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : this.java.lang.String[]) {\n    if (org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)) {\n        return true;\n    } \n}"},"status":-1}],"header":{"groupId":"commons-io","transformationCount":20,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"},"diffs":[{"transformation":"8bcddbcc-46bf-11e5-a41c-37b3fb21188b","diffs":[{"nodes":{"org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String":["org.apache.commons.io.FileSystemUtils.long freeSpaceKb(long)"]},"edges":{"org.apache.commons.io.FileSystemUtilsTestCase.testGetFreeSpace_String":["org.apache.commons.io.FileSystemUtils.long freeSpaceKb(java.lang.String) -> org.apache.commons.io.FileSystemUtils.long freeSpaceKb(long)","org.apache.commons.io.FileSystemUtils.long freeSpaceKb(long) -> org.apache.commons.io.FileSystemUtils.long freeSpaceKb(java.lang.String,long)","org.apache.commons.io.FileSystemUtils.long freeSpaceKb(java.lang.String) -> org.apache.commons.io.FileSystemUtils.long freeSpaceKb(java.lang.String,long)"]},"type":"graph"}]}]}