{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"539b66af-46bb-11e5-a0d3-e5e2193b16b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileCleaningTracker:164","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.String>"},"variableMap":{"deleteFailures":"lines"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:478","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread java.lang.Thread = org.apache.commons.io.ThreadMonitor.start(long);\n    java.lang.Process = org.apache.commons.io.FileSystemUtils.openProcess(java.lang.String[]);\n    java.io.InputStream = java.lang.Process.getInputStream();\n    java.io.OutputStream = java.lang.Process.getOutputStream();\n    java.io.InputStream = java.lang.Process.getErrorStream();\n    java.io.BufferedReader = new java.io.BufferedReader(new java.io.InputStreamReader(java.io.InputStream));\n    java.lang.String java.lang.String = java.io.BufferedReader.readLine();\n    while ((java.lang.String != null) && ((java.util.List<java.lang.String>.size()) < int)) {\n        java.lang.String = java.lang.String.toLowerCase(java.util.Locale.java.util.Locale).trim();\n        java.util.List<java.lang.String>.add(java.lang.String);\n        java.lang.String = java.io.BufferedReader.readLine();\n    }\n    java.lang.Process.waitFor();\n    org.apache.commons.io.ThreadMonitor.stop(java.lang.Thread);\n    if ((java.lang.Process.exitValue()) != 0) {\n        throw new java.io.IOException((((\"Command line returned OS error code \\'\" + (java.lang.Process.exitValue())) + \"\\' for command \") + (java.util.Arrays.asList(java.lang.String[]))));\n    } \n    if (java.util.List<java.lang.String>.isEmpty()) {\n        throw new java.io.IOException(((\"Command line did not return any info \" + \"for command \") + (java.util.Arrays.asList(java.lang.String[]))));\n    } \n    return java.util.List<java.lang.String>;\n} catch (java.lang.InterruptedException ex) {\n    throw new org.apache.commons.io.IOExceptionWithCause(((((\"Command line threw an InterruptedException \" + \"for command \") + (java.util.Arrays.asList(java.lang.String[]))) + \" timeout=\") + long) , java.lang.InterruptedException);\n} finally {\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream);\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.OutputStream);\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.InputStream);\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.BufferedReader);\n    if (java.lang.Process != null) {\n        java.lang.Process.destroy();\n    } \n}"},"status":-1},{"failures":[],"tindex":"539b8dc0-46bb-11e5-a0d3-41d15c795fbe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:76","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:712","type":"CtReturnImpl","sourcecode":"return -1"},"status":-1},{"failures":[],"tindex":"539b8dc1-46bb-11e5-a0d3-4b8580397b54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:230","type":"CtIfImpl","sourcecode":"if ((int) > (-1)) {\n    throw new java.lang.IllegalStateException(((\"Current currentLastCharPos unexpectedly positive... \" + \"last readLine() should have returned something! currentLastCharPos=\") + (int)));\n} "},"variableMap":{"currentLastBytePos":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:95","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    break;\n} "},"status":-1},{"failures":[],"tindex":"539b8dc2-46bb-11e5-a0d3-7737c525437c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:713","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:715","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.indexOfLastSeparator(java.lang.String)"},"status":-2},{"failures":[],"tindex":"539b8dc3-46bb-11e5-a0d3-8decb1d4f46b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1687","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:171","type":"CtForEachImpl","sourcecode":"for (org.apache.commons.io.monitor.FileAlterationObserver org.apache.commons.io.monitor.FileAlterationObserver : java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>) {\n    org.apache.commons.io.monitor.FileAlterationObserver.destroy();\n}"},"status":0},{"failures":[],"tindex":"539b8dc4-46bb-11e5-a0d3-511dfbddf948","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:2745","type":"CtThrowImpl","sourcecode":"throw new java.io.IOException(((\"Source \\'\" + java.io.File) + \"\\' is not a directory\"))"},"variableMap":{"srcDir":"directory"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2535","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.io.File + \" is not a directory\"))"},"status":-2},{"failures":[],"tindex":"539b8dc5-46bb-11e5-a0d3-13b33000cbcb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.filefilter.AndFileFilter:118","type":"CtIfImpl","sourcecode":"if (this.java.util.List<org.apache.commons.io.filefilter.IOFileFilter>.isEmpty()) {\n    return false;\n} "},"variableMap":{"fileFilters":"fileFilters"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.AndFileFilter:121","type":"CtForEachImpl","sourcecode":"for (org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter : java.util.List<org.apache.commons.io.filefilter.IOFileFilter>) {\n    if (!(org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"539bb4d6-46bb-11e5-a0d3-25d587a95169","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:648","type":"CtReturnImpl","sourcecode":"return (java.lang.Math.min(int, int)) + 1"},"variableMap":{"posWin":"b","posUnix":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.BOMInputStream:314","type":"CtReturnImpl","sourcecode":"return int >= 0 ? int : java.io.InputStream.read()"},"status":-1},{"failures":[],"tindex":"539bb4d7-46bb-11e5-a0d3-5ffba854d6ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:169","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.XmlStreamReader:629","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    java.lang.String java.lang.String = java.text.MessageFormat.format(org.apache.commons.io.input.XmlStreamReader.java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String);\n    throw new org.apache.commons.io.input.XmlStreamReaderException(java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String , java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"539bb4d8-46bb-11e5-a0d3-43252b4f31c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:92","type":"CtIfImpl","sourcecode":"if (((java.lang.String.indexOf(\"hp-ux\")) != (-1)) || ((java.lang.String.indexOf(\"aix\")) != (-1))) {\n    int = org.apache.commons.io.FileSystemUtils.int;\n} else {\n    int = org.apache.commons.io.FileSystemUtils.int;\n}"},"variableMap":{"org.apache.commons.io.FileSystemUtils.OTHER":"org.apache.commons.io.input.XmlStreamReader.BUFFER_SIZE","os":"org.apache.commons.io.input.XmlStreamReader.BUFFER_SIZE","org.apache.commons.io.FileSystemUtils.POSIX_UNIX":"org.apache.commons.io.input.XmlStreamReader.BUFFER_SIZE","osName":"guessedEnc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.XmlStreamReader:707","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    byte[] byte[] = new byte[org.apache.commons.io.input.XmlStreamReader.int];\n    java.io.InputStream.mark(org.apache.commons.io.input.XmlStreamReader.int);\n    int int = 0;\n    int int = org.apache.commons.io.input.XmlStreamReader.int;\n    int int = java.io.InputStream.read(byte[], int, int);\n    int int = -1;\n    java.lang.String java.lang.String = null;\n    while (((int != (-1)) && (int == (-1))) && (int < (org.apache.commons.io.input.XmlStreamReader.int))) {\n        int += int;\n        int -= int;\n        int = java.io.InputStream.read(byte[], int, int);\n        java.lang.String = new java.lang.String(byte[] , 0 , int , java.lang.String);\n        int = java.lang.String.indexOf('>');\n    }\n    if (int == (-1)) {\n        if (int == (-1)) {\n            throw new java.io.IOException(\"Unexpected end of XML stream\");\n        } else {\n            throw new java.io.IOException(((\"XML prolog or ROOT element not found on first \" + int) + \" bytes\"));\n        }\n    } \n    int int = int;\n    if (int > 0) {\n        java.io.InputStream.reset();\n        java.io.BufferedReader java.io.BufferedReader = new java.io.BufferedReader(new java.io.StringReader(java.lang.String.substring(0, (int + 1))));\n        java.lang.StringBuffer java.lang.StringBuffer = new java.lang.StringBuffer();\n        java.lang.String java.lang.String = java.io.BufferedReader.readLine();\n        while (java.lang.String != null) {\n            java.lang.StringBuffer.append(java.lang.String);\n            java.lang.String = java.io.BufferedReader.readLine();\n        }\n        java.util.regex.Matcher java.util.regex.Matcher = org.apache.commons.io.input.XmlStreamReader.java.util.regex.Pattern.matcher(java.lang.StringBuffer);\n        if (java.util.regex.Matcher.find()) {\n            java.lang.String = java.util.regex.Matcher.group(1).toUpperCase();\n            java.lang.String = java.lang.String.substring(1, ((java.lang.String.length()) - 1));\n        } \n    } \n} "},"status":-2},{"failures":[],"tindex":"539bb4d9-46bb-11e5-a0d3-cb26f6b54e54","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.ProxyInputStream:166","type":"CtTryImpl","sourcecode":"try {\n    java.io.InputStream.reset();\n} catch (java.io.IOException e) {\n    org.apache.commons.io.input.ProxyInputStream.handleIOException(java.io.IOException);\n}"},"status":-1},{"failures":[],"tindex":"539bb4da-46bb-11e5-a0d3-a349c9768088","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:686","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.filefilter.TrueFileFilter.org.apache.commons.io.filefilter.IOFileFilter"},"variableMap":{"filter":"filter","org.apache.commons.io.filefilter.TrueFileFilter.INSTANCE":"filter"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:689","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.filefilter.IOFileFilter = new org.apache.commons.io.filefilter.SuffixFileFilter(java.lang.String[])"},"status":0},{"failures":[],"tindex":"539bdbeb-46bb-11e5-a0d3-f1e442f6193d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.HexDump:91","type":"CtAssignmentImpl","sourcecode":"int = 16"},"variableMap":{"chars_read":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:374","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"539bdbec-46bb-11e5-a0d3-bd1d7c4e06bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1640","type":"CtIfImpl","sourcecode":"if (!(java.io.File.isDirectory())) {\n    java.lang.String java.lang.String = java.io.File + \" is not a directory\";\n    throw new java.lang.IllegalArgumentException(java.lang.String);\n} "},"variableMap":{"directory":"destDir"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2787","type":"CtIfImpl","sourcecode":"if (!(java.io.File.exists())) {\n    throw new java.io.FileNotFoundException(((((\"Destination directory \\'\" + java.io.File) + \"\\' does not exist [createDestDir=\") + boolean) + \"]\"));\n} "},"status":-1},{"failures":[],"tindex":"539bdbed-46bb-11e5-a0d3-2b4547b11444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:257","type":"CtReturnImpl","sourcecode":"return java.lang.System.getProperty(\"user.home\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:755","type":"CtReturnImpl","sourcecode":"return null"},"status":-1},{"failures":[],"tindex":"539bdbee-46bb-11e5-a0d3-f370f0351548","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.IOUtils:777","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.io.output.StringBuilderWriter org.apache.commons.io.output.StringBuilderWriter = new org.apache.commons.io.output.StringBuilderWriter()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:117","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.io.output.StringBuilderWriter org.apache.commons.io.output.StringBuilderWriter = new org.apache.commons.io.output.StringBuilderWriter(4)"},"status":-2},{"failures":[],"tindex":"539bdbef-46bb-11e5-a0d3-316400ce0ecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:657","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:73","type":"CtIfImpl","sourcecode":"if (java.io.File.isDirectory()) {\n    return 1;\n} else {\n    return 2;\n}"},"status":-1},{"failures":[],"tindex":"539bdbf0-46bb-11e5-a0d3-91fbc3c47313","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileDeleteStrategy:126","type":"CtReturnImpl","sourcecode":"return (\"FileDeleteStrategy[\" + (java.lang.String)) + \"]\""},"variableMap":{"name":"cTEnc"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.XmlStreamReader:633","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"539c0301-46bb-11e5-a0d3-450fc701dc0a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:102","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.FileSystemUtils.int = int"},"variableMap":{"os":"newBufferSize","org.apache.commons.io.FileSystemUtils.OS":"newcount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:115","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Math.max(((byte[].int) << 1), (int - (int)))"},"status":-2},{"failures":[],"tindex":"539c0302-46bb-11e5-a0d3-e12655088834","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1686","type":"CtTryImpl","sourcecode":"try {\n    java.lang.Thread.sleep(100);\n} catch (java.lang.InterruptedException ignore) {\n} catch (java.lang.Exception ex) {\n    break;\n}"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:1933","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.Writer, org.apache.commons.io.Charsets.toCharset(java.lang.String))"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":20,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}