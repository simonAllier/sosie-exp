{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"d4dcec69-46f8-11e5-ab3f-5384f6e1b91e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ProxyReader:56","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.Reader.read()"},"variableMap":{"in":"in"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.ProxyReader:75","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.Reader.read(char[])"},"status":-1},{"failures":[],"tindex":"d4dd137a-46f8-11e5-ab3f-f51a4728ce64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:458","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\", listeners=\")"},"variableMap":{"builder":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.HexDump:104","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(((char)(byte[][(int + int)])))"},"status":-1},{"failures":[],"tindex":"d4dd137b-46f8-11e5-ab3f-79a348bb33ec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.WildcardFileFilter:190","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\",\")"},"status":0},{"failures":[],"tindex":"d4dd137c-46f8-11e5-ab3f-e1c77ca2d914","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.DirectoryWalker:354","type":"CtLocalVariableImpl","sourcecode":"int int = int + 1"},"variableMap":{"depth":"bufferLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:1852","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"status":-1},{"failures":[],"tindex":"d4dd137d-46f8-11e5-ab3f-e3063efb91e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.LineIterator:142","type":"CtAssignmentImpl","sourcecode":"java.lang.String = null"},"variableMap":{"cachedLine":"path"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:290","type":"CtAssignmentImpl","sourcecode":"java.lang.String = (\"\\\"\" + java.lang.String) + \"\\\"\""},"status":-1},{"failures":[],"tindex":"d4dd137e-46f8-11e5-ab3f-0f7704645862","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.CopyUtils:136","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.write(byte[])"},"status":-1},{"failures":[],"tindex":"d4dd137f-46f8-11e5-ab3f-b5a38f250866","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:926","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"d4dd3a90-46f8-11e5-ab3f-c14ef7a2a174","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:438","type":"CtIfImpl","sourcecode":"if (long < 0) {\n    throw new java.io.IOException((((((\"Command line \\'\" + (org.apache.commons.io.FileSystemUtils.java.lang.String)) + \"\\' did not find free space in response \") + \"for path \\'\") + java.lang.String) + \"\\'- check path is valid\"));\n} "},"status":-1},{"failures":[],"tindex":"d4dd3a91-46f8-11e5-ab3f-a398c6810ea6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.BOMInputStream:297","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.BOMInputStream:294","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"d4dd3a92-46f8-11e5-ab3f-595e01acc956","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.Tailer:338","type":"CtTryImpl","sourcecode":"try {\n    long long = 0;\n    long long = 0;\n    while ((boolean) && (java.io.RandomAccessFile == null)) {\n        try {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n        } catch (java.io.FileNotFoundException e) {\n            org.apache.commons.io.input.TailerListener.fileNotFound();\n        }\n        if (java.io.RandomAccessFile == null) {\n            try {\n                java.lang.Thread.sleep(long);\n            } catch (java.lang.InterruptedException e) {\n            }\n        } else {\n            long = boolean ? java.io.File.length() : 0;\n            long = java.lang.System.currentTimeMillis();\n            java.io.RandomAccessFile.seek(long);\n        }\n    }\n    while (boolean) {\n        boolean boolean = org.apache.commons.io.FileUtils.isFileNewer(java.io.File, long);\n        long long = java.io.File.length();\n        if (long < long) {\n            org.apache.commons.io.input.TailerListener.fileRotated();\n            try {\n                java.io.RandomAccessFile java.io.RandomAccessFile = java.io.RandomAccessFile;\n                java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n                long = 0;\n                org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n            } catch (java.io.FileNotFoundException e) {\n                org.apache.commons.io.input.TailerListener.fileNotFound();\n            }\n            continue;\n        } else {\n            if (long > long) {\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } else if (boolean) {\n                long = 0;\n                java.io.RandomAccessFile.seek(long);\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } \n        }\n        if (boolean) {\n            org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n        } \n        try {\n            java.lang.Thread.sleep(long);\n        } catch (java.lang.InterruptedException e) {\n        }\n        if ((boolean) && (boolean)) {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n            java.io.RandomAccessFile.seek(long);\n        } \n    }\n} catch (java.lang.Exception e) {\n    org.apache.commons.io.input.TailerListener.handle(java.lang.Exception);\n} finally {\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n}"},"status":-2},{"failures":[],"tindex":"d4dd3a93-46f8-11e5-ab3f-a38f14998f2d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:543","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.io.filefilter.AgeFileFilter(long , boolean)"},"variableMap":{"acceptOlder":"acceptLarger","cutoff":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:623","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.io.filefilter.SizeFileFilter(long , boolean)"},"status":-1},{"failures":[],"tindex":"d4dd3a94-46f8-11e5-ab3f-3bb723661faa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.IOUtils:402","type":"CtInvocationImpl","sourcecode":"java.net.ServerSocket.close()"},"variableMap":{"sock":"sock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:401","type":"CtTryImpl","sourcecode":"try {\n    java.net.ServerSocket.close();\n} catch (java.io.IOException ioe) {\n}"},"status":-2},{"failures":[],"tindex":"d4dd61a5-46f8-11e5-ab3f-01f058d15496","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.Tailer:375","type":"CtTryImpl","sourcecode":"try {\n    java.io.RandomAccessFile java.io.RandomAccessFile = java.io.RandomAccessFile;\n    java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n    long = 0;\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n} catch (java.io.FileNotFoundException e) {\n    org.apache.commons.io.input.TailerListener.fileNotFound();\n}"},"status":-1},{"failures":[],"tindex":"d4dd61a6-46f8-11e5-ab3f-fd20166f0e35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2597","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"No specified file\")"},"status":-1},{"failures":[],"tindex":"d4dd61a7-46f8-11e5-ab3f-693b1e2c91ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:291","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    if (java.io.File.isDirectory()) {\n        throw new java.io.IOException(((\"File \\'\" + java.io.File) + \"\\' exists but is a directory\"));\n    } \n    if ((java.io.File.canRead()) == false) {\n        throw new java.io.IOException(((\"File \\'\" + java.io.File) + \"\\' cannot be read\"));\n    } \n} else {\n    throw new java.io.FileNotFoundException(((\"File \\'\" + java.io.File) + \"\\' does not exist\"));\n}"},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2293","type":"CtIfImpl","sourcecode":"if (java.io.File.isDirectory()) {\n    org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.deleteDirectoryOnExit(java.io.File);\n} else {\n    java.io.File.deleteOnExit();\n}"},"status":-1},{"failures":[],"tindex":"d4dd61a8-46f8-11e5-ab3f-0dab552e8ac8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:1278","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) && (java.lang.String == null)) {\n    return true;\n} "},"variableMap":{"filename":"fileExt","wildcardMatcher":"fileExt"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:1202","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.util.Collection<java.lang.String>) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d4dd61a9-46f8-11e5-ab3f-3dcf989a6a3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.BOMInputStream:294","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.LineIterator:89","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"d4dd61aa-46f8-11e5-ab3f-892b870b6243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:91","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \"/usr/xpg4/bin/df\""},"variableMap":{"dfPath":"filename1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:1120","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.io.FilenameUtils.org.apache.commons.io.FilenameUtils.normalize(java.lang.String)"},"status":-1},{"failures":[],"tindex":"d4dd88bb-46f8-11e5-ab3f-f39fb8c9591f","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:1687","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:376","type":"CtIfImpl","sourcecode":"if (org.apache.commons.io.monitor.FileEntry.isDirectory()) {\n    org.apache.commons.io.monitor.FileAlterationListener.onDirectoryCreate(org.apache.commons.io.monitor.FileEntry.getFile());\n} else {\n    org.apache.commons.io.monitor.FileAlterationListener.onFileCreate(org.apache.commons.io.monitor.FileEntry.getFile());\n}"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":19,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}