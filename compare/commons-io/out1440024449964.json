{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"45997f79-46c4-11e5-bd29-e7d7a09dd5b0","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FilenameUtils:1116","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return (java.lang.String == null) && (java.lang.String == null);\n} "},"variableMap":{"filename2":"filename2","filename1":"filename1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:1130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.IOCase.checkEquals(java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"4599a68a-46c4-11e5-bd29-71f6e71a9643","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.FileUtils:684","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:523","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.io.filefilter.IOFileFilter org.apache.commons.io.filefilter.IOFileFilter = org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.setUpEffectiveFileFilter(org.apache.commons.io.filefilter.IOFileFilter)"},"status":-2},{"failures":[],"tindex":"4599a68b-46c4-11e5-bd29-1111d8c4a33f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:210","type":"CtIfImpl","sourcecode":"if (int != int) {\n    throw new java.lang.IllegalStateException(\"Count of requested bytes and actually read bytes don\\'t match\");\n} "},"variableMap":{"countRead":"chars_read","length":"chars_read"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.HexDump:90","type":"CtIfImpl","sourcecode":"if (int > 16) {\n    int = 16;\n} "},"status":-1},{"failures":[],"tindex":"4599a68c-46c4-11e5-bd29-cfb7a9920f64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.IOUtils:516","type":"CtWhileImpl","sourcecode":"while ((int < int) && ((int = java.io.InputStream.read(byte[], int, (int - int))) != (org.apache.commons.io.IOUtils.int))) {\n    int += int;\n}"},"variableMap":{"readed":"count","input":"input","offset":"count","size":"count","data":"buffer","org.apache.commons.io.IOUtils.EOF":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.CopyUtils:197","type":"CtWhileImpl","sourcecode":"while ((-1) != (int = java.io.InputStream.read(byte[]))) {\n    java.io.OutputStream.write(byte[], 0, int);\n    int += int;\n}"},"status":-1},{"failures":[],"tindex":"4599cd9d-46c4-11e5-bd29-e7407ec6521b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.LockableFileWriter:237","type":"CtIfImpl","sourcecode":"if (!(java.io.File.canWrite())) {\n    throw new java.io.IOException((\"Could not write to lockDir: \" + (java.io.File.getAbsolutePath())));\n} "},"variableMap":{"lockDir":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2663","type":"CtIfImpl","sourcecode":"if (java.io.File == null) {\n    throw new java.lang.IllegalArgumentException(\"No specified file\");\n} "},"status":-2},{"failures":[],"tindex":"4599cd9e-46c4-11e5-bd29-3f7d14eb16fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:745","type":"CtIfImpl","sourcecode":"if ((java.io.File.length()) != (java.io.File.length())) {\n    return false;\n} "},"variableMap":{"file2":"file","file1":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.WildcardFilter:134","type":"CtForEachImpl","sourcecode":"for (java.lang.String java.lang.String : java.lang.String[]) {\n    if (org.apache.commons.io.FilenameUtils.wildcardMatch(java.io.File.getName(), java.lang.String)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"4599cd9f-46c4-11e5-bd29-192061b644dd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.ReversedLinesFileReader:275","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalStateException((\"Unexpected negative line length=\" + int));\n} "},"variableMap":{"lineLengthBytes":"readTimeout"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1488","type":"CtInvocationImpl","sourcecode":"java.net.URLConnection.setReadTimeout(int)"},"status":0},{"failures":[],"tindex":"4599f4b0-46c4-11e5-bd29-53ba3f6b32cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.EndianUtils:157","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 2)] = ((byte)((int >> 16) & 255))"},"variableMap":{"data":"data","offset":"offset","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.EndianUtils:207","type":"CtAssignmentImpl","sourcecode":"byte[][(int + 6)] = ((byte)((long >> 48) & 255))"},"status":-1},{"failures":[],"tindex":"4599f4b1-46c4-11e5-bd29-1943b5d05280","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:657","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.SwappedDataInputStream:221","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.EndianUtils.readSwappedUnsignedShort(java.io.InputStream)"},"status":-1},{"failures":[],"tindex":"4599f4b2-46c4-11e5-bd29-1f41f88acbd0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:505","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Size must be equal or greater than zero: \" + int))"},"status":-1},{"failures":[],"tindex":"4599f4b3-46c4-11e5-bd29-3d1adfe75ec4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:306","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.FileSystemUtils.parseDir(java.lang.String, java.lang.String)"},"variableMap":{"path":"freeSpace","line":"freeSpace","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:423","type":"CtReturnImpl","sourcecode":"return org.apache.commons.io.FileSystemUtils.parseBytes(java.lang.String, java.lang.String)"},"status":-1},{"failures":[],"tindex":"4599f4b4-46c4-11e5-bd29-470aa938deec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.NameFileFilter:58","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.filefilter.NameFileFilter.this(java.lang.String, null)"},"status":-2},{"failures":[],"tindex":"459a1bc5-46c4-11e5-bd29-01508a022de5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:393","type":"CtIfImpl","sourcecode":"if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" PB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" TB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" GB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" MB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" KB\";\n} else {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger)) + \" bytes\";\n}"},"variableMap":{"org.apache.commons.io.FileUtils.ONE_GB_BI":"org.apache.commons.io.FileUtils.ONE_MB_BI","org.apache.commons.io.FileUtils.ONE_MB_BI":"org.apache.commons.io.FileUtils.ONE_MB_BI","size":"org.apache.commons.io.FileUtils.ONE_MB_BI","org.apache.commons.io.FileUtils.ONE_KB_BI":"size","org.apache.commons.io.FileUtils.ONE_PB_BI":"size","java.math.BigInteger.ZERO":"org.apache.commons.io.FileUtils.ONE_EB_BI","displaySize":"displaySize","org.apache.commons.io.FileUtils.ONE_TB_BI":"org.apache.commons.io.FileUtils.ONE_KB_BI"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:391","type":"CtIfImpl","sourcecode":"if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" EB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" PB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" TB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" GB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" MB\";\n} else if ((java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger).compareTo(java.math.BigInteger.java.math.BigInteger)) > 0) {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger.divide(org.apache.commons.io.FileUtils.java.math.BigInteger))) + \" KB\";\n} else {\n    java.lang.String = (java.lang.String.valueOf(java.math.BigInteger)) + \" bytes\";\n}"},"status":-2},{"failures":[],"tindex":"459a42d6-46c4-11e5-bd29-a919883261a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.CountingInputStream:92","type":"CtReturnImpl","sourcecode":"return ((int)(long))"},"variableMap":{"result":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.comparator.LastModifiedFileComparator:71","type":"CtIfImpl","sourcecode":"if (long > 0) {\n    return 1;\n} else {\n    return 0;\n}"},"status":0},{"failures":[],"tindex":"459a42d7-46c4-11e5-bd29-ef6365b4dfd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.WriterOutputStream:303","type":"CtInvocationImpl","sourcecode":"java.nio.CharBuffer.rewind()"},"variableMap":{"decoderOut":"encoderIn"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.ReaderInputStream:204","type":"CtInvocationImpl","sourcecode":"java.nio.CharBuffer.flip()"},"status":-1},{"failures":[],"tindex":"459a42d8-46c4-11e5-bd29-d5d8e625cfc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileSystemUtils:102","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.io.FileSystemUtils.int = int"},"variableMap":{"os":"inBufferPos","org.apache.commons.io.FileSystemUtils.OS":"inBufferPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:154","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"459a42d9-46c4-11e5-bd29-ff9424bf6ebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:2862","type":"CtInvocationImpl","sourcecode":"java.io.File.mkdirs()"},"variableMap":{"destDir":"destFile"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2834","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.FileUtils.deleteQuietly(java.io.File)"},"status":-1},{"failures":[],"tindex":"459a69ea-46c4-11e5-bd29-cd6200d9d769","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.EndianUtils:483","type":"CtThrowImpl","sourcecode":"throw new java.io.EOFException(\"Unexpected EOF reached\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2532","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((java.io.File + \" does not exist\"))"},"status":-2},{"failures":[],"tindex":"459a69eb-46c4-11e5-bd29-232b305a4088","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.WriterOutputStream:283","type":"CtIfImpl","sourcecode":"if (java.nio.charset.CoderResult.isUnderflow()) {\n    break;\n} else {\n    throw new java.io.IOException(\"Unexpected coder result\");\n}"},"variableMap":{"coderResult":"coderResult"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.WriterOutputStream:279","type":"CtWhileImpl","sourcecode":"while (true) {\n    java.nio.charset.CoderResult = java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean);\n    if (java.nio.charset.CoderResult.isOverflow()) {\n        org.apache.commons.io.output.WriterOutputStream.flushOutput();\n    } else if (java.nio.charset.CoderResult.isUnderflow()) {\n        break;\n    } else {\n        throw new java.io.IOException(\"Unexpected coder result\");\n    }\n}"},"status":-2}],"header":{"groupId":"commons-io","transformationCount":19,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"}}