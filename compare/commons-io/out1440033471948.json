{"failureDictionary":{},"transformations":[{"failures":[],"tindex":"471dc947-46d9-11e5-b63a-ebf5d38001eb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:429","type":"CtLocalVariableImpl","sourcecode":"java.io.File[] java.io.File[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:275","type":"CtLocalVariableImpl","sourcecode":"java.io.File[] java.io.File[] = org.apache.commons.io.monitor.FileAlterationObserver.listFiles(org.apache.commons.io.monitor.FileEntry.getFile())"},"status":-2},{"failures":[],"tindex":"471df058-46d9-11e5-b63a-674ad31e7632","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:123","type":"CtInvocationImpl","sourcecode":"java.util.List<byte[]>.add(byte[])"},"status":-1},{"failures":[],"tindex":"471df059-46d9-11e5-b63a-17adfd592a97","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.input.XmlStreamReader:511","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if ((java.lang.String == null) || (java.lang.String == null)) {\n        return (java.lang.String) == null ? org.apache.commons.io.input.XmlStreamReader.java.lang.String : java.lang.String;\n    } \n    if ((java.lang.String.equals(org.apache.commons.io.input.XmlStreamReader.java.lang.String)) && ((java.lang.String.equals(org.apache.commons.io.input.XmlStreamReader.java.lang.String)) || (java.lang.String.equals(org.apache.commons.io.input.XmlStreamReader.java.lang.String)))) {\n        return java.lang.String;\n    } \n    return java.lang.String;\n} "},"variableMap":{"org.apache.commons.io.input.XmlStreamReader.UTF_8":"filename","bomEnc":"filename","defaultEncoding":"filename","org.apache.commons.io.input.XmlStreamReader.UTF_16LE":"filename","xmlEnc":"filename","org.apache.commons.io.input.XmlStreamReader.UTF_16":"filename","xmlGuessEnc":"filename","org.apache.commons.io.input.XmlStreamReader.UTF_16BE":"filename"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:1031","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[],"tindex":"471df05a-46d9-11e5-b63a-1bb1da3bc5b3","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:132","type":"CtForEachImpl","sourcecode":"for (org.apache.commons.io.monitor.FileAlterationObserver org.apache.commons.io.monitor.FileAlterationObserver : java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>) {\n    org.apache.commons.io.monitor.FileAlterationObserver.initialize();\n}"},"variableMap":{"observers":"observers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationMonitor:180","type":"CtWhileImpl","sourcecode":"while (boolean) {\n    for (org.apache.commons.io.monitor.FileAlterationObserver org.apache.commons.io.monitor.FileAlterationObserver : java.util.List<org.apache.commons.io.monitor.FileAlterationObserver>) {\n        org.apache.commons.io.monitor.FileAlterationObserver.checkAndNotify();\n    }\n    if (!(boolean)) {\n        break;\n    } \n    try {\n        java.lang.Thread.sleep(long);\n    } catch (final java.lang.InterruptedException ignored) {\n    }\n}"},"status":-2},{"failures":[],"tindex":"471df05b-46d9-11e5-b63a-d1a15064b057","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileCleaningTracker:136","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"No new trackers can be added once exitWhenFinished() is called\");\n} "},"variableMap":{"exitWhenFinished":"reOpen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.Tailer:338","type":"CtTryImpl","sourcecode":"try {\n    long long = 0;\n    long long = 0;\n    while ((boolean) && (java.io.RandomAccessFile == null)) {\n        try {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n        } catch (java.io.FileNotFoundException e) {\n            org.apache.commons.io.input.TailerListener.fileNotFound();\n        }\n        if (java.io.RandomAccessFile == null) {\n            try {\n                java.lang.Thread.sleep(long);\n            } catch (java.lang.InterruptedException e) {\n            }\n        } else {\n            long = boolean ? java.io.File.length() : 0;\n            long = java.lang.System.currentTimeMillis();\n            java.io.RandomAccessFile.seek(long);\n        }\n    }\n    while (boolean) {\n        boolean boolean = org.apache.commons.io.FileUtils.isFileNewer(java.io.File, long);\n        long long = java.io.File.length();\n        if (long < long) {\n            org.apache.commons.io.input.TailerListener.fileRotated();\n            try {\n                java.io.RandomAccessFile java.io.RandomAccessFile = java.io.RandomAccessFile;\n                java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n                long = 0;\n                org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n            } catch (java.io.FileNotFoundException e) {\n                org.apache.commons.io.input.TailerListener.fileNotFound();\n            }\n            continue;\n        } else {\n            if (long > long) {\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } else if (boolean) {\n                long = 0;\n                java.io.RandomAccessFile.seek(long);\n                long = org.apache.commons.io.input.Tailer.readLines(java.io.RandomAccessFile);\n                long = java.lang.System.currentTimeMillis();\n            } \n        }\n        if (boolean) {\n            org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n        } \n        try {\n            java.lang.Thread.sleep(long);\n        } catch (java.lang.InterruptedException e) {\n        }\n        if ((boolean) && (boolean)) {\n            java.io.RandomAccessFile = new java.io.RandomAccessFile(java.io.File , org.apache.commons.io.input.Tailer.java.lang.String);\n            java.io.RandomAccessFile.seek(long);\n        } \n    }\n} catch (java.lang.Exception e) {\n    org.apache.commons.io.input.TailerListener.handle(java.lang.Exception);\n} finally {\n    org.apache.commons.io.IOUtils.closeQuietly(java.io.RandomAccessFile);\n}"},"status":-2},{"failures":[],"tindex":"471e176c-46d9-11e5-b63a-bdd60ff7a550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:925","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} "},"variableMap":{"end":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.comparator.CompositeFileComparator:93","type":"CtForEachImpl","sourcecode":"for (java.util.Comparator<java.io.File> java.util.Comparator<java.io.File> : java.util.Comparator<java.io.File>[]) {\n    int = java.util.Comparator<java.io.File>.compare(java.io.File, java.io.File);\n    if (int != 0) {\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"471e176d-46d9-11e5-b63a-c1b4ffb37442","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:340","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.monitor.FileAlterationObserver.doDelete(org.apache.commons.io.monitor.FileEntry)"},"variableMap":{"entry":"aChildren","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:384","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.monitor.FileAlterationObserver.doCreate(org.apache.commons.io.monitor.FileEntry)"},"status":-1},{"failures":[],"tindex":"471e176e-46d9-11e5-b63a-ab2e518cae18","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.IOUtils:2297","type":"CtReturnImpl","sourcecode":"return long - long"},"variableMap":{"remain":"size","toSkip":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2489","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[],"tindex":"471e176f-46d9-11e5-b63a-97620ad19445","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:758","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = new java.io.FileInputStream(java.io.File)"},"variableMap":{"input1":"in","file1":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:1856","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = org.apache.commons.io.FileUtils.org.apache.commons.io.FileUtils.openInputStream(java.io.File)"},"status":0},{"failures":[],"tindex":"471e1770-46d9-11e5-b63a-398a06a07f29","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.output.ByteArrayOutputStream:329","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    break;\n} "},"variableMap":{"remaining":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.ProxyReader:95","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.input.ProxyReader.beforeRead(int)"},"status":-2},{"failures":[],"tindex":"471e1771-46d9-11e5-b63a-b3299b2af418","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:1687","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.sleep(100)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.monitor.FileAlterationObserver:365","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.monitor.FileEntry.setChildren(org.apache.commons.io.monitor.FileEntry[])"},"status":-2},{"failures":[],"tindex":"471e1772-46d9-11e5-b63a-63e39e41d81b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FilenameUtils:630","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(0)"},"variableMap":{"filename":"basePath"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FilenameUtils:496","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt((int - 1))"},"status":1},{"failures":[],"tindex":"471e1773-46d9-11e5-b63a-a58bc5c08bf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.input.BOMInputStream:386","type":"CtInvocationImpl","sourcecode":"java.io.InputStream.reset()"},"variableMap":{"in":"is"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.IOUtils:698","type":"CtInvocationImpl","sourcecode":"org.apache.commons.io.IOUtils.org.apache.commons.io.IOUtils.copy(java.io.InputStream, java.io.CharArrayWriter, java.nio.charset.Charset)"},"status":-1},{"failures":[],"tindex":"471e3e84-46d9-11e5-b63a-fbe62f9c206d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.comparator.DirectoryFileComparator:76","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.input.NullInputStream:131","type":"CtReturnImpl","sourcecode":"return ((int)(long))"},"status":-1},{"failures":[],"tindex":"471e3e85-46d9-11e5-b63a-8d6bff306f09","series":0,"name":"add","transplant":{"position":"org.apache.commons.io.output.DemuxOutputStream:74","type":"CtInvocationImpl","sourcecode":"java.io.OutputStream.flush()"},"variableMap":{"output":"branch"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.output.TeeOutputStream:105","type":"CtInvocationImpl","sourcecode":"this.java.io.OutputStream.close()"},"status":0},{"failures":[],"tindex":"471e3e86-46d9-11e5-b63a-056f93896ca9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.FileUtils:352","type":"CtIfImpl","sourcecode":"if (java.io.File.exists()) {\n    if (java.io.File.isDirectory()) {\n        throw new java.io.IOException(((\"File \\'\" + java.io.File) + \"\\' exists but is a directory\"));\n    } \n    if ((java.io.File.canWrite()) == false) {\n        throw new java.io.IOException(((\"File \\'\" + java.io.File) + \"\\' cannot be written to\"));\n    } \n} else {\n    java.io.File java.io.File = java.io.File.getParentFile();\n    if (java.io.File != null) {\n        if ((!(java.io.File.mkdirs())) && (!(java.io.File.isDirectory()))) {\n            throw new java.io.IOException(((\"Directory \\'\" + java.io.File) + \"\\' could not be created\"));\n        } \n    } \n}"},"variableMap":{"file":"file"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.filefilter.FileFilterUtils:278","type":"CtIfImpl","sourcecode":"if (org.apache.commons.io.filefilter.IOFileFilter.accept(java.io.File)) {\n    T.add(java.io.File);\n} "},"status":-2},{"failures":[],"tindex":"471e3e87-46d9-11e5-b63a-49fbb689f888","series":0,"name":"replace","transplant":{"position":"org.apache.commons.io.output.LockableFileWriter:250","type":"CtIfImpl","sourcecode":"if (!(java.io.File.createNewFile())) {\n    throw new java.io.IOException(((\"Can\\'t write file, lock \" + (java.io.File.getAbsolutePath())) + \" exists\"));\n} "},"variableMap":{"lockFile":"src"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileUtils:2778","type":"CtIfImpl","sourcecode":"if (java.io.File == null) {\n    throw new java.lang.NullPointerException(\"Source must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"471e3e88-46d9-11e5-b63a-4d5934bc51c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.io.FileSystemUtils:485","type":"CtAssignmentImpl","sourcecode":"java.io.InputStream = java.lang.Process.getErrorStream()"},"status":0}],"header":{"groupId":"commons-io","transformationCount":18,"projectType":"maven","artifactId":"commons-io","generatorVersion":"1.0","version":"2.4"},"diffs":[{"transformation":"471e1772-46d9-11e5-b63a-63e39e41d81b","diffs":[{"branches":{"org.apache.commons.io.FilenameUtilsTestCase.testConcat":["org.apache.commons.io.FilenameUtils_java.lang.String_doNormalize(java.lang.String,char,boolean).t6","org.apache.commons.io.FilenameUtils_java.lang.String_concat(java.lang.String,java.lang.String).t5"]},"type":"branch"}]}]}