{"failureDictionary":{"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfUncloneable":2,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":4,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":14,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":15,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":25,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":10,"org.apache.commons.lang3.ObjectUtilsTest.testPossibleCloneOfUncloneable":0,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":5,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":8,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":11,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":16,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":12,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":18,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":20,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":21,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":9,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":6,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":23,"org.apache.commons.lang3.ObjectUtilsTest.testCloneOfNotCloneable":1,"org.apache.commons.lang3.builder.CompareToBuilderTest.testDoubleArray":27,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":7,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":17,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":26,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":3,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":19,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":28,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":22,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":24},"transformations":[{"failures":[],"tindex":"b1313065-273c-11e5-a001-d3aaf81eb72e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:295","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass()"},"status":-2},{"failures":[],"tindex":"b132b706-273c-11e5-a001-23623013ef6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:261","type":"CtReturnImpl","sourcecode":"return java.lang.Math.max(float, float)"},"variableMap":{"a":"java.lang.Float.NaN","b":"java.lang.Float.NaN"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1064","type":"CtReturnImpl","sourcecode":"return java.lang.Float.float"},"status":-2},{"failures":[],"tindex":"b132de17-273c-11e5-a001-eddce6bf1cdf","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.CharSetUtils:180","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.StringUtils.java.lang.String"},"variableMap":{"org.apache.commons.lang3.StringUtils.EMPTY":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4523","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-2},{"failures":[0,1,2],"tindex":"b132de18-273c-11e5-a001-ff9209117bda","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ObjectUtils:124","type":"CtIfImpl","sourcecode":"if (T != null) {\n    return T;\n} "},"variableMap":{"val":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:609","type":"CtIfImpl","sourcecode":"if (T instanceof java.lang.Cloneable) {\n    final java.lang.Object java.lang.Object;\n    if (T.getClass().isArray()) {\n        final java.lang.Class<?> java.lang.Class<?> = T.getClass().getComponentType();\n        if (!(java.lang.Class<?>.isPrimitive())) {\n            java.lang.Object = ((java.lang.Object[])(T)).clone();\n        } else {\n            int int = java.lang.reflect.Array.getLength(T);\n            java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<?>, int);\n            while ((int--) > 0) {\n                java.lang.reflect.Array.set(java.lang.Object, int, java.lang.reflect.Array.get(T, int));\n            }\n        }\n    } else {\n        try {\n            final java.lang.reflect.Method java.lang.reflect.Method = T.getClass().getMethod(\"clone\");\n            java.lang.Object = java.lang.reflect.Method.invoke(T);\n        } catch (final java.lang.NoSuchMethodException e) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException(((\"Cloneable type \" + (T.getClass().getName())) + \" has no clone method\") , java.lang.NoSuchMethodException);\n        } catch (final java.lang.IllegalAccessException e) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Cannot clone Cloneable type \" + (T.getClass().getName())) , java.lang.IllegalAccessException);\n        } catch (final java.lang.reflect.InvocationTargetException e) {\n            throw new org.apache.commons.lang3.exception.CloneFailedException((\"Exception cloning Cloneable type \" + (T.getClass().getName())) , java.lang.reflect.InvocationTargetException.getCause());\n        }\n    }\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final T T = ((T)(java.lang.Object));\n    return T;\n} "},"status":-1},{"failures":[],"tindex":"b1330529-273c-11e5-a001-03734c1dc94c","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:343","type":"CtReturnImpl","sourcecode":"return (java.lang.System.nanoTime()) - (this.long)"},"variableMap":{"startTime":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1710","type":"CtReturnImpl","sourcecode":"return long"},"status":-2},{"failures":[3],"tindex":"b133052a-273c-11e5-a001-c34a317983a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:204","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":-1},{"failures":[],"tindex":"b133052b-273c-11e5-a001-7993acb9311c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1212","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 7"},"variableMap":{"startCutoff":"tmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1756","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"b133052c-273c-11e5-a001-bdc6321eb258","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:5129","type":"CtIfImpl","sourcecode":"if ((int == 1) || (int == 0)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"pattern","repeat":"text","inputLength":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:383","type":"CtReturnImpl","sourcecode":"return java.lang.String.substring(int, java.text.ParsePosition.getIndex())"},"status":-1},{"failures":[],"tindex":"b1332c3d-273c-11e5-a001-a350e5581adc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:617","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(1)"},"status":-2},{"failures":[],"tindex":"b1332c3e-273c-11e5-a001-8979971d65e4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:236","type":"CtReturnImpl","sourcecode":"return (java.util.Comparator<T>.compare(T, T)) < 0"},"status":-2},{"failures":[],"tindex":"b1332c3f-273c-11e5-a001-431ef56c8a01","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3543","type":"CtReturnImpl","sourcecode":"return (char[] == null) || ((char[].int) == 0)"},"status":-2},{"failures":[],"tindex":"b1332c40-273c-11e5-a001-f9d2fbf67e56","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:862","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int)"},"variableMap":{"value":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5375","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    break;\n} "},"status":0},{"failures":[10,11,12,13],"tindex":"b1332c41-273c-11e5-a001-a39770ae2dcc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtInvocationImpl","sourcecode":"new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object)"},"variableMap":{"array2":"rhs","array1":"rhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))"},"status":-1},{"failures":[14,15,16,17],"tindex":"b1335352-273c-11e5-a001-a17be85d689b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4218","type":"CtIfImpl","sourcecode":"if (java.lang.String.startsWith(java.lang.String)) {\n    return java.lang.String.substring(java.lang.String.length());\n} "},"variableMap":{"str":"nullString","remove":"nullString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:812","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean == null) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26],"tindex":"b1335353-273c-11e5-a001-a31f58c265f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:110","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof org.apache.commons.lang3.concurrent.ConstantInitializer<?>)) {\n    return false;\n} "},"variableMap":{"obj":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:326","type":"CtIfImpl","sourcecode":"if (java.lang.Object == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"b1335354-273c-11e5-a001-6bc00383fc81","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"array":"joinedArray"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3829","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[],"tindex":"b1337a65-273c-11e5-a001-9d4cdabf6d54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:728","type":"CtIfImpl","sourcecode":"if (java.lang.String == java.lang.String) {\n    return true;\n} else if (java.lang.String == java.lang.String) {\n    return false;\n} else if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} "},"variableMap":{"str":"str","trueString":"str","falseString":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2264","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.(indexOf(java.lang.String, 0)) >= 0"},"status":-2},{"failures":[],"tindex":"b1337a66-273c-11e5-a001-9741555760ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1437","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)"},"status":-2},{"failures":[27],"tindex":"b1337a67-273c-11e5-a001-750e563a61c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"u":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:895","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[28,29],"tindex":"b133a178-273c-11e5-a001-9d85c1bdd6cf","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:459","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"b1332c40-273c-11e5-a001-f9d2fbf67e56","diffs":[{"nodes":{"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,long)"]},"edges":{"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":["org.apache.commons.lang3.ArrayUtils.byte[] removeElements(byte[],byte[]) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,long)"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,long).e1","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,long).b"]},"type":"branch"}]}]}