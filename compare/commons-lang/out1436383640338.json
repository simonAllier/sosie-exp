{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsTest.testCeil":28,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":75,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":25,"org.apache.commons.lang3.time.DateUtilsTest.testRound":27,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":32,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":33,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":9,"org.apache.commons.lang3.tuple.PairTest.testFormattable_padded":39,"org.apache.commons.lang3.ClassUtilsTest.testGetClassInvalidArguments":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":15,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":35,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":20,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":31,"org.apache.commons.lang3.time.DateUtilsTest.testRoundLang346":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":10,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":3,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":7,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":22,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":65,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":84,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":80,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":24,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":55,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":90,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":51,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":36,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":42,"org.apache.commons.lang3.tuple.ImmutablePairTest.testToString":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":68,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":30,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":82,"org.apache.commons.lang3.ClassUtilsTest.testGetInnerClass":85,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":5,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":76,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":87,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":78,"org.apache.commons.lang3.ArrayUtilsTest.testToString":83,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":69,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":62,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":6,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":71,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":43,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":49,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":73,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":12,"org.apache.commons.lang3.tuple.PairTest.testToString":41,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":60,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":92,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":4,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":18,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":74,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":89,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":57,"org.apache.commons.lang3.tuple.MutablePairTest.testToString":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":66,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":67,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_ThrowableArray":53,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":19,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":17,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":44,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":13,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":48,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetCause_Throwable":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":63,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":50,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":52,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":0,"org.apache.commons.lang3.tuple.PairTest.testFormattable_simple":40,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":14,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":79},"transformations":[{"failures":[],"tindex":"59f3962d-25a7-11e5-beef-b394f2ace7bf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:217","type":"CtIfImpl","sourcecode":"if ((int == (java.lang.Integer.int)) && ((int & 1) == 0)) {\n    int /= 2;\n    int /= 2;\n} "},"variableMap":{"java.lang.Integer.MIN_VALUE":"startIndex","denominator":"startIndex","numerator":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:412","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} "},"status":-2},{"failures":[],"tindex":"59f3bd3e-25a7-11e5-beef-8fb2a4003df7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1368","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n    return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type));\n} "},"variableMap":{"typeArguments":"typeArguments","this":"this","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1367","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.containsTypeVariables(java.lang.reflect.Type)) {\n    if (java.lang.reflect.Type instanceof java.lang.reflect.TypeVariable<?>) {\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.get(java.lang.reflect.Type));\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.ParameterizedType) {\n        final java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType = ((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type));\n        final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        if ((java.lang.reflect.ParameterizedType.getOwnerType()) == null) {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>;\n        } else {\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = new java.util.HashMap<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);\n            java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>.putAll(org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.reflect.ParameterizedType));\n        }\n        final java.lang.reflect.Type[] java.lang.reflect.Type[] = java.lang.reflect.ParameterizedType.getActualTypeArguments();\n        for (int int = 0 ; int < (java.lang.reflect.Type[].int) ; int++) {\n            final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type[][int]);\n            if (java.lang.reflect.Type != null) {\n                java.lang.reflect.Type[][int] = java.lang.reflect.Type;\n            } \n        }\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.parameterizeWithOwner(java.lang.reflect.ParameterizedType.getOwnerType(), ((java.lang.Class<?>)(java.lang.reflect.ParameterizedType.getRawType())), java.lang.reflect.Type[]);\n    } \n    if (java.lang.reflect.Type instanceof java.lang.reflect.WildcardType) {\n        final java.lang.reflect.WildcardType java.lang.reflect.WildcardType = ((java.lang.reflect.WildcardType)(java.lang.reflect.Type));\n        return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.wildcardType().withUpperBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getUpperBounds())).withLowerBounds(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.unrollBounds(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.WildcardType.getLowerBounds())).build();\n    } \n} "},"status":0},{"failures":[0,1,2],"tindex":"59f3e44f-25a7-11e5-beef-734412caf645","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:138","type":"CtOperatorAssignmentImpl","sourcecode":"this.int += int"},"variableMap":{"value":"pos","operand":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:738","type":"CtOperatorAssignmentImpl","sourcecode":"int += 2"},"status":-1},{"failures":[],"tindex":"59f3e450-25a7-11e5-beef-dfa549daf6a2","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.MemberUtils:173","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>)"},"variableMap":{"cls":"primitiveClass"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>)"},"status":-2},{"failures":[],"tindex":"59f3e451-25a7-11e5-beef-9142330c23fc","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:875","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:336","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException(\"The fraction could not be parsed as the format X Y/Z\")"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"59f3e452-25a7-11e5-beef-6f267faffefe","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:855","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(((char)((int / 10) + '0')))"},"variableMap":{"buffer":"source","value":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:638","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.replace(int, (int + int), org.apache.commons.lang3.text.StrBuilder.toString())"},"status":-1},{"failures":[16,17],"tindex":"59f40b63-25a7-11e5-beef-6face72c525d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5719","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.mutable.MutableInt == null) {\n    java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n} else {\n    org.apache.commons.lang3.mutable.MutableInt.increment();\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28],"tindex":"59f40b64-25a7-11e5-beef-e55f19b1cbba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1038","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.add(int[][0], 1)"},"status":-1},{"failures":[3,4,5,7,29,8,30,31,9,10,32,11,12,13,14,15],"tindex":"59f40b65-25a7-11e5-beef-157800469e5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1246","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()"},"variableMap":{"this":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:597","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())"},"status":-1},{"failures":[33,34],"tindex":"59f40b66-25a7-11e5-beef-9f45fa3674da","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1588","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 'f'"},"variableMap":{"index":"size","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:781","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 's'"},"status":-1},{"failures":[35,35],"tindex":"59f40b67-25a7-11e5-beef-c522558bb68f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1339","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, float[]);\n}"},"variableMap":{"fieldName":"fieldName","array":"array","fullDetail":"fullDetail","this":"this","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1336","type":"CtIfImpl","sourcecode":"if (float[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, float[]);\n}"},"status":-1},{"failures":[36],"tindex":"59f43278-25a7-11e5-beef-e1601fe7328d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:875","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:455","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")"},"status":-1},{"failures":[37,38,39,40,41],"tindex":"59f43279-25a7-11e5-beef-03551d1bdc81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:162","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append('(').append(org.apache.commons.lang3.tuple.Pair<L, R>.getLeft()).append(',').append(org.apache.commons.lang3.tuple.Pair<L, R>.getRight()).append(')')"},"status":-1},{"failures":[],"tindex":"59f4327a-25a7-11e5-beef-5f54b15b4422","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.RandomStringUtils.org.apache.commons.lang3.RandomStringUtils.random(int, 32, 127, false, false)"},"status":-2},{"failures":[],"tindex":"59f4327b-25a7-11e5-beef-db4709c44448","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:307","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:207","type":"CtLocalVariableImpl","sourcecode":"final java.lang.String java.lang.String = org.apache.commons.lang3.time.FormatCache.java.util.concurrent.ConcurrentMap<org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String>.putIfAbsent(org.apache.commons.lang3.time.FormatCache.MultipartKey, java.lang.String)"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59],"tindex":"59f4327c-25a7-11e5-beef-17545f844e96","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:203","type":"CtTryImpl","sourcecode":"try {\n    return ((java.lang.Throwable)(java.lang.reflect.Method.invoke(java.lang.Throwable)));\n} catch (final java.lang.IllegalAccessException ignored) {\n} catch (final java.lang.IllegalArgumentException ignored) {\n} catch (final java.lang.reflect.InvocationTargetException ignored) {\n}"},"status":-1},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"59f4327d-25a7-11e5-beef-156a2cb4f074","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:906","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)"},"status":-1},{"failures":[84,85,86],"tindex":"59f4598e-25a7-11e5-beef-e5fc24e380bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ClassUtils:877","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.String, true)"},"variableMap":{"this":"this","className":"className"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:837","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getClass(java.lang.ClassLoader, (((java.lang.String.substring(0, int)) + (org.apache.commons.lang3.ClassUtils.char)) + (java.lang.String.substring((int + 1)))), boolean)"},"status":-1},{"failures":[87,88,89,90,91,92],"tindex":"59f4598f-25a7-11e5-beef-dd7a62b7584f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:103","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case '0' :\n        return 0;\n    case '1' :\n        return 8;\n    case '2' :\n        return 4;\n    case '3' :\n        return 12;\n    case '4' :\n        return 2;\n    case '5' :\n        return 10;\n    case '6' :\n        return 6;\n    case '7' :\n        return 14;\n    case '8' :\n        return 1;\n    case '9' :\n        return 9;\n    case 'a' :\n    case 'A' :\n        return 5;\n    case 'b' :\n    case 'B' :\n        return 13;\n    case 'c' :\n    case 'C' :\n        return 3;\n    case 'd' :\n    case 'D' :\n        return 11;\n    case 'e' :\n    case 'E' :\n        return 7;\n    case 'f' :\n    case 'F' :\n        return 15;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}"},"variableMap":{"hexDigit":"org.apache.commons.lang3.text.ExtendedMessageFormat.END_FE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:343","type":"CtIfImpl","sourcecode":"if (((char == (org.apache.commons.lang3.text.ExtendedMessageFormat.char)) || (char == (org.apache.commons.lang3.text.ExtendedMessageFormat.char))) && ((java.lang.StringBuilder.length()) > 0)) {\n    try {\n        return java.lang.Integer.parseInt(java.lang.StringBuilder.toString());\n    } catch (final java.lang.NumberFormatException e) {\n    }\n} "},"status":-1},{"failures":[],"tindex":"59f45990-25a7-11e5-beef-53ba325cbc21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4181","type":"CtReturnImpl","sourcecode":"return int[]"},"variableMap":{"newArray":"org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:966","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.int[]"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"59f3bd3e-25a7-11e5-beef-8fb2a4003df7","diffs":[{"branches":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":["org.apache.commons.lang3.reflect.TypeUtils_boolean_containsTypeVariables(java.lang.reflect.Type).t2","org.apache.commons.lang3.reflect.TypeUtils_boolean_containsTypeVariables(java.lang.reflect.Type).t1","org.apache.commons.lang3.reflect.TypeUtils_boolean_containsTypeVariables(java.lang.reflect.Type).b","org.apache.commons.lang3.reflect.TypeUtils_boolean_containsTypeVariables(java.lang.reflect.Type).e1"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":["org.apache.commons.lang3.reflect.TypeUtils.boolean containsTypeVariables(java.lang.reflect.Type)"]},"edges":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":["org.apache.commons.lang3.reflect.TypeUtils.java.lang.reflect.Type unrollVariables(java.util.Map,java.lang.reflect.Type) -> org.apache.commons.lang3.reflect.TypeUtils.boolean containsTypeVariables(java.lang.reflect.Type)","org.apache.commons.lang3.reflect.TypeUtils.boolean containsTypeVariables(java.lang.reflect.Type) -> org.apache.commons.lang3.reflect.TypeUtils.boolean containsTypeVariables(java.lang.reflect.Type)"]},"type":"graph"}]}]}