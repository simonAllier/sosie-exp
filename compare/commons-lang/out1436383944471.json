{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":75,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":51,"org.apache.commons.lang3.ConversionTest.testIntToBinary":30,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":21,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":89,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":39,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":90,"org.apache.commons.lang3.RangeTest.testBetweenWithCompare":96,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":25,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testPerson":43,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":45,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":86,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":48,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":55,"org.apache.commons.lang3.builder.DiffResultTest.testToStringOutput":93,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":50,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":82,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":23,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":44,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":52,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":33,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":94,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":99,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":74,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":70,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":101,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":81,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":34,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":63,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendPadding":31,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":77,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLong":41,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":92,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":35,"org.apache.commons.lang3.RangeTest.testIsWithCompare":95,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":49,"org.apache.commons.lang3.RangeTest.testContains":97,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":68,"org.apache.commons.lang3.text.StrTokenizerTest.test8":9,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":28,"org.apache.commons.lang3.time.DateUtilsTest.testRound":17,"org.apache.commons.lang3.text.StrTokenizerTest.test5":6,"org.apache.commons.lang3.text.StrTokenizerTest.test4":5,"org.apache.commons.lang3.text.StrTokenizerTest.test7":8,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":22,"org.apache.commons.lang3.text.StrTokenizerTest.test6":7,"org.apache.commons.lang3.text.StrTokenizerTest.test1":2,"org.apache.commons.lang3.text.StrTokenizerTest.test3":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":102,"org.apache.commons.lang3.text.StrTokenizerTest.test2":3,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":103,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLong":37,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":42,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":61,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testPerson":87,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":54,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":47,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":10,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":88,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":60,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":1,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":15,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":69,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":12,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":11,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":19,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":29,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLong":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":64,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":20,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":59,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":106},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],"tindex":"0f3c1f88-25a8-11e5-9973-fbffeec6e108","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1393","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} "},"variableMap":{"srcPos":"count","nHexs":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:649","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n} "},"status":-1},{"failures":[],"tindex":"0f3c6da9-25a8-11e5-9973-57d609a7d0ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:141","type":"CtReturnImpl","sourcecode":"return 15"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Triple:130","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.lang3.tuple.Triple<L, M, R>.(getLeft()) == null ? 0 : org.apache.commons.lang3.tuple.Triple<L, M, R>.getLeft().hashCode()) ^ (org.apache.commons.lang3.tuple.Triple<L, M, R>.(getMiddle()) == null ? 0 : org.apache.commons.lang3.tuple.Triple<L, M, R>.getMiddle().hashCode())) ^ (org.apache.commons.lang3.tuple.Triple<L, M, R>.(getRight()) == null ? 0 : org.apache.commons.lang3.tuple.Triple<L, M, R>.getRight().hashCode())"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"0f3c6daa-25a8-11e5-9973-c7c27ac356c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:858","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(((java.util.Date)(java.lang.Object)), int)"},"variableMap":{"date":"date","field":"field","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:780","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Calendar) {\n    return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.round(((java.util.Calendar)(java.lang.Object)), int).getTime();\n} else {\n    throw new java.lang.ClassCastException((\"Could not round \" + java.lang.Object));\n}"},"status":-1},{"failures":[29],"tindex":"0f3c94bb-25a8-11e5-9973-75d2fb695f1f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:322","type":"CtWhileImpl","sourcecode":"while (int < 0) {\n    int += 12;\n    int -= 1;\n}"},"variableMap":{"months":"i","years":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:467","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isLowerCase(char)) {\n    if (boolean) {\n        char[][int] = java.lang.Character.toTitleCase(char);\n        boolean = false;\n    } else {\n        char[][int] = java.lang.Character.toUpperCase(char);\n    }\n} else {\n    boolean = java.lang.Character.isWhitespace(char);\n}"},"status":-1},{"failures":[],"tindex":"0f3c94bc-25a8-11e5-9973-fd0c9768920b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1336","type":"CtIfImpl","sourcecode":"if (((((double[] == null) && (double[] != null)) && ((double[].int) > 0)) || (((double[] == null) && (double[] != null)) && ((double[].int) > 0))) || (((double[] != null) && (double[] != null)) && ((double[].int) != (double[].int)))) {\n    return false;\n} "},"variableMap":{"array2":"array","length":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","array1":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2732","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)) != (org.apache.commons.lang3.ArrayUtils.int)"},"status":-2},{"failures":[30],"tindex":"0f3c94bd-25a8-11e5-9973-a954932c1056","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:237","type":"CtReturnImpl","sourcecode":"return new boolean[]{ false , true , true , false }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1587","type":"CtReturnImpl","sourcecode":"return boolean[]"},"status":-1},{"failures":[31],"tindex":"0f3c94be-25a8-11e5-9973-799316324222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:213","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 8"},"variableMap":{"result":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1367","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[32,33,34,35],"tindex":"0f3cbbcf-25a8-11e5-9973-212c41d27196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:829","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}"},"variableMap":{"this":"this","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:823","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof long[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n} else if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"0f3cbbd0-25a8-11e5-9973-0d70c06ef5bc","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:371","type":"CtIfImpl","sourcecode":"if (short[] == null) {\n    return null;\n} "},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:576","type":"CtReturnImpl","sourcecode":"return short[]"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"0f3ce2e1-25a8-11e5-9973-fdc38327f342","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:853","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append('0')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1523","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"0f3ce2e2-25a8-11e5-9973-97684f064b3d","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6907","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return int <= int ? int : -1;\n} "},"variableMap":{"threshold":"part1","m":"part1","n":"part1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:244","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().isArray()) {\n    return int ^ org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.arrayMemberHash(java.lang.Object.getClass().getComponentType(), java.lang.Object));\n} "},"status":0},{"failures":[],"tindex":"0f3ce2e3-25a8-11e5-9973-f5400b221381","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:175","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.formatDuration(long, \"d\\' days \\'H\\' hours \\'m\\' minutes \\'s\\' seconds\\'\")"},"status":-2},{"failures":[94],"tindex":"0f3ce2e4-25a8-11e5-9973-a96ddd25adac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:682","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)"},"status":-1},{"failures":[],"tindex":"0f3d09f5-25a8-11e5-9973-93b0eb00dd8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} "},"variableMap":{"dstPos":"length","nHex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:997","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Class<?>[][int] = (java.lang.Object[][int]) == null ? null : java.lang.Object[][int].getClass();\n}"},"status":-2},{"failures":[95,96,97],"tindex":"0f3d09f6-25a8-11e5-9973-71a91926a68a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:221","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"0f3d09f7-25a8-11e5-9973-6755c2becf34","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharSequenceUtils:56","type":"CtInvocationImpl","sourcecode":"java.lang.CharSequence.subSequence(int, java.lang.CharSequence.length())"},"status":0},{"failures":[],"tindex":"0f3d09f8-25a8-11e5-9973-8949e6f0ca5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2231","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (int >= (int))) {\n    return \"\";\n} "},"variableMap":{"size":"count","length":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:558","type":"CtReturnImpl","sourcecode":"return new java.lang.String(char[] , 0 , int)"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107],"tindex":"0f3d3109-25a8-11e5-9973-01a7bb8e3bf6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:3715","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"variableMap":{"noOfItems":"length","org.apache.commons.lang3.StringUtils.EMPTY":"source"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:418","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.text.StrSubstitutor.(substitute(org.apache.commons.lang3.text.StrBuilder, 0, int)) == false) {\n    return java.lang.String.substring(int, (int + int));\n} "},"status":-1},{"failures":[108],"tindex":"0f3d310a-25a8-11e5-9973-1fcf74ad41e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:722","type":"CtIfImpl","sourcecode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.appendNull();\n} "},"variableMap":{"this":"this","chars":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1549","type":"CtIfImpl","sourcecode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"0f3c6da9-25a8-11e5-9973-57d609a7d0ee","diffs":[{"branches":{"org.apache.commons.lang3.tuple.ImmutableTripleTest.testHashCode":["org.apache.commons.lang3.tuple.ImmutableTriple_M_getMiddle().b","org.apache.commons.lang3.tuple.ImmutableTriple_L_getLeft().b","org.apache.commons.lang3.tuple.ImmutableTriple_R_getRight().b"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.tuple.ImmutableTripleTest.testHashCode":["org.apache.commons.lang3.tuple.ImmutableTriple.L getLeft()","org.apache.commons.lang3.tuple.ImmutableTriple.R getRight()","org.apache.commons.lang3.tuple.ImmutableTriple.M getMiddle()"]},"edges":{"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":["org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.M getMiddle()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.Triple.int hashCode()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.R getRight()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.L getLeft()"],"org.apache.commons.lang3.tuple.TripleTest.testCompatibilityBetweenTriples":["org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.M getMiddle()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.Triple.int hashCode()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.R getRight()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.R getRight()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.L getLeft()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.MutableTriple.L getLeft()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.M getMiddle()"],"org.apache.commons.lang3.tuple.ImmutableTripleTest.testHashCode":["org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.Triple.int hashCode()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.R getRight()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.L getLeft()","org.apache.commons.lang3.tuple.Triple.int hashCode() -> org.apache.commons.lang3.tuple.ImmutableTriple.M getMiddle()"]},"type":"graph"}]}]}