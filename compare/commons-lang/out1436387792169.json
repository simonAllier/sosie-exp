{"failureDictionary":{"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testPerson":49,"org.apache.commons.lang3.text.StrTokenizerTest.test8":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":71,"org.apache.commons.lang3.text.StrTokenizerTest.test5":16,"org.apache.commons.lang3.text.StrTokenizerTest.test4":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":67,"org.apache.commons.lang3.text.StrTokenizerTest.test7":18,"org.apache.commons.lang3.text.StrTokenizerTest.test6":17,"org.apache.commons.lang3.text.StrTokenizerTest.test1":12,"org.apache.commons.lang3.text.StrTokenizerTest.test3":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":65,"org.apache.commons.lang3.text.StrTokenizerTest.test2":13,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementBooleanArray":4,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentKeyNotPresent":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":79,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":64,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":82,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withoutCause":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":54,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClassInt":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":73,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":52,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":23,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_recursiveCause":39,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCauseStackTrace_Throwable":35,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOfType_ThrowableClass":25,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_jdkNoCause":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":75,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withoutCause":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":80,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":77,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":57,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":7,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":9,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstring_StringInt":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":11,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":60,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetRootCause_Throwable":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":61,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":58,"org.apache.commons.lang3.exception.ExceptionUtilsTest.test_getRootCauseMessage_Throwable":26,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableStream":32,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":48,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":51,"org.apache.commons.lang3.math.NumberUtilsTest.testStringToDoubleString":1,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClassInt":38,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_jdkNoCause":42,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection1":2,"org.apache.commons.lang3.ValidateTest.testNotEmptyCollection2":3,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedSuccess":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":81,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_nested":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":78,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":55,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentUncheckedException":46,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_recursiveCause":41,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_withCause":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":69,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowables_Throwable_nested":27,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableList_Throwable_withCause":43,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testIndexOf_ThrowableClass":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":74,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testPrintRootCauseStackTrace_ThrowableWriter":34,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testGetThrowableCount_Throwable":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":76},"transformations":[{"failures":[0],"tindex":"04a8d2d0-25b1-11e5-8238-5b15ba98c1e7","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6406","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.String.length()) - (int - 3)"},"variableMap":{"str":"str","offset":"start","maxWidth":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2070","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.String.length()) + int"},"status":-1},{"failures":[],"tindex":"04a94801-25b1-11e5-8238-6d013ea45cea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:450","type":"CtDoImpl","sourcecode":"do {\n    int = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(char[], java.text.ParsePosition.getIndex());\n    java.text.ParsePosition.setIndex(((java.text.ParsePosition.getIndex()) + int));\n} while ((int > 0) && ((java.text.ParsePosition.getIndex()) < (java.lang.String.length())) )"},"status":0},{"failures":[],"tindex":"04a94802-25b1-11e5-8238-0b65a4b1e0c7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1649","type":"CtLocalVariableImpl","sourcecode":"char char"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:417","type":"CtLocalVariableImpl","sourcecode":"final char char = char[][int]"},"status":-2},{"failures":[1],"tindex":"04a96f13-25b1-11e5-8238-47679725dbfc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:7053","type":"CtIfImpl","sourcecode":"if (((java.lang.String.length()) == 0) || ((java.lang.String.length()) == 0)) {\n    return 0.0;\n} "},"variableMap":{"m1":"str","m2":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:274","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return double;\n} "},"status":-1},{"failures":[2,3],"tindex":"04a96f14-25b1-11e5-8238-bd7e8fc0d916","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Range:289","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new java.lang.NullPointerException(\"Element is null\");\n} "},"variableMap":{"element":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:296","type":"CtIfImpl","sourcecode":"if (T == null) {\n    throw new java.lang.NullPointerException(java.lang.String.format(java.lang.String, java.lang.Object[]));\n} "},"status":-1},{"failures":[],"tindex":"04a99625-25b1-11e5-8238-81c6a396ad9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:187","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 seconds\", \"\");\n} "},"variableMap":{"duration":"fieldName","tmp":"fieldName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:909","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean)"},"status":-2},{"failures":[4],"tindex":"04a9bd36-25b1-11e5-8238-57bcc1a1ad6a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1260","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"srcPos":"found","nShorts":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5994","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    break;\n} "},"status":-1},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"04a9e447-25b1-11e5-8238-d963dc6735d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:755","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], int, int, int, int)) {\n    if (org.apache.commons.lang3.text.StrTokenizer.isQuote(char[], (int + int), int, int, int)) {\n        org.apache.commons.lang3.text.StrBuilder.append(char[], int, int);\n        int += int * 2;\n        int = org.apache.commons.lang3.text.StrBuilder.size();\n        continue;\n    } \n    boolean = false;\n    int += int;\n    continue;\n} "},"status":-1},{"failures":[22,23,24],"tindex":"04aa0b58-25b1-11e5-8238-954c7b34f1f3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1108","type":"CtIfImpl","sourcecode":"if ((java.lang.String[]) == null) {\n    return \"StrTokenizer[not tokenized yet]\";\n} "},"variableMap":{"tokens":"tokens"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:421","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.text.StrTokenizer.hasPrevious()) {\n    return java.lang.String[][--(int)];\n} "},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"04aa0b59-25b1-11e5-8238-8d0b5700a17d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:637","type":"CtReturnImpl","sourcecode":"return java.util.Collections.emptyList()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:286","type":"CtReturnImpl","sourcecode":"return java.util.List<java.lang.Throwable>"},"status":-1},{"failures":[45,46,47],"tindex":"04aa326a-25b1-11e5-8238-85f37af99d74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:274","type":"CtIfImpl","sourcecode":"if ((java.util.concurrent.ConcurrentMap<K, V> == null) || (org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> == null)) {\n    return null;\n} "},"variableMap":{"init":"init","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:280","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.concurrent.ConcurrentUtils.org.apache.commons.lang3.concurrent.ConcurrentUtils.putIfAbsent(java.util.concurrent.ConcurrentMap<K, V>, K, org.apache.commons.lang3.concurrent.ConcurrentInitializer<V>.get())"},"status":-1},{"failures":[],"tindex":"04aa597b-25b1-11e5-8238-6d2d6cd02746","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:781","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[48,49,50],"tindex":"04aa597c-25b1-11e5-8238-ff1a1261aa43","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:58","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setUseClassName(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:482","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.util.Collection<?>)(java.lang.Object)))"},"status":-1},{"failures":[51],"tindex":"04aa808d-25b1-11e5-8238-2d892b56e21f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5811","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.mutable.MutableInt.increment()"},"status":-1},{"failures":[],"tindex":"04aa808e-25b1-11e5-8238-a5b4ecfa4e0a","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String;\n} "},"variableMap":{"newLineStr":"languageCode","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"languageCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:297","type":"CtIfImpl","sourcecode":"if (java.util.List<java.util.Locale> == null) {\n    java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>();\n    final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList();\n    for (int int = 0 ; int < (java.util.List<java.util.Locale>.size()) ; int++) {\n        final java.util.Locale java.util.Locale = java.util.List<java.util.Locale>.get(int);\n        if (((java.lang.String.equals(java.util.Locale.getLanguage())) && ((java.util.Locale.getCountry().length()) != 0)) && (java.util.Locale.getVariant().isEmpty())) {\n            java.util.List<java.util.Locale>.add(java.util.Locale);\n        } \n    }\n    java.util.List<java.util.Locale> = java.util.Collections.unmodifiableList(java.util.List<java.util.Locale>);\n    org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.putIfAbsent(java.lang.String, java.util.List<java.util.Locale>);\n    java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.java.util.concurrent.ConcurrentMap<java.lang.String, java.util.List<java.util.Locale>>.get(java.lang.String);\n} "},"status":-2},{"failures":[52,53],"tindex":"04aaceaf-25b1-11e5-8238-d5ab6c93651d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ClassUtils:973","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"L\")"},"variableMap":{"classNameBuffer":"wrappedLine"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:211","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String)"},"status":-1},{"failures":[54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"04aaceb0-25b1-11e5-8238-afe048d2c241","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:861","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher.noneMatcher()"},"variableMap":{"delimMatcher":"prefixMatcher"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:978","type":"CtAssignmentImpl","sourcecode":"this.org.apache.commons.lang3.text.StrMatcher = org.apache.commons.lang3.text.StrMatcher"},"status":-1},{"failures":[],"tindex":"04aaf5c1-25b1-11e5-8238-e3424ccfb13a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:109","type":"CtIfImpl","sourcecode":"if ((int >= (int)) && (int <= (int))) {\n    return false;\n} "},"variableMap":{"codepoint":"length","below":"length","above":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:329","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.annotation.Annotation[].int) ; int++) {\n    if (!org.apache.commons.lang3.AnnotationUtils.(org.apache.commons.lang3.AnnotationUtils.equals(java.lang.annotation.Annotation[][int], java.lang.annotation.Annotation[][int]))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[],"tindex":"04ab1cd2-25b1-11e5-8238-f9cf246ab732","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1365","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"04ab1cd3-25b1-11e5-8238-4fc7162a3362","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.SystemUtils:1448","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || (java.lang.String == null)) {\n    return false;\n} "},"variableMap":{"osVersion":"versionPrefix","osName":"version"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1432","type":"CtReturnImpl","sourcecode":"return java.lang.String.startsWith(java.lang.String)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"04a94801-25b1-11e5-8238-6d013ea45cea","diffs":[{"branches":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.StrMatcher$CharMatcher_org.apache.commons.lang3.text.StrMatcher$CharMatcher(char).b","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher_int_isMatch(char[],int,int,int).b","org.apache.commons.lang3.text.StrMatcher$TrimMatcher_org.apache.commons.lang3.text.StrMatcher$TrimMatcher().b","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher_org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[]).b","org.apache.commons.lang3.text.StrMatcher_org.apache.commons.lang3.text.StrMatcher_splitMatcher().b","org.apache.commons.lang3.text.StrMatcher_int_isMatch(char[],int).b","org.apache.commons.lang3.text.StrMatcher_org.apache.commons.lang3.text.StrMatcher().b","org.apache.commons.lang3.text.StrMatcher$NoMatcher_org.apache.commons.lang3.text.StrMatcher$NoMatcher().b"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.StrMatcher$TrimMatcher.org.apache.commons.lang3.text.StrMatcher$TrimMatcher()","org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher splitMatcher()","org.apache.commons.lang3.text.StrMatcher$CharMatcher.org.apache.commons.lang3.text.StrMatcher$CharMatcher(char)","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[])","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.int isMatch(char[],int,int,int)","org.apache.commons.lang3.text.StrMatcher$NoMatcher.org.apache.commons.lang3.text.StrMatcher$NoMatcher()","org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher()"]},"edges":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$TrimMatcher.org.apache.commons.lang3.text.StrMatcher$TrimMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$CharMatcher.org.apache.commons.lang3.text.StrMatcher$CharMatcher(char)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[])","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int) -> org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int) -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.int isMatch(char[],int,int,int)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$NoMatcher.org.apache.commons.lang3.text.StrMatcher$NoMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher splitMatcher()"]},"type":"graph"}]}]}