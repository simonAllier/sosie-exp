{"failureDictionary":{"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArray":35,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShort":9,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":43,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":49,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArray":24,"org.apache.commons.lang3.mutable.MutableLongTest.testEquals":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":44,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":51,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":38,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":14,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":41,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloat":8,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":20,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArray":1,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArray":32,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":2,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEquals":53,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":4,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBoolean":16,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":29,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArray":5,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":15,"org.apache.commons.lang3.ConversionTest.testHexToByte":37,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testChar":12,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDouble":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":40,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":0,"org.apache.commons.lang3.ArrayUtilsAddTest.testAddObjectAtIndex":34,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetContentStart":50,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArray":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":42,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArray":22,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":27,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":33,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testEqualsOnStrings":52,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":46,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArray":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArray":17,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLong":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":39,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":21,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testInt":6,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByte":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":3,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":47,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":48},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"e4a9c674-25e8-11e5-9c4b-bd30c379e3c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:388","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:927","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[34],"tindex":"e4a9ed85-25e8-11e5-9c4b-3d7e4d366c02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1226","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 16) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 64\");\n} "},"variableMap":{"srcPos":"index","nShorts":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4574","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.Array.set(java.lang.Object, int, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"e4a9ed86-25e8-11e5-9c4b-59659ce3fdbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2208","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"e4aa1497-25e8-11e5-9c4b-cb2160246c13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:742","type":"CtIfImpl","sourcecode":"if ((java.lang.String.startsWith(\"0\", int)) && ((java.lang.String.length()) > (int + 1))) {\n    int = 8;\n    int++;\n} "},"variableMap":{"str":"fieldSeparator","radix":"sepLen","pos":"sepLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:413","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((java.lang.StringBuffer.charAt(((int - 1) - int))) != (java.lang.String.charAt(((int - 1) - int)))) {\n        boolean = false;\n        break;\n    } \n}"},"status":-2},{"failures":[],"tindex":"e4aa1498-25e8-11e5-9c4b-af16ce2edb11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:134","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String> = java.util.Collections.unmodifiableMap(java.util.Map<java.lang.String, java.lang.String>)"},"status":-2},{"failures":[35],"tindex":"e4aa1499-25e8-11e5-9c4b-93d64ce7909b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:863","type":"CtIfImpl","sourcecode":"if ((float[] == null) || (float[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} "},"status":-1},{"failures":[],"tindex":"e4aa149a-25e8-11e5-9c4b-97d0544e3d32","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:451","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.lang3.text.StrMatcher.splitMatcher().isMatch(char[], java.text.ParsePosition.getIndex())"},"status":0},{"failures":[36],"tindex":"e4aa3bab-25e8-11e5-9c4b-69caac1b8461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:845","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:237","type":"CtReturnImpl","sourcecode":"return (long) == (((org.apache.commons.lang3.mutable.MutableLong)(java.lang.Object)).longValue())"},"status":-1},{"failures":[],"tindex":"e4aa3bac-25e8-11e5-9c4b-19d6efdf6bc0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:299","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1000"},"variableMap":{"milliseconds":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:739","type":"CtAssignmentImpl","sourcecode":"int = +1"},"status":0},{"failures":[37],"tindex":"e4aa3bad-25e8-11e5-9c4b-5b0d0a588929","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:82","type":"CtLocalVariableImpl","sourcecode":"int int = int + 2"},"variableMap":{"index":"shift"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1019","type":"CtLocalVariableImpl","sourcecode":"final int int = 15 << int"},"status":-1},{"failures":[],"tindex":"e4aa3bae-25e8-11e5-9c4b-4d7d562e2e93","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6941","type":"CtLocalVariableImpl","sourcecode":"final int int = int > ((java.lang.Integer.int) - int) ? int : java.lang.Math.min(int, (int + int))"},"variableMap":{"java.lang.Integer.MAX_VALUE":"startIndexInclusive","j":"startIndexInclusive","threshold":"startIndexInclusive","n":"startIndexInclusive"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1682","type":"CtLocalVariableImpl","sourcecode":"int int = int < 0 ? 0 : int"},"status":-2},{"failures":[],"tindex":"e4aa62bf-25e8-11e5-9c4b-756dd7e4580f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6409","type":"CtIfImpl","sourcecode":"if (int <= 4) {\n    return (java.lang.String.substring(0, (int - 3))) + java.lang.String;\n} "},"variableMap":{"str":"org.apache.commons.lang3.StringUtils.EMPTY","offset":"i","abrevMarker":"org.apache.commons.lang3.StringUtils.EMPTY","maxWidth":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:311","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"status":-2},{"failures":[38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"e4aa62c0-25e8-11e5-9c4b-a54db9fb6607","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1246","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.isEmpty()"},"variableMap":{"this":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:478","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length())"},"status":-1},{"failures":[50],"tindex":"e4aa62c1-25e8-11e5-9c4b-fb628107311e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1007","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\");\n} "},"variableMap":{"prefix":"contentStart"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1818","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} "},"status":-1},{"failures":[51],"tindex":"e4aa62c2-25e8-11e5-9c4b-21e0fb2622a4","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:314","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.clear()"},"variableMap":{"cal":"c"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:453","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.setTime(java.util.Date)"},"status":-1},{"failures":[],"tindex":"e4aa89d3-25e8-11e5-9c4b-f72c7ec69da9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:156","type":"CtIfImpl","sourcecode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} "},"variableMap":{"date2":"focus","date1":"focus"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1123","type":"CtIfImpl","sourcecode":"if (java.util.Date == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} "},"status":0},{"failures":[],"tindex":"e4aa89d4-25e8-11e5-9c4b-1bef032a81da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1677","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == null) {\n    return false;\n} "},"variableMap":{"searchChars":"cs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:337","type":"CtReturnImpl","sourcecode":"return !(org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence))"},"status":-2},{"failures":[],"tindex":"e4aa89d5-25e8-11e5-9c4b-1bcea38f9731","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:739","type":"CtIfImpl","sourcecode":"if ((short[] == null) || (short[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} "},"variableMap":{"lhs":"lhs","this":"this","rhs":"rhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:743","type":"CtIfImpl","sourcecode":"if ((short[].int) != (short[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} "},"status":0},{"failures":[],"tindex":"e4aab0e6-25e8-11e5-9c4b-6b95878c32de","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:132","type":"CtReturnImpl","sourcecode":"return 3"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:298","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[52,53],"tindex":"e4aab0e7-25e8-11e5-9c4b-756bfd1fe4db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:799","type":"CtReturnImpl","sourcecode":"return false"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"e4aa149a-25e8-11e5-9c4b-97d0544e3d32","diffs":[{"branches":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.StrMatcher$CharMatcher_org.apache.commons.lang3.text.StrMatcher$CharMatcher(char).b","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher_int_isMatch(char[],int,int,int).b","org.apache.commons.lang3.text.StrMatcher$TrimMatcher_org.apache.commons.lang3.text.StrMatcher$TrimMatcher().b","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher_org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[]).b","org.apache.commons.lang3.text.StrMatcher_org.apache.commons.lang3.text.StrMatcher_splitMatcher().b","org.apache.commons.lang3.text.StrMatcher_int_isMatch(char[],int).b","org.apache.commons.lang3.text.StrMatcher_org.apache.commons.lang3.text.StrMatcher().b","org.apache.commons.lang3.text.StrMatcher$NoMatcher_org.apache.commons.lang3.text.StrMatcher$NoMatcher().b"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.StrMatcher$TrimMatcher.org.apache.commons.lang3.text.StrMatcher$TrimMatcher()","org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher splitMatcher()","org.apache.commons.lang3.text.StrMatcher$CharMatcher.org.apache.commons.lang3.text.StrMatcher$CharMatcher(char)","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[])","org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.int isMatch(char[],int,int,int)","org.apache.commons.lang3.text.StrMatcher$NoMatcher.org.apache.commons.lang3.text.StrMatcher$NoMatcher()","org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher()"]},"edges":{"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":["org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$TrimMatcher.org.apache.commons.lang3.text.StrMatcher$TrimMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$CharMatcher.org.apache.commons.lang3.text.StrMatcher$CharMatcher(char)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.org.apache.commons.lang3.text.StrMatcher$CharSetMatcher(char[])","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int) -> org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int)","org.apache.commons.lang3.text.StrMatcher.int isMatch(char[],int) -> org.apache.commons.lang3.text.StrMatcher$CharSetMatcher.int isMatch(char[],int,int,int)","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher$NoMatcher.org.apache.commons.lang3.text.StrMatcher$NoMatcher()","org.apache.commons.lang3.text.ExtendedMessageFormat.void seekNonWs(java.lang.String,java.text.ParsePosition) -> org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher splitMatcher()"]},"type":"graph"}]}]}