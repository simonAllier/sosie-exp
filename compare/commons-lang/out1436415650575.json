{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsTest.testCeil":76,"org.apache.commons.lang3.text.StrTokenizerTest.test8":45,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":6,"org.apache.commons.lang3.text.StrTokenizerTest.test5":43,"org.apache.commons.lang3.ValidateTest.testNotEmptyArray2":78,"org.apache.commons.lang3.text.StrTokenizerTest.test4":42,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":5,"org.apache.commons.lang3.text.StrTokenizerTest.test7":44,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":73,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":8,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":55,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":67,"org.apache.commons.lang3.ValidateTest.testNotEmptyArray1":77,"org.apache.commons.lang3.text.StrTokenizerTest.test1":39,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":38,"org.apache.commons.lang3.text.StrTokenizerTest.test3":41,"org.apache.commons.lang3.text.StrTokenizerTest.test2":40,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":68,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":56,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":28,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":29,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":59,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":66,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":18,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":19,"org.apache.commons.lang3.event.EventUtilsTest.testBindFilteredEventsToMethod":13,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays":2,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithNoAddMethod":9,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":23,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerThrowsException":14,"org.apache.commons.lang3.math.FractionTest.testToProperString":72,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":74,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":0,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethodWithEvent":15,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":49,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementByteArray":1,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":37,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":30,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":17,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":70,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":32,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":34,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":36,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":62,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListenerWithPrivateAddMethod":12,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":71,"org.apache.commons.lang3.event.EventUtilsTest.testBindEventsToMethod":11,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":64,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":52,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":20,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":50,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":63,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":48,"org.apache.commons.lang3.ClassUtilsTest.testGetClassByNormalNameArrays2D":3,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":16,"org.apache.commons.lang3.time.DateUtilsTest.testTruncate":75,"org.apache.commons.lang3.ClassUtilsTest.testWithInterleavingWhitespace":4,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":24,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":60,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":65,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":7,"org.apache.commons.lang3.event.EventUtilsTest.testAddEventListener":10},"transformations":[{"failures":[0],"tindex":"e4258c2d-25f1-11e5-9041-a170eca2b702","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1096","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.reset()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:373","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.setQuoteChar(char)"},"status":-1},{"failures":[1],"tindex":"e42e65ce-25f1-11e5-9041-85f5e6db5e6e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.SerializationUtils:265","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The byte[] must not be null\");\n} "},"variableMap":{"objectData":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5360","type":"CtForEachImpl","sourcecode":"for (final byte byte : byte[]) {\n    final java.lang.Byte java.lang.Byte = java.lang.Byte.valueOf(byte);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Byte);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Byte, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Byte, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}"},"status":-1},{"failures":[2,3,4],"tindex":"e4325d6f-25f1-11e5-9041-1b9f13f3f06c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:320","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"The string must not be null\");\n} "},"variableMap":{"str":"className"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:963","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"[]\")) {\n    final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n    while (java.lang.String.endsWith(\"[]\")) {\n        java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 2));\n        java.lang.StringBuilder.append(\"[\");\n    }\n    final java.lang.String java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n    if (java.lang.String != null) {\n        java.lang.StringBuilder.append(java.lang.String);\n    } else {\n        java.lang.StringBuilder.append(\"L\").append(java.lang.String).append(\";\");\n    }\n    java.lang.String = java.lang.StringBuilder.toString();\n} "},"status":-1},{"failures":[],"tindex":"e4328480-25f1-11e5-9041-3121122293af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:540","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"HashCodeBuilder requires an odd initial value\")"},"status":0},{"failures":[5],"tindex":"e4328481-25f1-11e5-9041-136e8ab987c6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:176","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be negative\");\n} "},"status":-1},{"failures":[],"tindex":"e4328482-25f1-11e5-9041-b9ded5f8e662","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:495","type":"CtIfImpl","sourcecode":"if (int > (-1)) {\n    if (int > (-1)) {\n        if ((int < int) || (int > (java.lang.String.length()))) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring((int + 1), int);\n    } else {\n        java.lang.String = java.lang.String.substring((int + 1));\n    }\n    java.lang.String = java.lang.String.substring(0, int);\n    int = java.lang.String.length();\n} else {\n    if (int > (-1)) {\n        if (int > (java.lang.String.length())) {\n            throw new java.lang.NumberFormatException((java.lang.String + \" is not a valid number.\"));\n        } \n        java.lang.String = java.lang.String.substring(0, int);\n    } else {\n        java.lang.String = java.lang.String;\n    }\n    java.lang.String = null;\n}"},"variableMap":{"decPos":"len","str":"str","numDecimals":"len","dec":"str","mant":"str","expPos":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:106","type":"CtIfImpl","sourcecode":"if (int < 3) {\n    throw new java.lang.IllegalArgumentException((\"Invalid locale format: \" + java.lang.String));\n} "},"status":-2},{"failures":[6,7,8],"tindex":"e432d2a3-25f1-11e5-9041-bb651d3b8954","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2601","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[9,10,11,12,13,14,15],"tindex":"e432d2a4-25f1-11e5-9041-336451101e13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1418","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} "},"variableMap":{"array2":"eventSource","array1":"eventSource"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.event.EventUtils:49","type":"CtTryImpl","sourcecode":"try {\n    org.apache.commons.lang3.reflect.MethodUtils.invokeMethod(java.lang.Object, (\"add\" + (java.lang.Class<L>.getSimpleName())), L);\n} catch (final java.lang.NoSuchMethodException e) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have a public add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.IllegalAccessException e) {\n    throw new java.lang.IllegalArgumentException(((((((\"Class \" + (java.lang.Object.getClass().getName())) + \" does not have an accessible add\") + (java.lang.Class<L>.getSimpleName())) + \" method which takes a parameter of type \") + (java.lang.Class<L>.getName())) + \".\"));\n} catch (final java.lang.reflect.InvocationTargetException e) {\n    throw new java.lang.RuntimeException(\"Unable to add listener.\" , java.lang.reflect.InvocationTargetException.getCause());\n}"},"status":-1},{"failures":[],"tindex":"e434ce75-25f1-11e5-9041-21c6c62b645d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:303","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The Integer did not match either specified value\")"},"status":-2},{"failures":[],"tindex":"e4389f06-25f1-11e5-9041-9bde41e520c3","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:390","type":"CtReturnImpl","sourcecode":"return char[].clone()"},"variableMap":{"array":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:362","type":"CtReturnImpl","sourcecode":"return char[]"},"status":-2},{"failures":[],"tindex":"e438c617-25f1-11e5-9041-31e8dddd0725","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:672","type":"CtIfImpl","sourcecode":"if (java.lang.Throwable == null) {\n    return \"\";\n} "},"variableMap":{"th":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:694","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.getMessage(java.lang.Throwable)"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,0,49,50,51,52,53,54,55,56,57,58,59,60,61,62],"tindex":"e438c618-25f1-11e5-9041-e7ba852d109c","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1028","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.append(int)"},"variableMap":{"this":"workArea","value":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:810","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.append(char[][int++])"},"status":-1},{"failures":[],"tindex":"e438ed29-25f1-11e5-9041-cff43ddf9d5f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:730","type":"CtLocalVariableImpl","sourcecode":"int int = 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:981","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[63],"tindex":"e438ed2a-25f1-11e5-9041-7d3063e9ca7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:88","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"value":"altered"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:775","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[64,65,66,67,68,69,70,71],"tindex":"e439143b-25f1-11e5-9041-17f0d6bd9406","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:834","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)))"},"variableMap":{"this":"builder","object":"fieldValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(java.lang.Object)"},"status":-1},{"failures":[72],"tindex":"e43b100c-25f1-11e5-9041-c9e18180fb12","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:333","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring((int + 1))"},"variableMap":{"str":"toProperString","pos":"properNumerator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()"},"status":-1},{"failures":[],"tindex":"e43ce4cd-25f1-11e5-9041-237f216b66c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2301","type":"CtAssignmentImpl","sourcecode":"int = int < 0 ? 0 : int"},"variableMap":{"startIndex":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:330","type":"CtAssignmentImpl","sourcecode":"int = java.lang.String.indexOf(' ')"},"status":0},{"failures":[],"tindex":"e43ce4ce-25f1-11e5-9041-2b58686d5be5","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.mutable.MutableLong:212","type":"CtReturnImpl","sourcecode":"return long"},"variableMap":{"value":"periodCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:363","type":"CtReturnImpl","sourcecode":"return (long) == 0 ? 0 : ((double)(long)) / ((double)(long))"},"status":-2},{"failures":[73,74,75,76],"tindex":"e43d0bdf-25f1-11e5-9041-77965c3d543b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:390","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 0;\n} "},"variableMap":{"fromIndex":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1057","type":"CtIfImpl","sourcecode":"if (int >= 15) {\n    int -= 15;\n} "},"status":-1},{"failures":[77,78],"tindex":"e43d0be0-25f1-11e5-9041-ffe132ef443f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:248","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(java.lang.String.format(java.lang.String, java.lang.Object[]))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}