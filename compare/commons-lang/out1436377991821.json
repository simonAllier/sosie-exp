{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmpty":9,"org.apache.commons.lang3.text.StrBuilderTest.testConstructors":13,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":14,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":33,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":48,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":30,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":17,"org.apache.commons.lang3.tuple.MutablePairTest.testSerialization":4,"org.apache.commons.lang3.tuple.ImmutablePairTest.testSerialization":5,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":38,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":34,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":32,"org.apache.commons.lang3.tuple.MutableTripleTest.testSerialization":6,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayObject":7,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":45,"org.apache.commons.lang3.builder.CompareToBuilderTest.testBooleanArray":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":43,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":29,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":22,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":24,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":41,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":26,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":19,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder":20,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_char":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":46,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":44,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":49,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":2,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":42,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":35,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StrBuilder_int_int":53,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String":21,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":1,"org.apache.commons.lang3.tuple.ImmutableTripleTest.testSerialization":3,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":25,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":36,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":47,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":50,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_char":15,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":51,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":8,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":28,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":52,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_StrMatcher":10,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":11,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":27,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":37,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":18,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":39},"transformations":[{"failures":[0],"tindex":"332c4afd-259a-11e5-89a6-310a9644f8b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:971","type":"CtIfImpl","sourcecode":"if (boolean[] == boolean[]) {\n    return this;\n} "},"status":-1},{"failures":[],"tindex":"332c720e-259a-11e5-89a6-89b40ad56b3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable, java.lang.Class<?>, 0, true)"},"status":-2},{"failures":[],"tindex":"332c720f-259a-11e5-89a6-bbe6fe85e9b3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4568","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.reflect.Array.getLength(java.lang.Object)"},"status":-2},{"failures":[1,2,3,4,5,6],"tindex":"332c7210-259a-11e5-89a6-73f46811ac87","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:529","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.lang3.time.FastDatePrinter) == false) {\n    return false;\n} "},"variableMap":{"obj":"object1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:160","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == null) || (java.lang.Object == null)) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"332c7211-259a-11e5-89a6-796bc1044ca2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateFormatUtils:213","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.DateFormatUtils.org.apache.commons.lang3.time.DateFormatUtils.format(new java.util.Date(long), java.lang.String, java.util.TimeZone, null)"},"status":-2},{"failures":[],"tindex":"332c7212-259a-11e5-89a6-8db5a5af4033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:884","type":"CtIfImpl","sourcecode":"if ((this) == org.apache.commons.lang3.math.Fraction) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"332c7213-259a-11e5-89a6-c5d4b3c60dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:693","type":"CtIfImpl","sourcecode":"if ((java.lang.Long[] == null) || ((java.lang.Long[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} "},"variableMap":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY","length":"length","org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_LONG_OBJECT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3070","type":"CtIfImpl","sourcecode":"if (long[] == null) {\n    return null;\n} else if ((long[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Long[];\n} "},"status":-2},{"failures":[7],"tindex":"332c9824-259a-11e5-89a6-41f9248399df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:168","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue(org.apache.commons.lang3.StringUtils.isNotBlank(java.lang.String), \"The field name must not be blank/empty\")"},"variableMap":{"fieldName":"org.apache.commons.lang3.StringUtils.EMPTY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:3994","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"status":-1},{"failures":[],"tindex":"332c9825-259a-11e5-89a6-85d9b3be3a37","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1173","type":"CtIfImpl","sourcecode":"if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n    int = java.util.Calendar.int;\n    int = java.util.Calendar.int;\n} "},"variableMap":{"rangeStyle":"java.util.Calendar.MONTH","org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_MONDAY":"java.util.Calendar.HOUR","endCutoff":"java.util.Calendar.DAY_OF_MONTH","startCutoff":"java.util.Calendar.AM_PM","java.util.Calendar.MONDAY":"java.util.Calendar.MILLISECOND","java.util.Calendar.SUNDAY":"java.util.Calendar.DAY_OF_WEEK_IN_MONTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:195","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case 'G' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'y' :\n        if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n        }\n        break;\n    case 'M' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 3) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n        }\n        break;\n    case 'd' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'h' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'H' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'm' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 's' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'S' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'E' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n        break;\n    case 'D' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'F' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'w' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'W' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'a' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'k' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'K' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'z' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        }\n        break;\n    case 'Z' :\n        if (int == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        }\n        break;\n    case '\\'' :\n        final java.lang.String java.lang.String = java.lang.String.substring(1);\n        if ((java.lang.String.length()) == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n}"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"332cbf36-259a-11e5-89a6-79108143f081","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:490","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} "},"variableMap":{"numerator":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:514","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final int int = org.apache.commons.lang3.text.StrBuilder.length();\n    org.apache.commons.lang3.text.StrBuilder.ensureCapacity((int + int));\n    java.lang.String.getChars(0, int, char[], int);\n    int += int;\n} "},"status":-1},{"failures":[],"tindex":"332cbf37-259a-11e5-89a6-158856d638fd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:6039","type":"CtLocalVariableImpl","sourcecode":"final int int = (int - int) - 1"},"status":-2},{"failures":[],"tindex":"332cbf38-259a-11e5-89a6-9faebf296018","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.LocaleUtils:195","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = new java.util.ArrayList<java.util.Locale>(4)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:299","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.util.Locale> java.util.List<java.util.Locale> = org.apache.commons.lang3.LocaleUtils.org.apache.commons.lang3.LocaleUtils.availableLocaleList()"},"status":-2},{"failures":[23,24,2,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"332cbf39-259a-11e5-89a6-8714cdf9c5af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1389","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    return false;\n} "},"variableMap":{"hasDecPoint":"testTransients","hasExp":"testTransients"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:356","type":"CtTryImpl","sourcecode":"try {\n    if (java.lang.Class<?>.isArray()) {\n        org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.Object, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        while (((java.lang.Class<?>.getSuperclass()) != null) && (java.lang.Class<?> != java.lang.Class<?>)) {\n            java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n            org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[]);\n        }\n    }\n} catch (final java.lang.IllegalArgumentException e) {\n    return false;\n}"},"status":-1},{"failures":[48,49],"tindex":"332ce64a-259a-11e5-89a6-fba6923cc73c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:774","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 'u'"},"variableMap":{"size":"size","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:778","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 'f'"},"status":-1},{"failures":[50,51,52],"tindex":"332ce64b-259a-11e5-89a6-879b8f31bf73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:426","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(java.lang.String)"},"status":-1},{"failures":[],"tindex":"332ce64c-259a-11e5-89a6-4d659b9a03d2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6025","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    continue;\n} "},"variableMap":{"prevIndex":"numerator","index":"java.lang.Integer.MIN_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:146","type":"CtIfImpl","sourcecode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate\");\n} "},"status":-2},{"failures":[],"tindex":"332ce64d-259a-11e5-89a6-cd04285ada56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:300","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 1"},"variableMap":{"seconds":"entityValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:121","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.parseInt(java.lang.CharSequence.subSequence(int, int).toString(), 10)"},"status":-2},{"failures":[53],"tindex":"332ce64e-259a-11e5-89a6-2d337a3a3b00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:112","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Semi-colon required at end of numeric entity\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:703","type":"CtThrowImpl","sourcecode":"throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\")"},"status":-1},{"failures":[],"tindex":"332d0d5f-259a-11e5-89a6-db0bd9e3d544","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setDefaultFullDetail(true)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:530","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}