{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":59,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Boolean":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":56,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":7,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":74,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":26,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxLong":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":37,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":32,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":45,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":83,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":81,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLong":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":31,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":17,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":6,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":85,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":55,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":91,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":93,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":76,"org.apache.commons.lang3.builder.EqualsBuilderTest.testAccessors":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":42,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":36,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":79,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testBlank":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":2,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":86,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":89},"transformations":[{"failures":[],"tindex":"9e1787e8-25a2-11e5-8554-13593ac3912f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:371","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder"},"status":-2},{"failures":[],"tindex":"9e17d609-25a2-11e5-8554-bf203ce8230f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:1117","type":"CtIfImpl","sourcecode":"if (int > int) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"i","endLimit":"i","startPos":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2566","type":"CtIfImpl","sourcecode":"if (double == (double[][int])) {\n    return int;\n} "},"status":0},{"failures":[],"tindex":"9e17d60a-25a2-11e5-8554-bf1c719902b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:392","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.Range<T>.org.apache.commons.lang3.Range.between(T, T, org.apache.commons.lang3.Range<T>.getComparator())"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73],"tindex":"9e17d60b-25a2-11e5-8554-0994f9dabd0e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:342","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, java.lang.String)"},"status":-1},{"failures":[],"tindex":"9e17fd1c-25a2-11e5-8554-c57e4d87548a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:187","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) == ' ') {\n    int++;\n    continue;\n} "},"variableMap":{"str":"replaceStr","offset":"replaceCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1999","type":"CtForImpl","sourcecode":"for (int int = int ; (int < int) && (int != 0) ; int++) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int > 0) {\n        org.apache.commons.lang3.text.StrBuilder.replaceImpl(int, (int + int), int, java.lang.String, int);\n        int = (int - int) + int;\n        int = (int + int) - 1;\n        if (int > 0) {\n            int--;\n        } \n    } \n}"},"status":-2},{"failures":[74,75],"tindex":"9e17fd1d-25a2-11e5-8554-0da3b8aa1443","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:557","type":"CtReturnImpl","sourcecode":"return '7'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:571","type":"CtReturnImpl","sourcecode":"return '3'"},"status":-1},{"failures":[76],"tindex":"9e17fd1e-25a2-11e5-8554-09f425e4e998","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:181","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[77],"tindex":"9e18242f-25a2-11e5-8554-ef352013f798","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:97","type":"CtAssignmentImpl","sourcecode":"this.boolean = false"},"variableMap":{"value":"isEquals"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:939","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"9e182430-25a2-11e5-8554-21ce7323f8c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:420","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.lang3.text.ExtendedMessageFormat.char).append(org.apache.commons.lang3.text.ExtendedMessageFormat.readArgumentIndex(java.lang.String, org.apache.commons.lang3.text.ExtendedMessageFormat.next(java.text.ParsePosition)))"},"status":-2},{"failures":[],"tindex":"9e182431-25a2-11e5-8554-adb2fb8d9c5a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:223","type":"CtReturnImpl","sourcecode":"return ((java.util.Comparator<T>.compare(T, T)) > (-1)) && ((java.util.Comparator<T>.compare(T, T)) < 1)"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91],"tindex":"9e182432-25a2-11e5-8554-e371a1eeae33","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:851","type":"CtIfImpl","sourcecode":"if (int < 100) {\n    for (int int = int ; (--int) >= 2 ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(((char)((int / 10) + '0')));\n    java.lang.StringBuffer.append(((char)((int % 10) + '0')));\n} else {\n    int int;\n    if (int < 1000) {\n        int = 3;\n    } else {\n        org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int);\n        int = java.lang.Integer.toString(int).length();\n    }\n    for (int int = int ; (--int) >= int ; ) {\n        java.lang.StringBuffer.append('0');\n    }\n    java.lang.StringBuffer.append(java.lang.Integer.toString(int));\n}"},"variableMap":{"mSize":"startIndex","buffer":"str","value":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:599","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.lang.StringBuffer.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} "},"status":-1},{"failures":[92,93],"tindex":"9e184b43-25a2-11e5-8554-ed8bad83901d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:863","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.toString(int).length()"},"variableMap":{"digits":"size","value":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:781","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[],"tindex":"9e184b44-25a2-11e5-8554-63439fe4806c","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:858","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1125","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"9e184b45-25a2-11e5-8554-63de21311a74","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:211","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateInstance(int, java.util.TimeZone, null)"},"variableMap":{"timeZone":"timeZone","style":"style","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:273","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, null)"},"status":-2},{"failures":[94],"tindex":"9e184b46-25a2-11e5-8554-192e359052f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:1792","type":"CtAssignmentImpl","sourcecode":"long[][int] = long[][int]"},"variableMap":{"array":"array","i":"j","j":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:944","type":"CtAssignmentImpl","sourcecode":"long = long[][int]"},"status":-1},{"failures":[95],"tindex":"9e187257-25a2-11e5-8554-397ec2310949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:775","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 'e'"},"variableMap":{"size":"index","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1589","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 'a'"},"status":-1},{"failures":[],"tindex":"9e187258-25a2-11e5-8554-e5cc416a65ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.OctalUnescaper:45","type":"CtLocalVariableImpl","sourcecode":"int int = int + 3"},"status":-2},{"failures":[96],"tindex":"9e187259-25a2-11e5-8554-6188c2b6ae78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:239","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return null;\n} "},"variableMap":{"value":"trueValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:358","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return java.lang.Boolean.java.lang.Boolean;\n} "},"status":-1},{"failures":[],"tindex":"9e18725a-25a2-11e5-8554-db59efa864c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:282","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String))"},"status":0},{"failures":[],"tindex":"9e18725b-25a2-11e5-8554-ff065ba7f6e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FormatCache:160","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(java.lang.Integer.valueOf(int), null, java.util.TimeZone, java.util.Locale)"},"variableMap":{"dateStyle":"timeStyle","this":"this","timeZone":"timeZone","locale":"locale"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:177","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(null, java.lang.Integer.valueOf(int), java.util.TimeZone, java.util.Locale)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"9e18725b-25a2-11e5-8554-ff065ba7f6e5","diffs":[{"nodes":{"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":["org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.org.apache.commons.lang3.time.FastDatePrinter$StringLiteral(java.lang.String)","org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)","org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.int estimateLength()","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)","org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)","org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.int hashCode()","org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)","org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)"]},"edges":{"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":["org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.int estimateLength() -> org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.java.util.List parsePattern() -> org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.org.apache.commons.lang3.time.FastDatePrinter$StringLiteral(java.lang.String)","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int) -> org.apache.commons.lang3.time.FastDatePrinter.java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale)","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$StringLiteral.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.java.util.List parsePattern() -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int)","org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.int estimateLength() -> org.apache.commons.lang3.time.FastDatePrinter$UnpaddedNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int) -> org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int)","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale) -> org.apache.commons.lang3.time.FastDateParser.java.lang.StringBuilder escapeRegex(java.lang.StringBuilder,java.lang.String,boolean)","org.apache.commons.lang3.time.FastDatePrinter.java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.int hashCode()","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.java.util.List parsePattern() -> org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule)","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField.int estimateLength()","org.apache.commons.lang3.time.FastDatePrinter.void init() -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule.int estimateLength()","org.apache.commons.lang3.time.FastDateParser.void init(java.util.Calendar) -> org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.boolean addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder)","org.apache.commons.lang3.time.FastDateParser.org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar) -> org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy.org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale)","org.apache.commons.lang3.time.FastDatePrinter.org.apache.commons.lang3.time.FastDatePrinter$NumberRule selectNumberRule(int,int) -> org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField.org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int)","org.apache.commons.lang3.time.FastDatePrinter.java.lang.String getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale) -> org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey.org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale)"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":["org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s23","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s26","org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField_int_estimateLength().b","org.apache.commons.lang3.time.FastDateParser_java.lang.StringBuilder_escapeRegex(java.lang.StringBuilder,java.lang.String,boolean).e1","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().t3","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule_org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule(java.util.TimeZone,java.util.Locale,int).b","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey_org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale).e1","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule_int_estimateLength().b","org.apache.commons.lang3.time.FormatCache_java.lang.String_getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale).e2","org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField_org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int).e1","org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField_org.apache.commons.lang3.time.FastDatePrinter$PaddedNumberField(int,int).b","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s18","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t3","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t2","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t1","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s17","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s14","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s15","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s13","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey_org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale).t1","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s10","org.apache.commons.lang3.time.FastDatePrinter_java.lang.String_getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale).t1","org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField_org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter$NumberRule).b","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey_int_hashCode().b","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t6","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t5","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).t4","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).l8","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).l7","org.apache.commons.lang3.time.FastDatePrinter_java.lang.String_getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale).e2","org.apache.commons.lang3.time.FastDateParser_java.lang.StringBuilder_escapeRegex(java.lang.StringBuilder,java.lang.String,boolean).s5","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().e8","org.apache.commons.lang3.time.FastDatePrinter_java.lang.String_getTimeZoneDisplay(java.util.TimeZone,boolean,int,java.util.Locale).b","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().e6","org.apache.commons.lang3.time.FastDatePrinter$StringLiteral_org.apache.commons.lang3.time.FastDatePrinter$StringLiteral(java.lang.String).b","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().e2","org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField_org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField(int).b","org.apache.commons.lang3.time.FastDatePrinter$StringLiteral_int_estimateLength().b","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_boolean_addRegex(org.apache.commons.lang3.time.FastDateParser,java.lang.StringBuilder).b","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s22","org.apache.commons.lang3.time.FastDateParser_org.apache.commons.lang3.time.FastDateParser$Strategy_getStrategy(java.lang.String,java.util.Calendar).s20","org.apache.commons.lang3.time.FastDatePrinter_org.apache.commons.lang3.time.FastDatePrinter$NumberRule_selectNumberRule(int,int).s3","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).b","org.apache.commons.lang3.time.FastDatePrinter_org.apache.commons.lang3.time.FastDatePrinter$NumberRule_selectNumberRule(int,int).s2","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e4","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e3","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e2","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e1","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s11","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s10","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s13","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s12","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s15","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e6","org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy_org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy(java.util.Locale).e5","org.apache.commons.lang3.time.FastDatePrinter_java.util.List_parsePattern().s16","org.apache.commons.lang3.time.FastDatePrinter$TwelveHourField_int_estimateLength().b","org.apache.commons.lang3.time.FormatCache_java.lang.String_getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale).t2","org.apache.commons.lang3.time.FormatCache_java.lang.String_getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale).t3","org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey_org.apache.commons.lang3.time.FastDatePrinter$TimeZoneDisplayKey(java.util.TimeZone,boolean,int,java.util.Locale).b","org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField_int_estimateLength().b"]},"type":"branch"}]}]}