{"failureDictionary":{"org.apache.commons.lang3.math.FractionTest.testAdd":11,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":5,"org.apache.commons.lang3.math.FractionTest.testReduce":15,"org.apache.commons.lang3.ConversionTest.testShortToHex":20,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testHandleCauseChecked":6,"org.apache.commons.lang3.time.DateUtilsTest.testWeekIterator":3,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":8,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxFloat":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":21,"org.apache.commons.lang3.CharSetTest.testGetInstance_Stringarray":19,"org.apache.commons.lang3.CharSetTest.testContains_Char":18,"org.apache.commons.lang3.time.DateUtilsTest.testMonthIterator":2,"org.apache.commons.lang3.math.FractionTest.testMultiply":14,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":7,"org.apache.commons.lang3.CharSetTest.testConstructor_String_simple":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":1,"org.apache.commons.lang3.math.FractionTest.testFactory_double":13,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementFloatArray":22,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":0,"org.apache.commons.lang3.math.FractionTest.testPow":12,"org.apache.commons.lang3.concurrent.BackgroundInitializerTest.testGetCheckedException":9,"org.apache.commons.lang3.math.FractionTest.testReducedFactory_int_int":10},"transformations":[{"failures":[0,1],"tindex":"07389f87-259e-11e5-984f-251cbb1b0f86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1499","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    final int int = java.lang.String.length();\n    if (int > 0) {\n        final int int = (int) + int;\n        org.apache.commons.lang3.text.StrBuilder.ensureCapacity(int);\n        java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int));\n        int = int;\n        java.lang.String.getChars(0, int, char[], int);\n    } \n} "},"status":-1},{"failures":[],"tindex":"0738c698-259e-11e5-984f-a3b4995df5af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:914","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = org.apache.commons.lang3.ClassUtils.primitiveToWrapper(java.lang.Class<?>)"},"variableMap":{"cls":"rhsClass"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:346","type":"CtAssignmentImpl","sourcecode":"java.lang.Class<?> = java.lang.Class<?>"},"status":-2},{"failures":[2,3,4],"tindex":"0738c699-259e-11e5-984f-9bb8cc593d6f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:976","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 16\");\n} "},"variableMap":{"dstPos":"org.apache.commons.lang3.time.DateUtils.RANGE_MONTH_SUNDAY","nHex":"org.apache.commons.lang3.time.DateUtils.RANGE_WEEK_RELATIVE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1163","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = ((java.util.Calendar)(java.util.Calendar.clone()));\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n        java.util.Calendar.add(java.util.Calendar.int, -1);\n        if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n            int = java.util.Calendar.int;\n            int = java.util.Calendar.int;\n        } \n        break;\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n    case org.apache.commons.lang3.time.DateUtils.int :\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        java.util.Calendar = org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.truncate(java.util.Calendar, java.util.Calendar.int);\n        switch (int) {\n            case org.apache.commons.lang3.time.DateUtils.int :\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.int;\n                int = java.util.Calendar.int;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                int = int - 1;\n                break;\n            case org.apache.commons.lang3.time.DateUtils.int :\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 3;\n                int = (java.util.Calendar.get(java.util.Calendar.int)) + 3;\n                break;\n            default :\n                break;\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"The range style \" + int) + \" is not valid.\"));\n}"},"status":-1},{"failures":[5],"tindex":"0738edaa-259e-11e5-984f-236bbfe9b583","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:190","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"Numerator too large to represent as an Integer.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1008","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Variable prefix must not be null!\")"},"status":-1},{"failures":[6,7,8,9],"tindex":"0738edab-259e-11e5-984f-25fc0c615dd1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1394","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:109","type":"CtThrowImpl","sourcecode":"throw org.apache.commons.lang3.concurrent.ConcurrentException"},"status":-1},{"failures":[],"tindex":"073914bc-259e-11e5-984f-fbee761726d4","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:2248","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.lang.String.length()))) {\n    return org.apache.commons.lang3.StringUtils.java.lang.String;\n} "},"variableMap":{"str":"str","len":"strLen","pos":"strLen","org.apache.commons.lang3.StringUtils.EMPTY":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:618","type":"CtIfImpl","sourcecode":"if ((java.lang.String == null) || ((int = java.lang.String.length()) == 0)) {\n    return java.lang.String;\n} "},"status":0},{"failures":[],"tindex":"073914bd-259e-11e5-984f-d54f6fe95127","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2004","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(long[], long, 0)"},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"073914be-259e-11e5-984f-a9ff1ad77040","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:596","type":"CtWhileImpl","sourcecode":"while ((((int & 1) == 0) && ((int & 1) == 0)) && (int < 31)) {\n    int /= 2;\n    int /= 2;\n    int++;\n}"},"status":-1},{"failures":[],"tindex":"073914bf-259e-11e5-984f-179615be8547","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:158","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"]\\n\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1797","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.appendAllTo(java.lang.StringBuilder.append('<'), \", \", java.lang.reflect.Type[])"},"status":0},{"failures":[],"tindex":"07393bd0-259e-11e5-984f-21fc52cd1e7e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:184","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.concurrent.ConcurrentInitializer<T> != null ? org.apache.commons.lang3.concurrent.ConcurrentInitializer<T>.get() : null"},"status":-2},{"failures":[16],"tindex":"07393bd1-259e-11e5-984f-abb10ab1aedb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1066","type":"CtIfImpl","sourcecode":"if ((float[][int]) > float) {\n    float = float[][int];\n} "},"status":-1},{"failures":[17,18,19],"tindex":"07393bd2-259e-11e5-984f-7bff4d948794","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharSet:275","type":"CtReturnImpl","sourcecode":"return java.util.Set<org.apache.commons.lang3.CharRange>.toString()"},"status":-1},{"failures":[],"tindex":"07393bd3-259e-11e5-984f-d7975908b372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1970","type":"CtLocalVariableImpl","sourcecode":"int int = java.lang.Integer.int"},"status":-2},{"failures":[],"tindex":"07393bd4-259e-11e5-984f-33879801d0a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1766","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} "},"variableMap":{"arrayEnd":"fieldName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:517","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"073962e5-259e-11e5-984f-ad9efab7e190","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1674","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.concurrent.TimeUnit == (java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit) ? 0 : 1"},"status":-2},{"failures":[20],"tindex":"073962e6-259e-11e5-984f-05c6ff7c5868","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1713","type":"CtOperatorAssignmentImpl","sourcecode":"int -= int"},"variableMap":{"len":"append","i":"append"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1484","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-1},{"failures":[],"tindex":"073962e7-259e-11e5-984f-a7a47928942b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder).appendNewLine()"},"variableMap":{"str":"this","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:439","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String)"},"status":-2},{"failures":[21,21],"tindex":"073962e8-259e-11e5-984f-174724a1983b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:246","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} "},"variableMap":{"start":"value","end":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:416","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, int)"},"status":-1},{"failures":[],"tindex":"073989f9-259e-11e5-984f-2f5628bf0243","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:136","type":"CtLocalVariableImpl","sourcecode":"int int = 67 << 4"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1045","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[22],"tindex":"073989fa-259e-11e5-984f-7fe6f8fdbb43","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5805","type":"CtForEachImpl","sourcecode":"for (final float float : float[]) {\n    final java.lang.Float java.lang.Float = java.lang.Float.valueOf(float);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Float);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Float, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Float, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"073914bf-259e-11e5-984f-179615be8547","diffs":[{"branches":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.Validate_<T>_T[]_notEmpty(T[],java.lang.String,java.lang.Object[]).e2","org.apache.commons.lang3.reflect.TypeUtils_java.lang.StringBuilder_appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]).t1","org.apache.commons.lang3.Validate_<T>_T[]_noNullElements(T[]).b","org.apache.commons.lang3.reflect.TypeUtils_java.lang.StringBuilder_appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]).b","org.apache.commons.lang3.Validate_<T>_T[]_notEmpty(T[]).b","org.apache.commons.lang3.Validate_<T>_T[]_notEmpty(T[],java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_<T>_T[]_notEmpty(T[],java.lang.String,java.lang.Object[]).e1"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[],java.lang.String,java.lang.Object[])","org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[])","org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])"]},"edges":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType) -> org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[])","org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[]) -> org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> org.apache.commons.lang3.reflect.TypeUtils.java.lang.String toString(java.lang.reflect.Type)","org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[]) -> org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[],java.lang.String,java.lang.Object[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType) -> org.apache.commons.lang3.reflect.TypeUtils.java.lang.String parameterizedTypeToString(java.lang.reflect.ParameterizedType)","org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[]) -> org.apache.commons.lang3.Validate.<T> T[] noNullElements(T[])","org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[]) -> org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[],java.lang.String,java.lang.Object[])","org.apache.commons.lang3.reflect.TypeUtils.java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.reflect.Type[]) -> org.apache.commons.lang3.Validate.<T> T[] notEmpty(T[])"]},"type":"graph"}]}]}