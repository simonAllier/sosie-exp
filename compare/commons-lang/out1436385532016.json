{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":32,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":26,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":10,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":22,"org.apache.commons.lang3.ClassUtilsTest.test_convertClassesToClassNames_List":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":25,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":15,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":6,"org.apache.commons.lang3.concurrent.AtomicInitializerTest.testGet":3,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_String":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":33,"org.apache.commons.lang3.math.FractionTest.testAdd":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":20,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastIndexOfIgnoreCase_StringInt":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":34,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":16,"org.apache.commons.lang3.math.FractionTest.testSubtract":1,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":11,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":5,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":37},"transformations":[{"failures":[],"tindex":"c1808a6d-25ab-11e5-ad30-7f3604e58f38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.SystemUtils:1307","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.SystemUtils.org.apache.commons.lang3.SystemUtils.isJavaVersionMatch(org.apache.commons.lang3.SystemUtils.java.lang.String, java.lang.String)"},"status":-2},{"failures":[],"tindex":"c180ff9e-25ab-11e5-ad30-21ed9c626788","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:770","type":"CtIfImpl","sourcecode":"if ((char[] == null) || (char[] == null)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} "},"variableMap":{"lhs":"lhs","this":"this","rhs":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:774","type":"CtIfImpl","sourcecode":"if ((char[].int) != (char[].int)) {\n    org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false);\n    return this;\n} "},"status":0},{"failures":[],"tindex":"c180ff9f-25ab-11e5-ad30-f9b30a3385b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:336","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()"},"variableMap":{"lhs":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:281","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass()"},"status":-2},{"failures":[0,1],"tindex":"c18126b0-25ab-11e5-ad30-1d2d08b64b3b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:182","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Stopwatch already started. \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:742","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")"},"status":-1},{"failures":[2],"tindex":"c1814dc1-25ab-11e5-ad30-69247268f75e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:535","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<java.lang.String>.size()) ; int++) {\n    java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int));\n}"},"variableMap":{"trace":"classNames","frames":"classNames"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:430","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?> == null) {\n    java.util.List<java.lang.String>.add(null);\n} else {\n    java.util.List<java.lang.String>.add(java.lang.Class<?>.getName());\n}"},"status":-1},{"failures":[3],"tindex":"c18174d2-25ab-11e5-ad30-cdb92d4d03c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.AtomicInitializer:84","type":"CtIfImpl","sourcecode":"if (T == null) {\n    T = org.apache.commons.lang3.concurrent.AtomicInitializer<T>.initialize();\n    if (!(java.util.concurrent.atomic.AtomicReference<T>.compareAndSet(null, T))) {\n        T = java.util.concurrent.atomic.AtomicReference<T>.get();\n    } \n} "},"status":-1},{"failures":[4],"tindex":"c18174d3-25ab-11e5-ad30-132266ca7904","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:781","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 's'"},"variableMap":{"size":"index","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1589","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 'a'"},"status":-1},{"failures":[],"tindex":"c1819be4-25ab-11e5-ad30-4139cbcc8aa2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:170","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> = new java.util.ArrayList<org.apache.commons.lang3.time.FastDatePrinter.Rule>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:149","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> java.util.List<org.apache.commons.lang3.time.FastDatePrinter.Rule> = org.apache.commons.lang3.time.FastDatePrinter.parsePattern()"},"status":-2},{"failures":[],"tindex":"c181c2f5-25ab-11e5-ad30-6f79b0e13178","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:673","type":"CtIfImpl","sourcecode":"if ((boolean[] == null) || ((boolean[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} "},"variableMap":{"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY","array":"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3436","type":"CtIfImpl","sourcecode":"if ((java.lang.Boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} "},"status":-2},{"failures":[],"tindex":"c181c2f6-25ab-11e5-ad30-edb1fee3a65e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:412","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:483","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[5],"tindex":"c181ea07-25ab-11e5-ad30-ab2defe282d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:229","type":"CtReturnImpl","sourcecode":"return new boolean[]{ false , false , true , false }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:189","type":"CtReturnImpl","sourcecode":"return new boolean[]{ true , true , false , true }"},"status":-1},{"failures":[6],"tindex":"c1821118-25ab-11e5-ad30-49f589ae9fd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:364","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return null;\n} "},"status":-1},{"failures":[7,8],"tindex":"c1821119-25ab-11e5-ad30-f790389fa394","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:862","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue((int > (-1)), \"Negative values should not be possible\", int)"},"variableMap":{"value":"startPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1375","type":"CtIfImpl","sourcecode":"if (int > ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length()))) {\n    int = (java.lang.CharSequence.length()) - (java.lang.CharSequence.length());\n} "},"status":-1},{"failures":[9,10,11,12,13,14],"tindex":"c182382a-25ab-11e5-ad30-0fe685904222","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:592","type":"CtAssignmentImpl","sourcecode":"int = -int"},"variableMap":{"u":"fe"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:423","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"c182382b-25ab-11e5-ad30-ef9c311391aa","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:283","type":"CtThrowImpl","sourcecode":"throw new java.lang.ClassCastException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:201","type":"CtThrowImpl","sourcecode":"throw new java.lang.StringIndexOutOfBoundsException(int)"},"status":-2},{"failures":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42],"tindex":"c1825f3c-25ab-11e5-ad30-e5540afca796","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:599","type":"CtIfImpl","sourcecode":"if (int == 31) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} "},"variableMap":{"k":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"c182d46d-25ab-11e5-ad30-d1baa4943303","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:3821","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} else if (byte[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[]);\n} "},"variableMap":{"array2":"array","this":"this","array1":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4774","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(byte[])"},"status":-2},{"failures":[],"tindex":"c182fb7e-25ab-11e5-ad30-39d60298a9a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:295","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.concurrent.TimedSemaphore.isShutdown()) {\n    throw new java.lang.IllegalStateException(\"TimedSemaphore is shut down!\");\n} "},"status":-2},{"failures":[],"tindex":"c183228f-25ab-11e5-ad30-0fb9eb2f65e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:387","type":"CtIfImpl","sourcecode":"if ((java.lang.Throwable == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} "},"variableMap":{"throwable":"throwable","type":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.exception.ExceptionUtils.org.apache.commons.lang3.exception.ExceptionUtils.indexOf(java.lang.Throwable, java.lang.Class<?>, 0, true)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}