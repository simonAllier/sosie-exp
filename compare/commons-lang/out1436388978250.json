{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":23,"org.apache.commons.lang3.ConversionTest.testShortArrayToLong":142,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":47,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":164,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":58,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":144,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":22,"org.apache.commons.lang3.text.StrMatcherTest.testCharSetMatcher_charArray":0,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":71,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":167,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":166,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":27,"org.apache.commons.lang3.builder.EqualsBuilderTest.testIntArrayHiddenByObject":156,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testPerson":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":54,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiIntArray":154,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":147,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":28,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":3,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":99,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":169,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":77,"org.apache.commons.lang3.concurrent.LazyInitializerTest.testGetConcurrent":138,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":98,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":81,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiBooleanArray":151,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":42,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":159,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringString":73,"org.apache.commons.lang3.builder.EqualsBuilderTest.testBooleanArrayHiddenByObject":155,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObject":173,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":13,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":95,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":168,"org.apache.commons.lang3.ClassUtilsTest.test_getShortClassName_Class":175,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObject":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":37,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":165,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":48,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":139,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":7,"org.apache.commons.lang3.builder.EqualsBuilderTest.testFloatArrayHiddenByObject":157,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":62,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObject":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":49,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":79,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":109,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":53,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":90,"org.apache.commons.lang3.builder.EqualsBuilderTest.testObjectArrayHiddenByObject":148,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":119,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":38,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":101,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":135,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":45,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_String_int_int":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":82,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":80,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiFloatArray":153,"org.apache.commons.lang3.text.StrSubstitutorTest.testGetSetPrefix":137,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":55,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":92,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":97,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":36,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiShortArray":160,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":5,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":96,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":161,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":146,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":40,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":67,"org.apache.commons.lang3.time.DateUtilsTest.testCeil":74,"org.apache.commons.lang3.text.StrTokenizerTest.test8":118,"org.apache.commons.lang3.text.StrTokenizerTest.test5":115,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiCharArray":145,"org.apache.commons.lang3.text.StrTokenizerTest.test4":114,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":150,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":25,"org.apache.commons.lang3.text.StrTokenizerTest.test7":117,"org.apache.commons.lang3.text.StrTokenizerTest.test6":116,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":129,"org.apache.commons.lang3.text.StrTokenizerTest.test1":111,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":83,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":110,"org.apache.commons.lang3.text.StrTokenizerTest.test3":113,"org.apache.commons.lang3.text.StrTokenizerTest.test2":112,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":21,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":141,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":130,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":100,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":131,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":84,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":133,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":65,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":163,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":57,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":16,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObject":172,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":19,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":158,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":89,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":46,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":170,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCharArrayHiddenByObject":152,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":122,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":123,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":94,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":104,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":103,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":106,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":171,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":128,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":61,"org.apache.commons.lang3.builder.EqualsBuilderTest.testShortArrayHiddenByObject":149,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObject":174,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":41,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":140,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":29,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_String_int_int":76,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":4,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":162,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":85,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":120,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":126,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":125,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":127,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":124,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObject":69,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringStringWithSupplementaryChars":72,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":78,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":121,"org.apache.commons.lang3.builder.CompareToBuilderTest.testIntArray":143,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":63,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testPerson":70,"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":64,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":87},"transformations":[{"failures":[0],"tindex":"c799d80f-25b3-11e5-8bf4-7703b3939e90","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrMatcher:175","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrMatcher.org.apache.commons.lang3.text.StrMatcher"},"status":-1},{"failures":[],"tindex":"c799ff20-25b3-11e5-8bf4-03d648caafb4","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1658","type":"CtIfImpl","sourcecode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} "},"variableMap":{"nBools":"length","srcPos":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:927","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Array.get(java.lang.Object, int);\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    if (java.lang.Object == null) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendInternal(java.lang.StringBuffer, java.lang.String, java.lang.Object, boolean);\n    }\n}"},"status":0},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71],"tindex":"c799ff21-25b3-11e5-8bf4-bb1068b56327","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1469","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.builder.ToStringStyle.(isUseIdentityHashCode()) && (java.lang.Object != null)) {\n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.register(java.lang.Object);\n    java.lang.StringBuffer.append('@');\n    java.lang.StringBuffer.append(java.lang.Integer.toHexString(java.lang.System.identityHashCode(java.lang.Object)));\n} "},"variableMap":{"this":"this","buffer":"buffer","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:501","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof int[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((int[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof short[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((short[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof byte[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((byte[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof char[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((char[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}"},"status":-1},{"failures":[72,73],"tindex":"c79a4d42-25b3-11e5-8bf4-d5bf7db766fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1116","type":"CtLocalVariableImpl","sourcecode":"final int int = ((java.lang.CharSequence.length()) - (java.lang.CharSequence.length())) + 1"},"variableMap":{"str":"seq","searchStr":"seq"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1763","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.CharSequence.length()"},"status":-1},{"failures":[],"tindex":"c79a4d43-25b3-11e5-8bf4-17e8ecb74dfc","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:225","type":"CtReturnImpl","sourcecode":"return new boolean[]{ false , false , false , false }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:175","type":"CtReturnImpl","sourcecode":"return new boolean[]{ true , false , true , false }"},"status":-2},{"failures":[74],"tindex":"c79a4d44-25b3-11e5-8bf4-430a1ca130c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:962","type":"CtIfImpl","sourcecode":"if (int == (java.util.Calendar.int)) {\n    return ;\n} "},"variableMap":{"field":"org.apache.commons.lang3.time.DateUtils.MODIFY_CEILING","java.util.Calendar.MILLISECOND":"modType"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1008","type":"CtForEachImpl","sourcecode":"for (final int[] int[] : org.apache.commons.lang3.time.DateUtils.int[][]) {\n    for (final int int : int[]) {\n        if (int == int) {\n            if ((int == (org.apache.commons.lang3.time.DateUtils.int)) || ((int == (org.apache.commons.lang3.time.DateUtils.int)) && boolean)) {\n                if (int == (org.apache.commons.lang3.time.DateUtils.int)) {\n                    if ((java.util.Calendar.get(java.util.Calendar.int)) == 1) {\n                        java.util.Calendar.add(java.util.Calendar.int, 15);\n                    } else {\n                        java.util.Calendar.add(java.util.Calendar.int, -15);\n                        java.util.Calendar.add(java.util.Calendar.int, 1);\n                    }\n                } else if (int == (java.util.Calendar.int)) {\n                    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n                        java.util.Calendar.add(java.util.Calendar.int, 12);\n                    } else {\n                        java.util.Calendar.add(java.util.Calendar.int, -12);\n                        java.util.Calendar.add(java.util.Calendar.int, 1);\n                    }\n                } else {\n                    java.util.Calendar.add(int[][0], 1);\n                }\n            } \n            return ;\n        } \n    }\n    int int = 0;\n    boolean boolean = false;\n    switch (int) {\n        case org.apache.commons.lang3.time.DateUtils.int :\n            if ((int[][0]) == (java.util.Calendar.int)) {\n                int = (java.util.Calendar.get(java.util.Calendar.int)) - 1;\n                if (int >= 15) {\n                    int -= 15;\n                } \n                boolean = int > 7;\n                boolean = true;\n            } \n            break;\n        case java.util.Calendar.int :\n            if ((int[][0]) == (java.util.Calendar.int)) {\n                int = java.util.Calendar.get(java.util.Calendar.int);\n                if (int >= 12) {\n                    int -= 12;\n                } \n                boolean = int >= 6;\n                boolean = true;\n            } \n            break;\n        default :\n            break;\n    }\n    if (!boolean) {\n        final int int = java.util.Calendar.getActualMinimum(int[][0]);\n        final int int = java.util.Calendar.getActualMaximum(int[][0]);\n        int = (java.util.Calendar.get(int[][0])) - int;\n        boolean = int > ((int - int) / 2);\n    } \n    if (int != 0) {\n        java.util.Calendar.set(int[][0], ((java.util.Calendar.get(int[][0])) - int));\n    } \n}"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89],"tindex":"c79a7455-25b3-11e5-8bf4-29b65a3953e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:863","type":"CtAssignmentImpl","sourcecode":"int = java.lang.Integer.toString(int).length()"},"variableMap":{"digits":"size","value":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:547","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136],"tindex":"c79a7456-25b3-11e5-8bf4-690ffcb6e5fa","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2874","type":"CtIfImpl","sourcecode":"if (((((int < 0) || (int < 0)) || (int > (char[].int))) || ((int + int) > (char[].int))) || ((int + int) < 0)) {\n    throw new java.lang.IndexOutOfBoundsException();\n} "},"variableMap":{"b":"srcChars","len":"len","length":"len","off":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:688","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = java.lang.Math.max(org.apache.commons.lang3.text.StrTokenizer.getIgnoredMatcher().isMatch(char[], int, int, int), org.apache.commons.lang3.text.StrTokenizer.getTrimmerMatcher().isMatch(char[], int, int, int));\n    if (((int == 0) || ((org.apache.commons.lang3.text.StrTokenizer.getDelimiterMatcher().isMatch(char[], int, int, int)) > 0)) || ((org.apache.commons.lang3.text.StrTokenizer.getQuoteMatcher().isMatch(char[], int, int, int)) > 0)) {\n        break;\n    } \n    int += int;\n}"},"status":-1},{"failures":[137,138],"tindex":"c79a9b67-25b3-11e5-8bf4-c722a7019f18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:975","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.text.StrMatcher == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable prefix matcher must not be null!\");\n} "},"status":-1},{"failures":[139,140],"tindex":"c79a9b68-25b3-11e5-8bf4-f9c19acfac55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:6925","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.Math.min(int, int)) + 1"},"variableMap":{"threshold":"size","n":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:207","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-1},{"failures":[],"tindex":"c79a9b69-25b3-11e5-8bf4-e94eaeb231e5","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:474","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return this;\n} "},"variableMap":{"gcd":"denominator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:497","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.lang3.math.Fraction(-(int) , -(int))"},"status":-2},{"failures":[141],"tindex":"c79ac27a-25b3-11e5-8bf4-87e6daff75ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:774","type":"CtAssignmentImpl","sourcecode":"char[][(int)++] = 'u'"},"variableMap":{"size":"index","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1591","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 's'"},"status":-1},{"failures":[],"tindex":"c79ac27b-25b3-11e5-8bf4-49e9c6fb78a1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1689","type":"CtIfImpl","sourcecode":"if (java.lang.reflect.GenericDeclaration instanceof java.lang.Class<?>) {\n    java.lang.Class<?> java.lang.Class<?> = ((java.lang.Class<?>)(java.lang.reflect.GenericDeclaration));\n    while (true) {\n        if ((java.lang.Class<?>.getEnclosingClass()) == null) {\n            java.lang.StringBuilder.insert(0, java.lang.Class<?>.getName());\n            break;\n        } \n        java.lang.StringBuilder.insert(0, java.lang.Class<?>.getSimpleName()).insert(0, '.');\n        java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n    }\n} else if (java.lang.reflect.GenericDeclaration instanceof java.lang.reflect.Type) {\n    java.lang.StringBuilder.append(org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.toString(((java.lang.reflect.Type)(java.lang.reflect.GenericDeclaration))));\n} else {\n    java.lang.StringBuilder.append(java.lang.reflect.GenericDeclaration);\n}"},"status":0},{"failures":[142],"tindex":"c79ac27c-25b3-11e5-8bf4-2fbfd6376a1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:246","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    throw new java.lang.IllegalArgumentException(((((\"Parameter end (\" + int) + \") must be greater than start (\") + int) + \")\"));\n} "},"variableMap":{"start":"srcPos","end":"dstPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:733","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 16) + int;\n    final long long = (65535L & (short[][(int + int)])) << int;\n    final long long = 65535L << int;\n    long = (long & (~long)) | long;\n}"},"status":-1},{"failures":[143],"tindex":"c79ac27d-25b3-11e5-8bf4-1d144d26e0f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:482","type":"CtAssignmentImpl","sourcecode":"int = int < int ? -1 : int > int ? 1 : 0"},"variableMap":{"comparison":"comparison","lhs":"comparison","rhs":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:735","type":"CtAssignmentImpl","sourcecode":"int = -1"},"status":-1},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171],"tindex":"c79ae98e-25b3-11e5-8bf4-9f11c2e31e90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1081","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The Array must not be null\");\n} else if ((java.lang.reflect.Array.getLength(java.lang.Object)) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array cannot be empty.\");\n} "},"variableMap":{"array":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:474","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof int[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((int[])(java.lang.Object)), ((int[])(java.lang.Object)));\n} else if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}"},"status":-1},{"failures":[172,3,8,14,21,59,69,173,174],"tindex":"c79ae98f-25b3-11e5-8bf4-37e198872282","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1556","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(java.lang.String)"},"status":-1},{"failures":[175],"tindex":"c79ae990-25b3-11e5-8bf4-97fb3b505966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:1072","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Variable suffix must not be null!\");\n} "},"variableMap":{"suffix":"className"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:212","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.containsKey(java.lang.String)) {\n    java.lang.String = org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.String, java.lang.String>.get(java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"c79b10a1-25b3-11e5-8bf4-4ba581882aa2","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:540","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.toString()"},"status":-2},{"failures":[],"tindex":"c79b10a2-25b3-11e5-8bf4-2f447751be24","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:955","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.append(org.apache.commons.lang3.text.StrBuilder)"},"variableMap":{"str":"builder","this":"builder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:320","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.append(java.lang.Object.getClass().getName())"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}