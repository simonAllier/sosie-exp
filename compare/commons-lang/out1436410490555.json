{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":69,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":65,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringTrueFalse_Boolean":2,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringInt":90,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":138,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":77,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringYesNo_Boolean":3,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteIntInt":85,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":66,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":16,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":53,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":57,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":121,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":71,"org.apache.commons.lang3.text.StrBuilderTest.testToCharArrayIntInt":94,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":116,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":117,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":114,"org.apache.commons.lang3.ObjectUtilsTest.testFirstNonNull":95,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":73,"org.apache.commons.lang3.StringUtilsIsTest.testIsAlphaspace":0,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":115,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":97,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testSupplementary":108,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":78,"org.apache.commons.lang3.RangeTest.testIntersectionWith":135,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":75,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBelow":106,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":54,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":55,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":5,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":128,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":35,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":51,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBelow":103,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":58,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":52,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":119,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":59,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":82,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":113,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":56,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testAbove":105,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":8,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":13,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":9,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":125,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":87,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":111,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":96,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":12,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":131,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":110,"org.apache.commons.lang3.CharSetTest.testStatics":126,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":50,"org.apache.commons.lang3.text.StrBuilderTest.testSubSequenceIntInt":81,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":86,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":92,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":123,"org.apache.commons.lang3.text.StrTokenizerTest.test8":34,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":118,"org.apache.commons.lang3.text.StrTokenizerTest.test5":32,"org.apache.commons.lang3.text.StrTokenizerTest.test4":31,"org.apache.commons.lang3.BooleanUtilsTest.test_toStringOnOff_Boolean":1,"org.apache.commons.lang3.text.StrTokenizerTest.test7":33,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":45,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":130,"org.apache.commons.lang3.text.StrTokenizerTest.test1":28,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":27,"org.apache.commons.lang3.text.StrTokenizerTest.test3":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":63,"org.apache.commons.lang3.text.StrTokenizerTest.test2":29,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateBigInteger":134,"org.apache.commons.lang3.mutable.MutableLongTest.testDecrement":137,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":46,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":17,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":79,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":129,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":48,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":64,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":6,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":7,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":101,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":83,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":112,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":109,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":99,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testAbove":102,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectNull":141,"org.apache.commons.lang3.text.translate.NumericEntityEscaperTest.testBetween":107,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":61,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_StrMatcher":93,"org.apache.commons.lang3.ArrayUtilsTest.testContains":127,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":38,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":39,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":122,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":19,"org.apache.commons.lang3.text.StrBuilderTest.testSubstringIntInt":84,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":98,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":10,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":20,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":44,"org.apache.commons.lang3.RangeTest.testEqualsObject":136,"org.apache.commons.lang3.text.translate.UnicodeEscaperTest.testBetween":104,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit":139,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":120,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":100,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":70,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":91,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":41,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":76,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":40,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":37,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":124,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":80,"org.apache.commons.lang3.BooleanUtilsTest.test_toString_Boolean_String_String_String":4,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":132,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":72,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":133,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":68,"org.apache.commons.lang3.ArrayUtilsTest.testNullToEmptyBooleanObjectEmptyArray":140,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":74},"transformations":[{"failures":[0],"tindex":"ddef3cbd-25e5-11e5-822f-a10f3fa08b4e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:829","type":"CtIfImpl","sourcecode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    return java.lang.CharSequence == java.lang.CharSequence;\n} else if (java.lang.CharSequence == java.lang.CharSequence) {\n    return true;\n} else if ((java.lang.CharSequence.length()) != (java.lang.CharSequence.length())) {\n    return false;\n} else {\n    return org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, 0, java.lang.CharSequence, 0, java.lang.CharSequence.length());\n}"},"variableMap":{"str1":"cs","str2":"cs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5882","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ddef63ce-25e5-11e5-822f-21b7174aeac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl","sourcecode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}"},"variableMap":{"offset":"pos","length":"pos","this":"this","substitutionInVariablesEnabled":"substitutionInVariablesEnabled","valueDelimMatcher":"valueDelimMatcher","priorVariables":"priorVariables","altered":"altered","suffMatcher":"valueDelimMatcher","buf":"buf","bufEnd":"lengthChange","pos":"bufEnd","startMatchLen":"bufEnd","pfxMatcher":"pfxMatcher","lengthChange":"pos","buffer":"chars","escape":"escape","chars":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}"},"status":-2},{"failures":[1,2,3,4],"tindex":"ddefb1ef-25e5-11e5-822f-199de7bd7172","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:673","type":"CtReturnImpl","sourcecode":"return \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:815","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue() ? java.lang.String : java.lang.String"},"status":-1},{"failures":[],"tindex":"ddefd900-25e5-11e5-822f-e53df455f454","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:144","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.lang3.CharSet org.apache.commons.lang3.CharSet = org.apache.commons.lang3.CharSet.getInstance(java.lang.String[])"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"ddefd901-25e5-11e5-822f-a5fc63ea05b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:7119","type":"CtReturnImpl","sourcecode":"return int / 2"},"variableMap":{"transpositions":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2791","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[95],"tindex":"ddefd902-25e5-11e5-822f-950c0da8a005","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","type":"CtForEachImpl","sourcecode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:122","type":"CtIfImpl","sourcecode":"if (T[] != null) {\n    for (final T T : T[]) {\n        if (T != null) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"ddf00013-25e5-11e5-822f-b5c8590cb0ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2525","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.String.length()"},"status":-2},{"failures":[],"tindex":"ddf00014-25e5-11e5-822f-614a52fd9253","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1393","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} "},"variableMap":{"srcPos":"startCutoff","nHexs":"java.util.Calendar.SUNDAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1208","type":"CtIfImpl","sourcecode":"if (int < (java.util.Calendar.int)) {\n    int += 7;\n} "},"status":-2},{"failures":[96],"tindex":"ddf00015-25e5-11e5-822f-5b9f78493ee0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:119","type":"CtReturnImpl","sourcecode":"return 14"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:346","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.hashCode(((byte[])(java.lang.Object)))"},"status":-1},{"failures":[97,98,99,100,101],"tindex":"ddf00016-25e5-11e5-822f-f12d0e0e6124","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:180","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>.add(org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>)"},"variableMap":{"registry":"registry","pair":"pair"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:199","type":"CtInvocationImpl","sourcecode":"java.util.Set<org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>>.remove(org.apache.commons.lang3.tuple.Pair<org.apache.commons.lang3.builder.IDKey, org.apache.commons.lang3.builder.IDKey>)"},"status":-1},{"failures":[102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119],"tindex":"ddf02727-25e5-11e5-822f-9d7c21cb919b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:115","type":"CtReturnImpl","sourcecode":"return 10"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CodePointTranslator:39","type":"CtReturnImpl","sourcecode":"return boolean ? 1 : 0"},"status":-1},{"failures":[120,121,122,123,124,125,126,127,128,129,98,130,131,132],"tindex":"ddf02728-25e5-11e5-822f-255653643901","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1916","type":"CtForImpl","sourcecode":"for (int int = int ; int < (java.lang.Object[].int) ; int++) {\n    if (java.lang.Object.equals(java.lang.Object[][int])) {\n        return int;\n    } \n}"},"status":-1},{"failures":[133,134],"tindex":"ddf02729-25e5-11e5-822f-23aca4432430","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:329","type":"CtOperatorAssignmentImpl","sourcecode":"int += 12 * int"},"variableMap":{"months":"radix","years":"radix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:740","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":-1},{"failures":[135,136],"tindex":"ddf0272a-25e5-11e5-822f-7da846093c46","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:410","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[137],"tindex":"ddf04e3b-25e5-11e5-822f-5b5c98a1b082","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:137","type":"CtAssignmentImpl","sourcecode":"long = long / (org.apache.commons.lang3.time.DateUtils.long)"},"variableMap":{"milliseconds":"value","days":"value","org.apache.commons.lang3.time.DateUtils.MILLIS_PER_DAY":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableLong:127","type":"CtUnaryOperatorImpl","sourcecode":"(long)--"},"status":-1},{"failures":[138,139],"tindex":"ddf04e3c-25e5-11e5-822f-153552d6cb96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:549","type":"CtReturnImpl","sourcecode":"return '8'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:563","type":"CtReturnImpl","sourcecode":"return '5'"},"status":-1},{"failures":[140,141],"tindex":"ddf04e3d-25e5-11e5-822f-2bd0ef2c7ff2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:833","type":"CtIfImpl","sourcecode":"if ((java.lang.Boolean[] == null) || ((java.lang.Boolean[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.java.lang.Boolean[];\n} "},"status":-1},{"failures":[],"tindex":"ddf04e3e-25e5-11e5-822f-49fddc1e7bd4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:624","type":"CtReturnImpl","sourcecode":"return (-int) * (1 << int)"},"status":-2},{"failures":[],"tindex":"ddf04e3f-25e5-11e5-822f-3123c8441129","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:566","type":"CtLocalVariableImpl","sourcecode":"char char = java.lang.String.charAt(0)"},"variableMap":{"formatField":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:574","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(0)"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}