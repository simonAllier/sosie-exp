{"failureDictionary":{"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithCalendar":8,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddCombinations":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":28,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":69,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfMonthWithCalendar":2,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":25,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":57,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringStringWithSupplementaryChars":74,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvWriter":16,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":33,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":21,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":27,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfHourWithCalendar":0,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":43,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":41,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":66,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfDayWithCalendar":6,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":70,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":40,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":56,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":37,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":49,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddDash":58,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinutesOfYearWithWrongOffsetBugWithCalendar":4,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":38,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":50,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":36,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":53,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":12,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":44,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":26,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":42,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAny_StringCharArrayWithSupplementaryChars":73,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeCsvString":15,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testInvalidFragmentWithCalendar":9,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":51,"org.apache.commons.lang3.ArrayUtilsTest.testContains":64,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":39,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":30,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":20,"org.apache.commons.lang3.CharSetTest.testConstructor_String_combo":59,"org.apache.commons.lang3.RandomStringUtilsTest.testExceptions":71,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":23,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":52,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOf":65,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":45,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testNullCalendar":5,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMillisecondFragmentInLargerUnitWithCalendar":3,"org.apache.commons.lang3.builder.CompareToBuilderTest.testLongArray":13,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":24,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":35,"org.apache.commons.lang3.mutable.MutableShortTest.testIncrement":72,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":18,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testSecondFragmentInLargerUnitWithCalendar":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":54,"org.apache.commons.lang3.ArrayUtilsRemoveTest.testRemoveElementObjectArray":67,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":47,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":22,"org.apache.commons.lang3.CharSetTest.testConstructor_String_oddNegate":62,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":48,"org.apache.commons.lang3.CharSetTest.testConstructor_String_comboNegated":61,"org.apache.commons.lang3.time.DateUtilsFragmentTest.testMinuteFragmentInLargerUnitWithCalendar":1,"org.apache.commons.lang3.exception.ExceptionUtilsTest.testRemoveCommonFrames_ListList":14,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":10,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementDoubleArray":11,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":46,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementsObjectArray":68,"org.apache.commons.lang3.CharSetTest.testStatics":63,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":32,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":17,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":19,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":34},"transformations":[{"failures":[],"tindex":"a75c68c1-25ce-11e5-82ef-31f9b7b88a9a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1715","type":"CtLocalVariableImpl","sourcecode":"final int int = char[].int"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"a75cb6e2-25ce-11e5-82ef-ffe84d85bac2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:432","type":"CtReturnImpl","sourcecode":"return ((long)(int)) / (int)"},"variableMap":{"numerator":"fragment","denominator":"fragment"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1555","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.DateUtils.org.apache.commons.lang3.time.DateUtils.getFragment(java.util.Calendar, int, java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit)"},"status":-1},{"failures":[10],"tindex":"a75cb6e3-25ce-11e5-82ef-6b0bee2e4485","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:614","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -int;\n} else {\n    int = int;\n}"},"variableMap":{"t":"result","u":"result","v":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:171","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.Object java.lang.Object = java.lang.reflect.Method.invoke(java.lang.annotation.Annotation);\n    if (java.lang.Object == null) {\n        throw new java.lang.IllegalStateException(java.lang.String.format(\"Annotation method %s returned null\", java.lang.reflect.Method));\n    } \n    int += org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.hashMember(java.lang.reflect.Method.getName(), java.lang.Object);\n} catch (final java.lang.RuntimeException ex) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Exception ex) {\n    throw new java.lang.RuntimeException(java.lang.Exception);\n}"},"status":-1},{"failures":[11],"tindex":"a75cb6e4-25ce-11e5-82ef-fb23df31ecb8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1071","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 12"},"variableMap":{"offset":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5908","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(double[], java.lang.Double.doubleValue(), int)"},"status":-1},{"failures":[],"tindex":"a75cddf5-25ce-11e5-82ef-7d8b4db43e3d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.indexOf(int[], int, 0)"},"status":-2},{"failures":[12],"tindex":"a75cddf6-25ce-11e5-82ef-e984209fb461","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityEscaper:104","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((int < (int)) || (int > (int))) {\n        return false;\n    } \n} else {\n    if ((int >= (int)) && (int <= (int))) {\n        return false;\n    } \n}"},"variableMap":{"codepoint":"i","below":"i","above":"i","between":"allowSigns"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1433","type":"CtIfImpl","sourcecode":"if ((!boolean) && (((((char[][int]) == 'd') || ((char[][int]) == 'D')) || ((char[][int]) == 'f')) || ((char[][int]) == 'F'))) {\n    return boolean;\n} "},"status":-1},{"failures":[13],"tindex":"a75cddf7-25ce-11e5-82ef-6b840a5063df","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1663","type":"CtAssignmentImpl","sourcecode":"int = (int * 1) + int"},"variableMap":{"srcPos":"comparison","shift":"comparison","i":"comparison"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:699","type":"CtAssignmentImpl","sourcecode":"int = +1"},"status":-1},{"failures":[14],"tindex":"a75cddf8-25ce-11e5-82ef-4d14a5dbaa53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:494","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:552","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The List must not be null\")"},"status":-1},{"failures":[],"tindex":"a75d0509-25ce-11e5-82ef-ed3e9ed015fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, null, null)"},"variableMap":{"pattern":"pattern","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getInstance(java.lang.String, null, java.util.Locale)"},"status":-2},{"failures":[15,16,17,18,19,20],"tindex":"a75d050a-25ce-11e5-82ef-836a56033f09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\\\E\")"},"variableMap":{"regex":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4538","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(java.lang.String.substring(int))"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68],"tindex":"a75d050b-25ce-11e5-82ef-0f7aac2cee01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:490","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.lang.ArithmeticException(\"Unable to invert zero.\");\n} "},"variableMap":{"numerator":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1906","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 0;\n} "},"status":-1},{"failures":[69],"tindex":"a75d2c1c-25ce-11e5-82ef-1391f7811b89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:117","type":"CtReturnImpl","sourcecode":"return 6"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2481","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"a75d2c1d-25ce-11e5-82ef-3fa472c8c920","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:536","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2245","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return null;\n} "},"status":0},{"failures":[70],"tindex":"a75d2c1e-25ce-11e5-82ef-1f4d5b07a0e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:529","type":"CtReturnImpl","sourcecode":"return 'e'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:457","type":"CtReturnImpl","sourcecode":"return '2'"},"status":-1},{"failures":[71],"tindex":"a75d2c1f-25ce-11e5-82ef-e9faa18ebb8f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4570","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Length: \") + int))"},"variableMap":{"length":"count","index":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.RandomStringUtils:228","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"))"},"status":-1},{"failures":[],"tindex":"a75d5330-25ce-11e5-82ef-23ca19986f35","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:361","type":"CtReturnImpl","sourcecode":"return this"},"status":-2},{"failures":[72],"tindex":"a75d5331-25ce-11e5-82ef-e904679308b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","type":"CtUnaryOperatorImpl","sourcecode":"(short)--"},"variableMap":{"value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:118","type":"CtUnaryOperatorImpl","sourcecode":"(short)++"},"status":-1},{"failures":[73,74],"tindex":"a75d5332-25ce-11e5-82ef-d15f6e482393","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:119","type":"CtReturnImpl","sourcecode":"return 14"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1550","type":"CtIfImpl","sourcecode":"if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n    return int;\n} "},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53],"tindex":"a75d5333-25ce-11e5-82ef-fd26e6b310a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:476","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof short[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((short[])(java.lang.Object)), ((short[])(java.lang.Object)));\n} else if (java.lang.Object instanceof char[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((char[])(java.lang.Object)), ((char[])(java.lang.Object)));\n} else if (java.lang.Object instanceof byte[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} else if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((double[])(java.lang.Object)), ((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}"},"variableMap":{"lhs":"rhs","this":"builder","rhs":"rhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:410","type":"CtTryImpl","sourcecode":"try {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n} catch (final java.lang.IllegalAccessException e) {\n    throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"a75d2c1d-25ce-11e5-82ef-3fa472c8c920","diffs":[{"nodes":{"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":["org.apache.commons.lang3.StringUtils.boolean isEmpty(java.lang.CharSequence)"]},"edges":{"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":["org.apache.commons.lang3.StringUtils.java.lang.String mid(java.lang.String,int,int) -> org.apache.commons.lang3.StringUtils.java.lang.String mid(java.lang.String,int,int)","org.apache.commons.lang3.StringUtils.java.lang.String mid(java.lang.String,int,int) -> org.apache.commons.lang3.StringUtils.boolean isEmpty(java.lang.CharSequence)"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.StringUtilsSubstringTest.testMid_String":["org.apache.commons.lang3.StringUtils_boolean_isEmpty(java.lang.CharSequence).b"]},"type":"branch"}]}]}