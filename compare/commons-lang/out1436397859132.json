{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":29,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":3,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testDurationsByBruteForce":8,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG815":10,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_charArray":51,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":34,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLong":87,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testJiraLang281":25,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObject":90,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":52,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":50,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":37,"org.apache.commons.lang3.math.FractionTest.testConversions":0,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":47,"org.apache.commons.lang3.math.FractionTest.testCompareTo":4,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":93,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":94,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationISO":17,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":88,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":62,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":41,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":83,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":23,"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":54,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":38,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":86,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":44,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":49,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":45,"org.apache.commons.lang3.math.FractionTest.testGets":1,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISOMethod":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":28,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":48,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":92,"org.apache.commons.lang3.text.StrTokenizerTest.testCloneReset":82,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringString":30,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLexx":15,"org.apache.commons.lang3.text.StrTokenizerTest.test8":71,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":40,"org.apache.commons.lang3.text.StrTokenizerTest.test5":68,"org.apache.commons.lang3.text.StrTokenizerTest.test4":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":35,"org.apache.commons.lang3.text.StrTokenizerTest.test7":70,"org.apache.commons.lang3.text.StrTokenizerTest.test6":69,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":77,"org.apache.commons.lang3.text.StrTokenizerTest.test1":64,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":63,"org.apache.commons.lang3.text.StrTokenizerTest.test3":66,"org.apache.commons.lang3.text.StrTokenizerTest.test2":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":78,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":79,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":80,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":81,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_Integer_Integer_Integer_Integer":95,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLowDurations":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":42,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim2":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":13,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG981":11,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":12,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testEdgeDurations":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":39,"org.apache.commons.lang3.math.FractionTest.testToProperString":5,"org.apache.commons.lang3.math.FractionTest.testFactory_String_proper":6,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":74,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":24,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":89,"org.apache.commons.lang3.StringUtilsSubstringTest.testSubstringBetween_StringStringString":31,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":55,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":46,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":57,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":56,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":59,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationHMS":16,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":58,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":61,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":60,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":96,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testPerson":91,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testBugzilla38401":22,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":75,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testGetAvailablePermits":97,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":32,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":73,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":85,"org.apache.commons.lang3.math.FractionTest.testToString":2,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":33,"org.apache.commons.lang3.time.StopWatchTest.testStopWatchSimpleGet":7,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationPluralWords":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":27,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":18},"transformations":[{"failures":[0,1,2,3,4,5,6],"tindex":"75050c09-25c8-11e5-91bc-57eee9e46422","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:579","type":"CtIfImpl","sourcecode":"if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n    throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n} "},"variableMap":{"u":"denominator","java.lang.Integer.MIN_VALUE":"denominator","v":"denominator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:173","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    throw new java.lang.ArithmeticException(\"The denominator must not be zero\");\n} "},"status":-1},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"75055a2a-25c8-11e5-91bc-e9ee301e97c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:620","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(4)"},"variableMap":{"str":"format"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:489","type":"CtLocalVariableImpl","sourcecode":"final char char = java.lang.String.charAt(int)"},"status":-1},{"failures":[],"tindex":"75055a2b-25c8-11e5-91bc-99a04dfaa1c6","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:85","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.lang3.text.translate.UnicodeEscaper(int , int , false)"},"variableMap":{"codepointLow":"codepoint","codepointHigh":"codepoint"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.UnicodeEscaper:74","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.translate.UnicodeEscaper.org.apache.commons.lang3.text.translate.UnicodeEscaper.outsideOf(0, int)"},"status":-2},{"failures":[26,27,28,29],"tindex":"75055a2c-25c8-11e5-91bc-3d64f55789b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1209","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(':')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:718","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(short)"},"status":-1},{"failures":[30,31],"tindex":"75055a2d-25c8-11e5-91bc-3900072fd63f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:418","type":"CtReturnImpl","sourcecode":"return java.lang.String == null ? null : java.lang.String.trim()"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2487","type":"CtIfImpl","sourcecode":"if (int != (org.apache.commons.lang3.StringUtils.int)) {\n    return java.lang.String.substring((int + (java.lang.String.length())), int);\n} "},"status":-1},{"failures":[],"tindex":"7505813e-25c8-11e5-91bc-bb5ec7bcb888","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:373","type":"CtIfImpl","sourcecode":"if (java.lang.String.endsWith(\"ZZ\")) {\n    java.lang.String = java.lang.String.substring(0, ((java.lang.String.length()) - 1));\n} "},"variableMap":{"parsePattern":"fieldName","pattern":"fieldName"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:970","type":"CtIfImpl","sourcecode":"if (long[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, long[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, long[]);\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40],"tindex":"7505813f-25c8-11e5-91bc-59107d8a0741","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:652","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.setLenient(false)"},"variableMap":{"c":"val"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1024","type":"CtIfImpl","sourcecode":"if (int == (java.util.Calendar.int)) {\n    if ((java.util.Calendar.get(java.util.Calendar.int)) == 0) {\n        java.util.Calendar.add(java.util.Calendar.int, 12);\n    } else {\n        java.util.Calendar.add(java.util.Calendar.int, -12);\n        java.util.Calendar.add(java.util.Calendar.int, 1);\n    }\n} else {\n    java.util.Calendar.add(int[][0], 1);\n}"},"status":-1},{"failures":[],"tindex":"75058140-25c8-11e5-91bc-c7e65e83b7ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:410","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4176","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85],"tindex":"7505a851-25c8-11e5-91bc-03cd9149e8d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2302","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    return -1;\n} "},"variableMap":{"startIndex":"delimLen","size":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:708","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    org.apache.commons.lang3.text.StrTokenizer.addToken(java.util.List<java.lang.String>, \"\");\n    return int + int;\n} "},"status":-1},{"failures":[],"tindex":"7505a852-25c8-11e5-91bc-e7b04ed9c827","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:652","type":"CtInvocationImpl","sourcecode":"java.util.Arrays.sort(this.java.lang.String[])"},"variableMap":{"excludeFieldNames":"org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:146","type":"CtIfImpl","sourcecode":"if (java.lang.String[] == null) {\n    java.lang.String[] = org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[];\n} "},"status":-2},{"failures":[],"tindex":"7505a853-25c8-11e5-91bc-2da618ce5b32","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl","sourcecode":"int int = 73 << 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1674","type":"CtLocalVariableImpl","sourcecode":"int int = java.util.concurrent.TimeUnit == (java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit) ? 0 : 1"},"status":-2},{"failures":[86,87,88,89,90,91,92],"tindex":"7505cf64-25c8-11e5-91bc-073275585834","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1923","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-1},{"failures":[],"tindex":"7505cf65-25c8-11e5-91bc-b105b3c2ec65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1661","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[93,94],"tindex":"7505cf66-25c8-11e5-91bc-efe209031c9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringEscapeUtils:336","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.translate.EntityArrays.ISO8859_1_UNESCAPE()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringEscapeUtils:137","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.translate.EntityArrays.APOS_ESCAPE()"},"status":-1},{"failures":[],"tindex":"7505cf67-25c8-11e5-91bc-71fab27e9958","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:607","type":"CtDoImpl","sourcecode":"do {\n    while ((int & 1) == 0) {\n        int /= 2;\n    }\n    if (int > 0) {\n        int = -int;\n    } else {\n        int = int;\n    }\n    int = (int - int) / 2;\n} while (int != 0 )"},"variableMap":{"t":"java.lang.Integer.MIN_VALUE","u":"java.lang.Integer.MIN_VALUE","v":"numerator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:493","type":"CtIfImpl","sourcecode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: can\\'t negate numerator\");\n} "},"status":-2},{"failures":[93,94,95],"tindex":"7505cf68-25c8-11e5-91bc-1fd08e39a34c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:368","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.java.lang.Boolean"},"status":-1},{"failures":[93,94,96],"tindex":"7505f679-25c8-11e5-91bc-87e0f5445cd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:512","type":"CtIfImpl","sourcecode":"if ((int) == (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: too large to negate\");\n} "},"variableMap":{"java.lang.Integer.MIN_VALUE":"startMatchLen","numerator":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}"},"status":-1},{"failures":[93,94,97],"tindex":"75061d8a-25c8-11e5-91bc-23cf0d10d373","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:111","type":"CtReturnImpl","sourcecode":"return 12"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:350","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.concurrent.TimedSemaphore.(getLimit()) - org.apache.commons.lang3.concurrent.TimedSemaphore.(getAcquireCount())"},"status":-1},{"failures":[],"tindex":"75061d8b-25c8-11e5-91bc-df0715704ca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:457","type":"CtReturnImpl","sourcecode":"return null"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}