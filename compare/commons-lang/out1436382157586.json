{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":19,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":17,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfWithStartIndex":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":15,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":26,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFully_String":4,"org.apache.commons.lang3.text.WordUtilsTest.testCapitalizeFullyWithDelimiters_String":5,"org.apache.commons.lang3.math.NumberUtilsTest.testIsNumber":29,"org.apache.commons.lang3.mutable.MutableShortTest.testDecrement":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":23,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeEx3":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":24},"transformations":[{"failures":[0],"tindex":"e62b1ca0-25a3-11e5-aa23-a3c739abe372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1242","type":"CtAssignmentImpl","sourcecode":"short = short"},"variableMap":{"a":"value","b":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableShort:127","type":"CtUnaryOperatorImpl","sourcecode":"(short)--"},"status":-1},{"failures":[],"tindex":"e62b43b1-25a3-11e5-aa23-21bf7933c669","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:291","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != null) {\n    if (!(java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers()))) {\n        return false;\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getEnclosingClass();\n}"},"variableMap":{"cls":"componentType"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:291","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)));\n} "},"status":-2},{"failures":[],"tindex":"e62b6ac2-25a3-11e5-aa23-9715d8ba1c21","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1174","type":"CtAssignmentImpl","sourcecode":"int = java.util.Calendar.int"},"variableMap":{"startCutoff":"startPos","java.util.Calendar.MONDAY":"startPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1114","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"e62b6ac3-25a3-11e5-aa23-85c25d7f6085","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl","sourcecode":"return \"StrTokenizer[not tokenized yet]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:409","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDatePrinter.applyRules(java.util.Calendar, new java.lang.StringBuffer(int)).toString()"},"status":-2},{"failures":[1],"tindex":"e62b6ac4-25a3-11e5-aa23-cf20659aa7e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:253","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"The value must not be greater than Integer.MAX_VALUE or NaN\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:336","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The object to build a hash code for must not be null\")"},"status":-1},{"failures":[],"tindex":"e62b91d5-25a3-11e5-aa23-21596c283930","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:5136","type":"CtLocalVariableImpl","sourcecode":"final int int = int * int"},"variableMap":{"repeat":"startIndexInclusive","inputLength":"startIndexInclusive"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1612","type":"CtLocalVariableImpl","sourcecode":"int int = int < 0 ? 0 : int"},"status":-2},{"failures":[],"tindex":"e62b91d6-25a3-11e5-aa23-65b9b3d1eb3e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:276","type":"CtLocalVariableImpl","sourcecode":"int int = 73 << 8"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:657","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()"},"status":-2},{"failures":[2],"tindex":"e62b91d7-25a3-11e5-aa23-0132fabd3310","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1906","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = 0;\n} "},"status":-1},{"failures":[],"tindex":"e62b91d8-25a3-11e5-aa23-f5e5b7866125","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:129","type":"CtReturnImpl","sourcecode":"return 13"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2878","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e62b91d9-25a3-11e5-aa23-89d4a3940831","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:91","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.clone(org.apache.commons.lang3.exception.ExceptionUtils.java.lang.String[])"},"variableMap":{"org.apache.commons.lang3.exception.ExceptionUtils.CAUSE_METHOD_NAMES":"tokens"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:434","type":"CtReturnImpl","sourcecode":"return java.lang.String[].clone()"},"status":0},{"failures":[],"tindex":"e62bb8ea-25a3-11e5-aa23-2fc0fe80cf5f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1658","type":"CtIfImpl","sourcecode":"if (((int - 1) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 8\");\n} "},"variableMap":{"nBools":"java.lang.Integer.MAX_VALUE","srcPos":"java.lang.Integer.MAX_VALUE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:660","type":"CtIfImpl","sourcecode":"if (long > (java.lang.Integer.int)) {\n    throw new java.lang.ArithmeticException(\"overflow: mulPos\");\n} "},"status":-2},{"failures":[],"tindex":"e62bb8eb-25a3-11e5-aa23-a99e329f4c14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:355","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.lang3.builder.EqualsBuilder org.apache.commons.lang3.builder.EqualsBuilder = new org.apache.commons.lang3.builder.EqualsBuilder()"},"status":-2},{"failures":[3],"tindex":"e62bb8ec-25a3-11e5-aa23-cba1e20d20c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:189","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2732","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.(org.apache.commons.lang3.ArrayUtils.indexOf(double[], double, 0, double)) != (org.apache.commons.lang3.ArrayUtils.int)"},"status":-1},{"failures":[4,5],"tindex":"e62bb8ed-25a3-11e5-aa23-e34d801f1832","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:529","type":"CtReturnImpl","sourcecode":"return java.lang.String.isEmpty() ? null : java.lang.String"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:356","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28],"tindex":"e62bdffe-25a3-11e5-aa23-9f5ff9768a26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:604","type":"CtLocalVariableImpl","sourcecode":"int int = (int & 1) == 1 ? int : -(int / 2)"},"variableMap":{"u":"pos","v":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:809","type":"CtLocalVariableImpl","sourcecode":"final int int = int"},"status":-1},{"failures":[],"tindex":"e62bdfff-25a3-11e5-aa23-a54374f3375f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4561","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index: \" + int) + \", Length: 0\"));\n} "},"variableMap":{"index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:787","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n    java.lang.Class<?>[][int] = org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.wrapperToPrimitive(java.lang.Class<?>[][int]);\n}"},"status":-2},{"failures":[],"tindex":"e62be000-25a3-11e5-aa23-a790d03a47be","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.translate.NumericEntityUnescaper:116","type":"CtLocalVariableImpl","sourcecode":"int int"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:584","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue()"},"status":-2},{"failures":[29],"tindex":"e62c0711-25a3-11e5-aa23-7124af317333","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:205","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Time period must be greater 0!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:455","type":"CtThrowImpl","sourcecode":"throw new java.lang.NumberFormatException(\"A blank string is not a valid number\")"},"status":-1},{"failures":[],"tindex":"e62c0712-25a3-11e5-aa23-2f00f6cda810","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:371","type":"CtIfImpl","sourcecode":"if (short[] == null) {\n    return null;\n} "},"variableMap":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_SHORT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3165","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.short[]"},"status":-2},{"failures":[],"tindex":"e62c0713-25a3-11e5-aa23-95f899abc872","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:295","type":"CtIfImpl","sourcecode":"if (int == 25) {\n    throw new java.lang.ArithmeticException(\"Unable to convert double to fraction\");\n} "},"variableMap":{"i":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:524","type":"CtWhileImpl","sourcecode":"hierarchyTraversal : while (java.util.Iterator<java.lang.Class<?>>.hasNext()) {\n    final java.lang.Class<?> java.lang.Class<?> = java.util.Iterator<java.lang.Class<?>>.next();\n    final java.lang.reflect.Method java.lang.reflect.Method = org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.getMatchingAccessibleMethod(java.lang.Class<?>, java.lang.reflect.Method.getName(), java.lang.Class<?>[]);\n    if (java.lang.reflect.Method == null) {\n        continue;\n    } \n    if (java.util.Arrays.equals(java.lang.reflect.Method.getParameterTypes(), java.lang.Class<?>[])) {\n        java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n        continue;\n    } \n    final java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type> = org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(java.lang.Class<?>, java.lang.reflect.Method.getDeclaringClass());\n    for (int int = 0 ; int < (java.lang.Class<?>[].int) ; int++) {\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        final java.lang.reflect.Type java.lang.reflect.Type = org.apache.commons.lang3.reflect.TypeUtils.unrollVariables(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Method.getGenericParameterTypes()[int]);\n        if (!(org.apache.commons.lang3.reflect.TypeUtils.equals(java.lang.reflect.Type, java.lang.reflect.Type))) {\n            continue hierarchyTraversal;\n        } \n    }\n    java.util.Set<java.lang.reflect.Method>.add(java.lang.reflect.Method);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"e62b91d9-25a3-11e5-aa23-89d4a3940831","diffs":[{"nodes":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":["org.apache.commons.lang3.ArrayUtils.<T> T[] clone(T[])"],"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":["org.apache.commons.lang3.ArrayUtils.<T> T[] clone(T[])"]},"edges":{"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":["org.apache.commons.lang3.text.StrTokenizer.java.lang.String[] getTokenArray() -> org.apache.commons.lang3.ArrayUtils.<T> T[] clone(T[])"],"org.apache.commons.lang3.text.StrTokenizerTest.testListArray":["org.apache.commons.lang3.text.StrTokenizer.java.lang.String[] getTokenArray() -> org.apache.commons.lang3.ArrayUtils.<T> T[] clone(T[])"]},"type":"graph"}]}]}