{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLong":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":19,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyIncludingInterfaces":37,"org.apache.commons.lang3.ArrayUtilsTest.testContainsDoubleTolerance":2,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfLongWithStartIndex":1,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleWithStartIndexTolerance":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":26,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":31,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":27,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithSupplementaryChars":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":16,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":28,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":32,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":33,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testLang299":43,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_StringWithBadSupplementaryChars":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":20,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":34,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":35,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetOverrideHierarchyExcludingInterfaces":38,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":25,"org.apache.commons.lang3.text.WordUtilsTest.testSwapCase_String":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":11,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContains_String":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_PrimitiveNumber":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":10,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":23,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":42,"org.apache.commons.lang3.ArrayUtilsTest.testIndexOfDoubleTolerance":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":30},"transformations":[{"failures":[0,1],"tindex":"d42eede1-25bd-11e5-bd9a-af4cc7b29f19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1040","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return int;\n} "},"variableMap":{"index":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2073","type":"CtForImpl","sourcecode":"for (int int = int ; int >= 0 ; int--) {\n    if (long == (long[][int])) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"d42f14f2-25bd-11e5-bd9a-8d796370c19f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:342","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[2,3,4],"tindex":"d42f14f3-25bd-11e5-bd9a-9150eb4320c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:578","type":"CtIfImpl","sourcecode":"if ((int == 0) || (int == 0)) {\n    if ((int == (java.lang.Integer.int)) || (int == (java.lang.Integer.int))) {\n        throw new java.lang.ArithmeticException(\"overflow: gcd is 2^31\");\n    } \n    return (java.lang.Math.abs(int)) + (java.lang.Math.abs(int));\n} "},"variableMap":{"u":"i","java.lang.Integer.MIN_VALUE":"i","v":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2600","type":"CtIfImpl","sourcecode":"if (((double[][int]) >= double) && ((double[][int]) <= double)) {\n    return int;\n} "},"status":-1},{"failures":[5],"tindex":"d42f14f4-25bd-11e5-bd9a-4b997767b625","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:472","type":"CtAssignmentImpl","sourcecode":"char[][int] = java.lang.Character.toUpperCase(char)"},"variableMap":{"ch":"ch","i":"i","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:465","type":"CtAssignmentImpl","sourcecode":"char[][int] = java.lang.Character.toLowerCase(char)"},"status":-1},{"failures":[],"tindex":"d42f14f5-25bd-11e5-bd9a-99420290f965","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:895","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)"},"status":0},{"failures":[],"tindex":"d42f14f6-25bd-11e5-bd9a-af21f65d8ef3","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:514","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"variableMap":{"str":"duration","mant":"duration"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:212","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \" \" + java.lang.String"},"status":0},{"failures":[],"tindex":"d42f3c07-25bd-11e5-bd9a-ef2cc6044bc1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:2069","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    int = (java.lang.String.length()) + int;\n} "},"variableMap":{"str":"str","start":"expPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:519","type":"CtIfImpl","sourcecode":"if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n    java.lang.String = java.lang.String.substring((int + 1), ((java.lang.String.length()) - 1));\n} else {\n    java.lang.String = null;\n}"},"status":-2},{"failures":[6,7,8],"tindex":"d42f3c08-25bd-11e5-bd9a-fd758dadc384","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:804","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, false, 0, java.lang.CharSequence, 0, java.lang.Math.max(java.lang.CharSequence.length(), java.lang.CharSequence.length()))"},"variableMap":{"cs1":"searchSeq","cs2":"searchSeq"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1448","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.lang3.CharSequenceUtils.indexOf(java.lang.CharSequence, java.lang.CharSequence, 0)) >= 0"},"status":-1},{"failures":[9,9,10],"tindex":"d42f3c09-25bd-11e5-bd9a-31cf89605992","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1279","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[])"},"variableMap":{"fieldName":"fieldName","array":"array","this":"this","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1275","type":"CtIfImpl","sourcecode":"if (double[] == null) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String);\n} else if (org.apache.commons.lang3.builder.ToStringStyle.isFullDetail(java.lang.Boolean)) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, double[]);\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, double[]);\n}"},"status":-1},{"failures":[],"tindex":"d42f3c0a-25bd-11e5-bd9a-b14c76d02e81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1522","type":"CtLocalVariableImpl","sourcecode":"final int int = 15 & (byte >> int)"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,10],"tindex":"d42f3c0b-25bd-11e5-bd9a-15402665d4e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:936","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} "},"variableMap":{"date":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:610","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringBuilder.getStyle().reflectionAppendArrayDetail(org.apache.commons.lang3.builder.ToStringBuilder.getStringBuffer(), null, java.lang.Object)"},"status":-1},{"failures":[],"tindex":"d42f631c-25bd-11e5-bd9a-5b494d379e76","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.SerializationUtils:79","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return null;\n} "},"variableMap":{"object":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:692","type":"CtReturnImpl","sourcecode":"return T"},"status":-2},{"failures":[31,32,33,34,35,36],"tindex":"d42f631d-25bd-11e5-bd9a-bfcbebed998a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:833","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof double[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n} else if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"d42f631e-25bd-11e5-bd9a-1f6e37e9abb9","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:345","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"comparison":"radix","superCompareTo":"radix"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:737","type":"CtAssignmentImpl","sourcecode":"int = 16"},"status":0},{"failures":[0,1],"tindex":"d42f631f-25bd-11e5-bd9a-39dffb784141","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl","sourcecode":"return int + int"},"variableMap":{"delimLen":"i","start":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2074","type":"CtIfImpl","sourcecode":"if (long == (long[][int])) {\n    return int;\n} "},"status":-1},{"failures":[37,38],"tindex":"d42f6320-25bd-11e5-bd9a-5be8076fe990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1350","type":"CtReturnImpl","sourcecode":"return ((java.lang.reflect.GenericArrayType)(java.lang.reflect.Type)).getGenericComponentType()"},"variableMap":{"type":"type"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1395","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Type"},"status":-1},{"failures":[39],"tindex":"d42f8a31-25bd-11e5-bd9a-5b71bbc1435d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)"},"status":-1},{"failures":[40,41],"tindex":"d42f8a32-25bd-11e5-bd9a-d1a9449a6a54","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.append(float).appendNewLine()"},"variableMap":{"this":"this","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:829","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.append(java.lang.String.valueOf(float))"},"status":-1},{"failures":[],"tindex":"d42f8a33-25bd-11e5-bd9a-29f54faf0934","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:476","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    org.apache.commons.lang3.reflect.MemberUtils.setAccessibleWorkaround(java.lang.reflect.Method);\n    return java.lang.reflect.Method;\n} catch (final java.lang.NoSuchMethodException e) {\n}"},"variableMap":{"parameterTypes":"parameterTypes","methodName":"methodName","cls":"parentClass"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:391","type":"CtWhileImpl","sourcecode":"while (java.lang.Class<?> != null) {\n    if (java.lang.reflect.Modifier.isPublic(java.lang.Class<?>.getModifiers())) {\n        try {\n            return java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n        } catch (final java.lang.NoSuchMethodException e) {\n            return null;\n        }\n    } \n    java.lang.Class<?> = java.lang.Class<?>.getSuperclass();\n}"},"status":0},{"failures":[42,43,44],"tindex":"d42f8a34-25bd-11e5-bd9a-154f2d501b65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.MultiBackgroundInitializer:135","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    throw new java.lang.IllegalArgumentException(\"Name of child initializer must not be null!\");\n} "},"variableMap":{"name":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1441","type":"CtInvocationImpl","sourcecode":"java.lang.String.getChars(0, int, char[], int)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"d42f8a33-25bd-11e5-bd9a-29f54faf0934","diffs":[{"nodes":{},"edges":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetAccessibleMethodPrivateInterface":["org.apache.commons.lang3.reflect.MethodUtils.java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[]) -> org.apache.commons.lang3.reflect.MethodUtils.java.lang.reflect.Method getAccessibleMethodFromSuperclass(java.lang.Class,java.lang.String,java.lang.Class[])"]},"type":"graph"}]}]}