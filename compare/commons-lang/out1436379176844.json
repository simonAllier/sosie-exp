{"failureDictionary":{"org.apache.commons.lang3.builder.DiffBuilderTest.testInt":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":117,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":103,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":119,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testAddInitializerAfterStart":140,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":113,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":116,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":61,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeRuntimeEx":129,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":29,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloatArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":67,"org.apache.commons.lang3.builder.DiffBuilderTest.testDouble":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":111,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":69,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":127,"org.apache.commons.lang3.builder.DiffBuilderTest.testShortArray":40,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":82,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_invalid":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":93,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultIsExceptionUnknown":142,"org.apache.commons.lang3.builder.DiffBuilderTest.testBooleanArray":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":70,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeExternalExec":139,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":88,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":104,"org.apache.commons.lang3.builder.EqualsBuilderTest.testCyclicalObjectReferences":22,"org.apache.commons.lang3.builder.DiffBuilderTest.testLongArray":39,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayFloat":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":121,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":90,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":105,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchyArrayList":55,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulTrue":130,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":109,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":4,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":89,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":99,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteCharAt":17,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionNull":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":13,"org.apache.commons.lang3.builder.DiffBuilderTest.testBoolean":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":110,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":76,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":112,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":144,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":107,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":94,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":118,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":87,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.test_setUpToClass_valid":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":126,"org.apache.commons.lang3.text.StrBuilderTest.testContains_char":9,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeEx":134,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":59,"org.apache.commons.lang3.builder.DiffBuilderTest.testLong":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":106,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":91,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":95,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":96,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":97,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeChildWithExecutor":138,"org.apache.commons.lang3.builder.DiffBuilderTest.testChar":33,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":72,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":49,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNested":132,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":60,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectArrayEqual":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":84,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":125,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":115,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructorFromDescription":0,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultInitializerNamesModify":128,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetAccessibleConstructor":1,"org.apache.commons.lang3.builder.DiffBuilderTest.testObjectsEqual":38,"org.apache.commons.lang3.ArrayUtilsTest.testToObject_float":20,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEquals":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":66,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":102,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":73,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionHierarchyEquals":24,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":143,"org.apache.commons.lang3.builder.DiffBuilderTest.testObject":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":100,"org.apache.commons.lang3.builder.DiffBuilderTest.testIntArray":42,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetResultObjectUnknown":141,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetInitializerUnknown":135,"org.apache.commons.lang3.builder.DiffBuilderTest.testFloat":30,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testResultGetExceptionUnknown":131,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionEqualsExcludeFields":23,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":83,"org.apache.commons.lang3.builder.DiffBuilderTest.testShort":31,"org.apache.commons.lang3.builder.DiffBuilderTest.testDoubleArray":45,"org.apache.commons.lang3.ObjectUtilsTest.testConstMethods":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":98,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":114,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":57,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":101,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":120,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":122,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":75,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":47,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeNoChildren":137,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":71,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeTempExec":133,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":8,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":50,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":12,"org.apache.commons.lang3.concurrent.MultiBackgroundInitializerTest.testInitializeResultsIsSuccessfulFalse":136,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":123,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":79,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":15,"org.apache.commons.lang3.builder.DiffBuilderTest.testByte":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":54,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":108,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToStringUsingMultiLineStyle":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":124},"transformations":[{"failures":[],"tindex":"f5826fab-259c-11e5-872a-e5561baa3d2b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.mutable.MutableBoolean:128","type":"CtReturnImpl","sourcecode":"return (boolean) == true"},"variableMap":{"value":"emptyAsNull"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:1015","type":"CtReturnImpl","sourcecode":"return this.boolean"},"status":-2},{"failures":[],"tindex":"f582bdcc-259c-11e5-872a-4fa70eec5dbd","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:910","type":"CtIfImpl","sourcecode":"if (java.util.Calendar == null) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} "},"variableMap":{"date":"cal1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:160","type":"CtInvocationImpl","sourcecode":"java.util.Calendar.setTime(java.util.Date)"},"status":0},{"failures":[],"tindex":"f582bdcd-259c-11e5-872a-993e0c01f0d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.DiffBuilder:809","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.lang.Object"},"variableMap":{"objectToTest":"org.apache.commons.lang3.time.DurationFormatUtils.d","lhs":"org.apache.commons.lang3.time.DurationFormatUtils.d"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:514","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.lang3.time.DurationFormatUtils.java.lang.Object"},"status":-2},{"failures":[],"tindex":"f582bdce-259c-11e5-872a-6b797718e288","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:94","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.commaMatcher())"},"variableMap":{"org.apache.commons.lang3.text.StrTokenizer.CSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.tabMatcher())"},"status":-2},{"failures":[0,1],"tindex":"f582bdcf-259c-11e5-872a-03a1f3d0585a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:293","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f582e4e0-259c-11e5-872a-173add2b9b19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableObject:98","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MemberUtils:67","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[2],"tindex":"f582e4e1-259c-11e5-872a-974e2fc0ba91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:435","type":"CtIfImpl","sourcecode":"if (float[] == null) {\n    return null;\n} "},"variableMap":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1165","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} "},"status":-1},{"failures":[],"tindex":"f582e4e2-259c-11e5-872a-11516d841406","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1131","type":"CtReturnImpl","sourcecode":"return double[]"},"status":-2},{"failures":[3,4,5,6,7,8],"tindex":"f582e4e3-259c-11e5-872a-33eb55eef71b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:197","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"variableMap":{"offset":"fmtCount","spaceToWrapAt":"fmtCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:163","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[9],"tindex":"f5830bf4-259c-11e5-872a-35e21d8ac940","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1355","type":"CtIfImpl","sourcecode":"if (int == int) {\n    return false;\n} "},"variableMap":{"sz":"size","i":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2249","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (this.int) ; int++) {\n    if ((char[][int]) == char) {\n        return true;\n    } \n}"},"status":-1},{"failures":[10],"tindex":"f5830bf5-259c-11e5-872a-eff2f9139471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl","sourcecode":"return (this.long) - (this.long)"},"variableMap":{"stopTime":"v","startTime":"v"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:896","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[11,12,13,14,15,16,17],"tindex":"f5830bf6-259c-11e5-872a-6dcf7dc2a0a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1260","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 16) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nShorts-1)*16+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"srcPos":"index","nShorts":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:346","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + 1), 1)"},"status":-1},{"failures":[],"tindex":"f5830bf7-259c-11e5-872a-434b6477ed9e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:451","type":"CtIfImpl","sourcecode":"if (boolean[] == null) {\n    return null;\n} "},"variableMap":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_BOOLEAN_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3456","type":"CtIfImpl","sourcecode":"if (java.lang.Boolean[] == null) {\n    return null;\n} else if ((java.lang.Boolean[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.boolean[];\n} "},"status":0},{"failures":[18,19],"tindex":"f5833308-259c-11e5-872a-69f180ea5fdb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableInt:262","type":"CtReturnImpl","sourcecode":"return (int) < int ? -1 : (int) == int ? 0 : 1"},"variableMap":{"anotherVal":"i","value":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2923","type":"CtIfImpl","sourcecode":"if (boolean == (boolean[][int])) {\n    return int;\n} "},"status":-1},{"failures":[20],"tindex":"f5833309-259c-11e5-872a-dde8b02ec377","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3416","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    java.lang.Float[][int] = java.lang.Float.valueOf(float[][int]);\n}"},"status":-1},{"failures":[],"tindex":"f583330a-259c-11e5-872a-91bcc747d0ca","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1211","type":"CtIfImpl","sourcecode":"if (int > (java.util.Calendar.int)) {\n    int -= 7;\n} "},"variableMap":{"java.util.Calendar.SATURDAY":"bufEnd","startCutoff":"startMatchLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:770","type":"CtIfImpl","sourcecode":"if ((int > int) && ((char[][(int - 1)]) == char)) {\n    org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n    int--;\n    boolean = true;\n    int--;\n} else {\n    final int int = int;\n    int += int;\n    int int = 0;\n    int int = 0;\n    while (int < int) {\n        if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n            int++;\n            int += int;\n            continue;\n        } \n        int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n        if (int == 0) {\n            int++;\n        } else {\n            if (int == 0) {\n                java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                if (boolean) {\n                    final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                    org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                    java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                } \n                int += int;\n                final int int = int;\n                java.lang.String java.lang.String = java.lang.String;\n                java.lang.String java.lang.String = null;\n                if (org.apache.commons.lang3.text.StrMatcher != null) {\n                    final char[] char[] = java.lang.String.toCharArray();\n                    int int = 0;\n                    for (int int = 0 ; int < (char[].int) ; int++) {\n                        if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                            break;\n                        } \n                        if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                            java.lang.String = java.lang.String.substring(0, int);\n                            java.lang.String = java.lang.String.substring((int + int));\n                            break;\n                        } \n                    }\n                } \n                if (java.util.List<java.lang.String> == null) {\n                    java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                    java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                } \n                org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                java.util.List<java.lang.String>.add(java.lang.String);\n                java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                if (java.lang.String == null) {\n                    java.lang.String = java.lang.String;\n                } \n                if (java.lang.String != null) {\n                    final int int = java.lang.String.length();\n                    org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                    boolean = true;\n                    int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                    int = (int + int) - (int - int);\n                    int += int;\n                    int += int;\n                    int += int;\n                    char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                } \n                java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                break;\n            } else {\n                int--;\n                int += int;\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"f5835a1b-259c-11e5-872a-67d8bdc19682","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:577","type":"CtReturnImpl","sourcecode":"return '1'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:448","type":"CtIfImpl","sourcecode":"if (boolean[][int]) {\n    return 'e';\n} else {\n    return '6';\n}"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"f5835a1c-259c-11e5-872a-7defd572c813","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:484","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof float[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((float[])(java.lang.Object)), ((float[])(java.lang.Object)));\n} else if (java.lang.Object instanceof boolean[]) {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.EqualsBuilder.append(((java.lang.Object[])(java.lang.Object)), ((java.lang.Object[])(java.lang.Object)));\n}"},"variableMap":{"lhs":"rhs","this":"equalsBuilder","rhs":"rhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:360","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.org.apache.commons.lang3.builder.EqualsBuilder.reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class<?>, org.apache.commons.lang3.builder.EqualsBuilder, boolean, java.lang.String[])"},"status":-1},{"failures":[53,54,55,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143],"tindex":"f583812d-259c-11e5-872a-1fdbdba0ec50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:213","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.remove()"},"status":-1},{"failures":[46,47,144,48],"tindex":"f583a83e-259c-11e5-872a-f521d8308894","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:468","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")"},"variableMap":{"target":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:317","type":"CtIfImpl","sourcecode":"if ((((!(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n    try {\n        org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n    } catch (final java.lang.IllegalAccessException e) {\n        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"f582e4e0-259c-11e5-872a-173add2b9b19","diffs":[{"variables":{"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":["org.apache.commons.lang3.ArrayUtils.boolean isSameLength(java.lang.Object[],java.lang.Object[])_if (((((array1 == null) && (array2 != null)) && ((array2.length) > 0)) || (((array2 == null) && (array1 != null)) && ((array1.length) > 0))) || (((array1 != null) && (array2 != null)) && ((array1.length) != (array2.length)))) {    return false"]},"type":"variable"}]}]}