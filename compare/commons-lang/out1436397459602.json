{"failureDictionary":{"org.apache.commons.lang3.text.StrTokenizerTest.test8":37,"org.apache.commons.lang3.text.StrTokenizerTest.test5":35,"org.apache.commons.lang3.text.StrTokenizerTest.test4":34,"org.apache.commons.lang3.text.StrTokenizerTest.test7":36,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic1":48,"org.apache.commons.lang3.text.StrTokenizerTest.test6":69,"org.apache.commons.lang3.time.DateUtilsTest.testIsSameInstant_Date":0,"org.apache.commons.lang3.text.StrTokenizerTest.test1":31,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Collection":55,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray_int_int":71,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String":30,"org.apache.commons.lang3.text.StrTokenizerTest.test3":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":77,"org.apache.commons.lang3.text.StrTokenizerTest.test2":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":82,"org.apache.commons.lang3.builder.ToStringStyleConcurrencyTest.testArrayList":1,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":65,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic2":49,"org.apache.commons.lang3.text.StrTokenizerTest.testToString":20,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassOutputChange":21,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic3":50,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic4":51,"org.apache.commons.lang3.text.StrTokenizerTest.testBasic5":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":78,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementLongArray":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":72,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicDelim1":12,"org.apache.commons.lang3.text.StrTokenizerTest.testReset":19,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":87,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":75,"org.apache.commons.lang3.text.StrBuilderTest.testIsEmpty":10,"org.apache.commons.lang3.text.StrBuilderTest.testTrim":6,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Array":67,"org.apache.commons.lang3.mutable.MutableFloatTest.testEquals":83,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft_int":61,"org.apache.commons.lang3.text.StrTokenizerTest.testTSV":16,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":68,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":8,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer_int_int":84,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_Boolean":59,"org.apache.commons.lang3.text.StrBuilderTest.testEqualsIgnoreCase":7,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char_char":41,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfIntWithStartIndex":2,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimpleNeedsTrim":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":73,"org.apache.commons.lang3.text.StrTokenizerTest.testReset_String":29,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEqualsHashcode":85,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted1":22,"org.apache.commons.lang3.text.StrTokenizerTest.testCSVSimple":11,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparatorsWithNullText":64,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray_char":15,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted3":24,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted2":23,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted5":26,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted4":25,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted7":28,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char":38,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed1":53,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuoted6":27,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicQuotedTrimmed1":47,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicTrimmed2":54,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray_int_int":70,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":76,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":74,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":79,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testOrdinalIndexOf":88,"org.apache.commons.lang3.text.StrTokenizerTest.testTokenizeSubclassInputChange":39,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed3":45,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed2":44,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendAll_Array":63,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfInt":3,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed4":46,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testLastOrdinalIndexOf":89,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":13,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_String_char_char":18,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":14,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicIgnoreTrimmed1":43,"org.apache.commons.lang3.text.StrTokenizerTest.testConstructor_charArray":40,"org.apache.commons.lang3.text.StrBuilderTest.testAsTokenizer":4,"org.apache.commons.lang3.text.StrBuilderTest.testClear":5,"org.apache.commons.lang3.text.StrTokenizerTest.testIteration":17,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight":66,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_PrimitiveNumber":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":80,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadRight_int":57,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithSeparators_Iterator":62,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":56,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":90,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":91,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendFixedWidthPadLeft":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":81},"transformations":[{"failures":[0,1],"tindex":"86e0b187-25c7-11e5-9a78-51a079314b09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:201","type":"CtIfImpl","sourcecode":"if ((java.util.Date == null) || (java.util.Date == null)) {\n    throw new java.lang.IllegalArgumentException(\"The date must not be null\");\n} "},"status":-1},{"failures":[2,3],"tindex":"86e0d898-25c7-11e5-9a78-815e414e7cc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BitField:95","type":"CtReturnImpl","sourcecode":"return int & (int)"},"variableMap":{"_mask":"i","holder":"valueToFind"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2177","type":"CtIfImpl","sourcecode":"if (int == (int[][int])) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"86e0d899-25c7-11e5-9a78-59d7fad0c903","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:292","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.equals(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))"},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:278","type":"CtReturnImpl","sourcecode":"return (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableFloat) && ((java.lang.Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(java.lang.Object)).float)) == (java.lang.Float.floatToIntBits(float)))"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"86e0d89a-25c7-11e5-9a78-4148dc1a7d36","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:293","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[],"tindex":"86e0ffab-25c7-11e5-9a78-c197bc8c198a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FormatCache:121","type":"CtIfImpl","sourcecode":"if (java.util.Locale == null) {\n    java.util.Locale = java.util.Locale.getDefault();\n} "},"variableMap":{"locale":"locale"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:197","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.getTimeInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else if (java.lang.Integer == null) {\n    java.text.DateFormat = java.text.DateFormat.getDateInstance(java.lang.Integer.intValue(), java.util.Locale);\n} else {\n    java.text.DateFormat = java.text.DateFormat.getDateTimeInstance(java.lang.Integer.intValue(), java.lang.Integer.intValue(), java.util.Locale);\n}"},"status":-2},{"failures":[68,24,25,26,31,32,33,34,35,69,42,43,44,46,47,53,54,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"86e0ffac-25c7-11e5-9a78-ff9017ff9a54","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:592","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"comparison":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:758","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"86e0ffad-25c7-11e5-9a78-6365e33d24af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:282","type":"CtIfImpl","sourcecode":"if ((char >= 56192) && (char <= 56319)) {\n    int++;\n} else {\n    char[][int] = char;\n}"},"variableMap":{"ch":"escape","count":"lengthChange","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:763","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if ((int > int) && ((char[][(int - 1)]) == char)) {\n            org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            int--;\n            boolean = true;\n            int--;\n        } else {\n            final int int = int;\n            int += int;\n            int int = 0;\n            int int = 0;\n            while (int < int) {\n                if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                    int++;\n                    int += int;\n                    continue;\n                } \n                int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n                if (int == 0) {\n                    int++;\n                } else {\n                    if (int == 0) {\n                        java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                        if (boolean) {\n                            final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                            org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                            java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                        } \n                        int += int;\n                        final int int = int;\n                        java.lang.String java.lang.String = java.lang.String;\n                        java.lang.String java.lang.String = null;\n                        if (org.apache.commons.lang3.text.StrMatcher != null) {\n                            final char[] char[] = java.lang.String.toCharArray();\n                            int int = 0;\n                            for (int int = 0 ; int < (char[].int) ; int++) {\n                                if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                    break;\n                                } \n                                if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                    java.lang.String = java.lang.String.substring(0, int);\n                                    java.lang.String = java.lang.String.substring((int + int));\n                                    break;\n                                } \n                            }\n                        } \n                        if (java.util.List<java.lang.String> == null) {\n                            java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                            java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                        } \n                        org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                        java.util.List<java.lang.String>.add(java.lang.String);\n                        java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                        if (java.lang.String == null) {\n                            java.lang.String = java.lang.String;\n                        } \n                        if (java.lang.String != null) {\n                            final int int = java.lang.String.length();\n                            org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                            boolean = true;\n                            int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                            int = (int + int) - (int - int);\n                            int += int;\n                            int += int;\n                            int += int;\n                            char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                        } \n                        java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                        break;\n                    } else {\n                        int--;\n                        int += int;\n                    }\n                }\n            }\n        }\n    }\n}"},"status":-2},{"failures":[83],"tindex":"86e126be-25c7-11e5-9a78-75d0e8a04eb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()"},"variableMap":{"array2":"obj","array1":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.mutable.MutableFloat:278","type":"CtReturnImpl","sourcecode":"return (java.lang.Object instanceof org.apache.commons.lang3.mutable.MutableFloat) && ((java.lang.Float.floatToIntBits(((org.apache.commons.lang3.mutable.MutableFloat)(java.lang.Object)).float)) == (java.lang.Float.floatToIntBits(float)))"},"status":-1},{"failures":[84],"tindex":"86e14dcf-25c7-11e5-9a78-7b3dc80ddb63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:6853","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(\"Threshold must not be negative\");\n} "},"variableMap":{"threshold":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:602","type":"CtIfImpl","sourcecode":"if ((int < 0) || ((int + int) > (java.lang.StringBuffer.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"length must be valid\");\n} "},"status":-1},{"failures":[85],"tindex":"86e14dd0-25c7-11e5-9a78-9bac59c50af3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:821","type":"CtReturnImpl","sourcecode":"return int % 12"},"variableMap":{"iValue":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:295","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"86e14dd1-25c7-11e5-9a78-21bd2337fd0f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:282","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Stopwatch must be running to suspend. \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:398","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(java.lang.String.format(java.lang.String, java.lang.Object[]))"},"status":-2},{"failures":[],"tindex":"86e14dd2-25c7-11e5-9a78-c3399dab042d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:118","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"86e14dd3-25c7-11e5-9a78-cbd552258b86","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"tokenPos","startPos":"tokenPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:530","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"86e174e4-25c7-11e5-9a78-7ff7f32c6ea2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Range:315","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.Range<T> == null) {\n    return false;\n} "},"variableMap":{"otherRange":"otherRange"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:354","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.lang3.Range<T>.contains(T)) || (org.apache.commons.lang3.Range<T>.contains(T))) || org.apache.commons.lang3.Range<T>.(contains(org.apache.commons.lang3.Range<T>.T))"},"status":-2},{"failures":[86],"tindex":"86e174e5-25c7-11e5-9a78-e72c46ee18cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.EnumUtils:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ArrayUtils.reverse(long[])"},"variableMap":{"lvalues":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5716","type":"CtForEachImpl","sourcecode":"for (final long long : long[]) {\n    final java.lang.Long java.lang.Long = java.lang.Long.valueOf(long);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Long);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Long, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Long, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}"},"status":-1},{"failures":[87],"tindex":"86e174e6-25c7-11e5-9a78-311d87b5e91a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:136","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.builder.ToStringStyle == null) {\n    throw new java.lang.IllegalArgumentException(\"The style must not be null\");\n} "},"variableMap":{"style":"style"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringBuilder:374","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.append(java.lang.StringBuffer, null, double[], null)"},"status":-1},{"failures":[88,89],"tindex":"86e19bf7-25c7-11e5-9a78-1790627abefa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1124","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.CharSequenceUtils.regionMatches(java.lang.CharSequence, true, int, java.lang.CharSequence, 0, java.lang.CharSequence.length())) {\n    return int;\n} "},"variableMap":{"str":"str","searchStr":"str","i":"ordinal"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1026","type":"CtIfImpl","sourcecode":"if (((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) || (int <= 0)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"status":-1},{"failures":[],"tindex":"86e19bf8-25c7-11e5-9a78-8b6c2ae2f31e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:622","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    java.util.List<java.lang.String>.add(java.util.StringTokenizer.nextToken());\n}"},"variableMap":{"frames":"frames","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:646","type":"CtWhileImpl","sourcecode":"while (java.util.StringTokenizer.hasMoreTokens()) {\n    final java.lang.String java.lang.String = java.util.StringTokenizer.nextToken();\n    final int int = java.lang.String.indexOf(\"at\");\n    if ((int != (-1)) && (java.lang.String.substring(0, int).trim().isEmpty())) {\n        boolean = true;\n        java.util.List<java.lang.String>.add(java.lang.String);\n    } else if (boolean) {\n        break;\n    } \n}"},"status":0},{"failures":[90,91],"tindex":"86e19bf9-25c7-11e5-9a78-d19fc592379d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:2022","type":"CtLocalVariableImpl","sourcecode":"int int = org.apache.commons.lang3.StringUtils.int"},"variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"pfxLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:476","type":"CtLocalVariableImpl","sourcecode":"final int int = (java.lang.String.length()) - int"},"status":-1},{"failures":[],"tindex":"86e19bfa-25c7-11e5-9a78-7144bbc55e78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:103","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case '0' :\n        return 0;\n    case '1' :\n        return 8;\n    case '2' :\n        return 4;\n    case '3' :\n        return 12;\n    case '4' :\n        return 2;\n    case '5' :\n        return 10;\n    case '6' :\n        return 6;\n    case '7' :\n        return 14;\n    case '8' :\n        return 1;\n    case '9' :\n        return 9;\n    case 'a' :\n    case 'A' :\n        return 5;\n    case 'b' :\n    case 'B' :\n        return 13;\n    case 'c' :\n    case 'C' :\n        return 3;\n    case 'd' :\n    case 'D' :\n        return 11;\n    case 'e' :\n    case 'E' :\n        return 7;\n    case 'f' :\n    case 'F' :\n        return 15;\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}