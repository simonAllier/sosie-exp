{"failureDictionary":{"org.apache.commons.lang3.ArrayUtilsTest.testReverseByteRange":23,"org.apache.commons.lang3.builder.DiffBuilderTest.testCharArray":8,"org.apache.commons.lang3.math.FractionTest.testFactory_int_int_int":25,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStrip_StringString":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":10,"org.apache.commons.lang3.ArrayUtilsRemoveMultipleTest.testRemoveElementShortArray":30,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Class":7,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripStart_StringString":0,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_Object":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":9,"org.apache.commons.lang3.ArrayUtilsTest.testReverseByte":24,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArray":21,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":28,"org.apache.commons.lang3.StringUtilsTrimEmptyTest.testStripAll":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":12,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBoolean":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":13,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testNullArgument":27,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfAnyBut_StringCharArrayWithSupplementaryChars":20,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":3,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher_int":4,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_int":16,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_String":19,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":26,"org.apache.commons.lang3.AnnotationUtilsTest.testToString":29,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":11,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsOnly_CharArray":22,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":14,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfBooleanWithStartIndex":18,"org.apache.commons.lang3.ClassUtilsTest.test_getShortCanonicalName_String":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":15},"transformations":[{"failures":[],"tindex":"dd35da85-25cf-11e5-b202-57b4fe6601c6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:62","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setContentEnd(\")\")"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:186","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final java.util.Map<java.lang.Object, java.lang.Object> java.util.Map<java.lang.Object, java.lang.Object> = org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry();\n    if (java.util.Map<java.lang.Object, java.lang.Object> == null) {\n        org.apache.commons.lang3.builder.ToStringStyle.java.lang.ThreadLocal<java.util.WeakHashMap<java.lang.Object, java.lang.Object>>.set(new java.util.WeakHashMap<java.lang.Object, java.lang.Object>());\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.org.apache.commons.lang3.builder.ToStringStyle.getRegistry().put(java.lang.Object, null);\n} "},"status":-2},{"failures":[],"tindex":"dd3628a6-25cf-11e5-b202-a17ce4425792","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.RandomStringUtils:227","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException(((\"Requested random string length \" + int) + \" is less than 0.\"));\n} "},"variableMap":{"count":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:650","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.lang.StringBuilder.length()))) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"startIndex must be valid\");\n} "},"status":0},{"failures":[],"tindex":"dd3628a7-25cf-11e5-b202-1756c5cd5687","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:849","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5856","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2],"tindex":"dd3628a8-25cf-11e5-b202-11cbc1c3ab66","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:5428","type":"CtReturnImpl","sourcecode":"return java.lang.String.concat(java.lang.String)"},"variableMap":{"str":"stripChars","padStr":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:626","type":"CtIfImpl","sourcecode":"if (java.lang.String.isEmpty()) {\n    return java.lang.String;\n} else {\n    while ((int != int) && ((java.lang.String.indexOf(java.lang.String.charAt(int))) != (org.apache.commons.lang3.StringUtils.int))) {\n        int++;\n    }\n}"},"status":-1},{"failures":[3,4],"tindex":"dd364fb9-25cf-11e5-b202-9bebd1f2c420","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:407","type":"CtReturnImpl","sourcecode":"return (int) / (int)"},"variableMap":{"numerator":"i","denominator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2521","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"dd364fba-25cf-11e5-b202-2f10f2343187","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:653","type":"CtIfImpl","sourcecode":"if ((float[] == null) || ((float[].int) == 0)) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} "},"variableMap":{"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY":"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY","array":"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3390","type":"CtIfImpl","sourcecode":"if ((java.lang.Float[].int) == 0) {\n    return org.apache.commons.lang3.ArrayUtils.float[];\n} "},"status":-2},{"failures":[5,6,7],"tindex":"dd364fbb-25cf-11e5-b202-05f673c1e1f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:1115","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"dd364fbc-25cf-11e5-b202-bb268330468f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:260","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1858","type":"CtLocalVariableImpl","sourcecode":"int int = (java.lang.Math.min(short[].int, int)) - 1"},"status":-2},{"failures":[8],"tindex":"dd3676cd-25cf-11e5-b202-d511ff48e824","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:775","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.setEquals(false)"},"status":-1},{"failures":[9,10,11,12,13,14,15],"tindex":"dd3676ce-25cf-11e5-b202-2f346e124de0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.translate.UnicodeUnescaper:58","type":"CtReturnImpl","sourcecode":"return int + 4"},"variableMap":{"i":"lengthChange"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:880","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[16],"tindex":"dd3676cf-25cf-11e5-b202-855b62133abe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:355","type":"CtIfImpl","sourcecode":"if (int[] == null) {\n    return null;\n} "},"variableMap":{"array":"org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3097","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.int[]"},"status":-1},{"failures":[17,18],"tindex":"dd3676d0-25cf-11e5-b202-3ba91c977864","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:939","type":"CtIfImpl","sourcecode":"if (0 == int) {\n    return int;\n} "},"variableMap":{"dstInit":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","nHex":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2914","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.ArrayUtils.isEmpty(boolean[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} "},"status":-1},{"failures":[19,20,21,22],"tindex":"dd369de1-25cf-11e5-b202-11fb304d5cc3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1975","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == null) {\n    continue;\n} "},"variableMap":{"search":"cs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1720","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) == char) {\n        if (((int < int) && (int < int)) && (java.lang.Character.isHighSurrogate(char))) {\n            if ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1)))) {\n                continue outer;\n            } \n        } else {\n            continue outer;\n        }\n    } \n}"},"status":-1},{"failures":[],"tindex":"dd369de2-25cf-11e5-b202-a36185a11998","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"dd36c4f3-25cf-11e5-b202-91daccf834de","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:403","type":"CtIfImpl","sourcecode":"if (byte[] == null) {\n    return null;\n} "},"variableMap":{"array":"dst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1303","type":"CtReturnImpl","sourcecode":"return byte[]"},"status":-2},{"failures":[23,24],"tindex":"dd36c4f4-25cf-11e5-b202-a922b2620f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:391","type":"CtAssignmentImpl","sourcecode":"int = 0"},"variableMap":{"fromIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1620","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[25],"tindex":"dd36ec05-25cf-11e5-b202-c7a084424635","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BasicThreadFactory:302","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"Naming pattern must not be null!\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:180","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"The numerator must not be negative\")"},"status":-1},{"failures":[26,27,28,29],"tindex":"dd36ec06-25cf-11e5-b202-11760ec0920e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.ConstructorUtils:267","type":"CtIfImpl","sourcecode":"if ((java.lang.reflect.Constructor<T> == null) || ((org.apache.commons.lang3.reflect.MemberUtils.compareParameterTypes(java.lang.reflect.Constructor<?>.getParameterTypes(), java.lang.reflect.Constructor<T>.getParameterTypes(), java.lang.Class<?>[])) < 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.lang.reflect.Constructor<T> java.lang.reflect.Constructor<T> = ((java.lang.reflect.Constructor<T>)(java.lang.reflect.Constructor<?>));\n    java.lang.reflect.Constructor<T> = java.lang.reflect.Constructor<T>;\n} "},"status":-1},{"failures":[],"tindex":"dd36ec07-25cf-11e5-b202-0781a2fedc68","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.CharSequenceUtils:70","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence instanceof java.lang.String) {\n    return ((java.lang.String)(java.lang.CharSequence)).indexOf(int, int);\n} else {\n    final int int = java.lang.CharSequence.length();\n    if (int < 0) {\n        int = 0;\n    } \n    for (int int = int ; int < int ; int++) {\n        if ((java.lang.CharSequence.charAt(int)) == int) {\n            return int;\n        } \n    }\n    return -1;\n}"},"variableMap":{"cs":"input","searchChar":"max","start":"max"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:75","type":"CtForImpl","sourcecode":"for (int int = int ; int >= (int) ; int--) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence(int, (int + int));\n    final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.CharSequence.toString());\n    if (java.lang.CharSequence != null) {\n        java.io.Writer.write(java.lang.CharSequence.toString());\n        return int;\n    } \n}"},"status":-2},{"failures":[30],"tindex":"dd371318-25cf-11e5-b202-b983a287124a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5449","type":"CtForEachImpl","sourcecode":"for (final short short : short[]) {\n    final java.lang.Short java.lang.Short = java.lang.Short.valueOf(short);\n    final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.get(java.lang.Short);\n    if (org.apache.commons.lang3.mutable.MutableInt == null) {\n        java.util.HashMap<java.lang.Short, org.apache.commons.lang3.mutable.MutableInt>.put(java.lang.Short, new org.apache.commons.lang3.mutable.MutableInt(1));\n    } else {\n        org.apache.commons.lang3.mutable.MutableInt.increment();\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}