{"failureDictionary":{"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":56,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":60,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCodeExcludeFields":45,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testSuper":32,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testIntegerWithTransients":25,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHashCode":41,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testFloatArrayAsObject":33,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testDoubleArrayAsObject":35,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArrayArray":3,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringIntStringBoolean":54,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathPackage":2,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArrayAsObject":38,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArrayArray":5,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectArray":29,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireLimit":50,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testCharArrayAsObject":31,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testByteArrayAsObject":44,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":49,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":52,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":51,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":18,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testIntArrayAsObject":34,"org.apache.commons.lang3.ClassPathUtilsTest.testToFullyQualifiedPathClass":1,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfWithStartIndex":58,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArray":10,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testLongArrayArray":9,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArrayArray":13,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":23,"org.apache.commons.lang3.ArrayUtilsTest.testHashCode":24,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixtureWithTransients":27,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArrayArray":11,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testLongArray":12,"org.apache.commons.lang3.concurrent.ConcurrentUtilsTest.testCreateIfAbsentNullInit":48,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testLongArray":14,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testInteger":28,"org.apache.commons.lang3.text.WordUtilsTest.testWrap_StringInt":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":17,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObject":42,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanArrayAsObject":47,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":53,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testLongArrayAsObject":43,"org.apache.commons.lang3.StringUtilsSubstringTest.testLeft_String":59,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionObjectCycle":36,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArray":8,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":15,"org.apache.commons.lang3.builder.HashCodeBuilderAndEqualsBuilderTest.testFixture":26,"org.apache.commons.lang3.math.FractionTest.testDivide":0,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testLongArrayArray":7,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testBooleanMultiArray":39,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testLongArray":4,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOf":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":16,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArray":19,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testObjectBuild":30,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":22,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testShortArrayAsObject":46,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testToHashCodeEqualsHashCode":40,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testLongArray":6,"org.apache.commons.lang3.builder.HashCodeBuilderTest.testReflectionHierarchyHashCode":37,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":20,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":21},"transformations":[{"failures":[0],"tindex":"0c9b6bf9-25c7-11e5-8d11-015fa691e03a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArithmeticException(\"The denominator must not be zero\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:824","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The fraction must not be null\")"},"status":-1},{"failures":[],"tindex":"0c9b930a-25c7-11e5-8d11-c78c4b47acbd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1589","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 'a'"},"variableMap":{"index":"i","buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:5212","type":"CtAssignmentImpl","sourcecode":"char[][int] = char"},"status":-2},{"failures":[1,2],"tindex":"0c9b930b-25c7-11e5-8d11-cb984acdf075","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ClassPathUtils:85","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\".\")"},"variableMap":{"sb":"sb"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassPathUtils:134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"/\")"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19],"tindex":"0c9b930c-25c7-11e5-8d11-850ed495a671","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1398","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendNullText(java.lang.StringBuffer, java.lang.String)"},"variableMap":{"fieldName":"fieldName","this":"this","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:495","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n} else {\n    org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((long[])(java.lang.Object)));\n}"},"status":-1},{"failures":[],"tindex":"0c9b930d-25c7-11e5-8d11-65139ef8b171","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1502","type":"CtLocalVariableImpl","sourcecode":"final int int = (int) + int"},"variableMap":{"strLen":"size","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2024","type":"CtLocalVariableImpl","sourcecode":"final int int = (int) / 2"},"status":-2},{"failures":[20,21],"tindex":"0c9b930e-25c7-11e5-8d11-e3c553665717","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:481","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String)"},"status":-1},{"failures":[22,23],"tindex":"0c9b930f-25c7-11e5-8d11-390f1c2691fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1294","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 8) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+srcPos is greather or equal to than 64\");\n} "},"variableMap":{"nBytes":"len","srcPos":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1744","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, 0);\n    while (int >= 0) {\n        org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n        int = org.apache.commons.lang3.text.StrBuilder.indexOf(java.lang.String, int);\n    }\n} "},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"0c9bba20-25c7-11e5-8d11-972c8835ae63","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:1433","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"srcPos":"iConstant","nHexs":"iConstant"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:820","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().isArray()) {\n    if (java.lang.Object instanceof long[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((long[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof int[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((int[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof short[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((short[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof char[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof byte[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((byte[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof double[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((double[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof float[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((float[])(java.lang.Object)));\n    } else if (java.lang.Object instanceof boolean[]) {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.HashCodeBuilder.append(((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    int = ((int) * (int)) + (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[],"tindex":"0c9bba21-25c7-11e5-8d11-094e14aa6c84","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:323","type":"CtIfImpl","sourcecode":"if (T[] == null) {\n    return null;\n} "},"variableMap":{"array":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:660","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.Validate.org.apache.commons.lang3.Validate.validIndex(T[], int, org.apache.commons.lang3.Validate.java.lang.String, java.lang.Integer.valueOf(int))"},"status":-2},{"failures":[48],"tindex":"0c9bba22-25c7-11e5-8d11-7b48bd3286db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:244","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.ConcurrentMap<K, V> == null) {\n    return null;\n} "},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConcurrentUtils:274","type":"CtIfImpl","sourcecode":"if ((java.util.concurrent.ConcurrentMap<K, V> == null) || (org.apache.commons.lang3.concurrent.ConcurrentInitializer<V> == null)) {\n    return null;\n} "},"status":-1},{"failures":[49,50],"tindex":"0c9bba23-25c7-11e5-8d11-4f92cfbddc4a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2301","type":"CtAssignmentImpl","sourcecode":"int = int < 0 ? 0 : int"},"variableMap":{"startIndex":"lastCallsPerPeriod"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.TimedSemaphore:418","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"0c9bba24-25c7-11e5-8d11-737338ff0d2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(256)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1477","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(java.lang.String)"},"status":-2},{"failures":[51,52,53],"tindex":"0c9be135-25c7-11e5-8d11-05ddedb57ee7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1010","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 8) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+dstPos is greather or equal to than 8\");\n} "},"variableMap":{"dstPos":"length","nHex":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:200","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} "},"status":-1},{"failures":[],"tindex":"0c9be136-25c7-11e5-8d11-6f79fe701742","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:310","type":"CtWhileImpl","sourcecode":"while (int < 0) {\n    int += 24;\n    int -= 1;\n}"},"variableMap":{"hours":"offset","days":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1552","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid offset: \" + int));\n} "},"status":-2},{"failures":[54,55],"tindex":"0c9be137-25c7-11e5-8d11-6fd150c983c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1017","type":"CtAssignmentImpl","sourcecode":"int = (int * 4) + int"},"variableMap":{"dstPos":"offset","shift":"offset","i":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:212","type":"CtAssignmentImpl","sourcecode":"int = int + 1"},"status":-1},{"failures":[56],"tindex":"0c9be138-25c7-11e5-8d11-c97110ad9f66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:543","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = new char[(int / 2) + 1]"},"variableMap":{"strLen":"codepoint"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.JavaUnicodeEscaper:110","type":"CtLocalVariableImpl","sourcecode":"final char[] char[] = java.lang.Character.toChars(int)"},"status":-1},{"failures":[57,58],"tindex":"0c9be139-25c7-11e5-8d11-6d1b14184df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:352","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.hashCode(((int[])(java.lang.Object)))"},"variableMap":{"o":"objectToFind"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1968","type":"CtIfImpl","sourcecode":"if (java.lang.Object[].getClass().getComponentType().isInstance(java.lang.Object)) {\n    for (int int = int ; int >= 0 ; int--) {\n        if (java.lang.Object.equals(java.lang.Object[][int])) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[59],"tindex":"0c9c084a-25c7-11e5-8d11-9b2135f9f0f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:536","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    return java.lang.String;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2180","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) <= int) {\n    return java.lang.String;\n} "},"status":-1},{"failures":[31],"tindex":"0c9c084b-25c7-11e5-8d11-150d5070a708","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:830","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.HashCodeBuilder.append(((char[])(java.lang.Object)))"},"status":-1},{"failures":[60],"tindex":"0c9c084c-25c7-11e5-8d11-290a86d37ecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:255","type":"CtIfImpl","sourcecode":"if (java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.max(float, float);\n}"},"variableMap":{"a":"b","b":"b"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:137","type":"CtIfImpl","sourcecode":"if (java.lang.Float.isNaN(float)) {\n    return float;\n} else if (java.lang.Float.isNaN(float)) {\n    return float;\n} else {\n    return java.lang.Math.min(float, float);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}