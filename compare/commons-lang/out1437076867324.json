{"failureDictionary":{"org.apache.commons.lang3.text.StrBuilderTest.testDeleteFirst_String":8,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryStartIndex":95,"org.apache.commons.lang3.math.IEEE754rUtilsTest.testLang381":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":73,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":70,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":50,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":80,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_String_String":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":87,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":71,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_StrMatcher_String":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":62,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceFirst_StrMatcher_String":90,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":31,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":75,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":15,"org.apache.commons.lang3.ConversionTest.testHexDigitToBinary":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":29,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriod":58,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOfLang294":2,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":81,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":89,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String_int":9,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":64,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":36,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":32,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":42,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":85,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDuration":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":86,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":66,"org.apache.commons.lang3.text.StrBuilderTest.testIndexOf_String":10,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryEndIndex":91,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":84,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":38,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":19,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":53,"org.apache.commons.lang3.math.NumberUtilsTest.testToByteString":13,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_int_int_String":93,"org.apache.commons.lang3.text.StrBuilderTest.testDeleteAll_String":1,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":72,"org.apache.commons.lang3.text.StrBuilderTest.testContains_String":3,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryCount":92,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":28,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":45,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":40,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryReplace":97,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":20,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":68,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":82,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":37,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":69,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":43,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG984":60,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":41,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testLANG982":59,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":22,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":56,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":51,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":67,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":44,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":39,"org.apache.commons.lang3.text.StrBuilderTest.testLang294":5,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":23,"org.apache.commons.lang3.text.StrBuilderTest.testLang295":6,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":24,"org.apache.commons.lang3.time.FastDateParserTest.testParses":55,"org.apache.commons.lang3.concurrent.ConstantInitializerTest.testEqualsTrue":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":18,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":33,"org.apache.commons.lang3.text.StrBuilderTest.testEquals":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":74,"org.apache.commons.lang3.text.StrBuilderTest.testReplace_StrMatcher_String_int_int_int_VaryMatcher":96,"org.apache.commons.lang3.time.DateUtilsTest.testIteratorEx":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":79,"org.apache.commons.lang3.text.StrBuilderTest.testReplaceAll_String_String":4,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":76,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":16,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":34,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":88,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":78},"transformations":[{"failures":[],"tindex":"65995f05-2bf5-11e5-b638-65366d09e866","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1015","type":"CtTryImpl","sourcecode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.or(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}"},"variableMap":{"java.lang.Boolean.FALSE":"java.lang.Boolean.FALSE","array":"array","this":"this","java.lang.Boolean.TRUE":"java.lang.Boolean.FALSE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:1080","type":"CtTryImpl","sourcecode":"try {\n    final boolean[] boolean[] = org.apache.commons.lang3.ArrayUtils.toPrimitive(java.lang.Boolean[]);\n    return org.apache.commons.lang3.BooleanUtils.org.apache.commons.lang3.BooleanUtils.xor(boolean[]) ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalArgumentException(\"The array must not contain any null elements\");\n}"},"status":-2},{"failures":[0],"tindex":"6599ad26-2bf5-11e5-b638-fd6bcbc13372","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2703","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.lang3.text.StrBuilder) {\n    return org.apache.commons.lang3.text.StrBuilder.equals(((org.apache.commons.lang3.text.StrBuilder)(java.lang.Object)));\n} "},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10],"tindex":"6599ad27-2bf5-11e5-b638-8b9c94c5c8b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2356","type":"CtIfImpl","sourcecode":"if ((java.lang.String.charAt(int)) != (char[][(int + int)])) {\n    continue outer;\n} "},"status":-1},{"failures":[11],"tindex":"6599ad28-2bf5-11e5-b638-953e6c59ac3c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:251","type":"CtAssignmentImpl","sourcecode":"double = java.lang.Math.abs(double)"},"variableMap":{"value":"max"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.IEEE754rUtils:166","type":"CtAssignmentImpl","sourcecode":"double = org.apache.commons.lang3.math.IEEE754rUtils.org.apache.commons.lang3.math.IEEE754rUtils.max(double[][int], double)"},"status":-1},{"failures":[],"tindex":"6599d439-2bf5-11e5-b638-8d7eff621cd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:579","type":"CtIfImpl","sourcecode":"if ((int > (-1)) && (int < ((java.lang.String.length()) - 1))) {\n    java.lang.String = java.lang.String.substring((int + 1), java.lang.String.length());\n} else {\n    java.lang.String = null;\n}"},"variableMap":{"str":"message","exp":"message","expPos":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Validate:571","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<?>.next()) == null) {\n    final java.lang.Object[] java.lang.Object[] = org.apache.commons.lang3.ArrayUtils.addAll(java.lang.Object[], java.lang.Integer.valueOf(int));\n    throw new java.lang.IllegalArgumentException(java.lang.String.format(java.lang.String, java.lang.Object[]));\n} "},"status":-2},{"failures":[],"tindex":"6599d43a-2bf5-11e5-b638-1fa2b013ce02","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharEncoding:98","type":"CtTryImpl","sourcecode":"try {\n    return java.nio.charset.Charset.isSupported(java.lang.String);\n} catch (final java.nio.charset.IllegalCharsetNameException ex) {\n    return false;\n}"},"variableMap":{"name":"trueString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:732","type":"CtIfImpl","sourcecode":"if (java.lang.String != null) {\n    if (java.lang.String.equals(java.lang.String)) {\n        return true;\n    } else if (java.lang.String.equals(java.lang.String)) {\n        return false;\n    } \n} "},"status":-2},{"failures":[12],"tindex":"6599d43b-2bf5-11e5-b638-d99e129d5093","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:1124","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The date must not be null\")"},"status":-1},{"failures":[13],"tindex":"6599fb4c-2bf5-11e5-b638-6d15b882ec37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:328","type":"CtReturnImpl","sourcecode":"return java.lang.Byte.parseByte(java.lang.String)"},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:303","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.toByte(java.lang.String, ((byte)(0)))"},"status":-1},{"failures":[],"tindex":"6599fb4d-2bf5-11e5-b638-c529ad45b37b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:762","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"6599fb4e-2bf5-11e5-b638-e5fd5a721a3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:683","type":"CtReturnImpl","sourcecode":"return this"},"status":0},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"6599fb4f-2bf5-11e5-b638-2be518bea910","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:316","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.lang3.time.FastDateParser.Strategy[].int) ; ) {\n    final org.apache.commons.lang3.time.FastDateParser.Strategy org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.Strategy[][int++];\n    org.apache.commons.lang3.time.FastDateParser.Strategy.setCalendar(this, java.util.Calendar, java.util.regex.Matcher.group(int));\n}"},"status":-1},{"failures":[],"tindex":"659a2260-2bf5-11e5-b638-4d8b196cb484","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.MethodUtils:321","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeExactStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])"},"variableMap":{"args":"args","parameterTypes":"parameterTypes","this":"this","methodName":"methodName","cls":"cls"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.MethodUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.MethodUtils.org.apache.commons.lang3.reflect.MethodUtils.invokeStaticMethod(java.lang.Class<?>, java.lang.String, java.lang.Object[], java.lang.Class<?>[])"},"status":-2},{"failures":[57],"tindex":"659a2261-2bf5-11e5-b638-b79d6d1d49cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:239","type":"CtReturnImpl","sourcecode":"return new boolean[]{ false , true , true , true }"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:163","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case '0' :\n        return new boolean[]{ false , false , false , false };\n    case '1' :\n        return new boolean[]{ true , false , false , false };\n    case '2' :\n        return new boolean[]{ false , true , false , false };\n    case '3' :\n        return new boolean[]{ true , true , false , false };\n    case '4' :\n        return new boolean[]{ false , false , true , false };\n    case '5' :\n        return new boolean[]{ true , false , true , false };\n    case '6' :\n        return new boolean[]{ false , true , true , false };\n    case '7' :\n        return new boolean[]{ true , true , true , false };\n    case '8' :\n        return new boolean[]{ false , false , false , true };\n    case '9' :\n        return new boolean[]{ true , false , false , true };\n    case 'a' :\n    case 'A' :\n        return new boolean[]{ false , true , false , true };\n    case 'b' :\n    case 'B' :\n        return new boolean[]{ true , true , false , true };\n    case 'c' :\n    case 'C' :\n        return new boolean[]{ false , false , true , true };\n    case 'd' :\n    case 'D' :\n        return new boolean[]{ true , false , true , true };\n    case 'e' :\n    case 'E' :\n        return new boolean[]{ false , true , true , true };\n    case 'f' :\n    case 'F' :\n        return new boolean[]{ true , true , true , true };\n    default :\n        throw new java.lang.IllegalArgumentException(((\"Cannot interpret \\'\" + char) + \"\\' as a hexadecimal digit\"));\n}"},"status":-1},{"failures":[58,59,60,61],"tindex":"659a4972-2bf5-11e5-b638-0bc7b043cffc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ClassUtils:1134","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"[]\")"},"variableMap":{"canonicalClassNameBuffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:451","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(org.apache.commons.lang3.time.DurationFormatUtils.org.apache.commons.lang3.time.DurationFormatUtils.paddedValue(long, boolean, int))"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82],"tindex":"659a4973-2bf5-11e5-b638-0fff30f3329a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:874","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 8) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"(nBytes-1)*8+dstPos is greather or equal to than 16\");\n} "},"variableMap":{"dstPos":"length","nBytes":"valueDelimiterMatchLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:817","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (char[].int) ; int++) {\n    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n        break;\n    } \n    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n        java.lang.String = java.lang.String.substring(0, int);\n        java.lang.String = java.lang.String.substring((int + int));\n        break;\n    } \n}"},"status":-1},{"failures":[],"tindex":"659a4974-2bf5-11e5-b638-b3e7394bf985","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:124","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Integer.parseInt(java.lang.String);\n} catch (final java.lang.NumberFormatException nfe) {\n    return int;\n}"},"status":-2},{"failures":[83],"tindex":"659a7085-2bf5-11e5-b638-f904f2c49863","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharSet:250","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.lang3.CharSet) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.concurrent.ConstantInitializer:107","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"659a7086-2bf5-11e5-b638-7190d023faad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FormatCache<F>.getDateTimeInstance(java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int), java.util.TimeZone, java.util.Locale)"},"status":-2},{"failures":[],"tindex":"659a7087-2bf5-11e5-b638-d101c8ff6ecf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:343","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= (int))) {\n    throw new java.lang.StringIndexOutOfBoundsException(int);\n} "},"variableMap":{"size":"length","index":"endMatchLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:783","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n        int++;\n        int += int;\n        continue;\n    } \n    int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n    if (int == 0) {\n        int++;\n    } else {\n        if (int == 0) {\n            java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n            if (boolean) {\n                final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n            } \n            int += int;\n            final int int = int;\n            java.lang.String java.lang.String = java.lang.String;\n            java.lang.String java.lang.String = null;\n            if (org.apache.commons.lang3.text.StrMatcher != null) {\n                final char[] char[] = java.lang.String.toCharArray();\n                int int = 0;\n                for (int int = 0 ; int < (char[].int) ; int++) {\n                    if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                        break;\n                    } \n                    if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                        java.lang.String = java.lang.String.substring(0, int);\n                        java.lang.String = java.lang.String.substring((int + int));\n                        break;\n                    } \n                }\n            } \n            if (java.util.List<java.lang.String> == null) {\n                java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n            } \n            org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n            java.util.List<java.lang.String>.add(java.lang.String);\n            java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n            if (java.lang.String == null) {\n                java.lang.String = java.lang.String;\n            } \n            if (java.lang.String != null) {\n                final int int = java.lang.String.length();\n                org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                boolean = true;\n                int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                int = (int + int) - (int - int);\n                int += int;\n                int += int;\n                int += int;\n                char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n            } \n            java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n            break;\n        } else {\n            int--;\n            int += int;\n        }\n    }\n}"},"status":-2},{"failures":[62,63,84,65,85,66,86,67,87,68,69,70,71,72,88,73,74,75,76,77,78,89,79,80,81,82,90,91,4,7,92,93,94,95,96,97],"tindex":"659a9798-2bf5-11e5-b638-e77da0de8f22","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1393","type":"CtIfImpl","sourcecode":"if ((((int - 1) * 4) + int) >= 64) {\n    throw new java.lang.IllegalArgumentException(\"(nHexs-1)*4+srcPos is greather or equal to than 64\");\n} "},"variableMap":{"srcPos":"insertLen","nHexs":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1818","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    java.lang.String.getChars(0, int, char[], int);\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}