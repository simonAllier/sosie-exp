{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":33,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":37,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":0,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":22,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":19,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":48,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":18,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":21,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":6,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":45,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":35,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":4,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":50,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":10,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":11,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":43,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":3,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":51,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetClearChangesMap":29,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":12,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":38,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":9,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":7,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetClearChangesMap":31,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":36,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":41,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":5,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":16,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":40,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":1,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":47,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":15,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":17,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":2,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetClearChangesMap":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":23,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetClearChangesMap":28,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":39,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":44,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":32,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":20,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":26,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":27,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":8},"transformations":[{"failures":[],"tindex":"974b37d0-417b-11e5-a82e-5f5b2b6fb98f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[0],"tindex":"974b5ee1-417b-11e5-a82e-e7e2baa07daf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl","sourcecode":"return \"ComparableComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>.size()) - 1"},"status":-1},{"failures":[],"tindex":"974b5ee2-417b-11e5-a82e-bd8bfec96090","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.EmptyIterator:56","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.ResettableIterator<E>)(org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.ResettableIterator))"},"variableMap":{"org.apache.commons.collections4.iterators.EmptyIterator.RESETTABLE_INSTANCE":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:261","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"974b85f3-417b-11e5-a82e-0326e3c6030f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:905","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"974b85f4-417b-11e5-a82e-01c879be5ee9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:721","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"parent":"root","current":"left","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"974b85f5-417b-11e5-a82e-43d24b41aa37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl","sourcecode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} "},"variableMap":{"map":"normalMap","decorated":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:235","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.BidiMap<V, K>) == null) {\n    org.apache.commons.collections4.BidiMap<V, K> = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createBidiMap(java.util.Map<V, K>, java.util.Map<K, V>, this);\n} "},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"974bad06-417b-11e5-a82e-139523cdbf7d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()"},"status":-1},{"failures":[32,33,34,35],"tindex":"974bad07-417b-11e5-a82e-690e2f526c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:672","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"974bad08-417b-11e5-a82e-4919edec346e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends I>.hasNext()"},"status":-2},{"failures":[],"tindex":"974bad09-417b-11e5-a82e-99c350739094","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:209","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[],"tindex":"974bad0a-417b-11e5-a82e-4d085bbf6842","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[36],"tindex":"974bd41b-417b-11e5-a82e-c1e190eedf6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:548","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> == null) || (java.util.List<E> == null)) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"974bd41c-417b-11e5-a82e-afeebb69e99a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:154","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:208","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).tailMap(K)"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48],"tindex":"974bd41d-417b-11e5-a82e-e9a43d8f52f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:121","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:117","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().first()"},"status":-1},{"failures":[],"tindex":"974bd41e-417b-11e5-a82e-1d8f976ea015","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:627","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"974bd41f-417b-11e5-a82e-3f4124beb5b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"cmp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2},{"failures":[49],"tindex":"974bfb30-417b-11e5-a82e-cd950f933fab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"status":-1},{"failures":[32,33,34,35],"tindex":"974bfb31-417b-11e5-a82e-c998e7fd0c6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:994","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++"},"variableMap":{"modCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:507","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[],"tindex":"974bfb32-417b-11e5-a82e-0766a3b9d8c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"other","this":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"status":-2},{"failures":[50,51],"tindex":"974bfb33-417b-11e5-a82e-d14ad18c18c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:382","type":"CtReturnImpl","sourcecode":"return java.lang.Object == null ? org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object : java.lang.Object"},"variableMap":{"key":"object","org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1289","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Array.get(java.lang.Object, int)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}