{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":138,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":122,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":29,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":159,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":58,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":103,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":172,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":113,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":105,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":16,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":83,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":171,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":18,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":145,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":30,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":165,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":37,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsSelfHashCode":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":135,"org.apache.commons.collections4.map.MultiValueMapTest.testEmptyMapCompatibility":178,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":84,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddByIterator":47,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":146,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":60,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":152,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddByIterator":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":156,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":170,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":50,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":92,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":158,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSimpleSerialization":183,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":168,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":11,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiRemove":65,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":161,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":22,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":90,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorSet":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":120,"org.apache.commons.collections4.map.MultiValueMapTest.testSimpleSerialization":180,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemove":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":163,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":125,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":49,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":166,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":162,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":167,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":141,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorSet":35,"org.apache.commons.collections4.collection.IndexedCollectionTest.testSerializeDeserializeThenCompare":182,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":149,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":118,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":104,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":174,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":126,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":179,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":139,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":17,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":144,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":81,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":129,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":130,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":169,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":62,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":59,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":140,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":127,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":133,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":88,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":85,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiRemove":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":6,"org.apache.commons.collections4.map.MultiValueMapTest.testSerializeDeserializeThenCompare":181,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":57,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":123,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemove":68,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.ReferenceMapTest.testObjectHashCodeEqualsContract":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":157,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":147,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":164,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":72,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":110,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":177,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":86,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":26,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":91,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":151,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":132,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":97,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":137,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":106},"transformations":[{"failures":[],"tindex":"cc7263bf-4200-11e5-9c8f-5feb1adb8a71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:355","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(K), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"cc728ad0-4200-11e5-9c8f-2b0dc2f6bc32","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1682","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{"lastReturnedNode":"rval"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:619","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[25,26,27],"tindex":"cc728ad1-4200-11e5-9c8f-7bb77d37d358","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:226","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"cc72b1e2-4200-11e5-9c8f-c50d69367a0e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"dataElement":"dataElement","deletedNode":"xFormerParent","replacement":"xFormerParent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1152","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"cc72b1e3-4200-11e5-9c8f-571d3fbcecfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)"},"status":-2},{"failures":[28,29,30,31],"tindex":"cc72b1e4-4200-11e5-9c8f-c7f73d0ee20f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:372","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"cc72b1e5-4200-11e5-9c8f-c74bb1bd7bb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":0},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"cc72b1e6-4200-11e5-9c8f-f3922b22e9ec","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1359","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"left=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:389","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('[')"},"status":-1},{"failures":[64],"tindex":"cc72b1e7-4200-11e5-9c8f-653c1159fc0d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[65,66,67,68],"tindex":"cc72d8f8-4200-11e5-9c8f-3d971a5cc330","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:231","type":"CtReturnImpl","sourcecode":"return K"},"status":-1},{"failures":[69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176],"tindex":"cc72d8f9-4200-11e5-9c8f-e9d0fc8201b6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"total","index":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"cc72d8fa-4200-11e5-9c8f-31a380e63de0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.OrderedMapIterator<K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"cc72d8fb-4200-11e5-9c8f-bdab10890841","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"variableMap":{"size":"length","composite":"sub","length":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1165","type":"CtIfImpl","sourcecode":"if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n    throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n} "},"status":-2},{"failures":[],"tindex":"cc72d8fc-4200-11e5-9c8f-f16d08cbfbd8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"cc73000d-4200-11e5-9c8f-0bb770d0f364","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:196","type":"CtIfImpl","sourcecode":"if (java.util.concurrent.TimeUnit == null) {\n    throw new java.lang.IllegalArgumentException(\"Time unit must not be null\");\n} "},"status":-2},{"failures":[177],"tindex":"cc73000e-4200-11e5-9c8f-45bfc24eca95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1645","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"status":-1},{"failures":[178,179,180,181,182,183],"tindex":"cc73000f-4200-11e5-9c8f-3331b5d4245d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:176","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[],"tindex":"cc730010-4200-11e5-9c8f-c5d17feff85f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key1","next":"previous","entry":"entry","key2":"key1","previous":"entry","hashCode":"index","key3":"key1","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:204","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"cc732721-4200-11e5-9c8f-a91fa5119653","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.ArrayStack<E>.push(E)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}