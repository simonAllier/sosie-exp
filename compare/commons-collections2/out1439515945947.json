{"failureDictionary":{"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":8,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":24,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":6,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":49,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":52,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":85,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":16,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":35,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":57,"org.apache.commons.collections4.map.LRUMapTest.testLRU":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":21,"org.apache.commons.collections4.map.CompositeMapTest.testResolveCollision":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":74,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":27,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":75,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":41,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":39,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":82,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":25,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":36,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":44,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":23,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":79,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":64,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":63,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":62,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":77,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":69,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEqualsNull":7,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":67,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":71,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":38,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":51,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":73,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":11,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":43,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":58,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":45,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":46,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":84,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":18,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":37,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":59,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":26,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":9,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":56,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":68,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":70},"transformations":[{"failures":[0,1,2,3,4,5],"tindex":"5195b63f-4224-11e5-bfeb-75e48f118037","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.max(int, int)"},"variableMap":{"endIndex2":"offset","endIndex1":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:214","type":"CtLocalVariableImpl","sourcecode":"final int int = (int + int) - int"},"status":-1},{"failures":[],"tindex":"5195b640-4224-11e5-bfeb-915c006978cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"variableMap":{"entrySet":"entrySet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:391","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet();\n} "},"status":-2},{"failures":[],"tindex":"5195b641-4224-11e5-bfeb-c3d5aa1a7599","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:509","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"node","node":"nextCachedNode","previous":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:170","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[6,7,8,9],"tindex":"5195dd52-4224-11e5-bfeb-af61429271fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1327","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"5195dd53-4224-11e5-bfeb-97cf625ac22d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:470","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractLinkedMap.ValuesIterator<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"status":-2},{"failures":[],"tindex":"5195dd54-4224-11e5-bfeb-3d779732a8da","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:556","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:170","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K))"},"status":-2},{"failures":[10],"tindex":"5195dd55-4224-11e5-bfeb-9149865b2fc8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:140","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>)"},"status":-1},{"failures":[],"tindex":"5195dd56-4224-11e5-bfeb-751e9e91be7b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:99","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"5195dd57-4224-11e5-bfeb-d738629ab98b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1171","type":"CtLocalVariableImpl","sourcecode":"int int = int"},"variableMap":{"hashIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:196","type":"CtLocalVariableImpl","sourcecode":"int int = int[][int]"},"status":-1},{"failures":[],"tindex":"51960468-4224-11e5-bfeb-bd65418e3928","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:634","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]"},"status":-2},{"failures":[],"tindex":"51960469-4224-11e5-bfeb-630c5023ccdd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:919","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n} else {\n    return null;\n}"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"5196046a-4224-11e5-bfeb-97d4cdd42ca0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<K, V>"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator.unmodifiableOrderedMapIterator(org.apache.commons.collections4.OrderedMapIterator<K, V>)"},"status":-1},{"failures":[],"tindex":"51962b7b-4224-11e5-bfeb-9f515e936183","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:980","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    java.io.PrintStream.print(java.lang.Object);\n    java.io.PrintStream.println(\" = \");\n} "},"variableMap":{"label":"label","out":"label"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:916","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, java.lang.Object, java.util.Map<?, ?>, new org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>(), false)"},"status":-2},{"failures":[],"tindex":"51962b7c-4224-11e5-bfeb-0526fa86d889","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:401","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(']')"},"variableMap":{"buf":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1387","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object)).append('=').append((java.lang.Object == (this) ? \"(this Map)\" : java.lang.Object))"},"status":-2},{"failures":[],"tindex":"51962b7d-4224-11e5-bfeb-27192261394a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:731","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet()"},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:950","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet()"},"status":-2},{"failures":[],"tindex":"51962b7e-4224-11e5-bfeb-c1e4a912749e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2283","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.util.Map.Entry<K, V>> java.util.Set<java.util.Map.Entry<K, V>> = java.util.Collections.emptySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:236","type":"CtLocalVariableImpl","sourcecode":"final java.util.Set<java.util.Map.Entry<K, java.lang.Object>> java.util.Set<java.util.Map.Entry<K, java.lang.Object>> = org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().entrySet()"},"status":-2},{"failures":[],"tindex":"51962b7f-4224-11e5-bfeb-c11be48327f6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:126","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<?>.hasPrevious()"},"variableMap":{"li":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:113","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.hasNext()"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83],"tindex":"51962b80-4224-11e5-bfeb-abc4b06ef26f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null"},"variableMap":{"data":"data","i":"hashIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:268","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[84,85],"tindex":"51965291-4224-11e5-bfeb-394a44f8d474","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSet:81","type":"CtInvocationImpl","sourcecode":"java.util.Set<E>.clear()"},"status":-1},{"failures":[],"tindex":"51965292-4224-11e5-bfeb-d7fe59215d19","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1589","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeSortedMap.fixedSizeSortedMap(java.util.SortedMap<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:95","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}