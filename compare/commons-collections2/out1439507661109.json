{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":61,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":24,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":18,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":27,"org.apache.commons.collections4.map.HashedMapTest.testValuesIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":52,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":25,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":13,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":68,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":23,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":67,"org.apache.commons.collections4.ListUtilsTest.testIntersectNonEmptySubset":50,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":65,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":62,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":22,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":10,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":17,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":15,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":37,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":64,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":30,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":11,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":49,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":43,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":29,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":57,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":45,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":19,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":66,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":21,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":56,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":6,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":46,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":39,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":44,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":31,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":26,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":35,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":40,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":38,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":41,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":0,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":60,"org.apache.commons.collections4.ListUtilsTest.testIntersectListWithSelf":51,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":55,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":3},"transformations":[{"failures":[],"tindex":"076f7443-4211-11e5-9cae-bf779e032f50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.PredicatedList:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.listIterator(0)"},"status":-2},{"failures":[],"tindex":"076f9b54-4211-11e5-9cae-23b7e213de3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:292","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>) {\n    java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear();\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    break;\n} "},"status":0},{"failures":[],"tindex":"076f9b55-4211-11e5-9cae-4f91f244f9b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"076f9b56-4211-11e5-9cae-83a9070b3c92","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.ChainedTransformer<T>(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-2},{"failures":[],"tindex":"076f9b57-4211-11e5-9cae-53c9a5430913","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"076fc268-4211-11e5-9cae-270ac9f33793","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:254","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"076fc269-4211-11e5-9cae-f3f759a9c196","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:708","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    return null;\n} "},"variableMap":{"current":"right","tree":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"076fc26a-4211-11e5-9cae-3db62dc615ab","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"076fc26b-4211-11e5-9cae-799fa0535d51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:355","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.List) == false) {\n    return false;\n} "},"variableMap":{"obj":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}"},"status":-2},{"failures":[],"tindex":"076fc26c-4211-11e5-9cae-19514aa4c656","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:411","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"076fe97d-4211-11e5-9cae-9b62eb888e81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"076fe97e-4211-11e5-9cae-7d991e9be63e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")"},"status":-1},{"failures":[],"tindex":"076fe97f-4211-11e5-9cae-53b2288bfa47","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"076fe980-4211-11e5-9cae-311a7fe8544d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl","sourcecode":"return \"Iterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:472","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[50,51],"tindex":"076fe981-4211-11e5-9cae-eb9169993cd9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:102","type":"CtIfImpl","sourcecode":"if (java.util.HashSet<E>.contains(E)) {\n    java.util.List<E>.add(E);\n    java.util.HashSet<E>.remove(E);\n} "},"status":-1},{"failures":[52,53,54,55,56,57,58,59],"tindex":"076fe982-4211-11e5-9cae-6fe914b3ae42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"variableMap":{"delegateMap":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1365","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return \"{}\";\n} "},"status":-1},{"failures":[],"tindex":"07701093-4211-11e5-9cae-d30bfb622c5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[60,61,62,63],"tindex":"07701094-4211-11e5-9cae-c3973d886cc2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:231","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":-1},{"failures":[64,65,66,67,68],"tindex":"07701095-4211-11e5-9cae-e9ad2b111ed6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:46","type":"CtIfImpl","sourcecode":"if (java.util.ListIterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\");\n} "},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"07701096-4211-11e5-9cae-757531de7d14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} "},"variableMap":{"size":"indexOfLargestMobileInteger","index":"largestKey","beyond":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}