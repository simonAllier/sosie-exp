{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":1,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":210,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContains":115,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIterator":121,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":125,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":141,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":202,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionContainsAll":110,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":62,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":231,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":92,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":174,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":191,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":173,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":50,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":146,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":2,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":35,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":222,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":184,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":47,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":49,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":179,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":34,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":217,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":204,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":24,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":145,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":21,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":203,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":31,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":142,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":67,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":60,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueCompatibility":109,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":118,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":122,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":25,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":215,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":147,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":152,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":160,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectEqualsSelf":52,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":57,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":224,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":137,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":219,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":0,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":177,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":143,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":148,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":16,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":157,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":38,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":190,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":165,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":187,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":83,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":136,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":56,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":140,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":64,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":124,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":46,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":126,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":167,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":189,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":206,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":225,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":151,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":171,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":10,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":32,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":198,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":14,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":127,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":72,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":181,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":100,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":237,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":97,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":197,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":96,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":99,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":98,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":59,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":95,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":168,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":42,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":27,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":205,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsSelfHashCode":39,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":199,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":69,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":230,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":13,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":175,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":162,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":170,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":211,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":106,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":82,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":87,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":200,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":169,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":239,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":119,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":223,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":135,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":227,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":9,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testObjectHashCodeEqualsContract":54,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":155,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":241,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":131,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":133,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":132,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":182,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":220,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":235,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":44,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":86,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":144,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":212,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":192,"org.apache.commons.collections4.trie.PatriciaTrieTest.testObjectHashCodeEqualsContract":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":178,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":236,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":74,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":104,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":153,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":242,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":154,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":23,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":139,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":18,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":238,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":29,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":183,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":228,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":80,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":243,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":76,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":134,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":77,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":78,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":45,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":185,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":120,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":208,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":26,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":130,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":71,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":196,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":85,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":30,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":194,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":128,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":129,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":209,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionClear":117,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":37,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":180,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":221,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":84,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":214,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":156,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":240,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":207,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":138,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionSize":112,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":123,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":107,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":188,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":193,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":6,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":233,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":103,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":218,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":68,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":28,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":176,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":33,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":150,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":216,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionToArray2":111,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":108,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":163,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":63,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":201},"transformations":[{"failures":[],"tindex":"029ea6ef-2e3e-11e5-be70-f108f24ed198","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:615","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"parent":"x","dataElement":"dataElement","child":"x"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1164","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[0,1,2,3],"tindex":"029f6a40-2e3e-11e5-be70-a76ad739ea5e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:368","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 9)"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"029f6a41-2e3e-11e5-be70-ab5c244ffd31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:920","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry())"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:612","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()"},"status":-1},{"failures":[],"tindex":"029f9152-2e3e-11e5-be70-e7e3bb1ac2c1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:346","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"029f9153-2e3e-11e5-be70-9bc400a5131c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:72","type":"CtLocalVariableImpl","sourcecode":"final V V = this.V"},"status":-2},{"failures":[57],"tindex":"029f9154-2e3e-11e5-be70-8baa63bf8f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:302","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchTransformer.<I,O>switchTransformer(java.util.Map<org.apache.commons.collections4.Predicate<I>, org.apache.commons.collections4.Transformer<I, O>>)"},"status":-1},{"failures":[58,59,60,61],"tindex":"029fb865-2e3e-11e5-be70-4d809d2860be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index","otherOffsetInBits":"index","otherLengthInBits":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"029fb866-2e3e-11e5-be70-ed2121ccc8a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:971","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"029fb867-2e3e-11e5-be70-6910ce60a5f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:317","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[] , int , int)"},"variableMap":{"array":"array","start":"start","end":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:336","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayIterator<E>(java.lang.Object , int , int)"},"status":-2},{"failures":[62,63,64,65,66,67,68,69,4,5,6,7,8,9,10,11,12,70,13,71,72,14,15,73,74,75,76,77,78,79,80,81,82,83,84,16,85,86,87,88,89,17,18,90,91,92],"tindex":"029fb868-2e3e-11e5-be70-81b07725d96d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-1},{"failures":[],"tindex":"029fdf79-2e3e-11e5-be70-854075b6422d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeSortedMap:112","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"029fdf7a-2e3e-11e5-be70-614fa4538a86","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:248","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0,1,2,3],"tindex":"029fdf7b-2e3e-11e5-be70-075c6054efba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"h","expectedModCount":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:515","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 9)"},"status":-1},{"failures":[],"tindex":"02a0068c-2e3e-11e5-be70-69a829f83d73","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collection is not a bounded collection\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"02a0068d-2e3e-11e5-be70-9760d5bcd607","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:255","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"variableMap":{"nCopies":"maxElements","size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:162","type":"CtAssignmentImpl","sourcecode":"int = boolean ? int : 0"},"status":-1},{"failures":[123,124,125,126,127,128,129,130,131,132,133,134,135,136,137],"tindex":"02a0068e-2e3e-11e5-be70-6d07493423a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:251","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-1},{"failures":[],"tindex":"02a0068f-2e3e-11e5-be70-4ddbfa3885e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"key","i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243],"tindex":"02a02da0-2e3e-11e5-be70-2b96740b46a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"status":-1},{"failures":[],"tindex":"02a054b1-2e3e-11e5-be70-6187ea05f9e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:613","type":"CtIfImpl","sourcecode":"if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"02a054b1-2e3e-11e5-be70-6187ea05f9e1","diffs":[{"nodes":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"edges":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int calculateThreshold(int,float)","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int) -> org.apache.commons.collections4.map.AbstractHashedMap.int hashIndex(int,int)","org.apache.commons.collections4.map.AbstractHashedMap.void checkCapacity() -> org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)"]},"type":"graph"},{"branches":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_boolean_containsKey(java.lang.Object).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).t3","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e1","org.apache.commons.collections4.map.AbstractHashedMap_int_calculateThreshold(int,float).b","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).e2","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l4","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).l5","org.apache.commons.collections4.map.AbstractHashedMap_void_ensureCapacity(int).b"]},"type":"branch"},{"variables":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_parent","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_next","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_key","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_value","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next"],"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":["org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_hashIndex","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_modCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashIterator(org.apache.commons.collections4.map.AbstractHashedMap)_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry currentEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.K getKey()_key","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap.void ensureCapacity(int)_size","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_last","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.V getValue()_value","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.boolean hasNext()_next","org.apache.commons.collections4.map.AbstractHashedMap$HashIterator.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry nextEntry()_next"],"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesIteratorRemoveChangesMap":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractHashedMap$HashEntry.org.apache.commons.collections4.map.AbstractHashedMap$HashEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,java.lang.Object,V)_hashCode","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_expectedModCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void remove()_parent","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"],"org.apache.commons.collections4.map.ReferenceMapTest.testFailFastKeySet":["org.apache.commons.collections4.map.AbstractHashedMap.void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry,int,org.apache.commons.collections4.map.AbstractHashedMap$HashEntry)_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_previous","org.apache.commons.collections4.map.AbstractHashedMap.void clear()_modCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_expectedModCount","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_entry","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry nextEntry()_currentKey","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.boolean hasNext()_nextValue","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator(org.apache.commons.collections4.map.AbstractReferenceMap)_index","org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceBaseIterator.void checkMod()_expectedModCount"],"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":["org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator(org.apache.commons.collections4.map.AbstractLinkedMap)_expectedModCount","org.apache.commons.collections4.map.AbstractLinkedMap$LinkIterator.org.apache.commons.collections4.map.AbstractLinkedMap$LinkEntry nextEntry()_expectedModCount"]},"type":"variable"}]}]}