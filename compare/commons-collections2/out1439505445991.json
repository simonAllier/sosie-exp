{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":63,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEmptyListSort":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":13,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":27,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":64,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":4,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":62,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":7,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":10,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":14,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":53,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":50,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":69,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":0,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":23,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":68,"org.apache.commons.collections4.CollectionUtilsTest.reverse":82,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":21,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":1,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":45,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":26,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":58,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":56,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorCompatibility":73,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":78,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":66,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":40,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSimpleSerialization":77,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":15,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":18,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":65,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":3,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":76,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":44,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":2,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testRandomListSort":70,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":61,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorIsSerializable":74,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":22,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":29,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":59,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":31,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":30,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsSelfHashCode":79,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":48,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":60,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":12,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testReverseListSort":71,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":24,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":35,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":57,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":28,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":16},"transformations":[{"failures":[],"tindex":"df1f6cb5-420b-11e5-8781-0f381372a221","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[0],"tindex":"df1f93c6-420b-11e5-8781-23e872c30f31","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:239","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>))"},"variableMap":{"put":"put"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:241","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(org.apache.commons.collections4.Put<K, V>)"},"status":-1},{"failures":[],"tindex":"df1f93c7-420b-11e5-8781-5914a9668678","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":0},{"failures":[1],"tindex":"df1f93c8-420b-11e5-8781-63d17c84ce80","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-1},{"failures":[],"tindex":"df1f93c9-420b-11e5-8781-21fcc7405829","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2},{"failures":[],"tindex":"df1f93ca-420b-11e5-8781-2d8d153f2a1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1087","type":"CtReturnImpl","sourcecode":"return ((K)(java.lang.Object))"},"variableMap":{"key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:222","type":"CtReturnImpl","sourcecode":"return java.util.Map<V, K>.get(java.lang.Object)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"df1fbadb-420b-11e5-8781-fd0b913e88f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:355","type":"CtAssignmentImpl","sourcecode":"K = K"},"status":-1},{"failures":[53,54,55,56,57,58,59,60,61,62,63],"tindex":"df1fbadc-420b-11e5-8781-83af788cbddb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl","sourcecode":"return 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:439","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())"},"status":-1},{"failures":[],"tindex":"df1fbadd-420b-11e5-8781-77d0254f512b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)"},"status":-2},{"failures":[],"tindex":"df1fbade-420b-11e5-8781-f1153ea38068","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[],"tindex":"df1fbadf-420b-11e5-8781-a760f6452f21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"root","current":"current","right":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:197","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } \n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"df1fe0f0-420b-11e5-8781-7740bb73e4ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:154","type":"CtReturnImpl","sourcecode":"return ((this.int) - (this.int)) - 1"},"status":-2},{"failures":[],"tindex":"df1fe0f1-420b-11e5-8781-5987a1bfa1ff","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"status":-2},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"df1fe0f2-420b-11e5-8781-b9958bc48e4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"isLocked","beforeFirst":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:131","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[81,0],"tindex":"df200803-420b-11e5-8781-3db4b3e7d8a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:241","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(org.apache.commons.collections4.Put<K, V>)"},"variableMap":{"put":"put"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:239","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>))"},"status":-1},{"failures":[],"tindex":"df200804-420b-11e5-8781-4da271fdbd30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj","this":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1143","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.equals(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"df200805-420b-11e5-8781-d18cb587bb87","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:669","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[],"tindex":"df200806-420b-11e5-8781-2f076881d594","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:485","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeExternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"h":"right","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"df200807-420b-11e5-8781-97b4b23d8605","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl","sourcecode":"if (T == null) {\n    return null;\n} "},"status":0},{"failures":[82],"tindex":"df200808-420b-11e5-8781-f17198465bf4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"array","size":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1444","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.lang.Object[][int]"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}