{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":134,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":123,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains1":27,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":115,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetContains2":28,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":96,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testPurgeValues":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":23,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":33,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":40,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":7,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":45,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":133,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains2":70,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetContains1":69,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSerializeDeserializeThenCompare":127,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":43,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":82,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":121,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":8,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":120,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":65,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":88,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":20,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":108,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":64,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":37,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":80,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":26,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":52,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":93,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":57,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":126,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":5,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":90,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":54,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":117,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":53,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":30,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":97,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove3":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":3,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":95,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":6,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":83,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":84,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testSimpleSerialization":128,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":50,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":99,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":47,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":81,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":62,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":119,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":118,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":60,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":125,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":132,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":38,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":112,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.ReferenceMapTest.testPurgeValues":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":12,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":105,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":104,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":13,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":102,"org.apache.commons.collections4.trie.PatriciaTrieTest.testSimpleSerialization":130,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":100,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":91,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":36,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":0,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":51,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":101,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":61,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":72,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove3":73,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":2,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":98},"transformations":[{"failures":[],"tindex":"d709f7e5-4211-11e5-9c4d-616c986c9fa6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:269","type":"CtIfImpl","sourcecode":"if ((int - int) > (int - int)) {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n} else {\n    org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n    ++int;\n}"},"variableMap":{"start1":"end1","end2":"start2","end1":"start1","i":"start2","j":"start2","start2":"start2","script":"script","sequence1":"sequence2","sequence2":"sequence2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-2},{"failures":[],"tindex":"d70a4606-4211-11e5-9c4d-e5d864b41a13","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"status":-2},{"failures":[],"tindex":"d70a6d17-4211-11e5-9c4d-47fc0bd7ecc4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1964","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()].org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == (this))"},"variableMap":{"leftNode":"object","parentNode":"object","dataElement":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)"},"status":-2},{"failures":[0],"tindex":"d70a6d18-4211-11e5-9c4d-57b6312285bd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionBag<E>(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:137","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag.transformingBag(org.apache.commons.collections4.Bag<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"tindex":"d70a6d19-4211-11e5-9c4d-7f4226b36ed0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:458","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"d70a942a-4211-11e5-9c4d-1d1aee38db1b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:223","type":"CtLocalVariableImpl","sourcecode":"int int = ((int - int) + int) - int"},"status":-2},{"failures":[123],"tindex":"d70a942b-4211-11e5-9c4d-91bca7919841","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.nextIndex()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previousIndex()"},"status":-1},{"failures":[],"tindex":"d70a942c-4211-11e5-9c4d-ebf60e9a8cbf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:159","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = ((java.util.ListIterator<java.util.Map.Entry<K, V>>)(java.util.Iterator<java.util.Map.Entry<K, V>>)).previous()"},"variableMap":{"entry":"entry","iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":-2},{"failures":[],"tindex":"d70a942d-4211-11e5-9c4d-69e819c0cc52","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:122","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.CloneTransformer.<T>cloneTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"d70a942e-4211-11e5-9c4d-a7e36a77e251","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:133","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.UnmodifiableBidiMap<V, K>"},"variableMap":{"inverse":"inverseBidiMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.BidiMap<V, K>"},"status":-2},{"failures":[124],"tindex":"d70a942f-4211-11e5-9c4d-8984b13e1f23","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"count","lengthInBits":"count","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"count","otherOffsetInBits":"count","otherLengthInBits":"count"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:616","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    int++;\n} "},"status":-1},{"failures":[125,126],"tindex":"d70abb40-4211-11e5-9c4d-e74e72334dff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends E>.remove()"},"status":-1},{"failures":[],"tindex":"d70abb41-4211-11e5-9c4d-d19dc938b4b4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()"},"status":-2},{"failures":[],"tindex":"d70abb42-4211-11e5-9c4d-49fd55636713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:482","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[127,128,129,130,131,132],"tindex":"d70abb43-4211-11e5-9c4d-55da5851690b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2417","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.size())"},"status":-1},{"failures":[],"tindex":"d70abb44-4211-11e5-9c4d-13e7fc9f7717","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:347","type":"CtIfImpl","sourcecode":"if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n    throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n} "},"status":-2},{"failures":[133,134],"tindex":"d70abb45-4211-11e5-9c4d-1d0dd78c5c1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"d70ae256-4211-11e5-9c4d-e3755a26caa7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyValueSet(java.util.BitSet)) || org.apache.commons.collections4.iterators.CollatingIterator<E>.(anyHasNext(java.util.ArrayList<java.util.Iterator<? extends E>>))"},"status":-2},{"failures":[],"tindex":"d70ae257-4211-11e5-9c4d-bd30675161ff","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"entry","key2":"key2","key5":"key2","hashCode":"hashCode","key3":"key2","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"d70ae258-4211-11e5-9c4d-3b8b6aaabf0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.collection.UnmodifiableCollection<T>(java.util.Collection<? extends T>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}