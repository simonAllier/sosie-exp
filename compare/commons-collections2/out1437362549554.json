{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":22,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":84,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":58,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectHashCodeEqualsContract":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEqualsNull":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":73,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":36,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":32,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":104,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testSerializeDeserializeThenCompare":81,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":26,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEqualsNull":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEqualsNull":46,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":19,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectEqualsSelf":79,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":27,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":59,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":21,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":90,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSerializeDeserializeThenCompare":65,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":61,"org.apache.commons.collections4.CollectionUtilsTest.find":103,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":91,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":40,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectHashCodeEqualsContract":64,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testObjectHashCodeEqualsContract":80,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":69,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":52,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":75,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutNullKey":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":102,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":17,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEqualsNull":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":44,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":74,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":85,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":28,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":45,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":30,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectHashCodeEqualsContract":24,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testObjectEqualsSelf":63,"org.apache.commons.collections4.CollectionUtilsTest.cardinalityOfNull":105,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":1,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":68,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testObjectEqualsSelf":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectEqualsSelf":47,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":54,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testObjectHashCodeEqualsContract":48,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":11,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":101,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":82,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectHashCodeEqualsContract":33,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":87},"transformations":[{"failures":[0],"tindex":"8d51ccf6-2e8e-11e5-ae39-a942da4882ef","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"status":-1},{"failures":[],"tindex":"8d51f407-2e8e-11e5-ae39-cb086e8f3d7f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(super.entrySet())"},"status":-2},{"failures":[],"tindex":"8d51f408-2e8e-11e5-ae39-639f9fa963b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:71","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"8d51f409-2e8e-11e5-ae39-43e259219161","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-1},{"failures":[],"tindex":"8d521b1a-2e8e-11e5-ae39-57ed4bceadeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(null)"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:140","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":1},{"failures":[],"tindex":"8d521b1b-2e8e-11e5-ae39-f3dd2125f550","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:239","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n}"},"variableMap":{"entry":"entry","index":"hashCode","after":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"8d52422c-2e8e-11e5-ae39-5bf6ea9810ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1397","type":"CtReturnImpl","sourcecode":"return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0"},"variableMap":{"object":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:152","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.equals(java.lang.Object)"},"status":-1},{"failures":[98,99],"tindex":"8d52693d-2e8e-11e5-ae39-9135448b42d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:130","type":"CtIfImpl","sourcecode":"if (K == null) {\n    throw new java.lang.NullPointerException(\"Key cannot be null\");\n} "},"status":-1},{"failures":[],"tindex":"8d52693e-2e8e-11e5-ae39-219fd28421b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1229","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeFloat(float)"},"status":-2},{"failures":[100,101,102],"tindex":"8d52693f-2e8e-11e5-ae39-f1b9a734f294","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"8d526940-2e8e-11e5-ae39-af38493b9449","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.RuntimeException(\"Internal Error\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"status":-2},{"failures":[],"tindex":"8d526941-2e8e-11e5-ae39-891c6c6e8814","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:423","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"8d529052-2e8e-11e5-ae39-8b2b05d79471","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"status":0},{"failures":[103],"tindex":"8d529053-2e8e-11e5-ae39-91b21e88b1fb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl","sourcecode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}"},"variableMap":{"predicate":"predicate","collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:642","type":"CtIfImpl","sourcecode":"if ((java.lang.Iterable<T> != null) && (org.apache.commons.collections4.Predicate<? super T> != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n            return T;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"8d529054-2e8e-11e5-ae39-bd1efef6f35c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:578","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<java.lang.Character> java.util.List<java.lang.Character> = org.apache.commons.collections4.ListUtils.org.apache.commons.collections4.ListUtils.longestCommonSubsequence(new org.apache.commons.collections4.ListUtils.CharSequenceAsList(java.lang.CharSequence), new org.apache.commons.collections4.ListUtils.CharSequenceAsList(java.lang.CharSequence))"},"status":-2},{"failures":[104],"tindex":"8d529055-2e8e-11e5-ae39-9f9c0524f541","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:640","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[],"tindex":"8d52b766-2e8e-11e5-ae39-79e49c38193f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:279","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[105],"tindex":"8d52b767-2e8e-11e5-ae39-f7931b162e99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:617","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"8d52b768-2e8e-11e5-ae39-7f2a648f3399","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":-2},{"failures":[],"tindex":"8d52b769-2e8e-11e5-ae39-3dec79f49c99","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1359","type":"CtReturnImpl","sourcecode":"return int"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"8d529052-2e8e-11e5-ae39-8b2b05d79471","diffs":[{"variables":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.NodeCachingLinkedList.void shrinkCacheToMaximumSize()_cacheSize","org.apache.commons.collections4.list.NodeCachingLinkedList.void removeAllNodes()_cacheSize"]},"type":"variable"},{"branches":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.NodeCachingLinkedList_void_shrinkCacheToMaximumSize().l1"]},"type":"branch"},{"nodes":{},"edges":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":["org.apache.commons.collections4.list.NodeCachingLinkedList.void shrinkCacheToMaximumSize() -> org.apache.commons.collections4.list.NodeCachingLinkedList.org.apache.commons.collections4.list.AbstractLinkedList$Node getNodeFromCache()"]},"type":"graph"}]}]}