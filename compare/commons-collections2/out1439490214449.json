{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":1,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":13,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":12,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":9,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":78,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":71,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":75,"org.apache.commons.collections4.ListUtilsTest.testHashCode":85,"org.apache.commons.collections4.CollectionUtilsTest.testSize_Enumeration":68,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":76,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":82,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":25,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":53,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":16,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":22,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":80,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":21,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":33,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":3,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":43,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":10,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":0,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":17,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":29,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":18,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":57,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":7,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":44,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":41,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":61,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":70,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":48,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":74,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":49,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":56,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":81,"org.apache.commons.collections4.ListUtilsTest.testRetainAll":6,"org.apache.commons.collections4.CollectionUtilsTest.testRetainAll":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":84,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":60,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":14,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":73,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":34,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":45,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":35,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testEquals":4,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":64,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":72,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":66,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":52,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":40,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":42,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":77},"transformations":[{"failures":[0,1,2,3,4],"tindex":"686a8f56-41e8-11e5-9c45-0f944858466a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[5,6],"tindex":"686ab667-41e8-11e5-9c45-2967999b260a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:79","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"variableMap":{"list":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:321","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    if (java.util.Collection<?>.contains(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-1},{"failures":[],"tindex":"686ab668-41e8-11e5-9c45-4be86abb874e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"status":-2},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67],"tindex":"686ab669-41e8-11e5-9c45-212ab72b74e5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:236","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.IteratorChain<E>.updateCurrentIterator()"},"status":-1},{"failures":[68],"tindex":"686ab66a-41e8-11e5-9c45-95807d3d14c4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1349","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-1},{"failures":[],"tindex":"686ab66b-41e8-11e5-9c45-973bd1428936","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:206","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[],"tindex":"686ab66c-41e8-11e5-9c45-495e57b41a91","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1223","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder(128)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:66","type":"CtLocalVariableImpl","sourcecode":"final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder()"},"status":-2},{"failures":[69],"tindex":"686ab66d-41e8-11e5-9c45-03bede0fdf2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"686add7e-41e8-11e5-9c45-f13dbd692665","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1504","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.maxSize();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return -1;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:608","type":"CtReturnImpl","sourcecode":"return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0"},"status":-2},{"failures":[],"tindex":"686add7f-41e8-11e5-9c45-39de5ce4ff70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:387","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedList(java.util.List<E>)"},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:359","type":"CtReturnImpl","sourcecode":"return java.util.List<E>"},"status":0},{"failures":[],"tindex":"686add80-41e8-11e5-9c45-9f1d8cf868a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:310","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.hashCode()"},"status":0},{"failures":[70,71,72,73,74,75,76,77],"tindex":"686add81-41e8-11e5-9c45-63fd00ad736f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:76","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1380","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext()"},"status":-1},{"failures":[],"tindex":"686add82-41e8-11e5-9c45-0b57054a83d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"686b0393-41e8-11e5-9c45-d56a158294e4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1978","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:813","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K)"},"status":-2},{"failures":[],"tindex":"686b0394-41e8-11e5-9c45-9d5a38703a8a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:793","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[78,79,80,81,82,83,84],"tindex":"686b0395-41e8-11e5-9c45-21db27b605c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:385","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"686b0396-41e8-11e5-9c45-f9a2878870ce","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:224","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.keyvalue.MultiKey) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<?> org.apache.commons.collections4.keyvalue.MultiKey<?> = ((org.apache.commons.collections4.keyvalue.MultiKey<?>)(java.lang.Object));\n    return java.util.Arrays.equals(K[], org.apache.commons.collections4.keyvalue.MultiKey<?>.?[]);\n} "},"variableMap":{"other":"obj","keys":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:129","type":"CtIfImpl","sourcecode":"if (java.util.Set<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"686b0397-41e8-11e5-9c45-5fac5505b947","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1391","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"object":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[85],"tindex":"686b2aa8-41e8-11e5-9c45-4399bae778d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl","sourcecode":"return -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:283","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}