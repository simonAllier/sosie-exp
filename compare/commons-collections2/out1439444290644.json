{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":15,"org.apache.commons.collections4.list.TreeListTest.testListEquals":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":21,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":20,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":7,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":4,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":39,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":71,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":22,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":9,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":65,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":38,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":50,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":24,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":11,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":16,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":56,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":73,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":75,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":51,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":40,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":17,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":66,"org.apache.commons.collections4.ListUtilsTest.testPartition":2,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":48,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":68,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":49,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":33,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":52,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":30,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":63,"org.apache.commons.collections4.MapUtilsTest.testLazyMapTransformer":0,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":70,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":74,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":8,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":18,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":19,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":6,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":61,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":42,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":10,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":54,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":60,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":14,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":53,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":31,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":35,"org.apache.commons.collections4.list.TreeListTest.testBug35258":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":23,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":47,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":34,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":55,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":26,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":29,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":37,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":69,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":12,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":43,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":67,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":32,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":62},"transformations":[{"failures":[0,1],"tindex":"7bb1433e-417d-11e5-9f92-c39e56ec393d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:162","type":"CtIfImpl","sourcecode":"if ((java.util.Map<K, V>.containsKey(java.lang.Object)) == false) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final K K = ((K)(java.lang.Object));\n    final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"7bb1433f-417d-11e5-9f92-a3a5f053e9d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:566","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:355","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(K), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"7bb16950-417d-11e5-9f92-17f1ac817d4f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:226","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.reindex();\n} "},"status":0},{"failures":[2],"tindex":"7bb16951-417d-11e5-9f92-f5b601e808b2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl","sourcecode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} "},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"7bb16952-417d-11e5-9f92-1f42f673639e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1594","type":"CtIfImpl","sourcecode":"if (java.util.Comparator<? super O> == null) {\n    throw new java.lang.IllegalArgumentException(\"The comparator must not be null\");\n} "},"variableMap":{"c":"comparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:360","type":"CtIfImpl","sourcecode":"if (int == (-1)) {\n    int = int;\n    E = java.util.ArrayList<E>.get(int);\n} else {\n    final E E = java.util.ArrayList<E>.get(int);\n    if ((java.util.Comparator<? super E>) == null) {\n        throw new java.lang.NullPointerException(\"You must invoke setComparator() to set a comparator first.\");\n    } \n    if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n        E = E;\n        int = int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"7bb16953-417d-11e5-9f92-09b3fcbb2ff5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:377","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int = (31 * int) + (E == null ? 0 : E.hashCode());\n}"},"variableMap":{"hashCode":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-2},{"failures":[15,16,17],"tindex":"7bb16954-417d-11e5-9f92-b95ad8e37dec","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:290","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"7bb16955-417d-11e5-9f92-9fcc5919c402","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:111","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Closure<? super E> org.apache.commons.collections4.Closure<? super E> : org.apache.commons.collections4.Closure<? super E>[]) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}"},"status":-2},{"failures":[],"tindex":"7bb16956-417d-11e5-9f92-2d50e4e8cca2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:337","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:195","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()"},"status":-2},{"failures":[],"tindex":"7bb19067-417d-11e5-9f92-dbb2714795cc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:473","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map.Entry<java.lang.Object, java.lang.Long> java.util.Map.Entry<java.lang.Object, java.lang.Long> = java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.next()"},"status":-2},{"failures":[],"tindex":"7bb19068-417d-11e5-9f92-09a6a1cb5315","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:883","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null"},"variableMap":{"current":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:221","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"7bb19069-417d-11e5-9f92-8197b271cc77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":0},{"failures":[],"tindex":"7bb1906a-417d-11e5-9f92-49762eccc6ad","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"variableMap":{"this":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl","sourcecode":"java.util.ListIterator<E>.set(E)"},"status":-2},{"failures":[18],"tindex":"7bb1906b-417d-11e5-9f92-314626f1cf51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:662","type":"CtReturnImpl","sourcecode":"return 0L"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:199","type":"CtReturnImpl","sourcecode":"return java.util.concurrent.TimeUnit.java.util.concurrent.TimeUnit.convert(long, java.util.concurrent.TimeUnit)"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28],"tindex":"7bb1906c-417d-11e5-9f92-637b78a34274","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:863","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40],"tindex":"7bb1906d-417d-11e5-9f92-37b7afb89995","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1017","type":"CtIfImpl","sourcecode":"if (boolean && (java.lang.Object != null)) {\n    java.io.PrintStream.print(' ');\n    java.io.PrintStream.println(java.lang.Object.getClass().getName());\n} else {\n    java.io.PrintStream.println();\n}"},"status":-1},{"failures":[],"tindex":"7bb1b77e-417d-11e5-9f92-cdfab248c682","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1163","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"parent":"this","modCount":"hashCode","expectedModCount":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"7bb1b77f-417d-11e5-9f92-f789fcfd9feb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:175","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"size":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"status":-1},{"failures":[],"tindex":"7bb1b780-417d-11e5-9f92-69de21d29689","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:220","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"7bb1de91-417d-11e5-9f92-ff4cf3027a38","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1286","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.map.AbstractHashedMap<K, V> org.apache.commons.collections4.map.AbstractHashedMap<K, V> = ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>)(super.clone()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int];\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = null;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int = 0;\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.putAll(this);\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>;\n} catch (final java.lang.CloneNotSupportedException ex) {\n    throw new java.lang.InternalError();\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}