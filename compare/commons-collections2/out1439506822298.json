{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":50,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":58,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiPut":53,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsContract":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":37,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":26,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiPut":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiPut":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSimpleSerialization":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":2,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testObjectHashCodeEqualsSelfHashCode":30,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiPut":45,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":11,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testEqualsAndHashCode":35,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":59,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testEqualsAndHashCode":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":54,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":43,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":22,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":25,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":24,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":52,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":44,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":56,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":18,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":14,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":15,"org.apache.commons.collections4.ListUtilsTest.testEquals":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":39},"transformations":[{"failures":[],"tindex":"1376bf9e-420f-11e5-bf6f-0b713d2268de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1592","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The collections must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[0],"tindex":"1376e6af-420f-11e5-bf6f-2dc05b0fdeef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} "},"variableMap":{"c":"list1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"1376e6b0-420f-11e5-bf6f-9fdb840a05c5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"variableMap":{"object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:241","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()) == null) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n} else {\n    for (final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> : org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) {\n                return true;\n            } \n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"1376e6b1-420f-11e5-bf6f-03c8dcdc35a2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.TransformedSplitMap:207","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().put(org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformKey(J), org.apache.commons.collections4.splitmap.TransformedSplitMap<J, K, U, V>.transformValue(U))"},"status":-2},{"failures":[],"tindex":"13770dc2-420f-11e5-bf6f-3531579fecf6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[1],"tindex":"13770dc3-420f-11e5-bf6f-514d7ab34ab4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.Predicate<? super V>) != null"},"variableMap":{"valuePredicate":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:877","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (!(org.apache.commons.collections4.Predicate<? super C>.evaluate(C))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"13770dc4-420f-11e5-bf6f-3592e7fd66af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:392","type":"CtAssignmentImpl","sourcecode":"java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.EntrySet()"},"status":-1},{"failures":[],"tindex":"13770dc5-420f-11e5-bf6f-2d628c9e4572","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:353","type":"CtReturnImpl","sourcecode":"return ((java.util.Collection<V>)(org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().get(java.lang.Object)))"},"status":-2},{"failures":[],"tindex":"13770dc6-420f-11e5-bf6f-ff0bc038e5aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:747","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[34,35],"tindex":"13770dc7-420f-11e5-bf6f-777cf5ec6aca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:87","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey().hashCode()"},"status":-1},{"failures":[],"tindex":"13770dc8-420f-11e5-bf6f-0d4a13fdf2fe","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:533","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    final V V = V;\n    int = int;\n    K = K;\n    V = V;\n    int = 0;\n    K = null;\n    V = null;\n    int = 2;\n    return V;\n} "},"status":-2},{"failures":[0],"tindex":"137734d9-420f-11e5-bf6f-cdb3c9d89b2a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"status":-1},{"failures":[36,37,38],"tindex":"137734da-420f-11e5-bf6f-fd08eec863c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:584","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"137734db-420f-11e5-bf6f-6ff64a6cf908","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map<K, V>, org.apache.commons.collections4.Factory<? extends V>)"},"status":-2},{"failures":[],"tindex":"137734dc-420f-11e5-bf6f-1b8a88979f33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:151","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"137734dd-420f-11e5-bf6f-4bafac7a61c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:730","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator getKey() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:134","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"137734de-420f-11e5-bf6f-ff47d49a2c3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:74","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54],"tindex":"137734df-420f-11e5-bf6f-2bfe10069cf4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:169","type":"CtIfImpl","sourcecode":"if (java.util.Map<K, V>.containsKey(K)) {\n    java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K));\n} "},"status":-1},{"failures":[55,56,57,58,59,60],"tindex":"137734e0-420f-11e5-bf6f-0bb9060b8c7c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"y","lengthInBits":"end2","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"end1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:199","type":"CtWhileImpl","sourcecode":"while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n    int[][int] = ++int;\n    ++int;\n}"},"status":-1},{"failures":[],"tindex":"13775bf1-420f-11e5-bf6f-57b9db376223","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:70","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:150","type":"CtReturnImpl","sourcecode":"return true"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}