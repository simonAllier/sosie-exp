{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":37,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nullValues":113,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":19,"org.apache.commons.collections4.map.ListOrderedMapTest.testCOLLECTIONS_474_nonNullValues":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":122,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":57,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":50,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":129,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":107,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":21,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":110,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":2,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":11,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":68,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":108,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":60,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":126,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":106,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":105,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":102,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":101,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":16,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":100,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":119,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":121,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":114,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":9,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":76,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":8},"transformations":[{"failures":[0,1,2],"tindex":"308d8fea-2e16-11e5-8d3d-f7e4b3b627b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"removeAllowed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"308dde0b-2e16-11e5-8d3d-997dfeff2e3a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:511","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"variableMap":{"this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:890","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"308dde0c-2e16-11e5-8d3d-c1688f49786a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[99,100,101,102,103,104,105,106,107,108],"tindex":"308dde0d-2e16-11e5-8d3d-338dae1c0d6b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl","sourcecode":"return (this.int) > (this.int)"},"variableMap":{"startIndex":"maxElements","index":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:193","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.(size()) == (int)"},"status":-1},{"failures":[],"tindex":"308e051e-2e16-11e5-8d3d-771d725c2ce5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hash1","newCapacity":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:569","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[],"tindex":"308e051f-2e16-11e5-8d3d-7d5ecdfa823d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:640","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:91","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-2},{"failures":[66],"tindex":"308e0520-2e16-11e5-8d3d-55c74d88cc01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:751","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"308e0521-2e16-11e5-8d3d-71c4abc654e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:113","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<V>)"},"status":-2},{"failures":[],"tindex":"308e2c32-2e16-11e5-8d3d-99c6f61dac04","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[109],"tindex":"308e2c33-2e16-11e5-8d3d-fbcbd0b601ae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:117","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.add(T)"},"status":-1},{"failures":[],"tindex":"308e2c34-2e16-11e5-8d3d-03acecd8e174","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:583","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[110,111,112,113],"tindex":"308e2c35-2e16-11e5-8d3d-e732088035e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:128","type":"CtIfImpl","sourcecode":"if (((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot determine prefix outside of Character boundaries\");\n} "},"variableMap":{"offsetInBits":"index","lengthInBits":"index","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:460","type":"CtInvocationImpl","sourcecode":"java.util.List<K>.add(int, K)"},"status":-1},{"failures":[],"tindex":"308e5346-2e16-11e5-8d3d-8b22a8d3ccdd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl","sourcecode":"return this.E[][this.int]"},"variableMap":{"array":"array","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:120","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(this.java.lang.Object, this.int)))"},"status":-2},{"failures":[114,115],"tindex":"308e5347-2e16-11e5-8d3d-edb419e4ebac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:784","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return int;\n} "},"variableMap":{"integerObject":"value","defaultValue":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[116,117,118,119,120,121],"tindex":"308e5348-2e16-11e5-8d3d-afd2444af79a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl","sourcecode":"return (int) > 0"},"variableMap":{"nextIndex":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TransformedBag:126","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TransformedBag<E>.getBag().add(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E), int)"},"status":-1},{"failures":[122,123,124,125,126,127],"tindex":"308e5349-2e16-11e5-8d3d-c7ecc7b1a2b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vDown","start1":"start1","end2":"start2","this":"this","i":"start1","end1":"delta","k":"end1","start2":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"308e7a5a-2e16-11e5-8d3d-b1b7df6cd907","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:516","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) > (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"parent":"current","predecessor":"right","bitIndex":"lengthInBits","child":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1100","type":"CtWhileImpl","sourcecode":"while (true) {\n    if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n        break;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"308ea16b-2e16-11e5-8d3d-b720ac3255e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl","sourcecode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException ex2) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}"},"status":-2},{"failures":[128,129,130,131],"tindex":"308ea16c-2e16-11e5-8d3d-9d184c9464cd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:140","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"308ea16d-2e16-11e5-8d3d-01ede75b39ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1225","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 2 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        java.lang.StringBuilder.append(',');\n    case 1 :\n        java.lang.StringBuilder.append(((K) == (this) ? \"(this Map)\" : K));\n        java.lang.StringBuilder.append('=');\n        java.lang.StringBuilder.append(((V) == (this) ? \"(this Map)\" : V));\n        break;\n    default :\n        throw new java.lang.IllegalStateException((\"Invalid map index: \" + (int)));\n}"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}