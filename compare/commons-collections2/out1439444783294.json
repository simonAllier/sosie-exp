{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":98,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":37,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":68,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":80,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":59,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":76,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":2,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":1,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":101,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":35,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":84,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":29,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":88,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":27,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveAll":63,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":83,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":23,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerializationError":54,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":19,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":81,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":11,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":41,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":70,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":24,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicBad":57,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":94,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":6,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":34,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":10,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":93,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":65,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":52,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicSerialization":56,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":47,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":16,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":74,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":7,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":99,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":13,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionClear":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":82,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":26,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":38,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCloneMethod":55,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":60,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":33,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":85,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":103,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":4,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":91,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":75,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":102,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":61,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":58,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":0},"transformations":[{"failures":[],"tindex":"a155aefd-417e-11e5-bfac-3783ecd7d092","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.MapBackedSet<E, V>.org.apache.commons.collections4.set.MapBackedSet.mapBackedSet(java.util.Map<E, ? super V>, null)"},"status":-2},{"failures":[0],"tindex":"a155aefe-417e-11e5-bfac-a9fcca0cbcd9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:125","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.remove((int - 1))"},"variableMap":{"this":"this","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:92","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get((int - 1))"},"status":-1},{"failures":[1],"tindex":"a155d60f-417e-11e5-bfac-c1f8d07eed7d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The parameter types must match the arguments\")"},"status":-1},{"failures":[],"tindex":"a155d610-417e-11e5-bfac-0d9252038024","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"lengthInBits","removeIndex":"lengthInBits","currentIndex":"lengthInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:439","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"a155d611-417e-11e5-bfac-cb829b452bae","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"status":-2},{"failures":[],"tindex":"a155d612-417e-11e5-bfac-cd4f319bdce1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"status":-2},{"failures":[],"tindex":"a155d613-417e-11e5-bfac-e1d3c3eff2c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"before","link":"before","header":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:207","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"a155fd24-417e-11e5-bfac-adec86c7afe2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"right","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:234","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52],"tindex":"a155fd25-417e-11e5-bfac-17e0c0af9f72","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"a155fd26-417e-11e5-bfac-0f1b743e051b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1308","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.checkIndexBounds(int)"},"status":0},{"failures":[53,54,55,56,57],"tindex":"a155fd27-417e-11e5-bfac-fd4e26549288","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)"},"status":-1},{"failures":[],"tindex":"a155fd28-417e-11e5-bfac-495a885e1c32","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1259","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"this","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[],"tindex":"a1562439-417e-11e5-bfac-4d850f0559a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())"},"status":-2},{"failures":[],"tindex":"a156243a-417e-11e5-bfac-a7a6f24dbfa1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:160","type":"CtAssignmentImpl","sourcecode":"int = ((int) - (int)) + (int)"},"variableMap":{"size":"index","maxElements":"index","start":"index","end":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:127","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":0},{"failures":[58,59],"tindex":"a156243b-417e-11e5-bfac-bb5a7a828b89","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1106","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, (int + (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)), (int + int)))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"status":-1},{"failures":[],"tindex":"a156243c-417e-11e5-bfac-2569441f34d0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:200","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)"},"status":-2},{"failures":[],"tindex":"a156243d-417e-11e5-bfac-dff4c8e3666c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1385","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    return ((java.util.Collection<?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"a1564b4e-417e-11e5-bfac-b37d1855b45a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"a1564b4f-417e-11e5-bfac-0df604ea4a70","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()"},"variableMap":{"this":"convertedKey"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:276","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[101,102,103],"tindex":"a1564b50-417e-11e5-bfac-d309728d1a31","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"lastReturned"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}