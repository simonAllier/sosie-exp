{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":58,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":10,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":18,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":73,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":97,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":81,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":29,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":82,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":95,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":45,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":56,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":0,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":26,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":27,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":65,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":88,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":90,"org.apache.commons.collections4.CollectionUtilsTest.getFromList":91,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":51,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":68,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":9,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":84,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":6,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":44,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":96,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":99,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":83,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":46,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":69,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":42,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":14,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":87,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":70,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":54,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":43,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":38,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":15,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":53,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":93,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":32,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":22,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":76,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":62,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":34,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":19,"org.apache.commons.collections4.map.LRUMapTest.testLRU":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":25,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":12,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":5,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":66,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":48,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":36,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":49,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":39,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":80,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":11,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":63,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":4,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":24,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":71,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":98,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":20,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":72,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":50,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":79,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":60,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":16,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":89,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":86,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":75},"transformations":[{"failures":[],"tindex":"83bab3f5-4153-11e5-b161-f5e26efcab27","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key5","length":"index","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[0],"tindex":"83bb0216-4153-11e5-b161-e960c3e6460e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:66","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":-1},{"failures":[],"tindex":"83bb0217-4153-11e5-b161-017809a56099","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.previous()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:139","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"83bb0218-4153-11e5-b161-215afa9a67a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:395","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.putAll(java.util.Map<K, V>)"},"status":-2},{"failures":[1],"tindex":"83bb0219-4153-11e5-b161-49c2694fb9b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"status":-1},{"failures":[],"tindex":"83bb292a-4153-11e5-b161-5b6137f2ed9c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:158","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot add to list until next() or previous() called\");\n} "},"variableMap":{"validForUpdate":"first"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:368","type":"CtIfImpl","sourcecode":"if (boolean) {\n    boolean = false;\n} else {\n    java.lang.StringBuilder.append(\", \");\n}"},"status":0},{"failures":[],"tindex":"83bb292b-4153-11e5-b161-d93303235f9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>.hasNext()"},"status":-2},{"failures":[2,3,4,5,6],"tindex":"83bb292c-4153-11e5-b161-fb72df88ff61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-1},{"failures":[7],"tindex":"83bb503d-4153-11e5-b161-59e03a2e18a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Predicate<T>"},"status":-1},{"failures":[],"tindex":"83bb503e-4153-11e5-b161-43f6b2fb2565","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TruePredicate:64","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"83bb503f-4153-11e5-b161-77259f999a26","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl","sourcecode":"this.int = -1"},"variableMap":{"lastItemIndex":"maxElements"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"83bb5040-4153-11e5-b161-a5df82a08825","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:429","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"83bb7751-4153-11e5-b161-4be7c1e47f82","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:213","type":"CtIfImpl","sourcecode":"if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n} else {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[],"tindex":"83bb7752-4153-11e5-b161-03b8ce717fd4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"leastIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:368","type":"CtIfImpl","sourcecode":"if ((java.util.Comparator<? super E>.compare(E, E)) < 0) {\n    E = E;\n    int = int;\n} "},"status":0},{"failures":[],"tindex":"83bb7753-4153-11e5-b161-45240505d174","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:282","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++"},"status":-2},{"failures":[91],"tindex":"83bb7754-4153-11e5-b161-7f8ce69cf112","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1215","type":"CtReturnImpl","sourcecode":"return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int)"},"status":-1},{"failures":[92],"tindex":"83bb9e65-4153-11e5-b161-d509ca7dec0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate","predicate2":"predicate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[93,94,95,96,97,98,99],"tindex":"83bb9e66-4153-11e5-b161-ff2b36a7dde5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2279","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int"},"variableMap":{"modCount":"i","expectedModCount":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:370","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"83bb9e67-4153-11e5-b161-855200eea354","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:342","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:639","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}