{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapRemove":81,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiKeySetValuesOrder":77,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapRemove":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":74,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":2,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiKeySetValuesOrder":100,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":19,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":18,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":71,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":23,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":10,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testSortOrder":64,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":31,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsSelfHashCode":34,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":24,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":52,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":101,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":22,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":84,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":42,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":21,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":43,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiTailMapContains":89,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":5,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":40,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":103,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":104,"org.apache.commons.collections4.list.TreeListTest.testIterationOrder":3,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":20,"org.apache.commons.collections4.ArrayStackTest.testNewStack":0,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiHeadMapContains":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiKeySetValuesOrder":97,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":105,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":45,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":50,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":57,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":37,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":7,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":27,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":91,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":4,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":95,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":61,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":41,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":46,"org.apache.commons.collections4.list.TreeListTest.testListEquals":6,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":72,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":108,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":87,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiKeySetValuesOrder":82,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":68,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":88,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":63,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":16,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":11,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":47,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":55,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":17,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":66,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":8,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiSubMapContains":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":94,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":76,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":53,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":9,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiTailMapContains":69,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":49,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":78,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":12,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiHeadMapContains":65,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":70,"org.apache.commons.collections4.list.TreeListTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":75,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":79,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":14,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":92,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":67,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiSubMapContains":73,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":48,"org.apache.commons.collections4.list.TreeListTest.testBug35258":1,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":15,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":60,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":25,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":59,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":102,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":99,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":33},"transformations":[{"failures":[],"tindex":"02d474ef-4246-11e5-8064-f912424e4ad8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-2},{"failures":[],"tindex":"02d49c00-4246-11e5-8064-870071fb46de","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} "},"variableMap":{"obj":"key1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:158","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0],"tindex":"02d49c01-4246-11e5-8064-01fc17d67795","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:167","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.set(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:123","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"status":-1},{"failures":[],"tindex":"02d4c312-4246-11e5-8064-3f6c3fa5410b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2090","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()"},"variableMap":{"node":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:544","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()"},"status":0},{"failures":[],"tindex":"02d4c313-4246-11e5-8064-ffe56044c84c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:140","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.resolveCollision(this, this.java.util.Map<K, V>[][int], java.util.Map<K, V>, java.util.Collection<K>)"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35],"tindex":"02d4c314-4246-11e5-8064-bfaaa76ab3a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl","sourcecode":"if ((int) != 1) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"hit":"fromIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:147","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, org.apache.commons.collections4.list.TreeList<E>.size())"},"status":-1},{"failures":[],"tindex":"02d4c315-4246-11e5-8064-2bf5273b159f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:416","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n    java.util.Set<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.EntryView();\n} "},"status":-2},{"failures":[],"tindex":"02d4ea26-4246-11e5-8064-17512c53a906","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:97","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"exhausted":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:131","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"02d4ea27-4246-11e5-8064-ff5c98658a22","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:142","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        if (!(java.util.Collection<?>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n            boolean = true;\n        } \n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().retainAll(null);\n}"},"status":-2},{"failures":[],"tindex":"02d4ea28-4246-11e5-8064-9b3ba21e2d95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"02d4ea29-4246-11e5-8064-9956f90d1a4d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)"},"status":-1},{"failures":[64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107],"tindex":"02d4ea2a-4246-11e5-8064-f162e21f5e21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:433","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<K>emptyOrderedIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:265","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(java.util.Iterator<K> , this)"},"status":-1},{"failures":[],"tindex":"02d5113b-4246-11e5-8064-b3148459f5d7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:364","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null"},"status":0},{"failures":[],"tindex":"02d5113c-4246-11e5-8064-3d5c0e6e8e15","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\")"},"status":0},{"failures":[],"tindex":"02d5113d-4246-11e5-8064-4b0d3e914c2c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1664","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"previous":"right","e":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:561","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"02d5113e-4246-11e5-8064-9795d30c369a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<I>"},"status":-2},{"failures":[],"tindex":"02d5113f-4246-11e5-8064-f59e35e85196","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:319","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = null;\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n            if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            } else {\n                org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n            }\n            (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n            return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-2},{"failures":[],"tindex":"02d53850-4246-11e5-8064-bf9084e9c17d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:324","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.ListIterator<java.util.Map.Entry<K, V>>.previous()"},"variableMap":{"iterator":"iterator","last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl","sourcecode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()"},"status":-2},{"failures":[],"tindex":"02d53851-4246-11e5-8064-73ceac750c86","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"size","listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:183","type":"CtIfImpl","sourcecode":"if ((T[].int) >= int) {\n    java.lang.Object[] = T[];\n} else {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)));\n}"},"status":-2},{"failures":[108],"tindex":"02d53852-4246-11e5-8064-0773cbdf17e8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:295","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n}"},"variableMap":{"this":"this","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:290","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends K, ?> instanceof org.apache.commons.collections4.MultiMap) {\n    for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n    }\n} else {\n    for (final java.util.Map.Entry<? extends K, ?> java.util.Map.Entry<? extends K, ?> : java.util.Map<? extends K, ?>.entrySet()) {\n        org.apache.commons.collections4.map.MultiValueMap<K, V>.put(java.util.Map.Entry<? extends K, ?>.getKey(), java.util.Map.Entry<? extends K, ?>.getValue());\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}