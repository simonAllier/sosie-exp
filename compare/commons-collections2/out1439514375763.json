{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":16,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":27,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":8,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":32,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":26,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":1,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":47,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":45,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":19,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":11,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":5,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":6,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":3,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":21,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":4,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":53,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":36,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":10,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":30,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":38,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":2,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":14,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":40,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":7,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":15,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":37,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":39,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":41,"org.apache.commons.collections4.CollectionUtilsTest.find":49,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":22,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":35,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":50,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":17,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchTransformer":52,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":54,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":23,"org.apache.commons.collections4.TransformerUtilsTest.testSwitchMapTransformer":51,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":12,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":13,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":44,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":28},"transformations":[{"failures":[],"tindex":"a9ae3074-4220-11e5-bb1b-8fc8e10d5aa6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:515","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size()) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.size())) {\n    return false;\n} "},"variableMap":{"helper":"helper","cardinalityB":"cardinalityA","cardinalityA":"cardinalityA"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:518","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.java.util.Map<java.lang.Object, java.lang.Integer>.keySet()) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) != (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-2},{"failures":[0,1],"tindex":"a9ae5785-4220-11e5-bb1b-63dba6e3caee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:321","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"a9ae5786-4220-11e5-bb1b-e59fae10d1b6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends I>.hasNext()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:397","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E>.hasNext()) {\n    return true;\n} "},"status":0},{"failures":[2,3,4,5],"tindex":"a9ae5787-4220-11e5-bb1b-6bae96639f17","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:70","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasNext()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:82","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.hasPrevious()"},"status":-1},{"failures":[],"tindex":"a9ae5788-4220-11e5-bb1b-f9676a23adcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:201","type":"CtAssignmentImpl","sourcecode":"this.int = -1"},"status":0},{"failures":[6,7,8,9],"tindex":"a9ae7e99-4220-11e5-bb1b-eb7c6168ddbc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-1},{"failures":[],"tindex":"a9ae7e9a-4220-11e5-bb1b-45ad78323e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"entry","entry":"entry","key2":"key5","key5":"key3","hashCode":"hashCode","key3":"key4","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"a9ae7e9b-4220-11e5-bb1b-a975f60eb238","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"object","k":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:118","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-2},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21],"tindex":"a9aea5ac-4220-11e5-bb1b-45437706f7af","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"status":-1},{"failures":[],"tindex":"a9aea5ad-4220-11e5-bb1b-6736ee2adb4e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:230","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"a9aea5ae-4220-11e5-bb1b-4bdc6decd8c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:213","type":"CtUnaryOperatorImpl","sourcecode":"--int"},"variableMap":{"removeIndex":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl","sourcecode":"this.int = int"},"status":-2},{"failures":[22,23,24,25,26],"tindex":"a9aea5af-4220-11e5-bb1b-07e6f4743da8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:331","type":"CtForEachImpl","sourcecode":"for (final O O : java.lang.Iterable<? extends O>) {\n    if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n        org.apache.commons.collections4.bag.HashBag<O>.add(O);\n    } \n}"},"status":-1},{"failures":[],"tindex":"a9aea5b0-4220-11e5-bb1b-652615b42902","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:220","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"a9aea5b1-4220-11e5-bb1b-51729f88969f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}"},"variableMap":{"retval":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:467","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final T T = ((T)(E));\n        T[][int++] = T;\n    }\n}"},"status":-1},{"failures":[45,46,47],"tindex":"a9aea5b2-4220-11e5-bb1b-eb98d301551d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:259","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.contains(java.util.Iterator<E>.next())) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"variableMap":{"coll":"coll","modified":"modified","it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:281","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n        java.util.Iterator<E>.remove();\n        boolean = true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a9aeccc3-4220-11e5-bb1b-a722f6568e07","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:556","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:170","type":"CtInvocationImpl","sourcecode":"java.util.Map<V, K>.remove(java.util.Map<K, V>.get(K))"},"status":-2},{"failures":[],"tindex":"a9aeccc4-4220-11e5-bb1b-b7258a14701b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:161","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"a9aeccc5-4220-11e5-bb1b-61cf44a3a664","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:130","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object))"},"status":-2},{"failures":[48,49,50,51,52,53,54,55],"tindex":"a9aeccc6-4220-11e5-bb1b-e3cfb25e58f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)"},"status":-1},{"failures":[],"tindex":"a9aeccc7-4220-11e5-bb1b-99bf9b998211","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1002","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:918","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}