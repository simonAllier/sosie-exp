{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":92,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":6,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":93,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":65,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":42,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":84,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":46,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":35,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":64,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":17,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":20,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":77,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":16,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":76,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":7},"transformations":[{"failures":[],"tindex":"a59db609-2e3c-11e5-94d1-b7d006c68c56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1335","type":"CtTryImpl","sourcecode":"try {\n    for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n} catch (final java.lang.ClassCastException ex) {\n    return false;\n} catch (final java.lang.NullPointerException ex) {\n    return false;\n}"},"variableMap":{"other":"other","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1334","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    try {\n        for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n            final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    } catch (final java.lang.ClassCastException ex) {\n        return false;\n    } catch (final java.lang.NullPointerException ex) {\n        return false;\n    }\n} "},"status":0},{"failures":[],"tindex":"a59f63ba-2e3c-11e5-94d1-45f603ef6294","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[0],"tindex":"a59f63bb-2e3c-11e5-94d1-b7ae86d88acf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:453","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-1},{"failures":[],"tindex":"a59f8acc-2e3c-11e5-94d1-ed4598b45a61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"preds":"preds"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:82","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]))"},"status":1},{"failures":[],"tindex":"a59f8acd-2e3c-11e5-94d1-4730e75964b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1629","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue()"},"variableMap":{"current":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:428","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        } else {\n            return null;\n        }\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[1],"tindex":"a59fb1de-2e3c-11e5-94d1-150e62a8d9ad","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:388","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.Flat3Map<K, V>.convertToMap()"},"status":-1},{"failures":[],"tindex":"a59fb1df-2e3c-11e5-94d1-edca03a3be83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} "},"variableMap":{"obj":"lock","this":"lock"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl","sourcecode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"a59fb1e0-2e3c-11e5-94d1-8bf0b44154a1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:448","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (java.util.List<K>.size()))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())));\n} "},"status":0},{"failures":[],"tindex":"a59fb1e1-2e3c-11e5-94d1-c5ffff9da155","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.EnumerationIterator:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.EnumerationIterator<E>.this(java.util.Enumeration<? extends E>, null)"},"status":-2},{"failures":[],"tindex":"a59fd8f2-2e3c-11e5-94d1-cfeb5d394bd7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)"},"status":-2},{"failures":[],"tindex":"a59fd8f3-2e3c-11e5-94d1-6f6a9767fdb0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:490","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(null, null)"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":0},{"failures":[],"tindex":"a59fd8f4-2e3c-11e5-94d1-0fe28338c646","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"collection","list2":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<? extends E>.size()) > 0"},"status":-2},{"failures":[],"tindex":"a5a00005-2e3c-11e5-94d1-651de178e3ef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:548","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98],"tindex":"a5a00006-2e3c-11e5-94d1-3f82fae37af0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:939","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a5a00007-2e3c-11e5-94d1-ef29ce93ca0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"index","proposedCapacity":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl","sourcecode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} "},"status":-2},{"failures":[],"tindex":"a5a02718-2e3c-11e5-94d1-b160f797f59f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1264","type":"CtUnaryOperatorImpl","sourcecode":"int--"},"status":-2},{"failures":[],"tindex":"a5a02719-2e3c-11e5-94d1-51a97c75cc61","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:433","type":"CtIfImpl","sourcecode":"if (int != (-1)) {\n    return int;\n} "},"variableMap":{"result":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:386","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[99],"tindex":"a5a0271a-2e3c-11e5-94d1-a3054b45c187","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl","sourcecode":"(this.int)--"},"variableMap":{"size":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:535","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"a5a0271b-2e3c-11e5-94d1-73a18188b3c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:952","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1290","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        break;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"a59f8acc-2e3c-11e5-94d1-ed4598b45a61","diffs":[{"nodes":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.OnePredicate.boolean evaluate(T)"]},"edges":{"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":["org.apache.commons.collections4.functors.AnyPredicate.<T> org.apache.commons.collections4.Predicate anyPredicate(java.util.Collection) -> org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate(org.apache.commons.collections4.Predicate[])","org.apache.commons.collections4.functors.OnePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.FalsePredicate.boolean evaluate(T)","org.apache.commons.collections4.functors.OnePredicate.boolean evaluate(T) -> org.apache.commons.collections4.functors.TruePredicate.boolean evaluate(T)"]},"type":"graph"}]}]}