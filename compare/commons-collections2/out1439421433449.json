{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":14,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":32,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":48,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":36,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex2":8,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":18,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":26,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":46,"org.apache.commons.collections4.keyvalue.MultiKeyTest.testHashCode":1,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":0,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":23,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":57,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":62,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":16,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":21,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":13,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":59,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":66,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":29,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":40,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":15,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":58,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":63,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":34,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":43,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":60,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":53,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":39,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":25,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx2":7,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":30,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":28,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":2,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":54,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":55,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":6,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":69},"transformations":[{"failures":[0],"tindex":"43be16b4-4148-11e5-a86d-f12fd33296dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"offset","index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:195","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    for (final E E : java.util.Collection<E>) {\n        java.lang.Object[][int++] = E;\n    }\n}"},"status":-1},{"failures":[1,2,3,4,5],"tindex":"43be3dc5-4148-11e5-a86d-294f4b906b78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB":"hashCode","bit":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:243","type":"CtReturnImpl","sourcecode":"return int"},"status":-1},{"failures":[],"tindex":"43be3dc6-4148-11e5-a86d-cdeca0a47d42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:383","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.BitSet.size()) ; int++) {\n    if (java.util.BitSet.get(int)) {\n        return true;\n    } \n}"},"variableMap":{"set":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:108","type":"CtReturnImpl","sourcecode":"return ((K) == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : K.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))"},"status":-2},{"failures":[],"tindex":"43be3dc7-4148-11e5-a86d-7fc98f7f92ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)"},"status":-2},{"failures":[],"tindex":"43be64d8-4148-11e5-a86d-a9392c39963e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:323","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n    if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n        if (null == org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        } else {\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--;\n        return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n    } \n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"43be64d9-4148-11e5-a86d-f110bdc9c1b2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"variableMap":{"start":"length","maxElements":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:116","type":"CtIfImpl","sourcecode":"if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n    if ((int[][int]) > int) {\n        int = int[][int];\n        int = int;\n    } \n} "},"status":-2},{"failures":[],"tindex":"43be64da-4148-11e5-a86d-05fe17032381","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl","sourcecode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} "},"variableMap":{"node":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:196","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(java.lang.Object)"},"status":0},{"failures":[],"tindex":"43be64db-4148-11e5-a86d-53dc1466033d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:388","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"status":-2},{"failures":[],"tindex":"43be64dc-4148-11e5-a86d-d3accd33029b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:89","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[6],"tindex":"43be8bed-4148-11e5-a86d-ef6ac35c2e41","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"43be8bee-4148-11e5-a86d-43b10c12bcce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":-2},{"failures":[7,8,9],"tindex":"43be8bef-4148-11e5-a86d-0b158aa674df","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")"},"status":-1},{"failures":[],"tindex":"43be8bf0-4148-11e5-a86d-d1736d479efe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:69","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"  \").append(java.util.Map.Entry<K, V>).append(\"\\n\")"},"status":0},{"failures":[],"tindex":"43be8bf1-4148-11e5-a86d-c39803c8e002","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:160","type":"CtAssignmentImpl","sourcecode":"int = ((int) - (int)) + (int)"},"variableMap":{"size":"threshold","maxElements":"length","start":"length","end":"threshold"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)"},"status":-2},{"failures":[10,11,12,13,14,15],"tindex":"43be8bf2-4148-11e5-a86d-f9ba1d98a5d6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:150","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"43be8bf3-4148-11e5-a86d-9fb6194b6a8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51],"tindex":"43beb304-4148-11e5-a86d-513feb441a8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1329","type":"CtReturnImpl","sourcecode":"return !org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.(isInternalNode())"},"variableMap":{"this":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:386","type":"CtReturnImpl","sourcecode":"return (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))"},"status":-1},{"failures":[],"tindex":"43beb305-4148-11e5-a86d-5f9bf35e0a4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"variableMap":{"this":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.firstKey()"},"status":-2},{"failures":[52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69],"tindex":"43beb306-4148-11e5-a86d-b77da417565a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:462","type":"CtAssignmentImpl","sourcecode":"T[] = T[]"},"status":-1},{"failures":[],"tindex":"43beb307-4148-11e5-a86d-cd0d46a5b98a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:159","type":"CtIfImpl","sourcecode":"if ((int) < (int)) {\n    int = ((int) - (int)) + (int);\n} else if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}"},"variableMap":{"size":"comparison","start":"comparison","maxElements":"comparison","end":"comparison","full":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:169","type":"CtSwitchImpl","sourcecode":"switch (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion) {\n    case EQUAL :\n        boolean = int == 0;\n        break;\n    case GREATER :\n        boolean = int > 0;\n        break;\n    case LESS :\n        boolean = int < 0;\n        break;\n    case GREATER_OR_EQUAL :\n        boolean = int >= 0;\n        break;\n    case LESS_OR_EQUAL :\n        boolean = int <= 0;\n        break;\n    default :\n        throw new java.lang.IllegalStateException(((\"The current criterion \\'\" + (org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)) + \"\\' is invalid.\"));\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}