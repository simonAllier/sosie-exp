{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":68,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":50,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemovePrevious":88,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":56,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":97,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorNextRemoveNext":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":100,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemovePrevious":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":37,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":46,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":25,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorPreviousRemoveNext":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddBegin":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":55,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":82,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":96,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":52,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":32,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":43,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":78,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":81,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":54,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemovePrevious":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexAddAfter":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":93,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":69,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":99,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":73,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":83,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":44,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":94,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":89,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":63,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":70,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":18,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorNextRemoveNext":59,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":8,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":67,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":33,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":72,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemovePrevious":58,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":80,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":91,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":65,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":11},"transformations":[{"failures":[0],"tindex":"259a969f-2e1f-11e5-a956-f3da1d43ce4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1502","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize()"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)"},"status":-1},{"failures":[],"tindex":"259ae4c0-2e1f-11e5-a956-2915eb0a2803","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1001","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<V>emptyIterator();\n} "},"status":0},{"failures":[1,2,3,4,5,6,7,8],"tindex":"259ae4c1-2e1f-11e5-a956-1723b2313e73","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl","sourcecode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} "},"status":-1},{"failures":[9,10,11],"tindex":"259ae4c2-2e1f-11e5-a956-d571b477b1ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2405","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    K K = ((K)(java.io.ObjectInputStream.readObject()));\n    V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.put(K, V);\n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"259b0bd3-2e1f-11e5-a956-45ff03093783","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:67","type":"CtInvocationImpl","sourcecode":"super.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[],"tindex":"259b0bd4-2e1f-11e5-a956-65ca45e5aaba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:153","type":"CtReturnImpl","sourcecode":"return (int) >= (int)"},"variableMap":{"maximumCacheSize":"hash3","cacheSize":"hash3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:221","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"259b0bd5-2e1f-11e5-a956-130619d70c18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:126","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"259b0bd6-2e1f-11e5-a956-ff79668a6270","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:295","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isEmpty()) {\n    return null;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:284","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove()"},"status":-2},{"failures":[],"tindex":"259b32e7-2e1f-11e5-a956-211f9efa4467","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:226","type":"CtAssignmentImpl","sourcecode":"int[][int] = int--"},"variableMap":{"vUp":"key2","x":"h","i":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:229","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"259b32e8-2e1f-11e5-a956-fdd7630c19d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1314","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.TransformedMap.transformingMap(java.util.Map<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>)"},"variableMap":{"valueTransformer":"transformerFactory","keyTransformer":"transformerFactory","map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1406","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends V>)"},"status":-2},{"failures":[24,25],"tindex":"259b32e9-2e1f-11e5-a956-87e72cd78e59","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:410","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) < (java.util.Collection<?>.size())) {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n} else {\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Collection<?>.contains(java.lang.Object)) {\n            return true;\n        } \n    }\n}"},"variableMap":{"coll2":"a","coll1":"a"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:465","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if ((org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqA(java.lang.Object)) > (org.apache.commons.collections4.CollectionUtils.CardinalityHelper<java.lang.Object>.freqB(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"259b59fa-2e1f-11e5-a956-8dc1b172bfc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"hash","start":"hash","end":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:333","type":"CtUnaryOperatorImpl","sourcecode":"(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)--"},"status":-2},{"failures":[],"tindex":"259b59fb-2e1f-11e5-a956-059e3fd34aae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:591","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.util.Iterator<E>.next()"},"status":-2},{"failures":[26],"tindex":"259b59fc-2e1f-11e5-a956-3bcd6b06e9a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1017","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return null;\n} "},"variableMap":{"lengthInBits":"endIndexInBits"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1127","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) && (org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey())) < int)) {\n    return null;\n} "},"status":-1},{"failures":[27,28],"tindex":"259b59fd-2e1f-11e5-a956-1bb1a3397665","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:85","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())"},"status":-1},{"failures":[29,30,31,32,33,34,35],"tindex":"259b810e-2e1f-11e5-a956-b5f783d509d4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:472","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.hasNext()) {\n    final java.util.Map.Entry<java.lang.Object, java.lang.Long> java.util.Map.Entry<java.lang.Object, java.lang.Long> = java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.next();\n    if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.util.Map.Entry<java.lang.Object, java.lang.Long>.getValue())) {\n        super.remove(java.util.Map.Entry<java.lang.Object, java.lang.Long>.getKey());\n        java.util.Iterator<java.util.Map.Entry<java.lang.Object, java.lang.Long>>.remove();\n    } \n}"},"status":-1},{"failures":[36],"tindex":"259b810f-2e1f-11e5-a956-458766df85ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:76","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The map must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl","sourcecode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")"},"status":-1},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"259b8110-2e1f-11e5-a956-7be475a8e4e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:556","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"259ba821-2e1f-11e5-a956-bd9e78c06536","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:264","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"link":"after","header":"before","after":"before"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:165","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-2},{"failures":[],"tindex":"259ba822-2e1f-11e5-a956-1d367167dbb0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"259ae4c0-2e1f-11e5-a956-2915eb0a2803","diffs":[{"nodes":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()"]},"edges":{"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()"],"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":["org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyOrderedIterator.<E> org.apache.commons.collections4.OrderedIterator emptyOrderedIterator()","org.apache.commons.collections4.map.AbstractHashedMap.java.util.Iterator createValuesIterator() -> org.apache.commons.collections4.iterators.EmptyIterator.<E> java.util.Iterator emptyIterator()"]},"type":"graph"}]}]}