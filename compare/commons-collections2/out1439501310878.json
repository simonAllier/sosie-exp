{"failureDictionary":{"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":2,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testSinglePeek":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabelAndMap":21,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetRemoveChangesMap":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":40,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testRemove":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":34,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":36,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetRemoveChangesMap":15,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":31,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":28,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testMultiplePeek":7,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":25,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":41,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintNullMap":17,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIllegalRemove":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":39,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":24,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":44,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":19,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":10,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":27,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabelAndMap":20,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":23,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":22,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":8,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":33,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":3,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":30,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":45},"transformations":[{"failures":[],"tindex":"3e66a4a2-4202-11e5-810d-e77bec50d0ac","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:164","type":"CtReturnImpl","sourcecode":"return -1"},"status":-2},{"failures":[],"tindex":"3e66a4a3-4202-11e5-810d-cf1d91f424f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:365","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"3e66cbb4-4202-11e5-810d-2fe8ec714a2e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:362","type":"CtLocalVariableImpl","sourcecode":"final java.util.ListIterator<?> java.util.ListIterator<?> = org.apache.commons.collections4.list.AbstractLinkedList<E>.listIterator()"},"status":-2},{"failures":[],"tindex":"3e66cbb5-4202-11e5-810d-77a2780e3e63","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.add(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object))"},"status":-2},{"failures":[],"tindex":"3e66cbb6-4202-11e5-810d-03f80dac39d9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)"},"variableMap":{"value":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"status":-2},{"failures":[],"tindex":"3e66cbb7-4202-11e5-810d-67292dce4161","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1502","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).maxSize()"},"status":0},{"failures":[0,1,2,3],"tindex":"3e66cbb8-4202-11e5-810d-e1c2fd485d56","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:240","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"3e66cbb9-4202-11e5-810d-d121a6bdb651","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1423","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.util.Map.Entry<?, ?>.getKey())"},"variableMap":{"entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:233","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())"},"status":-2},{"failures":[],"tindex":"3e66f2ca-4202-11e5-810d-c7018dfcda08","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:232","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"3e66f2cb-4202-11e5-810d-4549885ef80b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:826","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator<K, V>(this)"},"status":-2},{"failures":[],"tindex":"3e66f2cc-4202-11e5-810d-c33cd3210523","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:319","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K), V)"},"status":-2},{"failures":[4,5,6,7,8,9],"tindex":"3e66f2cd-4202-11e5-810d-1dabc879821a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:355","type":"CtReturnImpl","sourcecode":"return boolean"},"variableMap":{"modified":"slotFilled"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:100","type":"CtReturnImpl","sourcecode":"return boolean ? true : java.util.Iterator<? extends E>.hasNext()"},"status":-1},{"failures":[10],"tindex":"3e66f2ce-4202-11e5-810d-6144cc788883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key5","entry":"entry","key2":"key1","hashCode":"index","key3":"key1","key4":"key4","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:636","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-1},{"failures":[11,12,13,14,15,16],"tindex":"3e6719df-4202-11e5-810d-0d723d5cd00d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1595","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The comparator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:90","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"3e6719e0-4202-11e5-810d-0333c8dedbfb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1823","type":"CtReturnImpl","sourcecode":"return int <= 0"},"variableMap":{"ret":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:150","type":"CtReturnImpl","sourcecode":"return (int) == 0"},"status":0},{"failures":[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"3e6719e1-4202-11e5-810d-0b34ccd1bfce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1038","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String);\n}"},"status":-1},{"failures":[],"tindex":"3e6719e2-4202-11e5-810d-43959664980f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:583","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"3e6719e3-4202-11e5-810d-4d65dcc4154f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"deletedNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:992","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"3e6719e4-4202-11e5-810d-0795fa387aa4","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}