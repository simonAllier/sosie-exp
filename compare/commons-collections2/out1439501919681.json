{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":25,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":18,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":55,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":109,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":2,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":36,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":34,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":47,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":48,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":102,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":13,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":4,"org.apache.commons.collections4.iterators.ObjectArrayListIterator2Test.testWalkForwardAndBack":104,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":43,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":27,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":15,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":95,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":82,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":59,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":14,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":61,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":45,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":5,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":92,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":23,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":50,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":71,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":11,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":101,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":81,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":6,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":83,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":103,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":9,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":35,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":113,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":108,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":56,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":66,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":91,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":67,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":38,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":60,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":114,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionClear":1,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":10,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":64,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":69,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":3,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":58,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":106,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":24,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":99,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":51,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":87,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":28,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":107,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":100,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":93,"org.apache.commons.collections4.iterators.ObjectArrayListIteratorTest.testListIterator":105,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":110,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":68,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":8,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":37},"transformations":[{"failures":[0,1],"tindex":"a94674e0-4203-11e5-b9b1-01d3e3fe9ade","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"variableMap":{"start":"size","maxElements":"cacheSize","index":"maximumCacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:217","type":"CtLocalVariableImpl","sourcecode":"final int int = java.lang.Math.min(int, ((int) - (int)))"},"status":-1},{"failures":[2,3],"tindex":"a9469bf1-4203-11e5-b9b1-d34a48b5dd4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:117","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.add(Object) is not supported.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"a9469bf2-4203-11e5-b9b1-314915652c3c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=')"},"status":0},{"failures":[],"tindex":"a9469bf3-4203-11e5-b9b1-3db69aeafd7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"i","removeIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:317","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.set(int)"},"status":-2},{"failures":[4],"tindex":"a9469bf4-4203-11e5-b9b1-f1e51540a797","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionBag<E>(org.apache.commons.collections4.Bag<E>)"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.BagUtils:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag.synchronizedBag(org.apache.commons.collections4.Bag<E>)"},"status":-1},{"failures":[],"tindex":"a9469bf5-4203-11e5-b9b1-27cbbf76637d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtReturnImpl","sourcecode":"return new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue())).append('}').toString()"},"status":0},{"failures":[],"tindex":"a9469bf6-4203-11e5-b9b1-5babf1503222","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":0},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100],"tindex":"a946c307-4203-11e5-b9b1-717d7ad08444","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:225","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"a946c308-4203-11e5-b9b1-13c106981df8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:266","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[101,102],"tindex":"a946c309-4203-11e5-b9b1-df8700f0182f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:241","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedPut<K, V>(org.apache.commons.collections4.Put<K, V>)"},"variableMap":{"put":"put"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SplitMapUtils:239","type":"CtReturnImpl","sourcecode":"return ((java.util.Map<K, V>)(org.apache.commons.collections4.Put<K, V>))"},"status":-1},{"failures":[103,104,105],"tindex":"a946c30a-4203-11e5-b9b1-2371b1906f4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:977","type":"CtOperatorAssignmentImpl","sourcecode":"int -= 2"},"variableMap":{"modCount":"lastItemIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:112","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"status":-1},{"failures":[],"tindex":"a946c30b-4203-11e5-b9b1-fdfb181f4035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:580","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[][org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)]"},"status":-2},{"failures":[],"tindex":"a946ea1c-4203-11e5-b9b1-9dd067ceb3a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:748","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[106],"tindex":"a946ea1d-4203-11e5-b9b1-dfc48ec8f0ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"status":-1},{"failures":[107,108,109,110,111,112],"tindex":"a946ea1e-4203-11e5-b9b1-372898999bba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"variableMap":{"currentNode":"siblingNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1039","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[],"tindex":"a947112f-4203-11e5-b9b1-a1778f70124f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:187","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.(size()) == 0"},"variableMap":{"this":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:143","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"a9471130-4203-11e5-b9b1-29cc983e6b55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:289","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSortedSet.unmodifiableSortedSet(java.util.SortedSet<E>)"},"variableMap":{"set":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:150","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)"},"status":0},{"failures":[113,114],"tindex":"a9471131-4203-11e5-b9b1-b59de86cb7d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"a9471132-4203-11e5-b9b1-4f61a5c86638","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1385","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}