{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":121,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":124,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":39,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":74,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":2,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":85,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":86,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":52,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":47,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":81,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveComposited":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":64,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":104,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":42,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":63,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":40,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":139,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":127,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":123,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":38,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":83,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":49,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":29,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":136,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":88,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":99,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":71,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":82,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":100,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":128,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":60,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":25,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":41,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":5,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":129,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":110,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":61,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":28,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":135,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":118,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":111,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":132,"org.apache.commons.collections4.keyvalue.TiedMapEntryTest.testToString":134,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":137,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":46,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":22,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":138,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":95,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":32,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":76,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":26,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":37,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":103,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":97,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":7,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":15,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":126,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":69,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":50,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":3,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":108,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":114,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":125,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":66,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":106,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":79,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":119,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":80,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":109,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":117,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":16,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":102,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":11,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":131,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":9,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":48,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":112,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":0,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":21,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAdd":115,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":14,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":13,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":34,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":96,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":78,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":107,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":57,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":75},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10],"tindex":"6dc8f69b-424d-11e5-b2a2-134d400fe939","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"obj","o2":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:133","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Collection<E>>) {\n    if (java.util.Collection<E>.contains(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"6dc91dac-424d-11e5-b2a2-81bd41b0c47e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl","sourcecode":"return this.int"},"variableMap":{"endIndex":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.MSB"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:42","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int) >>> int"},"status":-2},{"failures":[11,12,13,14,15,16,17,18,19,20,21,22],"tindex":"6dc91dad-424d-11e5-b2a2-b92fab168155","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:975","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(\" = \")"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:990","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> : java.util.Map<?, ?>.entrySet()) {\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n    final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getValue();\n    if ((java.lang.Object instanceof java.util.Map) && (!(org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.contains(java.lang.Object)))) {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.verbosePrintInternal(java.io.PrintStream, (java.lang.Object == null ? \"null\" : java.lang.Object), ((java.util.Map<?, ?>)(java.lang.Object)), org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>, boolean);\n    } else {\n        org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.printIndent(java.io.PrintStream, org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size());\n        java.io.PrintStream.print(java.lang.Object);\n        java.io.PrintStream.print(\" = \");\n        final int int = org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.indexOf(java.lang.Object);\n        if (int == (-1)) {\n            java.io.PrintStream.print(java.lang.Object);\n        } else if (((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) == int) {\n            java.io.PrintStream.print(\"(this Map)\");\n        } else {\n            java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"));\n        }\n        if (boolean && (java.lang.Object != null)) {\n            java.io.PrintStream.print(' ');\n            java.io.PrintStream.println(java.lang.Object.getClass().getName());\n        } else {\n            java.io.PrintStream.println();\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"6dc944be-424d-11e5-b2a2-07de1db37c09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:164","type":"CtAssignmentImpl","sourcecode":"int = (int) - (int)"},"variableMap":{"size":"maxElements","start":"maxElements","end":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:342","type":"CtAssignmentImpl","sourcecode":"int = (int) - 1"},"status":-2},{"failures":[],"tindex":"6dc944bf-424d-11e5-b2a2-7f743fd30f28","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-2},{"failures":[],"tindex":"6dc944c0-424d-11e5-b2a2-cdc460ddaed4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1019","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(java.lang.Object.getClass().getName())"},"variableMap":{"childValue":"object","out":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:213","type":"CtIfImpl","sourcecode":"if (boolean) {\n    java.util.List<E>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"6dc944c1-424d-11e5-b2a2-5b33b9bf84e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SetUtils:275","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedSortedSet(java.util.SortedSet<E>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.TransformedSortedSet:136","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.TransformedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Transformer<? super E, ? extends E>)"},"status":0},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"tindex":"6dc96bd2-424d-11e5-b2a2-45e5e46a4fe4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:590","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-1},{"failures":[119],"tindex":"6dc96bd3-424d-11e5-b2a2-cdb4f47aa1fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"6dc96bd4-424d-11e5-b2a2-751680df3fa0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key3","entry":"previous","key2":"key3","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"6dc992e5-424d-11e5-b2a2-358d5059045b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1419","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.EntrySet.(contains(java.lang.Object)) == false) {\n    return false;\n} "},"variableMap":{"obj":"object","this":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"6dc992e6-424d-11e5-b2a2-577600f3393b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:155","type":"CtReturnImpl","sourcecode":"return 0"},"status":-1},{"failures":[],"tindex":"6dc9b9f7-424d-11e5-b2a2-6138818703ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))"},"status":-2},{"failures":[],"tindex":"6dc9e108-424d-11e5-b2a2-0393cf76c559","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))"},"status":-2},{"failures":[],"tindex":"6dc9e109-424d-11e5-b2a2-7526345c6d40","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:333","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[],"tindex":"6dc9e10a-424d-11e5-b2a2-4522c8b08b61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[],"tindex":"6dc9e10b-424d-11e5-b2a2-1fdbb68bce14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:138","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    return java.util.Iterator<? extends E>.next();\n} "},"status":0},{"failures":[134],"tindex":"6dc9e10c-424d-11e5-b2a2-27ab2e3e907c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:134","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) + \"=\") + org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getValue())"},"status":-1},{"failures":[135,136,137,138,139],"tindex":"6dc9e10d-424d-11e5-b2a2-19e13ad67817","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:143","type":"CtAssignmentImpl","sourcecode":"boolean[][int] = !(boolean[][int])"},"variableMap":{"i":"indexOfLargestMobileInteger","direction":"direction"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:136","type":"CtAssignmentImpl","sourcecode":"boolean[][int] = boolean[][(int + int)]"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}