{"failureDictionary":{"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":39,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":50,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":30,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":64,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":4,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":31,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":34,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":24,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":36,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":45,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":55,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":37,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":69,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":16,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":74,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":71,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":17,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":73,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":35,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":18,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":1,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":77,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":0,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":63,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":41,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":78,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":29,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":48,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":28,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":13,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":26,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":7,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":27,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":52,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":12,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":54,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":75,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":21,"org.apache.commons.collections4.map.Flat3MapTest.testToString":25,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":70,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":60,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":22,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":62,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":67,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":14,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":38,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":47,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":58,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":59,"org.apache.commons.collections4.comparators.ComparatorChainTest.testEqualsNull":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":20,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":51,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":76},"transformations":[{"failures":[],"tindex":"10a10962-417b-11e5-a778-7328fc8207ea","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.firstKey()"},"variableMap":{"delegate":"delegate"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.Trie<K, V>.lastKey()"},"status":-2},{"failures":[],"tindex":"10a15783-417b-11e5-a778-b940706d9977","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"10a15784-417b-11e5-a778-01c50145b92f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:70","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Parameter types must match the arguments\")"},"status":-2},{"failures":[],"tindex":"10a15785-417b-11e5-a778-ab53b8816577","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key4","next":"next","entry":"next","key2":"key2","hashCode":"index","key3":"key4","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[0],"tindex":"10a17e96-417b-11e5-a778-0f6daf2253a1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:72","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.<T>truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:55","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.<T>falsePredicate()"},"status":-1},{"failures":[1],"tindex":"10a17e97-417b-11e5-a778-e910573fbf3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.TransformedQueue:127","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().remove()"},"status":-1},{"failures":[],"tindex":"10a1a5a8-417b-11e5-a778-6531b4d8021b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:676","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} "},"variableMap":{"current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":0},{"failures":[],"tindex":"10a1a5a9-417b-11e5-a778-a3f252575553","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:156","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-2},{"failures":[],"tindex":"10a1a5aa-417b-11e5-a778-3f502a5f5fe2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1268","type":"CtLocalVariableImpl","sourcecode":"final V V = ((V)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2407","type":"CtLocalVariableImpl","sourcecode":"V V = ((V)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"10a1a5ab-417b-11e5-a778-c31ac8c697ce","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:238","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.IfClosure.<E>ifClosure(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>)"},"status":-2},{"failures":[],"tindex":"10a1ccbc-417b-11e5-a778-bd1cb413ef9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:611","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.mapIterator()"},"status":-2},{"failures":[2],"tindex":"10a1ccbd-417b-11e5-a778-2fd77c99c74a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl","sourcecode":"if (null == java.lang.Object) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"10a1ccbe-417b-11e5-a778-af21dcdc1ce7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:128","type":"CtLocalVariableImpl","sourcecode":"final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[])"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23],"tindex":"10a1ccbf-417b-11e5-a778-c1dd7017ec39","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:112","type":"CtIfImpl","sourcecode":"if ((java.util.Set<E>.isEmpty()) == false) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"10a1ccc0-417b-11e5-a778-211052602982","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"10a1f3d1-417b-11e5-a778-8d34f216e8d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"variableMap":{"code":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:665","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"10a1f3d2-417b-11e5-a778-c57daa6a8b1e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:298","type":"CtInvocationImpl","sourcecode":"java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear()"},"status":-2},{"failures":[],"tindex":"10a1f3d3-417b-11e5-a778-259f2e8feb58","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:558","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<E>.visit(org.apache.commons.collections4.ListUtils.LcsVisitor<E>)"},"status":-2},{"failures":[24],"tindex":"10a1f3d4-417b-11e5-a778-0300cef6fe7c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"10a21ae5-417b-11e5-a778-4fc952aea9f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}