{"failureDictionary":{"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":5,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesIteratorRemoveChangesMap":50,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":27,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveAll":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":116,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":86,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":98,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":4,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":37,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":93,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":79,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove3":81,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":34,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapGet":36,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":80,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRetainAll":49,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":94,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":14,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":24,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":117,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":30,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":38,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":71,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testLastKey":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":115,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFirstKey":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":61,"org.apache.commons.collections4.iterators.SingletonIterator2Test.testFullIterator":12,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":19,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRetainAll":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":91,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testFullIterator":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":1,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":10,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains3":78,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":16,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains1":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetContains2":77,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFirstKey":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":97,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":66,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicate":119,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":90,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPut":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":113,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":111,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullKey":40,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutAll":42,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":108,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":100,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":110,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":31,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapRemove":43,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":105,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapClear":63,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetClearChangesMap":75,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRetainAll":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":3,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":114,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testValuesRemoveChangesMap":47,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapGet":67,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesClearChangesMap":73,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":88,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":33,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":18,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":21,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains1":44,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains2":45,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testEntrySetContains3":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":99,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testKeySetRemoveAll":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":6,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":69,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":23,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetClearChangesMap":74,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":95,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":103,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":0,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":22,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":118,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":89,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":120,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":92,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":101,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":70,"org.apache.commons.collections4.trie.PatriciaTrieTest.testLastKey":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":64,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveAll":83,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":104,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapPutNullValue":41,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapClear":32,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":87,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":25},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9],"tindex":"f75fd5a0-4209-11e5-a2ae-a513740ba932","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:604","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1066","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[10,11,12],"tindex":"f75fd5a1-4209-11e5-a2ae-814876d37e1e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-1},{"failures":[],"tindex":"f75ffcb2-4209-11e5-a2ae-5f8c16dd2b56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.toString();\n} "},"status":0},{"failures":[],"tindex":"f75ffcb3-4209-11e5-a2ae-9f9dd6c0ffb2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:68","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.this(E[], int, E[].int)"},"status":-2},{"failures":[],"tindex":"f75ffcb4-4209-11e5-a2ae-9756add81eb9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:262","type":"CtLocalVariableImpl","sourcecode":"final int int = ((int) + int) % (int)"},"status":-2},{"failures":[],"tindex":"f75ffcb5-4209-11e5-a2ae-592780813ad6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:706","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated()"},"variableMap":{"parent":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"f75ffcb6-4209-11e5-a2ae-9f2e4a20d1a7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"status":-2},{"failures":[13,14],"tindex":"f75ffcb7-4209-11e5-a2ae-3b2a2b7ad2b4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:128","type":"CtForEachImpl","sourcecode":"for (final C C : java.util.Collection<? extends C>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.add(C);\n}"},"status":-1},{"failures":[15,16,17,18,19],"tindex":"f75ffcb8-4209-11e5-a2ae-5de692b29ab6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:133","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int + int)]"},"variableMap":{"indexOfLargestMobileInteger":"i","offset":"largestKey","keys":"keys"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:119","type":"CtAssignmentImpl","sourcecode":"int = int[][int]"},"status":-1},{"failures":[],"tindex":"f75ffcb9-4209-11e5-a2ae-1b0bf35f2f03","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:129","type":"CtReturnImpl","sourcecode":"return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])))"},"variableMap":{"iArgs":"input","input":"input","method":"input"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:126","type":"CtTryImpl","sourcecode":"try {\n    final java.lang.Class<?> java.lang.Class<?> = java.lang.Object.getClass();\n    final java.lang.reflect.Method java.lang.reflect.Method = java.lang.Class<?>.getMethod(java.lang.String, java.lang.Class<?>[]);\n    return ((O)(java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[])));\n} catch (final java.lang.NoSuchMethodException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\"));\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\"));\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' threw an exception\") , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"f76023ca-4209-11e5-a2ae-3b6b86e12a71","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:366","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":0},{"failures":[20,21],"tindex":"f76023cb-4209-11e5-a2ae-9b47f44f66d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyMapIterator:39","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[22,23,24,25,26,27],"tindex":"f76023cc-4209-11e5-a2ae-1fa317b9b94c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"d","d":"delta","offset":"start2","vDown":"vUp","delta":"delta","this":"this","sequence1":"sequence1","sequence2":"sequence1","vUp":"vUp","equator":"equator","end2":"d","end1":"d","start2":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"tindex":"f7604add-4209-11e5-a2ae-6992af20460d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:399","type":"CtIfImpl","sourcecode":"if ((java.util.Set<K>) == null) {\n    java.util.Set<K> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet();\n} "},"status":-1},{"failures":[],"tindex":"f7604ade-4209-11e5-a2ae-6f15aaa34a25","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"f7604adf-4209-11e5-a2ae-13e277836705","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:562","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this)"},"variableMap":{"parent":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.TransformedCollection:86","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<E>.size()) > 0) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.Collection<E>.toArray()));\n    java.util.Collection<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.collection.TransformedCollection<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-2},{"failures":[118,119],"tindex":"f7604ae0-4209-11e5-a2ae-f5ca72d97829","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OnePredicate:99","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"f7604ae1-4209-11e5-a2ae-794efb10ff8d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"right","root":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:602","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[120],"tindex":"f76071f2-4209-11e5-a2ae-211909b0b044","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ClosureUtils:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionClosure.<E>exceptionClosure()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:332","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.SwitchClosure.switchClosure(java.util.Map<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>)"},"status":-1},{"failures":[],"tindex":"f76071f3-4209-11e5-a2ae-0372eb58f095","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:621","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.init()"},"variableMap":{"this":"intersects"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:351","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}