{"failureDictionary":{"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":16,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":21,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":49,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":12,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":31,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":47,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":50,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testObjectHashCodeEqualsContract":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":34,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testRemove":51,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testObjectEqualsSelf":4,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":3,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":35,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":43,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":22,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":48,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testSimpleSerialization":8,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testObjectHashCodeEqualsSelfHashCode":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":33,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":36,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":13,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":30,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":29,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":32,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":23,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":19,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":18,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":0,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":1,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testCanonicalEmptyCollectionExists":7,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":17,"org.apache.commons.collections4.set.CompositeSetTest.testContains":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":15,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":40,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":45,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":41,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEqualsNull":6,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":46,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":38,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testCanonicalFullCollectionExists":5,"org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate":14},"transformations":[{"failures":[],"tindex":"dfb7b161-4168-11e5-aa65-fd128b4d0d0f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:64","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedSet<E>)(super.decorated()))"},"status":-2},{"failures":[],"tindex":"dfb7d872-4168-11e5-aa65-4f82fd09896b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().addAll(int, java.util.Collection<? extends E>)"},"status":-2},{"failures":[],"tindex":"dfb7d873-4168-11e5-aa65-d1eddef68c61","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:555","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"dfb7d874-4168-11e5-aa65-fd776acfbcef","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:96","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.LinkedHashMap<V, K>()"},"variableMap":{"reverseMap":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:101","type":"CtAssignmentImpl","sourcecode":"java.util.Map<V, K> = new java.util.HashMap<V, K>()"},"status":0},{"failures":[],"tindex":"dfb7d875-4168-11e5-aa65-41b847e194b3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:731","type":"CtInvocationImpl","sourcecode":"((java.lang.ref.Reference<?>)(java.lang.Object)).clear()"},"variableMap":{"key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:662","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"dfb7d876-4168-11e5-aa65-05a9e145a738","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"status":-1},{"failures":[15,16,17,18,19,20],"tindex":"dfb7ff87-4168-11e5-aa65-7d7488e0d0f9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1036","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.init()"},"status":-1},{"failures":[],"tindex":"dfb7ff88-4168-11e5-aa65-114700063ba5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1114","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty() ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"path":"root","current":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:196","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"dfb7ff89-4168-11e5-aa65-27f1abbce4cd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1142","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47],"tindex":"dfb7ff8a-4168-11e5-aa65-01981d1bbc66","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.ListOrderedSet:240","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.ListOrderedSet<E>.clear()"},"variableMap":{"this":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:344","type":"CtForEachImpl","sourcecode":"for (final java.util.Set<E> java.util.Set<E> : org.apache.commons.collections4.set.CompositeSet<E>.getSets()) {\n    final java.util.Collection<E> java.util.Collection<E> = org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>);\n    if ((java.util.Collection<E>.size()) > 0) {\n        if ((this.org.apache.commons.collections4.set.CompositeSet.SetMutator<E>) == null) {\n            throw new java.lang.UnsupportedOperationException(\"Collision adding composited set with no SetMutator set\");\n        } \n        org.apache.commons.collections4.set.CompositeSet<E>.getMutator().resolveCollision(this, java.util.Set<E>, java.util.Set<E>, java.util.Collection<E>);\n        if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n            throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n        } \n    } \n}"},"status":-1},{"failures":[],"tindex":"dfb8269b-4168-11e5-aa65-a35ceb9cb5a7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:194","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} else if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"o":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:229","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return true;\n} "},"status":0},{"failures":[48],"tindex":"dfb8269c-4168-11e5-aa65-e92f1940455b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:712","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:249","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"dfb8269d-4168-11e5-aa65-9320fff6c67e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:521","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"y","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1176","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[49,50],"tindex":"dfb8269e-4168-11e5-aa65-77fe29524f01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"dfb8269f-4168-11e5-aa65-313c321127dc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NOPClosure:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure))"},"variableMap":{"org.apache.commons.collections4.functors.NOPClosure.INSTANCE":"org.apache.commons.collections4.functors.ExceptionClosure.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ExceptionClosure:48","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.functors.ExceptionClosure.org.apache.commons.collections4.Closure))"},"status":-2},{"failures":[],"tindex":"dfb826a0-4168-11e5-aa65-413662a19f5c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:164","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PredicateTransformer.predicateTransformer(org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"dfb84db1-4168-11e5-aa65-e7b503780be3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:607","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[51],"tindex":"dfb84db2-4168-11e5-aa65-af6004ec34d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:342","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[],"tindex":"dfb84db3-4168-11e5-aa65-47498f424a96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:230","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.queue.CircularFifoQueue<E>.isAtFullCapacity()) {\n    org.apache.commons.collections4.queue.CircularFifoQueue<E>.remove();\n} "},"variableMap":{"this":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:191","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<E>) {\n    java.lang.Object[][int++] = E;\n}"},"status":-2},{"failures":[],"tindex":"dfb84db4-4168-11e5-aa65-4137e268a56e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:109","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.containsKey(java.lang.Object)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}