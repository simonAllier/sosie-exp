{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":65,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":92,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":71,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":1,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":42,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":2,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesClearChangesMap":84,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":5,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":7,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":8,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveChangesMap":97,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMakeMap":82,"org.apache.commons.collections4.map.LazySortedMapTest.testEmptyMapCompatibility":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove1":90,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove2":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRetainAll":95,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":55,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveChangesMap":101,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":6,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":62,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveAll":94,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":41,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":13,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":46,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetClearChangesMap":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":74,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":10,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":69,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":11,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":67,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":30,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRemoveAll":98,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullValue":80,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":31,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetClearChangesMap":86,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":39,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":36,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":35,"org.apache.commons.collections4.map.LazyMapTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":17,"org.apache.commons.collections4.map.StaticBucketMapTest.testFullMapCompatibility":77,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":102,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":15,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":24,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesRemoveChangesMap":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":20,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":22,"org.apache.commons.collections4.map.LazySortedMapTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutNullKey":79,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":27,"org.apache.commons.collections4.map.LazyMapTest.testEmptyMapCompatibility":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":103,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":59,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":73,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":16,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":19,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":104,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":105,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":23,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapClear":64,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":75,"org.apache.commons.collections4.map.Flat3MapTest.testToString":0,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":83,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":53,"org.apache.commons.collections4.map.StaticBucketMapTest.test_get_nullMatchesIncorrectly":66,"org.apache.commons.collections4.map.LazySortedMapTest.testSimpleSerialization":56,"org.apache.commons.collections4.map.LazyMapTest.testSimpleSerialization":60,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":9,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":25,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiClear":63,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetRetainAll":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":51},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],"tindex":"1e95eebf-2e72-11e5-b278-c9cd3e1ca9c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:317","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    final int int = K.hashCode();\n    switch (int) {\n        case 3 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if (((int) == int) && (K.equals(K))) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"1e9615d0-2e72-11e5-b278-7111d9d3011c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:320","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int]"},"status":-2},{"failures":[],"tindex":"1e963ce1-2e72-11e5-b278-c733c242bb57","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl","sourcecode":"if (boolean) {\n    return false;\n} "},"variableMap":{"removed":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:757","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"1e963ce2-2e72-11e5-b278-9b0c6e8d1c84","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:248","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:112","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1)"},"status":-2},{"failures":[],"tindex":"1e963ce3-2e72-11e5-b278-13ef0e5b1361","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:282","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return null;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:207","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n} "},"status":0},{"failures":[54,55,56,57,58,59,60,61],"tindex":"1e963ce4-2e72-11e5-b278-81d8d7f093c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:154","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-1},{"failures":[62],"tindex":"1e9663f5-2e72-11e5-b278-c9e48fc8c852","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"tmpMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:66","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V>"},"status":-1},{"failures":[],"tindex":"1e9663f6-2e72-11e5-b278-85c4649664a6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:88","type":"CtAssignmentImpl","sourcecode":"int[][(int - 1)] = int"},"status":-2},{"failures":[63,64],"tindex":"1e9663f7-2e72-11e5-b278-2fa2cef1170d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:79","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"1e9663f8-2e72-11e5-b278-cb29b979b3e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"isLocked","removed":"isLocked"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:203","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":1},{"failures":[],"tindex":"1e9663f9-2e72-11e5-b278-0141bbf11e9d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1011","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(((\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1)) + \"] Map)\"))"},"status":-2},{"failures":[],"tindex":"1e968b0a-2e72-11e5-b278-eb34f9f90674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:79","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"status":-2},{"failures":[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104],"tindex":"1e968b0b-2e72-11e5-b278-8d6ca4bc03d2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:274","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> == null) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n        return null;\n    } \n    for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == K) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(K)))) {\n            final V V = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V;\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n            return V;\n        } \n    }\n    final org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = new org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>();\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K = K;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V;\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    (org.apache.commons.collections4.map.StaticBucketMap.Lock[][int].int)++;\n}"},"status":-1},{"failures":[],"tindex":"1e96b21c-2e72-11e5-b278-ad0d001c6f1e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:722","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"ListIterator must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")"},"status":-2},{"failures":[],"tindex":"1e96b21d-2e72-11e5-b278-7fd2376d19bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:506","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"h":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:196","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[105],"tindex":"1e96b21e-2e72-11e5-b278-43ed1a677717","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:102","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:62","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate and closure arrays must be the same size\")"},"status":-1},{"failures":[],"tindex":"1e96d92f-2e72-11e5-b278-d3589b5ce789","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:319","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.Map<? extends K, ? extends V>.size()"},"status":-2},{"failures":[],"tindex":"1e96d930-2e72-11e5-b278-17f947c98f0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:467","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<V>emptyOrderedIterator();\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:917","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(size()) == 0) {\n    return org.apache.commons.collections4.iterators.EmptyIterator.<K>emptyIterator();\n} "},"status":-2},{"failures":[],"tindex":"1e96d931-2e72-11e5-b278-59bdd517fa9d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:171","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = java.util.Iterator<E>.next()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"},"diffs":[{"transformation":"1e9663f8-2e72-11e5-b278-cb29b979b3e9","diffs":[{"branches":{"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"],"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"],"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"],"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"],"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"],"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":["org.apache.commons.collections4.iterators.IteratorChain_void_lockChain().e1"]},"type":"branch"}]}]}