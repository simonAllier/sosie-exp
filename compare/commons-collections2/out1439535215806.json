{"failureDictionary":{"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":37,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":1,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":36,"org.apache.commons.collections4.list.TreeListTest.testListEquals":44,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":30,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":40,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":16,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray":75,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":14,"org.apache.commons.collections4.list.TreeListTest.testFullListSerialization":62,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":0,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":80,"org.apache.commons.collections4.list.TreeListTest.testCollectionRemove":71,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":60,"org.apache.commons.collections4.list.TreeListTest.testCollectionSize":74,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemovePrevious":59,"org.apache.commons.collections4.list.TreeListTest.testCollectionClear":65,"org.apache.commons.collections4.list.TreeListTest.testListLastIndexOf":49,"org.apache.commons.collections4.list.TreeListTest.testFullListCompatibility":63,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":19,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":9,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemovePrevious":57,"org.apache.commons.collections4.list.TreeListTest.testCollectionRetainAll":73,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":51,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorNextRemoveNext":58,"org.apache.commons.collections4.list.TreeListTest.testCollectionContains":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":22,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndex":46,"org.apache.commons.collections4.list.TreeListTest.testCollectionIsEmpty":68,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":8,"org.apache.commons.collections4.list.TreeListTest.testListIndexOf":48,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":23,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":24,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":7,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndexBoundsChecking2":52,"org.apache.commons.collections4.list.TreeListTest.testListRemoveByIndex":53,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":64,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":12,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":25,"org.apache.commons.collections4.list.TreeListTest.testListGetByIndexBoundsChecking2":47,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":6,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":26,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":17,"org.apache.commons.collections4.list.TreeListTest.testSerializeDeserializeThenCompare":78,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":20,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":82,"org.apache.commons.collections4.list.TreeListTest.testCollectionIteratorRemove":70,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":4,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":43,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":2,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":81,"org.apache.commons.collections4.list.TreeListTest.testCollectionToArray2":76,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":38,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorByIndex":55,"org.apache.commons.collections4.list.TreeListTest.testListIteratorSet":61,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":33,"org.apache.commons.collections4.list.TreeListTest.testListListIterator":54,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":18,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":3,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":50,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":11,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":32,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndexBoundsChecking2":42,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":27,"org.apache.commons.collections4.list.TreeListTest.testListHashCode":45,"org.apache.commons.collections4.list.TreeListTest.testListListIteratorPreviousRemoveNext":56,"org.apache.commons.collections4.bag.HashBagTest.testObjectEqualsSelf":15,"org.apache.commons.collections4.list.TreeListTest.testCollectionIterator":69,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":41,"org.apache.commons.collections4.list.TreeListTest.testCollectionContainsAll":67,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":79,"org.apache.commons.collections4.bag.TreeBagTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.list.TreeListTest.testCollectionToString":77,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":28,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":31,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":21},"transformations":[{"failures":[],"tindex":"2f501698-4251-11e5-ab4c-17f0f3b2f740","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1816","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.keyvalue.UnmodifiableMapEntry<V, K>(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue() , org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey())"},"variableMap":{"node":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>"},"status":-2},{"failures":[],"tindex":"2f501699-4251-11e5-ab4c-35a1281a0c4f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:765","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"2f50169a-4251-11e5-ab4c-5dde9638af13","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:130","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof org.apache.commons.collections4.keyvalue.DefaultKeyValue) == false) {\n    return false;\n} "},"variableMap":{"obj":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"2f503dab-4251-11e5-ab4c-e5b832188230","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:213","type":"CtLocalVariableImpl","sourcecode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).subMap(K, K)"},"status":-2},{"failures":[],"tindex":"2f503dac-4251-11e5-ab4c-77ecda58984f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl","sourcecode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException ie) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException iae) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}"},"variableMap":{"set":"set1","subSet":"set1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:368","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-2},{"failures":[],"tindex":"2f503dad-4251-11e5-ab4c-2d5a9f2cdc38","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1583","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"prior":"tree"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:737","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-2},{"failures":[],"tindex":"2f503dae-4251-11e5-ab4c-751d38619b90","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:95","type":"CtIfImpl","sourcecode":"if (java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\");\n} "},"variableMap":{"map":"mapToCopy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:862","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> : java.util.Map<? extends org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, ? extends V>.keySet()) {\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.checkKey(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>);\n}"},"status":0},{"failures":[40],"tindex":"2f503daf-4251-11e5-ab4c-63e38669aaf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:349","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[])"},"status":-1},{"failures":[],"tindex":"2f5064c0-4251-11e5-ab4c-d9e2cdd45e78","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:138","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"variableMap":{"key1":"key2","next":"entry","entry":"next","key2":"key1","hashCode":"index","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"2f5064c1-4251-11e5-ab4c-6d0c6267735d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:507","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"left":"predecessor","h":"h","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:538","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"2f5064c2-4251-11e5-ab4c-63c65f36b2c3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:865","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.balance()"},"variableMap":{"s":"root","sAncestor":"root"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:229","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? org.apache.commons.collections4.list.TreeList.AVLNode<E> : org.apache.commons.collections4.list.TreeList.AVLNode<E>.addAll(org.apache.commons.collections4.list.TreeList.AVLNode<E>, int)"},"status":-1},{"failures":[],"tindex":"2f508bd3-4251-11e5-ab4c-a9f38a340f0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 11)"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:517","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"status":-2},{"failures":[],"tindex":"2f508bd4-4251-11e5-ab4c-879ff5f578c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:103","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[79,80,81,82],"tindex":"2f508bd5-4251-11e5-ab4c-2be0bc942070","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:226","type":"CtAssignmentImpl","sourcecode":"int[][int] = int--"},"status":-1},{"failures":[],"tindex":"2f508bd6-4251-11e5-ab4c-7d4c05636f30","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:816","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.keyvalue.MultiKey<?> == null) {\n    throw new java.lang.NullPointerException(\"Key must not be null\");\n} "},"status":-2},{"failures":[],"tindex":"2f508bd7-4251-11e5-ab4c-47e09659a288","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:282","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    return 0;\n} "},"variableMap":{"list":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:607","type":"CtIfImpl","sourcecode":"if (java.lang.Iterable<? super O> instanceof java.util.Set<?>) {\n    return ((java.util.Set<? super O>)(java.lang.Iterable<? super O>)).contains(O) ? 1 : 0;\n} "},"status":0},{"failures":[],"tindex":"2f508bd8-4251-11e5-ab4c-e5f02921744d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:85","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.previous()"},"status":-2},{"failures":[],"tindex":"2f508bd9-4251-11e5-ab4c-65a8a127c18e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-2},{"failures":[],"tindex":"2f50b2ea-4251-11e5-ab4c-ff5737020d08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:830","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.map.MultiKeyMap<K, V>)(super.clone()))"},"status":-2},{"failures":[],"tindex":"2f50b2eb-4251-11e5-ab4c-8bddc1465d71","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}