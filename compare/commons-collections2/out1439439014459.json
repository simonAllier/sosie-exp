{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsFalsePredicate":50,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":9,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":26,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":37,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":23,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":35,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":41,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":34,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":30,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":52,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":10,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":1,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":42,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":43,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":29,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":2,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":20,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":22,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":36,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":25,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":7,"org.apache.commons.collections4.IteratorUtilsTest.testNodeIterator":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":39,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":0,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":18,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":24,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":49,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":47,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":8,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":33,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":28,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":44,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":15,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":27,"org.apache.commons.collections4.PredicateUtilsTest.testUniquePredicate":45,"org.apache.commons.collections4.IteratorUtilsTest.testNodeListIterator":16},"transformations":[{"failures":[],"tindex":"32d7a044-4171-11e5-888b-4d61d5e71295","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorChain:214","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()"},"variableMap":{"currentIterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))"},"status":0},{"failures":[],"tindex":"32d7c755-4171-11e5-888b-9dd5785632e5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:415","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],"tindex":"32d7c756-4171-11e5-888b-7bfbd93c07a6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":-1},{"failures":[14,15],"tindex":"32d7ee67-4171-11e5-888b-d1c2c5bbe411","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1234","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue())"},"status":-1},{"failures":[16,17,18,19],"tindex":"32d7ee68-4171-11e5-888b-f78be845be81","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:74","type":"CtReturnImpl","sourcecode":"return org.w3c.dom.NodeList.item((int)++)"},"status":-1},{"failures":[],"tindex":"32d7ee69-4171-11e5-888b-9fc9188619f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()"},"status":-2},{"failures":[],"tindex":"32d7ee6a-4171-11e5-888b-996124ed5cba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:1153","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object java.lang.Object = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1323","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next()"},"status":-2},{"failures":[20],"tindex":"32d7ee6b-4171-11e5-888b-bb5c3f5b206f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1330","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.FixedSizeMap.fixedSizeMap(java.util.Map<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1364","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.LazyMap.lazyMap(java.util.Map<K, V>, org.apache.commons.collections4.Factory<? extends V>)"},"status":-1},{"failures":[21,22,23,24,25,26,27,28],"tindex":"32d7ee6c-4171-11e5-888b-7b60193220c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"hasNext","removed":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1380","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext()"},"status":-1},{"failures":[],"tindex":"32d8157d-4171-11e5-888b-a7c6326a7e09","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:119","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"32d8157e-4171-11e5-888b-cf68c5ad4e49","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:175","type":"CtReturnImpl","sourcecode":"return null"},"status":0},{"failures":[],"tindex":"32d8157f-4171-11e5-888b-814b5a1b255d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.purgeBeforeWrite()"},"status":0},{"failures":[],"tindex":"32d81580-4171-11e5-888b-2509f4425992","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:240","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:94","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index\")"},"status":-2},{"failures":[29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"32d81581-4171-11e5-888b-edef8748a53c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:98","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"status":-1},{"failures":[45,46,47,48],"tindex":"32d81582-4171-11e5-888b-d7c4657dd2ae","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()"},"status":-2},{"failures":[49],"tindex":"32d81583-4171-11e5-888b-15e5261c4fcd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:586","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.remove(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey())"},"variableMap":{"parent":"map","last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1154","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(java.util.Map.Entry<K, V>.getKey(), java.util.Map.Entry<K, V>.getValue())"},"status":-1},{"failures":[50],"tindex":"32d83c94-4171-11e5-888b-1185931208f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:49","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[51],"tindex":"32d83c95-4171-11e5-888b-ad238b2470cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:165","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.convertKey(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"32d83c96-4171-11e5-888b-b31bdddaefb6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1601","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapEntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:399","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyOrderedIterator.<java.util.Map.Entry<K, V>>emptyOrderedIterator()"},"status":-2},{"failures":[52],"tindex":"32d83c97-4171-11e5-888b-7f1c4c4bf1c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:99","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a value.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:107","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException()"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}