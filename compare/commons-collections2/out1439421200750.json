{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":59,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":78,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":81,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":17,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":38,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":50,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":28,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":82,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":79,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":65,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":67,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":11,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":15,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":27,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":18,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":7,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":63,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":75,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":88,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":31,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":8,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":23,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":47,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":24,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":93,"org.apache.commons.collections4.CollectionUtilsTest.transform2":95,"org.apache.commons.collections4.CollectionUtilsTest.transform1":94,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":62,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":19,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":96,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":87,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":51,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":64,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":3,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":4,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":26,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":53,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":37,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":99,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":1,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":6,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":42,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":73,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":70,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":89,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":33,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":21,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":44,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":71,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":12,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":86,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":10,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":5,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":55,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":58,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":52},"transformations":[{"failures":[],"tindex":"b90b3110-4147-11e5-80ff-87202b9ea6b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{"nextNode":"parent","lastReturnedNode":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:617","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"b90b3111-4147-11e5-80ff-3bfc80e0cb66","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:388","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = java.lang.String;\n} "},"variableMap":{"answer":"key","defaultValue":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"b90b5822-4147-11e5-80ff-6ffbaee060bb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1322","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    if (java.lang.Object == null) {\n        if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n            return false;\n        } \n    } else {\n        if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n            return false;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"b90b5823-4147-11e5-80ff-6f5c4e140d6d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"b90b5824-4147-11e5-80ff-6b094842e49d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:732","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return null;\n} "},"variableMap":{"parent":"current","current":"current","right":"right"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:696","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"b90b5825-4147-11e5-80ff-79433e18ded6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:383","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.Bag<?>.getCount(E)"},"status":-2},{"failures":[],"tindex":"b90b5826-4147-11e5-80ff-c18701ff8911","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:534","type":"CtLocalVariableImpl","sourcecode":"final V V = V"},"status":-2},{"failures":[],"tindex":"b90b7f37-4147-11e5-80ff-d3beaaa13986","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key","length":"hashCode","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:183","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[93],"tindex":"b90b7f38-4147-11e5-80ff-e721a6f4da63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:82","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.List<E> != null)) && ((java.util.List<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.List<E>.toArray()));\n    java.util.List<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.list.TransformedList<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} "},"status":-1},{"failures":[],"tindex":"b90b7f39-4147-11e5-80ff-edc1d4392525","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:353","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated()"},"status":0},{"failures":[],"tindex":"b90b7f3a-4147-11e5-80ff-076c381707fa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:273","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(int)"},"status":-2},{"failures":[],"tindex":"b90b7f3b-4147-11e5-80ff-6b0c49784741","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"length","modifications":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:363","type":"CtForImpl","sourcecode":"for (int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) - 1 ; int >= 0 ; int--) {\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n}"},"status":-2},{"failures":[],"tindex":"b90b7f3c-4147-11e5-80ff-1d9e005e4658","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>));\n    return java.util.ListIterator<?>.hasPrevious();\n} "},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:372","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n        continue;\n    } \n    boolean boolean = false;\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        java.util.Set<java.lang.Object>.add(java.lang.Object);\n        if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n            boolean = true;\n            break;\n        } \n    }\n    if (boolean) {\n        continue;\n    } else {\n        return false;\n    }\n}"},"status":-2},{"failures":[],"tindex":"b90ba64d-4147-11e5-80ff-25bae824a05d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:100","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"status":-2},{"failures":[94,95],"tindex":"b90ba64e-4147-11e5-80ff-cdb3ba84f12a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:798","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<C> != null) && (org.apache.commons.collections4.Transformer<? super C, ? extends C> != null)) {\n    if (java.util.Collection<C> instanceof java.util.List<?>) {\n        final java.util.List<C> java.util.List<C> = ((java.util.List<C>)(java.util.Collection<C>));\n        for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n            java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n        }\n    } else {\n        final java.util.Collection<C> java.util.Collection<C> = org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.collect(java.util.Collection<C>, org.apache.commons.collections4.Transformer<? super C, ? extends C>);\n        java.util.Collection<C>.clear();\n        java.util.Collection<C>.addAll(java.util.Collection<C>);\n    }\n} "},"status":-1},{"failures":[],"tindex":"b90ba64f-4147-11e5-80ff-bd50c59d474a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:522","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E E = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"b90ba650-4147-11e5-80ff-47e5fd35260f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:76","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()"},"status":0},{"failures":[],"tindex":"b90ba651-4147-11e5-80ff-15244dff3973","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:358","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[96,97,98,99],"tindex":"b90ba652-4147-11e5-80ff-91db2ac16ddf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"b90ba653-4147-11e5-80ff-c5e2f016c878","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:492","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceKeySetIterator<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TreeList<E>.listIterator(0)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}