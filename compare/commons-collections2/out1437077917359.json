{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":41,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":50,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":101,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":119,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":85,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":72,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapHashCode":93,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":24,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":111,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsValue":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":121,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":82,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapEquals":98,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":34,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapIsEmpty":94,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapToString":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPutAll":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":11,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapIsEmpty":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":0,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapHashCode":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":16,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":68,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":31,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":52,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":62,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapSize":104,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":84,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":92,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":54,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapEquals":107,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":44,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":3,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":37,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapSize":95,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":6,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":120,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":17,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":114,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":23,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":26,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":79,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testMapContainsKey":96,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":113,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":56,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":115,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":12,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":112,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":43,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.testFullMapCompatibility":60,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":46,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":14,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":118,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapToString":108,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":64,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":91,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":51,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":19,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":88,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":4,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":39,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":55,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsValue":106,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":86,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapPut":109,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapContainsKey":105,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":13,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":87,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":45,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":100,"org.apache.commons.collections4.trie.PatriciaTrieTest.testFullMapCompatibility":61},"transformations":[{"failures":[0,1,2,3],"tindex":"d75004d8-2bf7-11e5-8ec4-a9fcf5ca5f8c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl","sourcecode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"variableMap":{"list":"setOrder"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:184","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.clear()"},"status":-1},{"failures":[],"tindex":"d75004d9-2bf7-11e5-8ec4-6dbd08857525","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.FixedSizeMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:176","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"Map is empty\")"},"status":-2},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"d7502bea-2bf7-11e5-8ec4-af1be20117d0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1121","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:378","type":"CtAssignmentImpl","sourcecode":"int = (31 * int) + (E == null ? 0 : E.hashCode())"},"status":-1},{"failures":[],"tindex":"d7502beb-2bf7-11e5-8ec4-fb26e4c4ac93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:459","type":"CtWhileImpl","sourcecode":"while (true) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n}"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58],"tindex":"d7502bec-2bf7-11e5-8ec4-f5a9120629e1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:282","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value has been returned yet\");\n} "},"variableMap":{"lastReturned":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"status":-1},{"failures":[59,60,61],"tindex":"d7502bed-2bf7-11e5-8ec4-57fc56339108","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1350","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2404","type":"CtLocalVariableImpl","sourcecode":"int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77],"tindex":"d7502bee-2bf7-11e5-8ec4-a9bba3e8445c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:959","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n} else {\n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } else {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            }\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"d75052ff-2bf7-11e5-8ec4-d7d0a41579f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:300","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[78],"tindex":"d7505300-2bf7-11e5-8ec4-613a0cee808f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"foundCurrentElement","removed":"foundCurrentElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:382","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"d7505301-2bf7-11e5-8ec4-33578977ee8b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AnyPredicate:81","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} "},"variableMap":{"length":"length","preds":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AllPredicate:60","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.coerce(org.apache.commons.collections4.Predicate<? super T>[][0]);\n} "},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114],"tindex":"d7507a12-2bf7-11e5-8ec4-09bf59abc6c9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:701","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"d7507a13-2bf7-11e5-8ec4-99eca4e04433","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:523","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-2},{"failures":[],"tindex":"d7507a14-2bf7-11e5-8ec4-77cf0c28cc4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return (java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"length":"hashCode","object":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:582","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"d750a125-2bf7-11e5-8ec4-ed6fabd56ee2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:219","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.remove(int)"},"status":-2},{"failures":[115,116,117,118,119,120],"tindex":"d750a126-2bf7-11e5-8ec4-21426689d35c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>"},"variableMap":{"tmpMap":"sub"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:209","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)"},"status":-1},{"failures":[],"tindex":"d750a127-2bf7-11e5-8ec4-ed2676649210","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NOPClosure:47","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.Closure))"},"status":-2},{"failures":[],"tindex":"d750a128-2bf7-11e5-8ec4-ed2f4d2ecd75","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.PredicatedList:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().remove(int)"},"variableMap":{"this":"setOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:273","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.get(int)"},"status":-2},{"failures":[121,122,49,50],"tindex":"d750a129-2bf7-11e5-8ec4-0fd644464872","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl","sourcecode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}"},"variableMap":{"in":"in","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:158","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[0,1,2,3],"tindex":"d750a12a-2bf7-11e5-8ec4-d16d9438bb04","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().clear()"},"status":-1},{"failures":[],"tindex":"d750a12b-2bf7-11e5-8ec4-ab8827911eb9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:138","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyIterator.<E>resettableEmptyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:245","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[])"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}