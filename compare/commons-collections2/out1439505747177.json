{"failureDictionary":{"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":240,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToString":244,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsSelf":211,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":7,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":111,"org.apache.commons.collections4.CollectionUtilsTest.testSubtractWithPredicate":350,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":24,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailDoubleRemove":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":188,"org.apache.commons.collections4.bag.TreeBagTest.testBagContainsAll":89,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":200,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":330,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionSize":78,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":303,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailNoMore":257,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":214,"org.apache.commons.collections4.bag.HashBagTest.testBagContains":286,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":218,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":141,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":339,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":239,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsSelf":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":138,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":206,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":79,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":280,"org.apache.commons.collections4.CollectionUtilsTest.get":13,"org.apache.commons.collections4.bag.TransformedBagTest.testBagSize":216,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorRemoveProtectsInvariants":294,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":210,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":341,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagSize":127,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":356,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":23,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":30,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsHashBag":137,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":267,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailDoubleRemove":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":169,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":64,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":39,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":98,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":170,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":337,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":33,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":186,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":269,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArray":223,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":105,"org.apache.commons.collections4.CollectionUtilsTest.testIsProperSubCollection":348,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":233,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":327,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorRemoveProtectsInvariants":46,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArray":47,"org.apache.commons.collections4.bag.TreeBagTest.testBagEquals":99,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":273,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":203,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":83,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":73,"org.apache.commons.collections4.bag.HashBagTest.testBagIterator":290,"org.apache.commons.collections4.bag.TreeBagTest.testBagHashCode":101,"org.apache.commons.collections4.CollectionUtilsTest.testSubtract":349,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":315,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEquals":225,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":272,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToString":316,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagSize":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":160,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":265,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":143,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":106,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":304,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionSize":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":125,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":129,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":48,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":162,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemove":123,"org.apache.commons.collections4.bag.HashBagTest.testBagEquals":297,"org.apache.commons.collections4.bag.HashBagTest.testBagContainsAll":287,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":306,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":345,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFail":291,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":59,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":231,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailDoubleRemove":293,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagSize":40,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionSize":152,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":197,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFail":256,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEqualsSelf":122,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":177,"org.apache.commons.collections4.bag.TransformedBagTest.testBagEqualsHashBag":226,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorFailDoubleRemove":258,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":343,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":61,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToString":155,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":331,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":60,"org.apache.commons.collections4.SetUtilsTest.testHashCode":28,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":107,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":305,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":250,"org.apache.commons.collections4.CollectionUtilsTest.getFromPrimativeArray":15,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":235,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":57,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":202,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":135,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnmodifiable":318,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":301,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":311,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":121,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":309,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":183,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorRemoveProtectsInvariants":133,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":144,"org.apache.commons.collections4.bag.TreeBagTest.testBagContains":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":116,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":165,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":254,"org.apache.commons.collections4.bag.HashBagTest.testBagRemove":284,"org.apache.commons.collections4.bag.HashBagTest.testBagToArray":295,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToString":68,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":76,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":234,"org.apache.commons.collections4.bag.HashBagTest.testBagIteratorFailNoMore":292,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":238,"org.apache.commons.collections4.bag.HashBagTest.testCollectionSize":313,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":150,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":264,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":91,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":268,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":228,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":27,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":29,"org.apache.commons.collections4.CollectionUtilsTest.getFromIterable":351,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":208,"org.apache.commons.collections4.queue.PredicatedQueueTest.testGet":17,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":142,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":317,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":323,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemoveAll":213,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":4,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorRemoveProtectsInvariants":96,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":9,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFailNoMore":131,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":344,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":145,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":42,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":199,"org.apache.commons.collections4.bag.HashBagTest.testBagRemoveAll":285,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":310,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":342,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":126,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":53,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":314,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":67,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailDoubleRemove":95,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":52,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArray":260,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":252,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":191,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionSize":326,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":77,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":320,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":232,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":261,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":161,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":190,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":347,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":354,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":157,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":353,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":178,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":31,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailNoMore":220,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsHashBag":298,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":113,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":21,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnmodifiable":70,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArray":97,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":247,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":173,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemove":86,"org.apache.commons.collections4.bag.TreeBagTest.testBagRemoveAll":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":114,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":22,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":32,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":198,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionSize":241,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":180,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRemove":212,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":276,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":140,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":128,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEquals":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":166,"org.apache.commons.collections4.bag.TreeBagTest.testBagSize":90,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIteratorFail":130,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":153,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":159,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":168,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsHashBag":263,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":338,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":215,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":321,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":80,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":19,"org.apache.commons.collections4.bag.HashBagTest.testBagAdd":282,"org.apache.commons.collections4.bag.HashBagTest.testBagHashCode":299,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":174,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":205,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":189,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":148,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":156,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":187,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagEquals":136,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":224,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.bag.TreeBagTest.testBagAdd":84,"org.apache.commons.collections4.bag.TreeBagTest.testBagIterator":92,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":117,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":11,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":196,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":149,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFailNoMore":44,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionSize":278,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":3,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagEqualsSelf":248,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":334,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":277,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":54,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":193,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":296,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":154,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":139,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFailNoMore":94,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":69,"org.apache.commons.collections4.ListUtilsTest.testSubtract":355,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsSelf":35,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToString":335,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":58,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":332,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToString":118,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":217,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArray":134,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":37,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":108,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":71,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":151,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":333,"org.apache.commons.collections4.CollectionUtilsTest.get1":14,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":251,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToString":195,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorRemoveProtectsInvariants":222,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":237,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":20,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":82,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":336,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":322,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":175,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":325,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.bag.HashBagTest.testBagSize":288,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":75,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":12,"org.apache.commons.collections4.bag.PredicatedBagTest.testIllegalDecorate":246,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":62,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":308,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":184,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":236,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":271,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":182,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":245,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":340,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemove":36,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":324,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":167,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":307,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":312,"org.apache.commons.collections4.bag.TreeBagTest.testBagIteratorFail":93,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":209,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFailDoubleRemove":221,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToString":81,"org.apache.commons.collections4.CollectionUtilsTest.getFromObject":16,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":300,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":147,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":279,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":8,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":119,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIteratorFail":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":243,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":0,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIteratorFail":43,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":109,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":227,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToString":281,"org.apache.commons.collections4.CollectionUtilsTest.cardinality":352,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":112,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIteratorRemoveProtectsInvariants":259,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":110,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":266,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEqualsHashBag":50,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":163,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagEquals":49,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemove":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRemoveAll":124,"org.apache.commons.collections4.bag.HashBagTest.testBagEqualsSelf":283,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":41,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":207,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":1,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":204,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionSize":65,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":270,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToString":329,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":302,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":346,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":56,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionSize":194,"org.apache.commons.collections4.bag.TreeBagTest.testBagEqualsHashBag":100,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":74,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":328,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":242},"transformations":[{"failures":[],"tindex":"92a4265f-420c-11e5-b9e3-4df60f736e70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1160","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue())"},"status":-2},{"failures":[0,1,2],"tindex":"92a44d70-420c-11e5-b9e3-47e68f56ee9a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:224","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsValue(java.lang.Object)) {\n        return true;\n    } \n}"},"status":-1},{"failures":[],"tindex":"92a44d71-420c-11e5-b9e3-7b1b87f1b1c0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:76","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1140","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= java.util.Collection<C>.add(java.util.Enumeration<? extends C>.nextElement())"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11],"tindex":"92a44d72-420c-11e5-b9e3-db0c2d173e53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:814","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:803","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[12,13,14,15,16],"tindex":"92a44d73-420c-11e5-b9e3-ef1fb9f49bd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[17,18,19],"tindex":"92a44d74-420c-11e5-b9e3-e1c067d30a4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-1},{"failures":[20,21,22,23,24,25,26],"tindex":"92a47485-420c-11e5-b9e3-9fe7b3fcb7f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:669","type":"CtOperatorAssignmentImpl","sourcecode":"int <<= 1"},"variableMap":{"newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:370","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-1},{"failures":[],"tindex":"92a47486-420c-11e5-b9e3-e3fd375fe6f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:988","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.Values<V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this);\n} "},"status":-2},{"failures":[],"tindex":"92a47487-420c-11e5-b9e3-0fed0d150113","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[27],"tindex":"92a47488-420c-11e5-b9e3-078b7a869654","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:141","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")"},"status":-1},{"failures":[28],"tindex":"92a47489-420c-11e5-b9e3-eb0fb3daa5d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","newCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:146","type":"CtForEachImpl","sourcecode":"for (final T T : java.util.Collection<T>) {\n    if (T != null) {\n        int += T.hashCode();\n    } \n}"},"status":-1},{"failures":[],"tindex":"92a4748a-420c-11e5-b9e3-61a128b8f43b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:267","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"status":0},{"failures":[],"tindex":"92a4748b-420c-11e5-b9e3-538c69b44389","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:827","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"variableMap":{"node":"deletedNode","rightChild":"replacement","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:964","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"92a49b9c-420c-11e5-b9e3-55c973cb86e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:596","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<E>.hasNext()) {\n    java.lang.StringBuilder.append(',');\n} "},"status":0},{"failures":[],"tindex":"92a49b9d-420c-11e5-b9e3-99f64e8c1585","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:574","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[29,30,31,32],"tindex":"92a49b9e-420c-11e5-b9e3-a5191c3b82a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1645","type":"CtThrowImpl","sourcecode":"throw new java.util.ConcurrentModificationException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:230","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"))"},"status":-1},{"failures":[],"tindex":"92a49b9f-420c-11e5-b9e3-f9a2a063ae94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:186","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.NodeCachingLinkedList<E>.getNodeFromCache()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:466","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.createNode(E)"},"status":-2},{"failures":[],"tindex":"92a49ba0-420c-11e5-b9e3-439dec961faf","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:331","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"next","prev":"next","n":"next"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:338","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-2},{"failures":[],"tindex":"92a49ba1-420c-11e5-b9e3-5b0f3b5d4250","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:700","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356],"tindex":"92a510d2-420c-11e5-b9e3-5757b2bff098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:258","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}