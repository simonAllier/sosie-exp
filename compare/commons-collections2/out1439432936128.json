{"failureDictionary":{"org.apache.commons.collections4.map.SingletonMapTest.testValuesRemoveChangesMap":16,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesClearChangesMap":82,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastEntrySet":95,"org.apache.commons.collections4.map.SingletonMapTest.testValuesIteratorRemoveChangesMap":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":56,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":62,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":103,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":63,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesClearChangesMap":91,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEmptyMapCompatibility":25,"org.apache.commons.collections4.map.HashedMapTest.testEmptyMapCompatibility":37,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastKeySet":78,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testEmptyMapCompatibility":33,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesClearChangesMap":73,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetClearChangesMap":75,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastValues":97,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":1,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testSingletonIteratorRemove":18,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":30,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testFailFastKeySet":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":3,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFullMapCompatibility":26,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":8,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetClearChangesMap":84,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":32,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":72,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":64,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testEmptyIterator":19,"org.apache.commons.collections4.map.HashedMapTest.testFullMapCompatibility":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":52,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":66,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetClearChangesMap":92,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":29,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":71,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":89,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":50,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":86,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":0,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastEntrySet":77,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":42,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiClear":76,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":12,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":57,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesClearChangesMap":100,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetClearChangesMap":93,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":46,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":58,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":81,"org.apache.commons.collections4.iterators.SingletonIteratorTest.testRemove":20,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":4,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":47,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":21,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiClear":94,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":48,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":2,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClear":85,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastKeySet":87,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":22,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetClearChangesMap":101,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":90,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastKeySet":69,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":54,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":7,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastValues":88,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":39,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetClearChangesMap":83,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":15,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":34,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClear":67,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":51,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetClearChangesMap":74,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetClearChangesMap":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testFailFastValues":79,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastValues":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":43},"transformations":[{"failures":[],"tindex":"0bdf9d61-4163-11e5-8bd6-7768089cc810","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:70","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[],"tindex":"0bdf9d62-4163-11e5-8bd6-95bc04a9abd6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl","sourcecode":"this.int = --(this.int)"},"variableMap":{"index":"hash2","lastItemIndex":"hash2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:412","type":"CtAssignmentImpl","sourcecode":"int = int = int = 0"},"status":0},{"failures":[],"tindex":"0bdf9d63-4163-11e5-8bd6-e14a311d4682","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:263","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.modify()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:906","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":0},{"failures":[],"tindex":"0bdfc474-4163-11e5-8bd6-f3e299adc674","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1062","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> : java.util.Map<K, V>.entrySet()) {\n    java.util.Map<V, K>.put(java.util.Map.Entry<K, V>.getValue(), java.util.Map.Entry<K, V>.getKey());\n}"},"status":-2},{"failures":[],"tindex":"0bdfc475-4163-11e5-8bd6-dd925fe4f191","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1164","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    return null;\n} "},"variableMap":{"node":"parent","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1200","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n} else {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    while (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) && (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n        return null;\n    } \n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n                return null;\n            } else {\n                return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n            }\n        } else {\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        }\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"0bdfc476-4163-11e5-8bd6-e57f918e23b2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:952","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.KeySet<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:102","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.SynchronizedBag.SynchronizedBagSet(java.util.Set<E> , java.lang.Object)"},"status":-2},{"failures":[],"tindex":"0bdfeb87-4163-11e5-8bd6-8dd8f0a9a307","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"variableMap":{"pos":"d","index":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:190","type":"CtIfImpl","sourcecode":"if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n    int[][int] = int[][(int + 1)];\n} else {\n    int[][int] = (int[][(int - 1)]) + 1;\n}"},"status":0},{"failures":[],"tindex":"0bdfeb88-4163-11e5-8bd6-f9112f71d152","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:359","type":"CtIfImpl","sourcecode":"if ((java.util.List<?>.size()) != org.apache.commons.collections4.list.AbstractLinkedList<E>.(size())) {\n    return false;\n} "},"status":0},{"failures":[0,1],"tindex":"0bdfeb89-4163-11e5-8bd6-c968eab589bc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"isLocked":"hasNext"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1391","type":"CtAssignmentImpl","sourcecode":"boolean = org.apache.commons.collections4.MapIterator<?, ?>.hasNext()"},"status":-1},{"failures":[2],"tindex":"0bdfeb8a-4163-11e5-8bd6-5ff7b7dc9815","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:736","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = null"},"variableMap":{"value":"otherValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1159","type":"CtAssignmentImpl","sourcecode":"java.lang.Object = java.util.Map<?, ?>.get(K)"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14],"tindex":"0bdfeb8b-4163-11e5-8bd6-fdac2e463e56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:254","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    return false;\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl","sourcecode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} "},"status":-1},{"failures":[],"tindex":"0bdfeb8c-4163-11e5-8bd6-776594366ba7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:377","type":"CtReturnImpl","sourcecode":"return "},"status":0},{"failures":[15],"tindex":"0bdfeb8d-4163-11e5-8bd6-b19f520a79e0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException(\"The list must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:78","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"status":-1},{"failures":[16,17,18,19,20],"tindex":"0be0129e-4163-11e5-8bd6-410301149bd7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:88","type":"CtIfImpl","sourcecode":"if ((!(boolean)) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"removed":"removed","beforeFirst":"beforeFirst"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:105","type":"CtIfImpl","sourcecode":"if (boolean) {\n    if ((boolean) || (boolean)) {\n        throw new java.lang.IllegalStateException();\n    } \n    E = null;\n    boolean = true;\n} else {\n    throw new java.lang.UnsupportedOperationException();\n}"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"0be0129f-4163-11e5-8bd6-5d1d4c37f182","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:61","type":"CtIfImpl","sourcecode":"if (((((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) || ((int % (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) != 0)) {\n    throw new java.lang.IllegalArgumentException(\"The offsets and lengths must be at Character boundaries\");\n} "},"variableMap":{"offsetInBits":"size","lengthInBits":"size","org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"size","otherOffsetInBits":"size","otherLengthInBits":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1266","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(K, V);\n}"},"status":-1},{"failures":[],"tindex":"0be012a0-4163-11e5-8bd6-eb39cbbd18db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1205","type":"CtReturnImpl","sourcecode":"return (java.util.Map<?, ?> == null) || (java.util.Map<?, ?>.isEmpty())"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66],"tindex":"0be012a1-4163-11e5-8bd6-a13a8be00c78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:440","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    int += E == null ? 0 : E.hashCode();\n}"},"status":-1},{"failures":[67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102],"tindex":"0be012a2-4163-11e5-8bd6-bfce9b8cf968","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.clear()"},"status":-1},{"failures":[103],"tindex":"0be012a3-4163-11e5-8bd6-3f28d47d3e02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:782","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"0be012a4-4163-11e5-8bd6-1f52daed73fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:166","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}