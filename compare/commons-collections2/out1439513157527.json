{"failureDictionary":{"org.apache.commons.collections4.list.TreeListTest.testAddMultiple":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":0,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":37,"org.apache.commons.collections4.list.TreeListTest.testBugCollections447":13,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":49,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":48,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":27,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":5,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":24,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":39,"org.apache.commons.collections4.list.TreeListTest.testListIteratorAdd":16,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":25,"org.apache.commons.collections4.list.TreeListTest.testInsertBefore":11,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.list.TreeListTest.testRemove":10,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":28,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":22,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":6,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndex":4,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":29,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":38,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking":2,"org.apache.commons.collections4.map.PredicatedMapTest.testPut":8,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":18,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":46,"org.apache.commons.collections4.list.TreeListTest.testCollectionAdd":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":23,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":45,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testPut":7,"org.apache.commons.collections4.list.TreeListTest.testListAddByIndex":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":19,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":44,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":40,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.set.CompositeSetTest.testContains":35,"org.apache.commons.collections4.list.TreeListTest.testListSetByIndexBoundsChecking2":3,"org.apache.commons.collections4.list.TreeListTest.testBug35258":12,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":32,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":33,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareEquals":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":43,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":36,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":14,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":47,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":42,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":31,"org.apache.commons.collections4.list.TreeListTest.testIndexOf":1},"transformations":[{"failures":[0],"tindex":"d38ff5dd-421d-11e5-b538-43dede591e51","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:189","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"must call next() or previous() before a call to set()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:277","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"status":-1},{"failures":[1,2,3,4],"tindex":"d3901cee-421d-11e5-b538-79b2858cf092","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:244","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":-1},{"failures":[5,6],"tindex":"d3901cef-421d-11e5-b538-934ebdf8a694","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1196","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"must have come from somewhere!\");\n} "},"variableMap":{"start":"h","predecessor":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[],"tindex":"d3901cf0-421d-11e5-b538-95a2c2b2fb83","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:161","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[7,8],"tindex":"d3904401-421d-11e5-b538-034f3c10780b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedMap:161","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot set value - Predicate rejected it\")"},"status":-1},{"failures":[],"tindex":"d3904402-421d-11e5-b538-ab7f9214c47b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:222","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[],"tindex":"d3904403-421d-11e5-b538-65fb7ed1ff06","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2357","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"next":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:200","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[9,10,11,1,12,13,14,15,16,17],"tindex":"d3904404-421d-11e5-b538-ffe9134a15b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:203","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = new org.apache.commons.collections4.list.TreeList.AVLNode<E>(int , E , null , null);\n} else {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.insert(int, E);\n}"},"status":-1},{"failures":[],"tindex":"d3904405-421d-11e5-b538-932edadfae62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:374","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('=')"},"status":0},{"failures":[],"tindex":"d3904406-421d-11e5-b538-57fd6223fe93","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1035","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} "},"variableMap":{"found":"root","this":"this","bitIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:971","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , null , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    int -= 2;\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":0},{"failures":[18],"tindex":"d3906b17-421d-11e5-b538-4968e85c090f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:156","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-1},{"failures":[],"tindex":"d3906b18-421d-11e5-b538-7753abd98ef3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:88","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"d3906b19-421d-11e5-b538-1b90bb15a033","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:627","type":"CtIfImpl","sourcecode":"if (int <= int) {\n    return ;\n} "},"status":0},{"failures":[],"tindex":"d3906b1a-421d-11e5-b538-91986f5d7ef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:567","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder(128).append('{').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getKey()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getKey())).append('=').append((org.apache.commons.collections4.map.SingletonMap<K, V>.(getValue()) == (this) ? \"(this Map)\" : org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()))"},"status":0},{"failures":[],"tindex":"d3906b1b-421d-11e5-b538-2d3e912f0b0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"variableMap":{"node":"node","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-2},{"failures":[],"tindex":"d3906b1c-421d-11e5-b538-e37252958ec1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:144","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(int).getKey()"},"status":-2},{"failures":[19,20,21,22,23],"tindex":"d390922d-421d-11e5-b538-4710ed64b42f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:861","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"status":-1},{"failures":[24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"d390922e-421d-11e5-b538-2b1522ca42c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:130","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[44,45,46,47,48,49],"tindex":"d390922f-421d-11e5-b538-4b50c723095d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:230","type":"CtIfImpl","sourcecode":"if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n    if ((int[][int]) <= (int[][(int + int)])) {\n        return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n    } \n} "},"variableMap":{"vUp":"vUp","start1":"k","d":"start1","vDown":"vUp","delta":"start2","end2":"k","this":"this","i":"end1","end1":"end2","k":"i","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"status":-1},{"failures":[50],"tindex":"d3909230-421d-11e5-b538-bd9f900095c5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.TruePredicate.truePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ComparatorPredicate<T>.org.apache.commons.collections4.functors.ComparatorPredicate.comparatorPredicate(T, java.util.Comparator<T>, org.apache.commons.collections4.functors.ComparatorPredicate.Criterion.org.apache.commons.collections4.functors.ComparatorPredicate.Criterion)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}