{"failureDictionary":{"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":91,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":34,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":122,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubList":74,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":44,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":18,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":96,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":132,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":135,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":32,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testClear":76,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorAdd":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":84,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicate":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":114,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":90,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIterator":82,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIterator":95,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":120,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":66,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetIteratorRemoveChangesMap":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":131,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":72,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":118,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":27,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddMiddle":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":67,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":80,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":117,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":119,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":94,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":107,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiable":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":22,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSet":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":116,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":71,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":128,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":86,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":105,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":92,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":134,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorAdd":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":89,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":110,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIterator":121,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListRemove":61,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSubListAddEnd":75,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":129,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":123,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":85,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":106,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveFirst":87,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveByIndex":79,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":109,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":125,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":14,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":35,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":133,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":130,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemove":78,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":102,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":108,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":112,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":37,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":124,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveFirst":113,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":98,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIsEmpty":81,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":101,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":50},"transformations":[{"failures":[0,1],"tindex":"77679580-41f8-11e5-9daa-21660197f5fa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1862","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:139","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"77679581-41f8-11e5-9daa-b326e5dbbbc6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"chainExhausted","removed":"chainExhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[2],"tindex":"7767bc92-41f8-11e5-9daa-43610a28d7f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:598","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.getKey())"},"variableMap":{"n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:294","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V = V"},"status":-1},{"failures":[3,4,5],"tindex":"7767bc93-41f8-11e5-9daa-972f54be13e7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:157","type":"CtIfImpl","sourcecode":"if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    return int;\n} "},"variableMap":{"current":"value","n":"i","object":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:146","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.isEqualValue(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue(), java.lang.Object)) {\n    return int;\n} "},"status":-1},{"failures":[],"tindex":"7767bc94-41f8-11e5-9daa-8751e827d35f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:666","type":"CtAssignmentImpl","sourcecode":"int = org.apache.commons.collections4.map.AbstractHashedMap.int"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"i","newCapacity":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:219","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int - 1)]"},"status":-2},{"failures":[],"tindex":"7767bc95-41f8-11e5-9daa-7b74225a9181","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:155","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[6,7],"tindex":"7767bc96-41f8-11e5-9daa-774145a5c2f2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"start","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1201","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-1},{"failures":[8,9,10,11,12,13,14,15,16,17],"tindex":"7767e3a7-41f8-11e5-9daa-8980d73b1d30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:835","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"variableMap":{"node":"x","rightChild":"y","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"status":-1},{"failures":[18,19],"tindex":"7767e3a8-41f8-11e5-9daa-9171e1ac1c0b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate2","predicate2":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[],"tindex":"7767e3a9-41f8-11e5-9daa-b1952882e4cb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:81","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String)"},"status":0},{"failures":[],"tindex":"7767e3aa-41f8-11e5-9daa-811eb51d2e37","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:133","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"7767e3ab-41f8-11e5-9daa-cd4530b3ee14","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:312","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[],"tindex":"77680abc-41f8-11e5-9daa-4b8ce1a6dc4b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:599","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}"},"variableMap":{"node":"currentNode","this":"this","rval":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:886","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n} else {\n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    }\n}"},"status":0},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"776831cd-41f8-11e5-9daa-f5cdd1350598","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"variableMap":{"canRemove":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"status":-1},{"failures":[32,33,34,35,36,37,38,2,39,40],"tindex":"776831ce-41f8-11e5-9daa-0baa330eab7b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"variableMap":{"h":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:430","type":"CtOperatorAssignmentImpl","sourcecode":"int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode()"},"status":-1},{"failures":[],"tindex":"776831cf-41f8-11e5-9daa-078368a9ed56","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} "},"variableMap":{"iterator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":0},{"failures":[],"tindex":"776858e0-41f8-11e5-9daa-51aa0e61f6d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:237","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,7,50,51,52,53,54,55,56,57],"tindex":"776858e1-41f8-11e5-9daa-6157b3f18aa1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,4,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,5,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135],"tindex":"776858e2-41f8-11e5-9daa-d9f6dd2712ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:562","type":"CtForImpl","sourcecode":"for (int int = int ; int > int ; int--) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n}"},"status":-1},{"failures":[],"tindex":"776858e3-41f8-11e5-9daa-452eef3a8a97","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:273","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:59","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}