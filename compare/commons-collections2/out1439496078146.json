{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":25,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":22,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":23,"org.apache.commons.collections4.keyvalue.DefaultMapEntryTest.testToString":50,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicateEx":38,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":47,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":20,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":16,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullLabel":4,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":17,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":46,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":18,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testToString":51,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx2":41,"org.apache.commons.collections4.PredicateUtilsTest.testOnePredicateEx3":42,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":1,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrint":12,"org.apache.commons.collections4.keyvalue.UnmodifiableMapEntryTest.testToString":52,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementsInArrayToGetInstance":33,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testEmptyListIteratorIsIndeedEmpty":57,"org.apache.commons.collections4.map.LRUMapTest.testLRU":0,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx2":39,"org.apache.commons.collections4.PredicateUtilsTest.testAllPredicateEx3":40,"org.apache.commons.collections4.MapUtilsTest.testDebugAndVerbosePrintCasting":3,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullLabel":5,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testNextKey":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":19,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":27,"org.apache.commons.collections4.map.ListOrderedMapTest.testNextKey":53,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKey":7,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":44,"org.apache.commons.collections4.list.TreeListTest.testCollectionAddAll":30,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":14,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":43,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx2":34,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":49,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx3":35,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":2,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":24,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":48,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testWalkForwardAndBack":58,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":15,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":36,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap1":9,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":26,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":37,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":28,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap1":8,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKeyToMap2":10,"org.apache.commons.collections4.MapUtilsTest.testDebugPrint":13,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintNullKeyToMap2":11,"org.apache.commons.collections4.iterators.SingletonListIteratorTest.testIterator":56,"org.apache.commons.collections4.list.TreeListTest.testIterationOrderAfterAddAll":29,"org.apache.commons.collections4.functors.AllPredicateTest.nullElementInArrayToGetInstance":32,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":45,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintNullKey":6,"org.apache.commons.collections4.map.ListOrderedMap2Test.testNextKey":55,"org.apache.commons.collections4.ArrayStackTest.testPushPeekPop":31},"transformations":[{"failures":[],"tindex":"0f72f3b3-41f6-11e5-835e-477ae3d073d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:973","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}"},"status":-2},{"failures":[0,1,2],"tindex":"0f731ac4-41f6-11e5-835e-3126869601ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"status":-1},{"failures":[],"tindex":"0f7341d5-41f6-11e5-835e-9ff018fc2c43","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()"},"status":-2},{"failures":[],"tindex":"0f7341d6-41f6-11e5-835e-0bc811c909f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1324","type":"CtReturnImpl","sourcecode":"return true"},"status":0},{"failures":[],"tindex":"0f7341d7-41f6-11e5-835e-5fbc64c85182","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1039","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(org.apache.commons.collections4.MapUtils.java.lang.String)"},"variableMap":{"org.apache.commons.collections4.MapUtils.INDENT_STRING":"data","out":"data"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:569","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(((T)(java.lang.Object)), ((T)(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))));\n    if (int == 0) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        break;\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = int < 0 ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}"},"status":-2},{"failures":[],"tindex":"0f7341d8-41f6-11e5-835e-d3dba5f996cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:568","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"0f7341d9-41f6-11e5-835e-c5c09658a94a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:110","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get(int)"},"variableMap":{"this":"this","m":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:125","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.remove((int - 1))"},"status":-1},{"failures":[],"tindex":"0f7341da-41f6-11e5-835e-25b0b0dbf7e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"total","index":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:569","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger> : java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.entrySet()) {\n    final E E = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getKey();\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue();\n    int += (E == null ? 0 : E.hashCode()) ^ (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int);\n}"},"status":-2},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"0f7368eb-41f6-11e5-835e-65672fea01cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1097","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    (int)--;\n} "},"variableMap":{"nextIndex":"i","currentIndex":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} "},"status":-1},{"failures":[],"tindex":"0f7368ec-41f6-11e5-835e-1fea4f996395","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:130","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.this(K[], true)"},"status":-2},{"failures":[],"tindex":"0f7368ed-41f6-11e5-835e-b9316006cb0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:267","type":"CtLocalVariableImpl","sourcecode":"V V = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:608","type":"CtLocalVariableImpl","sourcecode":"final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue()"},"status":-2},{"failures":[],"tindex":"0f7368ee-41f6-11e5-835e-67bd7f7de424","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl","sourcecode":"int int = (\"ConstantTransformer\".hashCode()) << 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:450","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(K, K, K, K)"},"status":-2},{"failures":[],"tindex":"0f7368ef-41f6-11e5-835e-db059cbf3ad2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:171","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(null)"},"status":0},{"failures":[44,45,46,47,48,49],"tindex":"0f7368f0-41f6-11e5-835e-27bb5e258fc5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"i","listSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:270","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)))"},"status":-1},{"failures":[],"tindex":"0f7368f1-41f6-11e5-835e-ff0de8f3a3a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:495","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"previous":"node","insertBeforeNode":"next","nodeToInsert":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:557","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":0},{"failures":[50,51,52],"tindex":"0f739002-41f6-11e5-835e-ed56993c3291","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:969","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(\"AVLNode(\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractKeyValue:84","type":"CtInvocationImpl","sourcecode":"new java.lang.StringBuilder().append(org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getKey())"},"status":-1},{"failures":[],"tindex":"0f739003-41f6-11e5-835e-836e555772ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:160","type":"CtAssignmentImpl","sourcecode":"int = ((int) - (int)) + (int)"},"variableMap":{"size":"end","maxElements":"end","start":"end","end":"end"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:148","type":"CtUnaryOperatorImpl","sourcecode":"++int"},"status":-2},{"failures":[53,54,55],"tindex":"0f739004-41f6-11e5-835e-3b4adce0ee8d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:210","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    return java.util.List<K>.get((int - 1));\n} "},"variableMap":{"insertOrder":"insertOrder","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:195","type":"CtIfImpl","sourcecode":"if ((int >= 0) && (int < (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(size()) - 1))) {\n    return java.util.List<K>.get((int + 1));\n} "},"status":-1},{"failures":[56,57,58],"tindex":"0f739005-41f6-11e5-835e-eb1ddfedbd53","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:119","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"0f739006-41f6-11e5-835e-e79211d0fada","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:182","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}