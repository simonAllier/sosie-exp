{"failureDictionary":{"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":56,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":18,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEmptyListSort":29,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testLock":21,"org.apache.commons.collections4.bag.HashBagTest.testBagRetainAll":50,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.keyvalue.DefaultKeyValueTest.testEqualsAndHashCode":16,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":60,"org.apache.commons.collections4.CollectionUtilsTest.testPermutations":15,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":67,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testListConstructor":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":58,"org.apache.commons.collections4.map.CompositeMapTest.testPutAll":39,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationResultSize":2,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":25,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":51,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":64,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationExhaustivity":3,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":20,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":38,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testFullIterator":5,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsSelfHashCode":13,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorCompatibility":30,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsContract":35,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testConstructorPlusAdd":23,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSimpleSerialization":34,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testEqualsNull":9,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testArrayConstructor":22,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testEqualsNull":33,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationException":1,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutationUnicity":4,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testRandomListSort":27,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":44,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":52,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testComparatorIsSerializable":31,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":59,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":61,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveUnderlying":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":45,"org.apache.commons.collections4.bag.TreeBagTest.testBagRetainAll":41,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalFullCollectionExists":8,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":47,"org.apache.commons.collections4.set.CompositeSetTest.testContains":65,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testPermutatorHasMore":0,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":46,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":66,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testObjectHashCodeEqualsContract":12,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testObjectHashCodeEqualsSelfHashCode":36,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testReverseListSort":28,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testSimpleSerialization":11,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":43,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testRemove":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":17,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":55,"org.apache.commons.collections4.iterators.PermutationIteratorTest.testCanonicalEmptyCollectionExists":10,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":49,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testAddAsEqual":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":40,"org.apache.commons.collections4.ListUtilsTest.testEquals":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":57},"transformations":[{"failures":[],"tindex":"e43adaf2-4205-11e5-a6cd-ed31a372e966","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:428","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.setValue(E)"},"status":-2},{"failures":[],"tindex":"e43adaf3-4205-11e5-a6cd-6fcb808de1d5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)"},"variableMap":{"this":"temp"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:194","type":"CtInvocationImpl","sourcecode":"java.util.List<E>.add(E)"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15],"tindex":"e43b0204-4205-11e5-a6cd-4f2fa7ebe23d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtOperatorAssignmentImpl","sourcecode":"int += ~(int << 15)"},"variableMap":{"hash":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:88","type":"CtAssignmentImpl","sourcecode":"int[][(int - 1)] = int"},"status":-1},{"failures":[16],"tindex":"e43b0205-4205-11e5-a6cd-c9d25b01f0f3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:409","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map<?, ?>) == false) {\n    return false;\n} "},"variableMap":{"obj":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"e43b0206-4205-11e5-a6cd-57daec6136ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.UnmodifiableCollection:108","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[17,18,19,20],"tindex":"e43b0207-4205-11e5-a6cd-93b568d6117d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:660","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-1},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"e43b0208-4205-11e5-a6cd-75a04e778f51","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:140","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator<T>.isLocked()) {\n    throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\");\n} "},"status":-1},{"failures":[38],"tindex":"e43b0209-4205-11e5-a6cd-17bd4268d34d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"result","size":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:197","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[39,40],"tindex":"e43b020a-4205-11e5-a6cd-410d1f4f33ee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:385","type":"CtInvocationImpl","sourcecode":"this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>.putAll(this, this.java.util.Map<K, V>[], java.util.Map<? extends K, ? extends V>)"},"status":-1},{"failures":[41,42,43,44,45,46,47,48,49,50],"tindex":"e43b020b-4205-11e5-a6cd-67f97d9a2772","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:390","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.Bag<E>.isEmpty())) {\n    boolean = org.apache.commons.collections4.bag.AbstractMapBag<E>.removeAll(org.apache.commons.collections4.Bag<E>);\n} "},"status":-1},{"failures":[],"tindex":"e43b291c-4205-11e5-a6cd-4f3fe16da37f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"node":"predecessor","right":"predecessor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:611","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, null);\n}"},"status":-2},{"failures":[51,52],"tindex":"e43b291d-4205-11e5-a6cd-7f62d302a08f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:703","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"status":-1},{"failures":[],"tindex":"e43b291e-4205-11e5-a6cd-e34bbc50ed57","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1569","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"next":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:506","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e43b291f-4205-11e5-a6cd-fdaf08a2ae94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:801","type":"CtForImpl","sourcecode":"for (final java.util.ListIterator<C> java.util.ListIterator<C> = java.util.List<C>.listIterator() ; java.util.ListIterator<C>.hasNext() ; ) {\n    java.util.ListIterator<C>.set(org.apache.commons.collections4.Transformer<? super C, ? extends C>.transform(java.util.ListIterator<C>.next()));\n}"},"status":-2},{"failures":[53],"tindex":"e43b2920-4205-11e5-a6cd-1bc9e325eac1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:249","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"e43b2921-4205-11e5-a6cd-4bbebc9b54e1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:54","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(org.apache.commons.collections4.OrderedMapIterator<K, ? extends V>))"},"status":-2},{"failures":[],"tindex":"e43b4f32-4205-11e5-a6cd-c78280405838","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"length","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:62","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Predicate<? super I>[].int) != (org.apache.commons.collections4.Transformer<? super I, ? extends O>[].int)) {\n    throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\");\n} "},"status":-2},{"failures":[54,55,56,57,58,59,60,61,62],"tindex":"e43b4f33-4205-11e5-a6cd-9b01a85e473a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:262","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:622","type":"CtLocalVariableImpl","sourcecode":"final int int = java.io.ObjectInputStream.readInt()"},"status":-1},{"failures":[],"tindex":"e43b4f34-4205-11e5-a6cd-8d3878da176a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:144","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).lastKey()"},"variableMap":{"normalMap":"normalMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:140","type":"CtReturnImpl","sourcecode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>)).firstKey()"},"status":-2},{"failures":[63,64,65,66,67],"tindex":"e43b4f35-4205-11e5-a6cd-c5db95df3def","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:352","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.CollectionUtils.intersection(java.util.Set<E>, java.util.Set<E>).size()) > 0) {\n    throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\");\n} "},"variableMap":{"set":"set","existingSet":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:379","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.set.CompositeSet<E>.addComposited(java.util.Set<E>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}