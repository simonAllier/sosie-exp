{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":40,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":71,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":10,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":64,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":19,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":17,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":72,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":36,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":73,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":91,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":81,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":75,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":46,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":84,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":14,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":4,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":33,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":9,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":99,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":44,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":31,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":78,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":67,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":58,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":15,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":95,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":85,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":86,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":43,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":12,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":77,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":20,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":92,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":50,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":96,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":45,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":53,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":74,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":54,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":88,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":22,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":7,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":97,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":51,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":56,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":68,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":30,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":27,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":106,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":100,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":59,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":101,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":82,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":28,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":23,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":76,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":3,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":55,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":24,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":29,"org.apache.commons.collections4.PredicateUtilsTest.testOrPredicate":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":39,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":21,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":103,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testIteratorExhausted":1},"transformations":[{"failures":[],"tindex":"4534f4f4-420b-11e5-8820-055b6eeedd45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:267","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()"},"variableMap":{"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:507","type":"CtInvocationImpl","sourcecode":"java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"45351c05-420b-11e5-8820-13d1b37dccdb","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-2},{"failures":[0],"tindex":"45351c06-420b-11e5-8820-1b0dbd87c377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate":"predicate2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.OrPredicate:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.OrPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)"},"status":-1},{"failures":[1],"tindex":"45351c07-420b-11e5-8820-8dc604364b16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"exhausted","removed":"exhausted"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:89","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"45351c08-420b-11e5-8820-45e90d6c1aee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.CollectionBag:69","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:512","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[],"tindex":"45354319-420b-11e5-8820-8536088265f8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:465","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:194","type":"CtLocalVariableImpl","sourcecode":"final int int = java.util.List<K>.indexOf(java.lang.Object)"},"status":-2},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94],"tindex":"4535431a-420b-11e5-8820-0701db44082f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[95],"tindex":"4535431b-420b-11e5-8820-cd036681b955","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} "},"status":-1},{"failures":[],"tindex":"4535431c-420b-11e5-8820-dd70d2571078","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:907","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.KeySet<K>"},"status":-2},{"failures":[],"tindex":"45356a2d-420b-11e5-8820-35193b9fe366","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:892","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"variableMap":{"root":"root","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:891","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}"},"status":0},{"failures":[96,97],"tindex":"45356a2e-420b-11e5-8820-b168902024db","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:727","type":"CtInvocationImpl","sourcecode":"C.execute(T)"},"status":-1},{"failures":[98,99,50,51,100,52,53,54,101,55,58,102],"tindex":"45356a2f-420b-11e5-8820-df4296c3b625","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1152","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    java.lang.Object java.lang.Object = null;\n    switch (int) {\n        case 3 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 2 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n        case 1 :\n            if ((java.util.Map<?, ?>.containsKey(K)) == false) {\n                return false;\n            } \n            java.lang.Object = java.util.Map<?, ?>.get(K);\n            if ((V) == null ? java.lang.Object != null : !(V.equals(java.lang.Object))) {\n                return false;\n            } \n    }\n} "},"status":-1},{"failures":[],"tindex":"45356a30-420b-11e5-8820-e3ae35d1ec7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:172","type":"CtLocalVariableImpl","sourcecode":"final int int = int - int"},"variableMap":{"start1":"length","end1":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:477","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[103,104,105,106],"tindex":"45356a31-420b-11e5-8820-2b44668e80a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1286","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl","sourcecode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))"},"status":-1},{"failures":[],"tindex":"45359142-420b-11e5-8820-07038c89d99e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:147","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = java.util.List<E>"},"variableMap":{"nextPermutation":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:319","type":"CtLocalVariableImpl","sourcecode":"final java.util.List<E> java.util.List<E> = new java.util.ArrayList<E>(java.lang.Math.min(java.util.Collection<E>.size(), java.util.Collection<?>.size()))"},"status":-2},{"failures":[],"tindex":"45359143-420b-11e5-8820-85623d5f660c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1266","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<?>.next()"},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1258","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int)"},"status":-2},{"failures":[],"tindex":"45359144-420b-11e5-8820-b36bcc916edb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:141","type":"CtIfImpl","sourcecode":"if ((T[].int) > 0) {\n    java.lang.Object[] = ((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)));\n} "},"variableMap":{"result":"array","array":"obj","length":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-2},{"failures":[],"tindex":"45359145-420b-11e5-8820-39953d022bb5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.AbstractQueueDecorator:80","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated()"},"status":0},{"failures":[],"tindex":"45359146-420b-11e5-8820-4929d6e945f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:158","type":"CtUnaryOperatorImpl","sourcecode":"~(int << 15)"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:504","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= java.lang.Object.hashCode()"},"status":-2},{"failures":[],"tindex":"4535b857-420b-11e5-8820-15bc61087949","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:208","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} "},"variableMap":{"entry":"entry","header":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:236","type":"CtIfImpl","sourcecode":"if (int < ((int) / 2)) {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = 0 ; int < int ; int++) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    for (int int = int ; int > int ; int--) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}