{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":122,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":183,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":169,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":132,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":101,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":88,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.LinkedMapTest.testReset":144,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":103,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":192,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":124,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":209,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":138,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":254,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":61,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithList":12,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":55,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":123,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":8,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":93,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":59,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":46,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":182,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":65,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":174,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":181,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":160,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":164,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":172,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":253,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":220,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalEmptyCollectionExists":139,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":83,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":166,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":214,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":62,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":149,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":51,"org.apache.commons.collections4.map.LRUMapTest.testEqualsNull":134,"org.apache.commons.collections4.bag.TreeBagTest.testBagToArrayPopulate":32,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":41,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":6,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":97,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testEqualsNull":70,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":73,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":38,"org.apache.commons.collections4.map.LinkedMapTest.testEmptyMapCompatibility":167,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":173,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":188,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":54,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":102,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":203,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":224,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":194,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":232,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagToArrayPopulate":39,"org.apache.commons.collections4.map.LinkedMapTest.testObjectEqualsSelf":197,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":25,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":108,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":191,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":127,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":204,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":0,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":85,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":242,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":211,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":158,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":126,"org.apache.commons.collections4.map.MultiValueMapTest.testPutWithSet":22,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":28,"org.apache.commons.collections4.map.LRUMapTest.testEmptyMapCompatibility":105,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":163,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":58,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":206,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":113,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":178,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":177,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":179,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":223,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagToArrayPopulate":48,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":154,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":82,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":81,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":67,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":29,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":250,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":4,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":195,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":230,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":165,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyedIterator":21,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":64,"org.apache.commons.collections4.map.MultiValueMapTest.testMultipleValues":15,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":229,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":9,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":68,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":148,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":189,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":11,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":225,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":57,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":110,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":146,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":91,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":175,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":152,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":216,"org.apache.commons.collections4.map.LinkedMapTest.testClone":145,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":234,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":227,"org.apache.commons.collections4.map.LinkedMapTest.testEqualsNull":196,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":14,"org.apache.commons.collections4.map.LRUMapTest.testCanonicalFullCollectionExists":140,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSizeA":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":40,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":69,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagToArrayPopulate":45,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":125,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":142,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":143,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":241,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":247,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":31,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":207,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":205,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":76,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":222,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":84,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":217,"org.apache.commons.collections4.map.MultiValueMapTest.testKeyContainsValue":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":218,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":171,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":170,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":246,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":208,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":168,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":42,"org.apache.commons.collections4.bag.TransformedBagTest.testBagToArrayPopulate":35,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":151,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":226,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":233,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":153,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":198,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":200,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":130,"org.apache.commons.collections4.map.MultiValueMapTest.testValueCollectionType":26,"org.apache.commons.collections4.map.LRUMapTest.testClone":77,"org.apache.commons.collections4.map.LRUMapTest.testObjectEqualsSelf":135,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":186,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":249,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":34,"org.apache.commons.collections4.bag.HashBagTest.testBagToArrayPopulate":37,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":49,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":80,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":176,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":150,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":98,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":221,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":251,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":92,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":109,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":90,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":56,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray":10,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":213,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":240,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalFullCollectionExists":202,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":239,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":238,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":47,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":235,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":236,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":237,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map2":24,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":187,"org.apache.commons.collections4.map.MultiValueMapTest.testPutAll_Map1":23,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":228,"org.apache.commons.collections4.map.MultiValueMapTest.testContainsValue_Key":16,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":100,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":27,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":136,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":245,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":156,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":107,"org.apache.commons.collections4.map.LRUMapTest.testLRU":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":243,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":106,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":63,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":129,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":162,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":71,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":60,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":114,"org.apache.commons.collections4.collection.IndexedCollectionTest.testDecoratedCollectionIsIndexedOnCreation":2,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":3,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":36,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":219,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":78,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":87,"org.apache.commons.collections4.map.LinkedMapTest.testCanonicalEmptyCollectionExists":201,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":117,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":120,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":119,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":118,"org.apache.commons.collections4.map.LinkedMapTest.testInitialCapacityZero":147,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":212,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":215,"org.apache.commons.collections4.map.LRUMapTest.testReset":74,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":137,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":141,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":116,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":252,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":112,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":86,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":161,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":231,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":79,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":159,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":111,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":210,"org.apache.commons.collections4.collection.IndexedCollectionTest.testReindexUpdatesIndexWhenDecoratedCollectionIsModifiedSeparately":5,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.MapUtilsTest.testPopulateMultiMap":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":185,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":50,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":52,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":155},"transformations":[{"failures":[],"tindex":"2975af70-420b-11e5-9fa4-49fbdfeaad95","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:317","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayIterator<E>(E[] , int , int)"},"status":-2},{"failures":[0],"tindex":"2975d681-420b-11e5-9fa4-19646d3f507c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:201","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int] = null"},"variableMap":{"result":"result","size":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:192","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[][int++] = E"},"status":-1},{"failures":[],"tindex":"2975d682-420b-11e5-9fa4-35d402bb87a2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:298","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.ArrayList<java.util.Iterator<? extends E>>.size()) ; int++) {\n    java.util.ArrayList<E>.add(null);\n    java.util.BitSet.clear(int);\n}"},"status":-2},{"failures":[],"tindex":"2975d683-420b-11e5-9fa4-8993e917dc61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:155","type":"CtReturnImpl","sourcecode":"return this.int"},"status":0},{"failures":[],"tindex":"2975d684-420b-11e5-9fa4-f51328b9a57d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:991","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[],"tindex":"2975d685-420b-11e5-9fa4-e53ca52f0b81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"i":"length","object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:124","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    final char[] char[] = java.lang.Object.toString().toCharArray();\n    for (int int = (char[].int) - 1 ; int >= 0 ; int--) {\n        char[][int] = java.lang.Character.toLowerCase(java.lang.Character.toUpperCase(char[][int]));\n    }\n    return new java.lang.String(char[]);\n} "},"status":-2},{"failures":[],"tindex":"2975d686-420b-11e5-9fa4-d19b64439c99","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"ceil"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:978","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[],"tindex":"2975fd97-420b-11e5-9fa4-cd3c8db4b9f4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:180","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"2975fd98-420b-11e5-9fa4-d71e6959fbd4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.SplitMapUtils:117","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:52","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = ((org.apache.commons.collections4.MapIterator<K, V>)(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>))"},"status":-2},{"failures":[],"tindex":"2975fd99-420b-11e5-9fa4-37a79a1af5d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl","sourcecode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} "},"variableMap":{"obj":"value1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:220","type":"CtReturnImpl","sourcecode":"return java.lang.Object == java.lang.Object"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30],"tindex":"2975fd9a-420b-11e5-9fa4-8f5efe92083d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl","sourcecode":"if (boolean) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"slotFilled":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:265","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<V>.size()) > 0) {\n    org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated().put(K, java.util.Collection<V>);\n    boolean = true;\n} "},"status":-1},{"failures":[31],"tindex":"2975fd9b-420b-11e5-9fa4-9d7c2e88d377","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1217","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        return null;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"node":"right","parent":"node","left":"node","root":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1173","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49],"tindex":"297624ac-420b-11e5-9fa4-9b984a633b2f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:473","type":"CtAssignmentImpl","sourcecode":"T[][int++] = T"},"status":-1},{"failures":[50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],"tindex":"297624ad-420b-11e5-9fa4-13fe2d9ac526","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:265","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"variableMap":{"before":"header","link":"header","header":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:127","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.createEntry(null, -1, null, null)"},"status":-1},{"failures":[208],"tindex":"297624ae-420b-11e5-9fa4-23100f9c47f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"status":-1},{"failures":[],"tindex":"297624af-420b-11e5-9fa4-6b8b5eb6fa49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:432","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.StringValueTransformer.<T>stringValueTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)"},"status":-2},{"failures":[],"tindex":"297624b0-420b-11e5-9fa4-7d02bde45f55","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:89","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":-2},{"failures":[],"tindex":"29764bc1-420b-11e5-9fa4-d16d95a5a2f6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1331","type":"CtReturnImpl","sourcecode":"return false"},"status":0},{"failures":[209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],"tindex":"29764bc2-420b-11e5-9fa4-3144946b286a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"bitIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:158","type":"CtIfImpl","sourcecode":"if (!(org.apache.commons.collections4.trie.KeyAnalyzer.isOutOfBoundsIndex(int))) {\n    if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n        final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        return null;\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n        } else {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        }\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n        if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n            return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n        } \n    } \n} "},"status":-1},{"failures":[],"tindex":"29764bc3-420b-11e5-9fa4-a7abcda4ec0d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:261","type":"CtAssignmentImpl","sourcecode":"int = (int * 37) + (int)"},"variableMap":{"total":"modCount","counter":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:324","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}