{"failureDictionary":{"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveAll":89,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":140,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":126,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":162,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":69,"org.apache.commons.collections4.map.LRUMapTest.testFirstKey":56,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":67,"org.apache.commons.collections4.map.LinkedMapTest.testReset":101,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":71,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":149,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":91,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":30,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":167,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionSize":24,"org.apache.commons.collections4.map.LRUMapTest.testValuesRetainAll":90,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":11,"org.apache.commons.collections4.map.LRUMapTest.testFailFastKeySet":61,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":28,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":139,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":34,"org.apache.commons.collections4.map.LinkedMapTest.testValuesClearChangesMap":131,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":138,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":137,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":118,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":122,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":166,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":129,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":12,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":50,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":163,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":124,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveAll":141,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":31,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":104,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":20,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":3,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":65,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":168,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":173,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":180,"org.apache.commons.collections4.map.StaticBucketMapTest.testKeySetIteratorRemoveChangesMap":190,"org.apache.commons.collections4.CollectionUtilsTest.containsAll":187,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":130,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveAll":145,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":23,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":40,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":70,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":164,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":169,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":177,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullKey":75,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":98,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":185,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":148,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRetainAll":94,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.LRUMapTest.testKeySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":53,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":161,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":116,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveAll":93,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":186,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":189,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":121,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":27,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":39,"org.apache.commons.collections4.map.LRUMapTest.testKeySetClearChangesMap":80,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":135,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":134,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRetainAll":192,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":172,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":136,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":158,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":112,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromMapIterator":52,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":48,"org.apache.commons.collections4.map.LinkedMapTest.testMakeMap":115,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":36,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":154,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":123,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAdd":33,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapRemove":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":37,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":103,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRetainAll":146,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":1,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":77,"org.apache.commons.collections4.map.LinkedMapTest.testInsertionOrder":107,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":59,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetClearChangesMap":132,"org.apache.commons.collections4.map.LinkedMapTest.testNextKey":110,"org.apache.commons.collections4.map.LinkedMapTest.testClone":106,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":14,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":152,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":182,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":13,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":16,"org.apache.commons.collections4.map.LRUMapTest.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.map.LinkedMapTest.testIndexOf":102,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":105,"org.apache.commons.collections4.map.LRUMapTest.testFailFastValues":62,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":18,"org.apache.commons.collections4.map.LRUMapTest.testLastKey":57,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":38,"org.apache.commons.collections4.map.LRUMapTest.testAccessOrder":44,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":51,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":175,"org.apache.commons.collections4.map.LRUMapTest.testMakeMap":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullValue":128,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutNullKey":127,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":17,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":64,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":165,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":125,"org.apache.commons.collections4.map.LinkedMapTest.testLastKey":109,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":111,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":174,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":97,"org.apache.commons.collections4.map.LRUMapTest.testClone":49,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionSize":7,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":143,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemoveScan":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":133,"org.apache.commons.collections4.map.LinkedMapTest.testFirstKey":108,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":160,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":66,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":60,"org.apache.commons.collections4.map.LRUMapTest.testMapPutNullValue":76,"org.apache.commons.collections4.map.LRUMapTest.testNextKey":58,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":25,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":5,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":6,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":2,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":144,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemoveAll":191,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":8,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":68,"org.apache.commons.collections4.map.LRUMapTest.testValuesRemoveChangesMap":88,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastValues":114,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":74,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":181,"org.apache.commons.collections4.map.LRUMapTest.testLRU":43,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":170,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":178,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":176,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":159,"org.apache.commons.collections4.map.LRUMapTest.testFullMapCompatibility":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":32,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":96,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":120,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":29,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":81,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":45,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromValues":55,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":156,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.LRUMapTest.testReset":42,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":100,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":171,"org.apache.commons.collections4.map.LRUMapTest.testValuesClearChangesMap":79,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":153,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromKeySet":54,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":188,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUBlocksRemove":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":117,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":183,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":15,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":78,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRetainAll":142,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testLastKey":0,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":72,"org.apache.commons.collections4.set.MapBackedSet2Test.testOrdering":19,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":21,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastKeySet":113},"transformations":[{"failures":[],"tindex":"d061d085-4148-11e5-ba86-81b04285193e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:717","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} "},"variableMap":{"from":"y","to":"x","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1179","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.swapColors(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[],"tindex":"d0621ea6-4148-11e5-ba86-537a9225c100","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:254","type":"CtReturnImpl","sourcecode":"return java.util.Set<K>"},"status":-2},{"failures":[],"tindex":"d0621ea7-4148-11e5-ba86-2fb2c7356bd0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1268","type":"CtLocalVariableImpl","sourcecode":"final V V = ((V)(java.io.ObjectInputStream.readObject()))"},"variableMap":{"in":"stream"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2407","type":"CtLocalVariableImpl","sourcecode":"V V = ((V)(java.io.ObjectInputStream.readObject()))"},"status":0},{"failures":[],"tindex":"d06245b8-4148-11e5-ba86-8d7a6dae35ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:72","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":0},{"failures":[],"tindex":"d06245b9-4148-11e5-ba86-6b11aeb83adf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} "},"variableMap":{"listSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FunctorUtils:82","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.Predicate<?>[].int) ; int++) {\n    if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n        throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n    } \n}"},"status":-2},{"failures":[0],"tindex":"d06245ba-4148-11e5-ba86-879f29682f1c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()"},"status":-1},{"failures":[],"tindex":"d06245bb-4148-11e5-ba86-597c62de958a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:149","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"d0626ccc-4148-11e5-ba86-7baf9316ff12","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}"},"status":-1},{"failures":[],"tindex":"d0626ccd-4148-11e5-ba86-1b62d9328fd6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:766","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"d0626cce-4148-11e5-ba86-d3ce74109942","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.TransformedMap:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedMap<K, V>.decorated()"},"variableMap":{"decorated":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:145","type":"CtAssignmentImpl","sourcecode":"java.util.Map<K, V>[][((java.util.Map<K, V>[].int) - 1)] = java.util.Map<K, V>"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151],"tindex":"d06293df-4148-11e5-ba86-a5552dace6ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:587","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null"},"variableMap":{"last":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:128","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>"},"status":-1},{"failures":[],"tindex":"d06293e0-4148-11e5-ba86-dda302013876","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.next()"},"variableMap":{"iterator":"li"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:178","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<E>.previous()"},"status":-2},{"failures":[152,153,154,155,156],"tindex":"d06293e1-4148-11e5-ba86-f79f8a4baea3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":-1},{"failures":[],"tindex":"d062baf2-4148-11e5-ba86-c7ae7009f125","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"currentNode","y":"currentNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1018","type":"CtWhileImpl","sourcecode":"while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()])) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"d0633023-4148-11e5-ba86-ef45d4d1e965","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.FixedSizeList:170","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:118","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")"},"status":-2},{"failures":[157],"tindex":"d0635734-4148-11e5-ba86-393f7c06850e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:132","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[158],"tindex":"d0635735-4148-11e5-ba86-331d7ce6d593","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:255","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186],"tindex":"d0635736-4148-11e5-ba86-df0a04714883","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TransformedList:132","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)"},"status":-1},{"failures":[187],"tindex":"d0635737-4148-11e5-ba86-61d0569b5d15","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtInvocationImpl","sourcecode":"java.lang.Object.equals(java.lang.Object)"},"variableMap":{"value2":"p","value1":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:380","type":"CtInvocationImpl","sourcecode":"java.util.Set<java.lang.Object>.add(java.lang.Object)"},"status":-1},{"failures":[188,189,190,191,192,193],"tindex":"d0637e48-4148-11e5-ba86-75c29a277b04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:505","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"variableMap":{"next":"prev","n":"n"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:337","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}