{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":24,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":8,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":28,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":33,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":4,"org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":16,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":40,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":39,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchClosure":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.iterators.IteratorIterableTest.testMultipleUserIterator":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":1,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":11,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":36,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":32,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":21,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":20,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":27,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":9,"org.apache.commons.collections4.IteratorUtilsTest.testAsMultipleIterable":43,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContainsAll":2,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":29,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":44,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":10,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":15},"transformations":[{"failures":[0,1],"tindex":"0a8e6e7d-416f-11e5-a35c-997997c98e08","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:668","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    int <<= 1;\n}"},"variableMap":{"newCapacity":"nodeCount","proposedCapacity":"nodeCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"status":-1},{"failures":[],"tindex":"0a8e958e-416f-11e5-a35c-3fc6ba5dc1ce","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl","sourcecode":"if ((this) == java.lang.Object) {\n    return true;\n} "},"variableMap":{"object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"0a8ebc9f-416f-11e5-a35c-590f0730ab49","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:350","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionBag:112","type":"CtLocalVariableImpl","sourcecode":"final boolean boolean = org.apache.commons.collections4.bag.CollectionBag<E>.add(java.util.Iterator<? extends E>.next(), 1)"},"status":-2},{"failures":[],"tindex":"0a8ebca0-416f-11e5-a35c-31a9d6919673","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl","sourcecode":"return 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:175","type":"CtReturnImpl","sourcecode":"return java.lang.System.identityHashCode(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"0a8ebca1-416f-11e5-a35c-d1d6ba64c8c1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Set<E>)"},"variableMap":{"set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:152","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<E>)"},"status":-2},{"failures":[2,3,4],"tindex":"0a8ebca2-416f-11e5-a35c-d79dd89d1a98","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:159","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.list.AbstractLinkedList<E>.(contains(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[5],"tindex":"0a8ee3b3-416f-11e5-a35c-658ed4fba713","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()"},"status":-1},{"failures":[],"tindex":"0a8ee3b4-416f-11e5-a35c-6d3b4c214748","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:298","type":"CtInvocationImpl","sourcecode":"java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear()"},"status":-2},{"failures":[6],"tindex":"0a8ee3b5-416f-11e5-a35c-293636df1f63","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchClosure:104","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.Closure<E>[][int] = java.util.Map.Entry<org.apache.commons.collections4.Predicate<E>, org.apache.commons.collections4.Closure<E>>.getValue()"},"status":-1},{"failures":[],"tindex":"0a8f0ac6-416f-11e5-a35c-93b08cec7c68","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1467","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == null) {\n    throw new java.lang.NullPointerException(\"The collection must not be null\");\n} "},"variableMap":{"coll":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} "},"status":0},{"failures":[],"tindex":"0a8f0ac7-416f-11e5-a35c-e511d5873c43","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:728","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"parent":"parentOfSubtree","current":"node","right":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1242","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n}"},"status":-2},{"failures":[7,8,9],"tindex":"0a8f0ac8-416f-11e5-a35c-5337a5401d14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:416","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == java.lang.Object) || (java.lang.Object == null ? false : java.lang.Object.equals(java.lang.Object))"},"variableMap":{"value2":"key4","value1":"key4"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:535","type":"CtReturnImpl","sourcecode":"return (((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) == 4) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(2)))))) && ((java.lang.Object == (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3))) || ((java.lang.Object != null) && (java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(3)))))"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24],"tindex":"0a8f31d9-416f-11e5-a35c-8d614a3edb8b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1404","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.TreeBidiMap.ViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36],"tindex":"0a8f31da-416f-11e5-a35c-49ccc68a55ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.HashBag:67","type":"CtInvocationImpl","sourcecode":"super.doWriteObject(java.io.ObjectOutputStream)"},"status":-1},{"failures":[37,38,39,40,41],"tindex":"0a8f31db-416f-11e5-a35c-c7274818a1e2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1565","type":"CtIfImpl","sourcecode":"if ((int) != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"modCount":"start2","expectedModCount":"start2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1},{"failures":[],"tindex":"0a8f58ec-416f-11e5-a35c-a94397ceec62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ReverseComparator:89","type":"CtReturnImpl","sourcecode":"return (\"ReverseComparator\".hashCode()) ^ (java.util.Comparator<E>.hashCode())"},"status":-2},{"failures":[42,43],"tindex":"0a8f58ed-416f-11e5-a35c-699803f94721","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:126","type":"CtInvocationImpl","sourcecode":"((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset()"},"status":-1},{"failures":[],"tindex":"0a8f58ee-416f-11e5-a35c-2724bdbf38f5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl","sourcecode":"if ((boolean) || (boolean)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"removed":"modified","beforeFirst":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:282","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.contains(java.util.Iterator<E>.next())) == false) {\n    java.util.Iterator<E>.remove();\n    boolean = true;\n} "},"status":-2},{"failures":[37,44,38,39,40,41],"tindex":"0a8f7fff-416f-11e5-a35c-7b55a66c44fc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:232","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int)"},"variableMap":{"vUp":"vUp","start1":"start1","end2":"delta","this":"this","i":"delta","end1":"i","k":"start2","start2":"start1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:206","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int)"},"status":-1},{"failures":[45,46],"tindex":"0a8f8000-416f-11e5-a35c-cbaa942713b1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:225","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}