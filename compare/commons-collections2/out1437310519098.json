{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":100,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveLast":109,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":13,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":96,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":46,"org.apache.commons.collections4.list.CursorableLinkedListTest.testIndexOf":108,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveNode":104,"org.apache.commons.collections4.list.CursorableLinkedListTest.testContains":106,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":90,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":95,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":61,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":89,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":28,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":16,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":57,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":29,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":73,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAdd":107,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":94,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":54,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":4,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":56,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":87,"org.apache.commons.collections4.list.CursorableLinkedListTest.testAddNodeAfter":110,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":55,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":35,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":37,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":6,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":44,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":31,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":72,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":82,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":30,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":74,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":45,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":70,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":34,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":9,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":71,"org.apache.commons.collections4.ListUtilsTest.testEquals":1,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":40,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":66,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":97,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":8,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":112,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":98,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":92,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":60,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":93,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":23,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testAddNodeAfter":103,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":38,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":43,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":62,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":47,"org.apache.commons.collections4.map.LRUMapTest.testLRU":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":101,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":53,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":2,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":68,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":63,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":25,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":79,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRemoveNode":111,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":10,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":42,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRUFirstBlocksRemove":81,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":76,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testRemoveLast":102,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":64,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":77,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":27,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":67,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":86,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":39,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.LRUMapTest.testRemoveLRU":80,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":18,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":24,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":48,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":99,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":19,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":78,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":85,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":5,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":105,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":69,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":15,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":3,"org.apache.commons.collections4.map.CompositeMapTest.testRemoveComposited":0,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":88,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":36,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":33,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":22},"transformations":[{"failures":[],"tindex":"69232543-2e15-11e5-b3b4-71910bda5d2d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:482","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:319","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.EntrySetIterator<K, V>(java.util.Iterator<java.util.Map.Entry<K, V>> , this)"},"status":-2},{"failures":[0],"tindex":"6924d2f4-2e15-11e5-b3b4-f9c50d63fe5e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"variableMap":{"index":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:161","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int)"},"status":-1},{"failures":[1],"tindex":"6924d2f5-2e15-11e5-b3b4-adced5cd56ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} "},"variableMap":{"coll":"list2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl","sourcecode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} "},"status":-1},{"failures":[2,3],"tindex":"69280746-2e15-11e5-b3b4-2d8fbcfb69fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1415","type":"CtReturnImpl","sourcecode":"return (java.util.Collection<?> == null) || (java.util.Collection<?>.isEmpty())"},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:137","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.keySet().removeAll(java.util.Collection<?>)"},"status":-1},{"failures":[],"tindex":"69282e57-2e15-11e5-b3b4-977fc60e37db","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:519","type":"CtUnaryOperatorImpl","sourcecode":"+1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:219","type":"CtAssignmentImpl","sourcecode":"int[][int] = int[][(int - 1)]"},"status":-2},{"failures":[],"tindex":"69282e58-2e15-11e5-b3b4-ed8ea8e3394e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1674","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"lastReturnedNode":"deletedNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:949","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement : org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.values()) {\n    if (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) && ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null ? org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        } else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                } else {\n                    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                }\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}"},"status":0},{"failures":[],"tindex":"69285569-2e15-11e5-b3b4-4fdf4d7591d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparableComparator:93","type":"CtReturnImpl","sourcecode":"return E.compareTo(E)"},"status":-2},{"failures":[],"tindex":"69287c7a-2e15-11e5-b3b4-737ebb501192","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyListIterator.<E>resettableEmptyListIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:365","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ArrayListIterator<E>(java.lang.Object)"},"status":-2},{"failures":[4,5],"tindex":"6928f1ab-2e15-11e5-b3b4-83c4282e8040","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl","sourcecode":"return (boolean) == false"},"variableMap":{"hasNext":"added"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.IndexedCollection:122","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78],"tindex":"692b3b9c-2e15-11e5-b3b4-a32cbcb42818","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<? extends I>.remove()"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:223","type":"CtWhileImpl","sourcecode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n}"},"status":-1},{"failures":[79],"tindex":"692b3b9d-2e15-11e5-b3b4-65aa09648ee1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:138","type":"CtAssignmentImpl","sourcecode":"E = org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E)"},"status":-1},{"failures":[],"tindex":"692b3b9e-2e15-11e5-b3b4-bbdcfe63aa1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:349","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InstantiateTransformer.<T>instantiateTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-2},{"failures":[],"tindex":"692b62af-2e15-11e5-b3b4-5f6109a56ea4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.NullComparator:139","type":"CtReturnImpl","sourcecode":"return 0"},"status":-2},{"failures":[],"tindex":"692b89c0-2e15-11e5-b3b4-5b5f31ad85f7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:953","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.swapPosition(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"this":"this","dataElement":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE","deletedNode":"newNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1296","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"692b89c1-2e15-11e5-b3b4-6bd3f2726e6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.BooleanComparator:153","type":"CtLocalVariableImpl","sourcecode":"final int int = \"BooleanComparator\".hashCode()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:579","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.hash(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)"},"status":-2},{"failures":[80,81,82,83,84],"tindex":"692b89c2-2e15-11e5-b3b4-fd880f1dcc14","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:212","type":"CtIfImpl","sourcecode":"if ((int) == (int)) {\n    --int;\n} "},"variableMap":{"wrappedIteratorIndex":"size","removeIndex":"modCount","currentIndex":"maxSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-1},{"failures":[85,86,87,88,89,90],"tindex":"692b89c3-2e15-11e5-b3b4-4b3a1885d1a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:217","type":"CtAssignmentImpl","sourcecode":"int[][int] = (int[][(int + 1)]) - 1"},"status":-1},{"failures":[91,92,93,94,95,96,97,98,99,100,101],"tindex":"692bb0d4-2e15-11e5-b3b4-f1dbcdc41035","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))"},"status":-1},{"failures":[],"tindex":"692bb0d5-2e15-11e5-b3b4-9f4cba017645","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1027","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"siblingNode":"currentNode","currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1073","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[102,103,104,105,106,107,108,109,110,111,112],"tindex":"692bd7e6-2e15-11e5-b3b4-2b40de6c7db1","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.addNode(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}