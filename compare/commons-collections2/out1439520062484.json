{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":34,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":33,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":42,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":38,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":60,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":1,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":24,"org.apache.commons.collections4.set.CompositeSetTest.testFailedCollisionResolution":57,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionSize":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":81,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":79,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":10,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":9,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":40,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":67,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":41,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":43,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":63,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":37,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":49,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":13,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":53,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":68,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIsEmpty":28,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":11,"org.apache.commons.collections4.map.CompositeMapTest.testValuesClearChangesMap":20,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionSize":62,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":39,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_getEntry_int":3,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":75,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":78,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":27,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":44,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":16,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":12,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":31,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":65,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":77,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":45,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":47,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":46,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":30,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddMutator":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetClearChangesMap":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":80,"org.apache.commons.collections4.collection.CompositeCollectionTest.testContainsAll":25,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":52,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":5,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":70,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":58,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":64,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":4,"org.apache.commons.collections4.collection.CompositeCollectionTest.testSize":22,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":59,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":66,"org.apache.commons.collections4.map.LinkedMapTest.testGetValueByIndex":0,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":51,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":69,"org.apache.commons.collections4.map.LinkedMapTest.testGetByIndex":2,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":35,"org.apache.commons.collections4.set.CompositeSetTest.testContains":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":76,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveAll":14,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":17,"org.apache.commons.collections4.set.CompositeSetTest.testAddCompositedCollision":55,"org.apache.commons.collections4.collection.CompositeCollectionTest.testMultipleCollectionsSize":23,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":36,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":18,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRemoveChangesMap":7,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":72,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":74,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":56,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllMutator":26,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":71,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":29,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.CompositeMapTest.testValuesRetainAll":6,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":15},"transformations":[{"failures":[],"tindex":"e73a7f3f-422d-11e5-8d1e-d5e597607d4d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:413","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.ObjectArrayListIterator<E>(E[] , int , int)"},"status":-2},{"failures":[0,1,2,3],"tindex":"e73a7f40-422d-11e5-8d1e-0385f51353f2","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:256","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int >= int)) {\n    throw new java.util.NoSuchElementException(java.lang.String.format(\"The specified index (%1$d) is outside the available range [0, %2$d)\", java.lang.Integer.valueOf(int), java.lang.Integer.valueOf(int)));\n} "},"variableMap":{"sz":"index","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:229","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException(((\"Index \" + int) + \" is less than zero\"));\n} "},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"tindex":"e73aa551-422d-11e5-8d1e-499b98c95efd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:299","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(null)"},"variableMap":{"values":"compositeCollection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:350","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Collection<E>>.add(java.util.Collection<E>)"},"status":-1},{"failures":[38,39,4,40,41,42,43,44,45,46,47,48,49,50,51,8,9,11,12,52,13,15,17,18,19,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72],"tindex":"e73aa552-422d-11e5-8d1e-51f26aaaeb65","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:389","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.remove(java.util.Set<E>)"},"variableMap":{"all":"all","set":"set"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:358","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Set<E>>.add(java.util.Set<E>)"},"status":-1},{"failures":[],"tindex":"e73aa553-422d-11e5-8d1e-f5c1ffdcf3a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()"},"variableMap":{"this":"hm"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:175","type":"CtReturnImpl","sourcecode":"return java.util.SortedMap<K, V>.lastKey()"},"status":-2},{"failures":[73,74],"tindex":"e73aa554-422d-11e5-8d1e-d98b48d96e21","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:55","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"variableMap":{"out":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableBag:88","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated())"},"status":-1},{"failures":[],"tindex":"e73aa555-422d-11e5-8d1e-9d1fc8588d33","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:179","type":"CtLocalVariableImpl","sourcecode":"final int int = int + int"},"variableMap":{"m":"length","n":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:201","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[],"tindex":"e73aa556-422d-11e5-8d1e-bd559fe05dd3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:718","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")"},"status":-2},{"failures":[75,76],"tindex":"e73acc67-422d-11e5-8d1e-8909fea599aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1093","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException();\n} "},"variableMap":{"currentIndex":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:187","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K), V)"},"status":-1},{"failures":[],"tindex":"e73acc68-422d-11e5-8d1e-0726d4071a19","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:609","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V)"},"status":-2},{"failures":[],"tindex":"e73acc69-422d-11e5-8d1e-7f90a23e6db3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateTransformer:76","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>(java.lang.Class<?>[] , java.lang.Object[])"},"variableMap":{"args":"args","paramTypes":"paramTypes"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:419","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.InvokerTransformer.<I,O>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[])"},"status":-2},{"failures":[77,78],"tindex":"e73acc6a-422d-11e5-8d1e-d7cba6965e20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:110","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyMapIterator:39","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")"},"status":-1},{"failures":[],"tindex":"e73acc6b-422d-11e5-8d1e-5121d9496f18","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:401","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[79,80,81],"tindex":"e73acc6c-422d-11e5-8d1e-474d71109a5a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:122","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:283","type":"CtInvocationImpl","sourcecode":"java.util.Iterator<E>.remove()"},"status":-1},{"failures":[],"tindex":"e73acc6d-422d-11e5-8d1e-8d8491fac581","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1066","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"e73af37e-422d-11e5-8d1e-e310fcd8a7f0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"variableMap":{"predicate1":"predicate1","predicate2":"predicate1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)"},"status":-2},{"failures":[],"tindex":"e73af37f-422d-11e5-8d1e-9337fe8bc926","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-2},{"failures":[],"tindex":"e73af380-422d-11e5-8d1e-0dcebaf6047f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1575","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"variableMap":{"current":"current","e":"left"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:440","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"e73af381-422d-11e5-8d1e-571bdd93606c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:435","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"e73af382-422d-11e5-8d1e-c5d2582c0c17","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key2","entry":"next","key2":"key4","hashCode":"index","key3":"key2","key4":"key3","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:635","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}