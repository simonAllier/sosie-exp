{"failureDictionary":{"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":16,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":29,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":5,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":4,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":1,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":12,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":47,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetIteratorRemoveChangesMap":44,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":23,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":3,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":14,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":26,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesIteratorRemoveChangesMap":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":2,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableIteratorImmutability":55,"org.apache.commons.collections4.map.FixedSizeMapTest.testKeySetIteratorRemoveChangesMap":45,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":60,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":32,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":50,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":54,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":0,"org.apache.commons.collections4.map.UnmodifiableMapTest.testKeySetIteratorRemoveChangesMap":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testKeySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testKeySetIteratorRemoveChangesMap":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":7,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":31,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetIteratorRemoveChangesMap":38,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesIteratorRemoveChangesMap":41,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":53,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testKeySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":20,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesIteratorRemoveChangesMap":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testKeySetIteratorRemoveChangesMap":57,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":8,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":62,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testSerializeDeserializeThenCompare":11,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":24,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":52,"org.apache.commons.collections4.iterators.UnmodifiableIteratorTest.testRemove":63,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnmodifiableIterator":51,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":13,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":25,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":61,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":17,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":64,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesIteratorRemoveChangesMap":43,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":68,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesIteratorRemoveChangesMap":39,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":66,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":65,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":30,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesIteratorRemoveChangesMap":34,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesIteratorRemoveChangesMap":58},"transformations":[{"failures":[],"tindex":"e7471fad-4246-11e5-af87-4de17bc8c584","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:662","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:265","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.KeySetIterator<K>(java.util.Iterator<K> , this)"},"status":-2},{"failures":[],"tindex":"e74746be-4246-11e5-af87-318a7d1c0a4c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} "},"variableMap":{"reuse":"reuse","removeLRUEntry":"scanUntilRemovable","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:249","type":"CtIfImpl","sourcecode":"if (boolean) {\n    while ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) && (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != null)) {\n        if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n            boolean = true;\n            break;\n        } \n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n} else {\n    boolean = org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>);\n}"},"status":-2},{"failures":[],"tindex":"e7476dcf-4246-11e5-af87-f78b5adc0372","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[],"tindex":"e7476dd0-4246-11e5-af87-c581b7edab72","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1248","type":"CtReturnImpl","sourcecode":"return java.util.Collections.synchronizedMap(java.util.Map<K, V>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1192","type":"CtReturnImpl","sourcecode":"return java.util.Map<K, V> == null ? java.util.Collections.<K,V>emptyMap() : java.util.Map<K, V>"},"status":-2},{"failures":[],"tindex":"e7476dd1-4246-11e5-af87-15751e7826a8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl","sourcecode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} "},"variableMap":{"obj":"obj","k":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1310","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"tindex":"e7476dd2-4246-11e5-af87-b15308ae4183","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"other"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1330","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(size())) {\n    return false;\n} "},"status":-1},{"failures":[19],"tindex":"e7476dd3-4246-11e5-af87-cb30e9474dbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:61","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super I, ? extends O>[])"},"variableMap":{"transformers":"iTransformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:111","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.Transformer<? super T, ? extends T> org.apache.commons.collections4.Transformer<? super T, ? extends T> : org.apache.commons.collections4.Transformer<? super T, ? extends T>[]) {\n    T = org.apache.commons.collections4.Transformer<? super T, ? extends T>.transform(T);\n}"},"status":-1},{"failures":[],"tindex":"e7476dd4-4246-11e5-af87-c1281205cbc4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.PrototypeFactory:197","type":"CtInvocationImpl","sourcecode":"java.io.ByteArrayOutputStream.close()"},"variableMap":{"baos":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} "},"status":-2},{"failures":[],"tindex":"e74794e5-4246-11e5-af87-3ff2ef740364","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:322","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)"},"status":-2},{"failures":[],"tindex":"e74794e6-4246-11e5-af87-6de4e7761473","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceMap:180","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[],"tindex":"e74794e7-4246-11e5-af87-099f3b754451","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:246","type":"CtLocalVariableImpl","sourcecode":"final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E"},"status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33],"tindex":"e74794e8-4246-11e5-af87-4d9c2a9a02ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:578","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1231","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeInt(int)"},"status":-1},{"failures":[],"tindex":"e74794e9-4246-11e5-af87-fb56485021c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:667","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-3},{"failures":[],"tindex":"e74794ea-4246-11e5-af87-05c14ab41d9d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:116","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.iterators.ArrayListIterator<E>.(hasPrevious()) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"this":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:590","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<E>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<E>.next();\n    final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object);\n    java.lang.StringBuilder.append(int);\n    java.lang.StringBuilder.append(':');\n    java.lang.StringBuilder.append(java.lang.Object);\n    if (java.util.Iterator<E>.hasNext()) {\n        java.lang.StringBuilder.append(',');\n    } \n}"},"status":-2},{"failures":[34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],"tindex":"e747bbfb-4246-11e5-af87-37e761e56100","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.TransformedCollection:111","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Transformer must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")"},"status":-1},{"failures":[],"tindex":"e747e30c-4246-11e5-af87-7bc6dd22e56e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:220","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeCollection without a CollectionMutator strategy\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:288","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())))"},"status":-2},{"failures":[],"tindex":"e747e30d-4246-11e5-af87-dd8bebf0c4c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1496","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values.ValueIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:290","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.ValuesIterator<V>(java.util.Iterator<V> , this)"},"status":-2},{"failures":[64,65,66,67,68],"tindex":"e7480a1e-4246-11e5-af87-f93bcc2d9c16","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:154","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().retainAll(null)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:95","type":"CtIfImpl","sourcecode":"if (!org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(contains(java.util.Iterator<?>.next()))) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"e7480a1f-4246-11e5-af87-c1bc498b5f31","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:525","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)"},"status":-2},{"failures":[],"tindex":"e7480a20-4246-11e5-af87-4dbcdc25fe09","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}