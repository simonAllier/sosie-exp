{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":0,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetRemoveChangesMap":7,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":12,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":56,"org.apache.commons.collections4.map.LinkedMapTest.testValuesRemoveChangesMap":5,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testKeySetRemoveChangesMap":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testValuesRemoveChangesMap":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":2,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":1,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":3,"org.apache.commons.collections4.MapUtilsTest.testConvertResourceBundle":40,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":10,"org.apache.commons.collections4.map.HashedMapTest.testKeySetRemoveChangesMap":15,"org.apache.commons.collections4.map.HashedMapTest.testValuesRemoveChangesMap":14,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":62,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":25,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":57,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":34,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":29,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":11,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":16,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":13,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":35,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":36,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":44,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":24,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":51,"org.apache.commons.collections4.ListUtilsTest.testSubtractNullElement":42,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":27,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":60,"org.apache.commons.collections4.map.ReferenceMapTest.testValuesRemoveChangesMap":26,"org.apache.commons.collections4.map.LinkedMapTest.testKeySetIteratorRemoveChangesMap":8,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":6,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":21,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":17,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":48,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":33,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":52,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":47,"org.apache.commons.collections4.CollectionUtilsTest.getFromObjectArray":54,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.ListUtilsTest.testSubtract":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":32,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":46,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":28,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":43,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":39,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":4,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":55,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testValuesRemoveChangesMap":22},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39],"tindex":"2368696f-4137-11e5-b4f5-ab297eaf9d64","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1194","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:350","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-1},{"failures":[40],"tindex":"23686970-4137-11e5-b4f5-993cbe7f9563","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:885","type":"CtWhileImpl","sourcecode":"while (java.util.Enumeration<java.lang.String>.hasMoreElements()) {\n    final java.lang.String java.lang.String = java.util.Enumeration<java.lang.String>.nextElement();\n    final java.lang.Object java.lang.Object = java.util.ResourceBundle.getObject(java.lang.String);\n    java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object);\n}"},"status":-1},{"failures":[],"tindex":"23686971-4137-11e5-b4f5-f5211f2aab29","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1182","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]) == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} "},"variableMap":{"x":"replacement","y":"deletedNode","dataElement":"dataElement","rootNode":"rootNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:962","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n} else if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-2},{"failures":[],"tindex":"23689082-4137-11e5-b4f5-e9ccf5110fb2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1758","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"variableMap":{"lastReturnedNode":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl","sourcecode":"return java.util.Map.Entry<K, V>.getKey()"},"status":0},{"failures":[41,42],"tindex":"23689083-4137-11e5-b4f5-69343f0e2e6b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:131","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<E>.add(E)"},"status":-1},{"failures":[43],"tindex":"23689084-4137-11e5-b4f5-a963513598ac","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}"},"status":-1},{"failures":[],"tindex":"23689085-4137-11e5-b4f5-ab8cca02347d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:513","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"node","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.KEY","newNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"2368b796-4137-11e5-b4f5-6303405095fb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.CompositeSet:353","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.UnmodifiableList:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[44],"tindex":"2368b797-4137-11e5-b4f5-853203e18c94","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1718","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection.synchronizedCollection(java.util.Collection<C>)"},"variableMap":{"collection":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1751","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection<C>, org.apache.commons.collections4.Predicate<? super C>)"},"status":-1},{"failures":[],"tindex":"2368dea8-4137-11e5-b4f5-3f4c82b277ee","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl","sourcecode":"E E = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.previous()"},"status":-2},{"failures":[45,46,47,48,49,50,51,52,53],"tindex":"2368dea9-4137-11e5-b4f5-e1292deb795e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:60","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.SortedBag<E>"},"variableMap":{"bag":"bag"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:47","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bag.CollectionSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)"},"status":-1},{"failures":[54],"tindex":"2368deaa-4137-11e5-b4f5-fdac427db711","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:131","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.java.lang.Object"},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.NULL":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"status":-1},{"failures":[],"tindex":"2368deab-4137-11e5-b4f5-e95f27ba48e0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl","sourcecode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} "},"status":-2},{"failures":[55,56,57,58],"tindex":"2368deac-4137-11e5-b4f5-170eab1c4dfe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:282","type":"CtAssignmentImpl","sourcecode":"int = -1"},"variableMap":{"retval":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:399","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[],"tindex":"2368dead-4137-11e5-b4f5-77c834d06e6f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} "},"variableMap":{"closure":"iClosure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.Closure<? super T>.execute(T)"},"status":0},{"failures":[],"tindex":"2368deae-4137-11e5-b4f5-956510dade4b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:1018","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.print(' ')"},"variableMap":{"out":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"236905bf-4137-11e5-b4f5-fd4422b68595","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:263","type":"CtReturnImpl","sourcecode":"return E[][int]"},"variableMap":{"elements":"array","idx":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ArrayListIterator:136","type":"CtReturnImpl","sourcecode":"return ((E)(java.lang.reflect.Array.get(this.java.lang.Object, (this.int)++)))"},"status":-2},{"failures":[],"tindex":"236905c0-4137-11e5-b4f5-4346bc64217a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()"},"status":-2},{"failures":[59,60,61,62],"tindex":"236905c1-4137-11e5-b4f5-734346a420d5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:71","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(null, 2)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)"},"status":-1},{"failures":[],"tindex":"236905c2-4137-11e5-b4f5-c5d9cbd1b595","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:431","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    int += this.java.util.Map<K, V>[][int].size();\n}"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}