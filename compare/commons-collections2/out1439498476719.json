{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":50,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":25,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":75,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":119,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":18,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":70,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":79,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":91,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":129,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":111,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":8,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":51,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":112,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":130,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":120,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":114,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":106,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":17,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":123,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":108,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":41,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":84,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":64,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":68,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":128,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":48,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":16,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionAddAll":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":60,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":104,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":47,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":117,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":82,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":132,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":61,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":124,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":88,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":103,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":72,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":116,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":92,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":131,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":28,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":98,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":32,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":49,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":105,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":81,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":36,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":55,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":113,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":7,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":12,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":40,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":127,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":23,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":52,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":9,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":59,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":83,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":45,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":6,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":42,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":39,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":38,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":29,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":2,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":118,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":19,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionAddAll":1,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":10,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":31,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":13,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":33,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":122,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":43,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":115,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":20,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":63,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":58,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":109,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":96,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":44,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":99,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":93},"transformations":[{"failures":[],"tindex":"a51c2538-41fb-11e5-b314-fbdb9ba2fa20","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeInserted(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-2},{"failures":[],"tindex":"a51c4c49-41fb-11e5-b314-ad336cf9c4cd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:150","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.comparators.ComparatorChain<E>.checkLocked()"},"status":-2},{"failures":[],"tindex":"a51c4c4a-41fb-11e5-b314-c12303616e03","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:254","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.previousIndex()) >= 0) {\n    java.util.ListIterator<?>.previous();\n}"},"status":-2},{"failures":[0,1],"tindex":"a51c735b-41fb-11e5-b314-6df8cafa6b37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:127","type":"CtReturnImpl","sourcecode":"return (java.util.Map<E, ? super V>.size()) != int"},"status":-1},{"failures":[2,3,4,5],"tindex":"a51c735c-41fb-11e5-b314-8f241544fdb5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl","sourcecode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)"},"variableMap":{"iterator":"currentIterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorChain:224","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()"},"status":-2},{"failures":[6,7,8],"tindex":"a51c735d-41fb-11e5-b314-d5685f45e032","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)"},"variableMap":{"this":"this","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"a51c735e-41fb-11e5-b314-0974dc962809","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"previous","key2":"key4","previous":"previous","hashCode":"hashCode","key3":"key4","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25],"tindex":"a51c735f-41fb-11e5-b314-9ff7072c3219","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl","sourcecode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false"},"variableMap":{"object":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:165","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(lookupKey(java.lang.Object)) != null"},"status":-1},{"failures":[],"tindex":"a51c9a70-41fb-11e5-b314-95d306674dbc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:321","type":"CtInvocationImpl","sourcecode":"java.util.BitSet.clear(int)"},"status":0},{"failures":[],"tindex":"a51c9a71-41fb-11e5-b314-9d50fddc2631","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\").append(\"ROOT\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"Trie[\").append(java.util.AbstractMap<K, V>.size()).append(\"]={\\n\")"},"status":0},{"failures":[],"tindex":"a51c9a72-41fb-11e5-b314-69215a3ef229","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:78","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue()"},"variableMap":{"result":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)"},"status":-2},{"failures":[26,27,28,29,30,31,32,33,34,35,36],"tindex":"a51c9a73-41fb-11e5-b314-f19d291f7ad0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:440","type":"CtInvocationImpl","sourcecode":"java.util.Map<java.lang.Object, java.lang.Long>.put(K, java.lang.Long.valueOf(long))"},"status":-1},{"failures":[],"tindex":"a51c9a74-41fb-11e5-b314-7fd5c8c4a10e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"composite","length":"length","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:414","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n    } \n}"},"status":-2},{"failures":[],"tindex":"a51c9a75-41fb-11e5-b314-ff12ece42574","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:553","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey()"},"status":-2},{"failures":[37],"tindex":"a51c9a76-41fb-11e5-b314-55d6e14d3ee2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:883","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[38],"tindex":"a51cc187-41fb-11e5-b314-bbec7d06079a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl","sourcecode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} "},"variableMap":{"a":"coll","b":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:255","type":"CtForEachImpl","sourcecode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (org.apache.commons.collections4.collection.CompositeCollection<E>.(contains(java.lang.Object)) == false) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"a51cc188-41fb-11e5-b314-5fd8cec68f2e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:376","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:189","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[39,40],"tindex":"a51cc189-41fb-11e5-b314-0718cf15a699","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:341","type":"CtIfImpl","sourcecode":"if ((java.util.ArrayList<E>) != null) {\n    throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\");\n} "},"variableMap":{"values":"toAdd"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:320","type":"CtForEachImpl","sourcecode":"for (final E E : java.util.Collection<? extends E>) {\n    if (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.contains(E)) {\n        continue;\n    } \n    org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated().add(E);\n    java.util.List<E>.add(E);\n    boolean = true;\n}"},"status":-1},{"failures":[],"tindex":"a51cc18a-41fb-11e5-b314-f1d64d4b9fa5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:139","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"firstCachedNode":"previous"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:340","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-2},{"failures":[41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133],"tindex":"a51cc18b-41fb-11e5-b314-cde0f3e2e23c","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}