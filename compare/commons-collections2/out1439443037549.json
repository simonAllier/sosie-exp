{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":24,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":13,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":30,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":70,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":68,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":57,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":3,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":71,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRetainAll":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":25,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":59,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFirstKey":76,"org.apache.commons.collections4.trie.UnmodifiableTrieTest.initializationError":120,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":43,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapEquals":89,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":123,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapIsEmpty":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":61,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapSize":85,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetIteratorRemoveChangesMap":115,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":44,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveAll":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":14,"org.apache.commons.collections4.trie.PatriciaTrieTest.initializationError":121,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsKey":87,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":22,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":12,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":81,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFullMapCompatibility":93,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetClearChangesMap":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":54,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":122,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":62,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":55,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":67,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapContainsValue":88,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRetainAll":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":80,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":15,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":28,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove3":107,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":106,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":105,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":125,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains1":102,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains2":103,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapHashCode":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetContains3":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":46,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesClearChangesMap":99,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":111,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":41,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullKey":95,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":69,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":23,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":42,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":32,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":49,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":112,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":51,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveAll":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":48,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":6,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":50,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":73,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":10,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":39,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRetainAll":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":53,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":17,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapGet":90,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":63,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":5,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapClear":86,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveAll":117,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutAll":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":11,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":4,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPutNullValue":96,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testPreviousKey":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":82,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapToString":92,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.CollectionUtilsTest.exists":126,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":8,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMakeMap":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":98,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":21,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetClearChangesMap":101,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapPut":94,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":52,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testLastKey":77,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":18,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":37,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":72},"transformations":[{"failures":[],"tindex":"90cb0da9-417a-11e5-b074-bd1884527af8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:400","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    (this.int)--;\n    return ;\n} "},"variableMap":{"next":"previous","entry":"entry","ref":"ref","previous":"next","data":"data","size":"index","index":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}"},"status":-2},{"failures":[],"tindex":"90cb34ba-417a-11e5-b074-81e03d8eac77","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"variableMap":{"key1":"key3","entry":"entry","key2":"key3","hashCode":"hashCode","key3":"key1","key4":"key2","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"90cb5bcb-417a-11e5-b074-a5bf851a2827","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"right=\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:1224","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('{')"},"status":0},{"failures":[],"tindex":"90cb5bcc-417a-11e5-b074-53e4f602cdf0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)"},"status":-2},{"failures":[],"tindex":"90cb5bcd-417a-11e5-b074-8f4b758ac482","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl","sourcecode":"int int = 1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:276","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hash(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"90cb5bce-417a-11e5-b074-d38f01d5635f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:353","type":"CtLocalVariableImpl","sourcecode":"int int = -1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:334","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"90cb5bcf-417a-11e5-b074-efc8118e6ea6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:212","type":"CtForImpl","sourcecode":"for (int int = int - int ; int <= (int + int) ; int += 2) {\n    final int int = (int + int) - int;\n    if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n        int[][int] = (int[][(int + 1)]) - 1;\n    } else {\n        int[][int] = int[][(int - 1)];\n    }\n    int int = (int[][int]) - 1;\n    int int = ((int - int) + int) - int;\n    while (((int >= int) && (int >= int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = int--;\n        int--;\n    }\n    if ((((int % 2) == 0) && ((-int) <= int)) && (int <= int)) {\n        if ((int[][int]) <= (int[][(int + int)])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][int], ((int + int) - int), int, int);\n        } \n    } \n}"},"variableMap":{"start1":"delta","d":"end1","offset":"offset","vDown":"vUp","delta":"start2","this":"this","sequence1":"sequence2","sequence2":"sequence1","vUp":"vDown","equator":"equator","end2":"start2","end1":"start2","start2":"delta"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:186","type":"CtForImpl","sourcecode":"for (int int = -int ; int <= int ; int += 2) {\n    final int int = int + int;\n    if ((int == (-int)) || ((int != int) && ((int[][(int - 1)]) < (int[][(int + 1)])))) {\n        int[][int] = int[][(int + 1)];\n    } else {\n        int[][int] = (int[][(int - 1)]) + 1;\n    }\n    int int = int[][int];\n    int int = ((int - int) + int) - int;\n    while (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n        int[][int] = ++int;\n        ++int;\n    }\n    if ((((int % 2) != 0) && ((int - int) <= int)) && (int <= (int + int))) {\n        if ((int[][(int - int)]) <= (int[][int])) {\n            return org.apache.commons.collections4.sequence.SequencesComparator<T>.buildSnake(int[][(int - int)], ((int + int) - int), int, int);\n        } \n    } \n}"},"status":-1},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"90cb82e0-417a-11e5-b074-effeef670cee","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"90cb82e1-417a-11e5-b074-4b51213b511c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"value":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1323","type":"CtIfImpl","sourcecode":"if (java.lang.Object == (this)) {\n    return true;\n} "},"status":0},{"failures":[],"tindex":"90cb82e2-417a-11e5-b074-e12cfbe9948f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl","sourcecode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException ex) {\n    return false;\n}"},"variableMap":{"coll":"iterable"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.addAll(java.util.Collection<C>, java.lang.Iterable<? extends C>.iterator())"},"status":-2},{"failures":[],"tindex":"90cba9f3-417a-11e5-b074-71ff342ee298","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:141","type":"CtInvocationImpl","sourcecode":"java.lang.Object.equals(java.lang.Object)"},"status":0},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"90cba9f4-417a-11e5-b074-9341d8ac058a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:242","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue() : null"},"variableMap":{"entry":"found"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:159","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.isValidBitIndex(int)) {\n    final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(K , V , int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int);\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    return null;\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementSize();\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} "},"status":-1},{"failures":[],"tindex":"90cba9f5-417a-11e5-b074-6763e0325f45","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:140","type":"CtLocalVariableImpl","sourcecode":"final long long = java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:439","type":"CtLocalVariableImpl","sourcecode":"final long long = org.apache.commons.collections4.map.PassiveExpiringMap.ExpirationPolicy<K, V>.expirationTime(K, V)"},"status":-2},{"failures":[76,78,79,80,81,82,84,85,87,88,89,90,91,92,94,97,98,102,103,105,106,107,111,120,121],"tindex":"90cbd106-417a-11e5-b074-effb90da0f95","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2074","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"endIndex1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:82","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    char = 0;\n} else {\n    char = java.lang.String.charAt(int);\n}"},"status":-1},{"failures":[],"tindex":"90cbd107-417a-11e5-b074-5bd018f16101","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:277","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.AbstractDualBidiMap.Values<V>(this)"},"variableMap":{"values":"valuesSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:395","type":"CtAssignmentImpl","sourcecode":"java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[122,123,124,125],"tindex":"90cbd108-417a-11e5-b074-c5a4633f7b05","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"modified","removed":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.CollectionSortedBag:148","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[],"tindex":"90cbd109-417a-11e5-b074-85ed61d5de4e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.ListIterator<E>.previous()"},"variableMap":{"iterator":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:468","type":"CtLocalVariableImpl","sourcecode":"final E E = java.util.Iterator<E>.next()"},"status":-2},{"failures":[126],"tindex":"90cbd10a-417a-11e5-b074-1f3ef369b6e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:848","type":"CtForEachImpl","sourcecode":"for (final C C : java.lang.Iterable<C>) {\n    if (org.apache.commons.collections4.Predicate<? super C>.evaluate(C)) {\n        return true;\n    } \n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":18,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}