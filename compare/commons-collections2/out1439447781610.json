{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":90,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":76,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePoll":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":81,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":102,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":127,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":121,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemoveAll":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":24,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":23,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":113,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":100,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":103,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRemove":44,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":133,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":109,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":61,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":124,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":49,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":83,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":62,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testGetIndex":25,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":104,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":72,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":59,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":65,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":64,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":78,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":63,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":118,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":131,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueRemove":37,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":94,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":110,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCollectionRetainAll":43,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiPut":82,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueuePeek":38,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":73,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":53,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":126,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":8,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueCircular":35,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":130,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":2,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":15,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testCircularFifoQueueRemove":26,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":115,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":116,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":10,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":114,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":99,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":13,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":51,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListSerialization":0,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":69,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":91,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":88,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":132,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testQueueElement":40,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":86,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":89,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":74,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":14,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":77,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":7,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":106,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError9":34,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError8":33,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError5":30,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError4":29,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError7":32,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError6":31,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":92,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError3":28,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRemoveError2":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":120,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":85,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":1,"org.apache.commons.collections4.ListUtilsTest.testIndexOf":134,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":84},"transformations":[{"failures":[],"tindex":"9c788cc8-4185-11e5-aaab-8dbadfb7c91c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:346","type":"CtReturnImpl","sourcecode":"return null"},"status":-2},{"failures":[],"tindex":"9c78b3d9-4185-11e5-aaab-2d24b75cd10d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:415","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].remove(java.lang.Object);\n} "},"variableMap":{"composite":"key","i":"size","key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:444","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 2;\n                return V;\n            } \n            return null;\n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            if ((K) == null) {\n                final V V = V;\n                int = int;\n                K = K;\n                V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 1;\n                return V;\n            } \n            return null;\n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                int = 0;\n                K = null;\n                V = null;\n                int = 0;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 2;\n                    return V;\n                } \n                return null;\n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = int;\n                    K = K;\n                    V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 1;\n                    return V;\n                } \n                return null;\n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    final V V = V;\n                    int = 0;\n                    K = null;\n                    V = null;\n                    int = 0;\n                    return V;\n                } \n        }\n    } \n}"},"status":-2},{"failures":[],"tindex":"9c78b3da-4185-11e5-aaab-1bff62d97e58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.HashedMap:96","type":"CtReturnImpl","sourcecode":"return ((org.apache.commons.collections4.map.HashedMap<K, V>)(super.clone()))"},"status":-2},{"failures":[],"tindex":"9c78b3db-4185-11e5-aaab-57d93f1428b0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:181","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:255","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.collections4.queue.CircularFifoQueue<E>.size()"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8],"tindex":"9c78b3dc-4185-11e5-aaab-897f9a01a098","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:624","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.add(((E)(java.io.ObjectInputStream.readObject())))"},"status":-1},{"failures":[],"tindex":"9c78daed-4185-11e5-aaab-77a22a4a7251","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:148","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.TransformedList<E>.listIterator(0)"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18],"tindex":"9c78daee-4185-11e5-aaab-157dca8802f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1754","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} "},"variableMap":{"lastReturnedNode":"node"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:869","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[19,20,21,22,23,24],"tindex":"9c78daef-4185-11e5-aaab-799c62d0d431","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:757","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.EmptyMapIterator.<K,V>emptyMapIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)"},"status":-1},{"failures":[25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44],"tindex":"9c78daf0-4185-11e5-aaab-6bee4d997f9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:327","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    int = 0;\n} "},"variableMap":{"maxElements":"start","index":"start"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:310","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    int = 0;\n} "},"status":-1},{"failures":[45,46,47,48,9,10,49,50,51,52,53,54,55,56,11,12,57,13,14,15,16,17,18,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"tindex":"9c78daf1-4185-11e5-aaab-af4bc307219b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:499","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(K, org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>(K , V);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow();\n            break;\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"9c790202-4185-11e5-aaab-43a3d7a884ea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.SwitchTransformer:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super I>[])"},"status":-2},{"failures":[132],"tindex":"9c790203-4185-11e5-aaab-d3639bcb9cd8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:87","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"setValue() is not supported\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[133],"tindex":"9c790204-4185-11e5-aaab-ddcd5308083c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:196","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.clear()"},"variableMap":{"normalMap":"transformed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)"},"status":-1},{"failures":[],"tindex":"9c790205-4185-11e5-aaab-bf8a60df8fa8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:133","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"9c792916-4185-11e5-aaab-1f6c55c64ebf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:187","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"variableMap":{"next":"entry","entry":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:647","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":-2},{"failures":[],"tindex":"9c792917-4185-11e5-aaab-5d6bdde6b1a5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:78","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.set.MapBackedSet<E, V>(java.util.Map<E, ? super V> , V)"},"status":-2},{"failures":[],"tindex":"9c792918-4185-11e5-aaab-4d58fce6cbe5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.SwitchClosure:99","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<E>[] org.apache.commons.collections4.Closure<E>[] = new org.apache.commons.collections4.Closure[int]"},"variableMap":{"size":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:360","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[int]"},"status":-2},{"failures":[],"tindex":"9c792919-4185-11e5-aaab-6d47e8a8f4b8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1260","type":"CtReturnImpl","sourcecode":"return ((java.lang.Object[])(java.lang.Object))[int]"},"variableMap":{"i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1288","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Array.get(java.lang.Object, int);\n} catch (final java.lang.IllegalArgumentException ex) {\n    throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n}"},"status":-2},{"failures":[134],"tindex":"9c79291a-4185-11e5-aaab-bbbe0fab89a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:510","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n    final E E = java.util.List<E>.get(int);\n    if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n        return int;\n    } \n}"},"variableMap":{"predicate":"predicate","list":"list"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:509","type":"CtIfImpl","sourcecode":"if ((java.util.List<E> != null) && (org.apache.commons.collections4.Predicate<E> != null)) {\n    for (int int = 0 ; int < (java.util.List<E>.size()) ; int++) {\n        final E E = java.util.List<E>.get(int);\n        if (org.apache.commons.collections4.Predicate<E>.evaluate(E)) {\n            return int;\n        } \n    }\n} "},"status":-1},{"failures":[],"tindex":"9c79291b-4185-11e5-aaab-99a6fdc9f98f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:99","type":"CtIfImpl","sourcecode":"if (char != 0) {\n    boolean = false;\n} "},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}