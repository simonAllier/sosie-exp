{"failureDictionary":{"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsKey_nullMatchesIncorrectly":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":51,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":7,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":71,"org.apache.commons.collections4.map.StaticBucketMapTest.testEntrySetRemove3":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":58,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":13,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":42,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":76,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":72,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsSelfHashCode":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":59,"org.apache.commons.collections4.TransformerUtilsTest.testChainedTransformer":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testNextKey":14,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":46,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":15,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":43,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapClear":22,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":11,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":66,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":29,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":73,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":61,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":64,"org.apache.commons.collections4.map.StaticBucketMapTest.testObjectHashCodeEqualsContract":25,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":57,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":20,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":4,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapGet":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":47,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":54,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":28,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":41,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":16,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":45,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":70,"org.apache.commons.collections4.map.LinkedMapTest.testPreviousKey":0,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":69,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":32,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":9,"org.apache.commons.collections4.map.LRUMapTest.testPreviousKey":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":33,"org.apache.commons.collections4.CollectionUtilsTest.testMatchesAll":2,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":31,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":34,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":62,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":74,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":18,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":67},"transformations":[{"failures":[],"tindex":"6fe6b340-4213-11e5-9c64-5baee7a07eff","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:211","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[0,1],"tindex":"6fe6da51-4213-11e5-9c64-b1cb31293b98","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:217","type":"CtReturnImpl","sourcecode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) || ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) ? null : org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey()"},"status":-1},{"failures":[2],"tindex":"6fe6da52-4213-11e5-9c64-65b5ca851058","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:873","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[3,4,5,6,7,8,9,10,11,12,13],"tindex":"6fe6da53-4213-11e5-9c64-33c85721d2bd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:230","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.K.equals(java.lang.Object)))) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"6fe6da54-4213-11e5-9c64-d5125fd36d88","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1007","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return false;\n} "},"variableMap":{"cSize":"nCopies"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:253","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.get(E);\n    int += int;\n    if (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger == null) {\n        java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n        return true;\n    } \n    org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int += int;\n    return false;\n} "},"status":0},{"failures":[14],"tindex":"6fe70165-4213-11e5-9c64-61963ab8315e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1785","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Can extract singleton only when collection size == 1\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:798","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException()"},"status":-1},{"failures":[],"tindex":"6fe70166-4213-11e5-9c64-c1a37e855c63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.MapUtils:977","type":"CtInvocationImpl","sourcecode":"java.io.PrintStream.println(\"null\")"},"variableMap":{"out":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:365","type":"CtIfImpl","sourcecode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} "},"status":-2},{"failures":[15],"tindex":"6fe70167-4213-11e5-9c64-9d95b32c20c3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")"},"status":-1},{"failures":[],"tindex":"6fe70168-4213-11e5-9c64-b13e9239c0af","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return 0;\n} "},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:175","type":"CtReturnImpl","sourcecode":"return java.lang.System.identityHashCode(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"6fe70169-4213-11e5-9c64-b15a112b3db1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl","sourcecode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>"},"status":0},{"failures":[],"tindex":"6fe7016a-4213-11e5-9c64-218bf9d8b011","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl","sourcecode":"return java.util.ListIterator<? extends E>.next()"},"variableMap":{"iterator":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.IteratorEnumeration:71","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<? extends E>.next()"},"status":-2},{"failures":[],"tindex":"6fe7016b-4213-11e5-9c64-512f92f5e632","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.TransformerUtils:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.ExceptionTransformer.<I,O>exceptionTransformer()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.TransformerUtils:104","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()"},"status":-2},{"failures":[],"tindex":"6fe7287c-4213-11e5-9c64-c3ef0b008132","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>.isInstance(java.lang.Object)"},"status":-2},{"failures":[16,17,18,19,20,21],"tindex":"6fe7287d-4213-11e5-9c64-bf9c6b2514c5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1202","type":"CtThrowImpl","sourcecode":"throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"))"},"status":-1},{"failures":[],"tindex":"6fe7287e-4213-11e5-9c64-f38dccb10103","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:92","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-2},{"failures":[11,12,22,13,4,5,23,24,6,7,8,9,25,26],"tindex":"6fe7287f-4213-11e5-9c64-6d1806cb043e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:426","type":"CtSynchronizedImpl","sourcecode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}"},"status":-1},{"failures":[27],"tindex":"6fe72880-4213-11e5-9c64-53e7bcefc7b5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:181","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<?, ?>[] == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer array must not be null\");\n} "},"variableMap":{"transformers":"transformers"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ChainedTransformer:51","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])"},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"6fe72881-4213-11e5-9c64-3547f8cae6d9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[76],"tindex":"6fe74f92-4213-11e5-9c64-a5b9a45064c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}"},"variableMap":{"coll2":"coll","coll1":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)"},"status":-1},{"failures":[],"tindex":"6fe74f93-4213-11e5-9c64-195ccfd2ea56","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1101","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || (int < (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    break;\n} "},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}