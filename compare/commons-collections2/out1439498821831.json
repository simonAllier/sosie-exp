{"failureDictionary":{"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByEntrySet":98,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRetainAll":85,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":143,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testPreviousKey":90,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapGet":110,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveAll":129,"org.apache.commons.collections4.map.LinkedMapTest.testRemoveByIndex":6,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRetainAll":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":13,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetClearChangesMap":121,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":29,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":43,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveAll":80,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":108,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":141,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":18,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testLocaleIndependence":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":37,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":117,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRetainAll":77,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutAll":70,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveChangesMap":132,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapClear":106,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveAll":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":9,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMakeMap":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":50,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetClearChangesMap":120,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":42,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKey":91,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMakeMap":57,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapRemove":71,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":142,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":112,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFullMapCompatibility":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":7,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":19,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRetainAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFullMapCompatibility":67,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullKey":115,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullKey":68,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiClear":53,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":74,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":73,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFirstKey":87,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove3":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":72,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove2":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemove1":125,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":75,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":139,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemove":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":11,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":28,"org.apache.commons.collections4.collection.CompositeCollectionTest.testRemoveAll":3,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastValues":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":26,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":47,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRetainAll":130,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":118,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testPutAll":22,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":16,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":10,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testKeySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiRemove":54,"org.apache.commons.collections4.ClosureUtilsTest.testSwitchMapClosure":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRetainAll":134,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testNullHandling":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":17,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":15,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testNextKey":89,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":138,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":66,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesClearChangesMap":119,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapClear":60,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":63,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains2":123,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains3":124,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetContains1":122,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":109,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":131,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutNullValue":116,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":105,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testUnmodifiable":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":12,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":61,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":52,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testFirstKey":46,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemove":95,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":55,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesIteratorRemoveChangesMap":78,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiMapIteratorSet":99,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiKeySetValuesOrder":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":4,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveAll":76,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastKeySet":101,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":65,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveChangesMap":136,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":41,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiClear":94,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiRemoveByKeySet":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetRemoveChangesMap":83,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":30,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":62,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":40,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":48,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":114,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":21,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testFailFastEntrySet":100,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testCaseInsensitive":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testLastKey":88,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetRemoveAll":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapPutNullValue":69,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":59,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesRemoveChangesMap":128,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiInverse":93,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":137,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":64,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":140,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testBidiGetKeyInverse":92},"transformations":[{"failures":[],"tindex":"72d035eb-41fc-11e5-bdc9-f78ab5331b11","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl","sourcecode":"return (java.lang.Object == (this)) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))"},"status":-2},{"failures":[0,1,2,3,4,5],"tindex":"72d05cfc-41fc-11e5-bdc9-051d538f10c4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl","sourcecode":"return (java.util.List<E>) != null"},"variableMap":{"nextPermutation":"item"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.CompositeCollection:134","type":"CtIfImpl","sourcecode":"if (java.util.Collection<E>.contains(java.lang.Object)) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"72d05cfd-41fc-11e5-bdc9-ddbcc1919f6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:187","type":"CtLocalVariableImpl","sourcecode":"java.lang.Object[] java.lang.Object[] = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1164","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]))"},"status":-2},{"failures":[],"tindex":"72d05cfe-41fc-11e5-bdc9-3f32adee2c74","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:260","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.list.TreeList<E>.checkInterval(int, 0, (org.apache.commons.collections4.list.TreeList<E>.(size()) - 1))"},"status":0},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"72d05cff-41fc-11e5-bdc9-55dafd615888","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:185","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue()"},"status":-1},{"failures":[27,28,29,30,31,32,33,34,35,36],"tindex":"72d05d00-41fc-11e5-bdc9-5d7107246040","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:396","type":"CtForEachImpl","sourcecode":"for (final java.util.Iterator<? extends E> java.util.Iterator<? extends E> : java.util.ArrayList<java.util.Iterator<? extends E>>) {\n    if (java.util.Iterator<? extends E>.hasNext()) {\n        return true;\n    } \n}"},"status":-1},{"failures":[37,38],"tindex":"72d08411-41fc-11e5-bdc9-edae8df4bbdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:234","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1"},"variableMap":{"position1":"object","position2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:286","type":"CtReturnImpl","sourcecode":"return java.util.List<E>.indexOf(java.lang.Object)"},"status":-1},{"failures":[39],"tindex":"72d08412-41fc-11e5-bdc9-79f855a24534","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:139","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.Closure<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The closure array must not contain a null closure, index \" + int) + \" was null\"));\n} "},"variableMap":{"closures":"trs","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ClosureUtils:363","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>> : java.util.Map<? extends E, org.apache.commons.collections4.Closure<E>>.entrySet()) {\n    org.apache.commons.collections4.Predicate<E>[][int] = org.apache.commons.collections4.functors.EqualPredicate.<E>equalPredicate(java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getKey());\n    org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue();\n    int++;\n}"},"status":-1},{"failures":[40,41,42,43],"tindex":"72d08413-41fc-11e5-bdc9-1ddea584608b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"variableMap":{"this":"this","visitor":"visitor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())"},"status":-1},{"failures":[],"tindex":"72d08414-41fc-11e5-bdc9-c5b86fdb3470","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:902","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139],"tindex":"72d08415-41fc-11e5-bdc9-51abf07f960d","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1284","type":"CtWhileImpl","sourcecode":"while (true) {\n    final int int = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.compare(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue(), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue());\n    if (int == 0) {\n        throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate value (\\\"\" + (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getData(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) + \"\\\") in this Map\"));\n    } else if (int < 0) {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    } else {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackInsert(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            break;\n        }\n    }\n}"},"variableMap":{"node":"currentNode","org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.VALUE":"dataElement","this":"this","newNode":"currentNode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:932","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[40,41,42,140,141,43],"tindex":"72d0ab26-41fc-11e5-bdc9-81069cc5d10b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:312","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} "},"variableMap":{"nodeCount":"k"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"72d0ab27-41fc-11e5-bdc9-b181d947d077","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:724","type":"CtUnaryOperatorImpl","sourcecode":"-1"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:305","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":-2},{"failures":[],"tindex":"72d0d238-41fc-11e5-bdc9-9f112d2a70f9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:68","type":"CtInvocationImpl","sourcecode":"java.io.ObjectInputStream.defaultReadObject()"},"status":-2},{"failures":[142,143],"tindex":"72d0d239-41fc-11e5-bdc9-fb45c154bf86","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.ListOrderedSet:223","type":"CtOperatorAssignmentImpl","sourcecode":"boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"72d0d23a-41fc-11e5-bdc9-0fc6f8525860","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ReferenceIdentityMap:205","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength.org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength)"},"status":0},{"failures":[],"tindex":"72d0d23b-41fc-11e5-bdc9-5b0a5af12d00","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl","sourcecode":"if ((int) < 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:301","type":"CtTryImpl","sourcecode":"try {\n    final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int);\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n    while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null)) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n    if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    (int)++;\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.removeEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.reuseEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addEntry(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int);\n} catch (final java.lang.NullPointerException ex) {\n    throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n}"},"status":-2},{"failures":[],"tindex":"72d0d23c-41fc-11e5-bdc9-af7142057c62","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:522","type":"CtLocalVariableImpl","sourcecode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E E = ((E)(java.io.ObjectInputStream.readObject()))"},"status":-2},{"failures":[],"tindex":"72d0f94d-41fc-11e5-bdc9-8919e1e58abc","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:67","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:750","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"72d0f94e-41fc-11e5-bdc9-2f8db0b617c8","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.MultiKey:268","type":"CtAssignmentImpl","sourcecode":"int = int"},"variableMap":{"total":"size","hashCode":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TreeList:274","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":0}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}