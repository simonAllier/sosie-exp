{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":10,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":30,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":19,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsSymmetricDifference":60,"org.apache.commons.collections4.CollectionUtilsTest.testDisjunctionAsUnionMinusIntersection":59,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":9,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":20,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":2,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":5,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":12,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":16,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate2Ex1":63,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":53,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer2":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":1,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":36,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":25,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":6,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":40,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":32,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":22,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":23,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":35,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":46,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":8,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":4,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":13,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":48,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":28,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":43,"org.apache.commons.collections4.CollectionUtilsTest.disjunction":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":44,"org.apache.commons.collections4.PredicateUtilsTest.testAsPredicateTransformerEx1":0,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":42,"org.apache.commons.collections4.TransformerUtilsTest.testInvokerTransformer":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":45,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":37,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":33,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":24,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":27,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":26},"transformations":[{"failures":[0],"tindex":"3c0711d2-4155-11e5-921e-034a795cced7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-1},{"failures":[],"tindex":"3c0738e3-4155-11e5-921e-6b1571e81b01","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.UnmodifiableTrie:86","type":"CtReturnImpl","sourcecode":"return java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.keySet())"},"status":-2},{"failures":[1],"tindex":"3c0738e4-4155-11e5-921e-1dd7d337f496","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:213","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[2],"tindex":"3c0738e5-4155-11e5-921e-f5e285cf1931","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:184","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[] = T[]"},"status":-1},{"failures":[],"tindex":"3c0738e6-4155-11e5-921e-ef74e525a8da","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:106","type":"CtLocalVariableImpl","sourcecode":"final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object))"},"status":-2},{"failures":[3],"tindex":"3c075ff7-4155-11e5-921e-29c73452c1e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:354","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No mutator specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotPredicate:47","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")"},"status":-1},{"failures":[],"tindex":"3c075ff8-4155-11e5-921e-773f04ece749","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:358","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.removeAllExpired(org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.now())"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.FixedSizeMap:97","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[2],"tindex":"3c075ff9-4155-11e5-921e-9f4437fc572d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:184","type":"CtAssignmentImpl","sourcecode":"java.lang.Object[] = T[]"},"status":-1},{"failures":[],"tindex":"3c075ffa-4155-11e5-921e-23254a8335be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1086","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<?> != null) {\n    return java.util.Iterator<?>;\n} "},"variableMap":{"it":"iterator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.UnmodifiableIterator:51","type":"CtIfImpl","sourcecode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Iterator<E> java.util.Iterator<E> = ((java.util.Iterator<E>)(java.util.Iterator<? extends E>));\n    return java.util.Iterator<E>;\n} "},"status":-2},{"failures":[],"tindex":"3c075ffb-4155-11e5-921e-47951d4875f5","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:205","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key2","entry":"entry","key2":"key2","previous":"entry","hashCode":"hashCode","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"3c075ffc-4155-11e5-921e-1ba5a4db36f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:272","type":"CtInvocationImpl","sourcecode":"java.util.ArrayList<java.util.Iterator<? extends E>>.get(int)"},"status":0},{"failures":[],"tindex":"3c07870d-4155-11e5-921e-fdaf1baf8481","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:142","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:91","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)"},"status":-2},{"failures":[],"tindex":"3c07870e-4155-11e5-921e-a5e535b0f98c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:557","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getValue()"},"variableMap":{"this":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LazyMap:166","type":"CtInvocationImpl","sourcecode":"java.util.Map<K, V>.put(K, V)"},"status":-2},{"failures":[],"tindex":"3c07870f-4155-11e5-921e-5b6844495fae","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:83","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().values()"},"status":-2},{"failures":[],"tindex":"3c078710-4155-11e5-921e-79864f5a17c7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1045","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"currentNode":"currentNode","this":"this","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1030","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":0},{"failures":[4,5,6,7,8,9],"tindex":"3c07ae21-4155-11e5-921e-b190a40e9732","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:234","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null ? java.lang.Integer == null ? 0 : -1 : 1"},"variableMap":{"position1":"object","position2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.SynchronizedBag:108","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object)"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"3c07ae22-4155-11e5-921e-cd198bc335ab","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[58,59,60],"tindex":"3c07ae23-4155-11e5-921e-9b98105489c8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:281","type":"CtForEachImpl","sourcecode":"for (final O O : org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>) {\n    org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.setCardinality(O, ((org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.max(O)) - (org.apache.commons.collections4.CollectionUtils.SetOperationCardinalityHelper<O>.min(O))));\n}"},"status":-1},{"failures":[],"tindex":"3c07ae24-4155-11e5-921e-0b61615e21bc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"status":-2},{"failures":[61,62,63],"tindex":"3c07ae25-4155-11e5-921e-dd7014138dc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InvokerTransformer:73","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}