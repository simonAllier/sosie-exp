{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":58,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesIteratorRemoveChangesMap":66,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":17,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullKey":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testNullHandling":75,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation2":4,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRetainAll":73,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveAll":46,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetIteratorRemoveChangesMap":80,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation4":5,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue2":7,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testValuesRemoveChangesMap":65,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue3":8,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue2":10,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastKeySet":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":25,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetClearChangesMap":37,"org.apache.commons.collections4.map.Flat3MapTest.testEntryIteratorSetValue1":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue3":11,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":28,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":68,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":24,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRetainAll":51,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveAll":72,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":26,"org.apache.commons.collections4.map.LRUMapTest.testLRU":0,"org.apache.commons.collections4.map.ReferenceMapTest.testNullHandling":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":59,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":69,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveAll":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapIteratorSetValue1":9,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":60,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesRemoveChangesMap":70,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":22,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":31,"org.apache.commons.collections4.trie.PatriciaTrieTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testFullIterator":92,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRemoveChangesMap":45,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testKeySetRemoveChangesMap":79,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastValues":19,"org.apache.commons.collections4.map.Flat3MapTest.testValuesRetainAll":47,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":23,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":16,"org.apache.commons.collections4.map.Flat3MapTest.testFullMapCompatibility":30,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetRemoveChangesMap":49,"org.apache.commons.collections4.map.Flat3MapTest.testClone2":15,"org.apache.commons.collections4.map.LinkedMapTest.testFullMapCompatibility":63,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemoveChangesMap":81,"org.apache.commons.collections4.map.Flat3MapTest.testEquals1":13,"org.apache.commons.collections4.map.LRUMapTest.testInternalState_Buckets":1,"org.apache.commons.collections4.map.Flat3MapTest.testEquals2":14,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.map.ReferenceMapTest.testKeySetRemoveChangesMap":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":27,"org.apache.commons.collections4.map.Flat3MapTest.testKeySetIteratorRemoveChangesMap":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":34,"org.apache.commons.collections4.map.Flat3MapTest.testValuesIteratorRemoveChangesMap":48,"org.apache.commons.collections4.map.Flat3MapTest.testValuesClearChangesMap":36,"org.apache.commons.collections4.map.Flat3MapTest.testMakeMap":20,"org.apache.commons.collections4.map.MultiKeyMapTest.testLRUMultiKeyMap":2,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":35,"org.apache.commons.collections4.MapUtilsTest.testPutAll_Map_array":61,"org.apache.commons.collections4.map.Flat3MapTest.testToString":3,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":56,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":42,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":43,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":76,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":53,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":64,"org.apache.commons.collections4.iterators.PeekingIteratorTest.testEmptyIterator":91,"org.apache.commons.collections4.map.Flat3MapTest.testCollections261":12,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemoveChangesMap":89,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":29,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":40,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":41,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testBasics":74,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":57,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetIteratorRemoveChangesMap":82,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMapRemoval":67,"org.apache.commons.collections4.map.ReferenceMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutNullValue":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":38,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":21},"transformations":[{"failures":[],"tindex":"963d4105-414a-11e5-bc66-2176eddaa4e6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:368","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[0,1,2],"tindex":"963d6816-414a-11e5-bc66-5d97742e49a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LRUMap:367","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[],"tindex":"963d6817-414a-11e5-bc66-d924b0e6acfa","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:730","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet();\n} "},"variableMap":{"delegateMap":"delegateMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:949","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.keySet();\n} "},"status":-2},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"tindex":"963d6818-414a-11e5-bc66-7f9780143485","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:364","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":-1},{"failures":[57,58,59,60],"tindex":"963d6819-414a-11e5-bc66-8b424db29623","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:161","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 6"},"variableMap":{"hash":"h"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:677","type":"CtOperatorAssignmentImpl","sourcecode":"int ^= int >>> 10"},"status":-1},{"failures":[61],"tindex":"963d681a-414a-11e5-bc66-b32643b628f7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:164","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior == null) {\n    throw new java.lang.IllegalArgumentException(\"Unknown object behavior must not be null\");\n} "},"variableMap":{"unknownObjectBehavior":"obj"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.MapUtils:1156","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof org.apache.commons.collections4.KeyValue) {\n    for (final java.lang.Object java.lang.Object : java.lang.Object[]) {\n        final org.apache.commons.collections4.KeyValue<K, V> org.apache.commons.collections4.KeyValue<K, V> = ((org.apache.commons.collections4.KeyValue<K, V>)(java.lang.Object));\n        java.util.Map<K, V>.put(org.apache.commons.collections4.KeyValue<K, V>.getKey(), org.apache.commons.collections4.KeyValue<K, V>.getValue());\n    }\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n        final java.lang.Object[] java.lang.Object[] = ((java.lang.Object[])(java.lang.Object[][int]));\n        if ((java.lang.Object[] == null) || ((java.lang.Object[].int) < 2)) {\n            throw new java.lang.IllegalArgumentException((\"Invalid array element: \" + int));\n        } \n        java.util.Map<K, V>.put(((K)(java.lang.Object[][0])), ((V)(java.lang.Object[][1])));\n    }\n} else {\n    for (int int = 0 ; int < ((java.lang.Object[].int) - 1) ; ) {\n        java.util.Map<K, V>.put(((K)(java.lang.Object[][int++])), ((V)(java.lang.Object[][int++])));\n    }\n}"},"status":-1},{"failures":[],"tindex":"963d8f2b-414a-11e5-bc66-b9147c869bdf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:56","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Predicate<? super T>[])"},"variableMap":{"predicates":"o"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1201","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    throw new java.lang.NullPointerException((org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement + \" cannot be null\"));\n} "},"status":-2},{"failures":[],"tindex":"963d8f2c-414a-11e5-bc66-a3244695b219","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:283","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n} "},"variableMap":{"composite":"key1","i":"hashCode","key":"key3"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:558","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"963d8f2d-414a-11e5-bc66-23f68fd47025","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:568","type":"CtIfImpl","sourcecode":"if (java.util.Map<?, ?> == null) {\n    java.util.Map<?, ?> = java.util.Map<?, ?>;\n} "},"variableMap":{"answer":"map","defaultValue":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:291","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, java.lang.Object> java.util.Map.Entry<? extends K, java.lang.Object> : ((org.apache.commons.collections4.MultiMap<? extends K, V>)(java.util.Map<? extends K, ?>)).entrySet()) {\n    org.apache.commons.collections4.map.MultiValueMap<K, V>.putAll(java.util.Map.Entry<? extends K, java.lang.Object>.getKey(), ((java.util.Collection<V>)(java.util.Map.Entry<? extends K, java.lang.Object>.getValue())));\n}"},"status":-2},{"failures":[62,63],"tindex":"963d8f2e-414a-11e5-bc66-a317d5e5397a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1294","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.init()"},"variableMap":{"cloned":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.LinkedMap:132","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":-1},{"failures":[],"tindex":"963db63f-414a-11e5-bc66-b7c9a51caae9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"variableMap":{"flag":"nextObjectSet","removed":"nextObjectSet"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":0},{"failures":[64,65,66,67,68,69,70,71,72,73],"tindex":"963db640-414a-11e5-bc66-edcd521509dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:483","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeInternalEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)"},"status":-1},{"failures":[],"tindex":"963db641-414a-11e5-bc66-bb49b7cfc939","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:750","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"963db642-414a-11e5-bc66-d339cf157498","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:768","type":"CtReturnImpl","sourcecode":"return \"MapIterator[]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()"},"status":0},{"failures":[],"tindex":"963db643-414a-11e5-bc66-0bb96cdaff3a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:398","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 4"},"variableMap":{"h":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:171","type":"CtAssignmentImpl","sourcecode":"this.int = this.int"},"status":0},{"failures":[74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90],"tindex":"963db644-414a-11e5-bc66-3bf0b8d057ed","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl","sourcecode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"963db645-414a-11e5-bc66-23c99f8a81ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1047","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":0},{"failures":[91,92],"tindex":"963db646-414a-11e5-bc66-c9411cf78be4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PeekingIterator:137","type":"CtThrowImpl","sourcecode":"throw new java.util.NoSuchElementException()"},"status":-1},{"failures":[],"tindex":"963ddc57-414a-11e5-bc66-2330f0ab48c1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:140","type":"CtLocalVariableImpl","sourcecode":"final long long = java.lang.System.currentTimeMillis()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:405","type":"CtLocalVariableImpl","sourcecode":"final long long = java.lang.Long.longValue()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}