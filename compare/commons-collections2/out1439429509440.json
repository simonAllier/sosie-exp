{"failureDictionary":{"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":45,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":54,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":43,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testFullMapCompatibility":13,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsKey":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":27,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapEquals":35,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":26,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":46,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":5,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsValue":34,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":4,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapHashCode":36,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapSize":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":39,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPutAll":38,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapContainsKey":33,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testPreviousKey":21,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":10,"org.apache.commons.collections4.CollectionUtilsTest.collect":18,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":1,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.ReferenceMapTest.testSimpleSerialization":11,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":2,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection":20,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapIsEmpty":31,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":44,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapEquals":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapToString":37,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":7,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":50,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapSize":48,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSimpleSerialization":15,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.ReferenceMapTest.testFullMapCompatibility":9,"org.apache.commons.collections4.map.ListOrderedMap2Test.testPreviousKey":22,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":6,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":24,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":30,"org.apache.commons.collections4.map.ReferenceMapTest.testEmptyMapCompatibility":8,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":25,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testPreviousKey":23,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testEmptyMapCompatibility":12,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapHashCode":52,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapRemove":56,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":40,"org.apache.commons.collections4.CollectionUtilsTest.transform2":16,"org.apache.commons.collections4.CollectionUtilsTest.testIsSubCollection2":19,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":28,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapToString":53,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPutAll":55,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":3,"org.apache.commons.collections4.CollectionUtilsTest.testIsEqualCollectionEquator":17,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":29},"transformations":[{"failures":[],"tindex":"1168d40b-415b-11e5-9db5-77e21c3741d7","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl","sourcecode":"return (T) == T"},"status":-2},{"failures":[0,1],"tindex":"1168fb1c-415b-11e5-9db5-47fa9e103751","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:727","type":"CtInvocationImpl","sourcecode":"C.execute(T)"},"status":-1},{"failures":[2,3,4,5,6,7],"tindex":"1168fb1d-415b-11e5-9db5-ed0be3c32264","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:215","type":"CtIfImpl","sourcecode":"if ((int == (int - int)) || ((int != (int + int)) && ((int[][(int + 1)]) <= (int[][(int - 1)])))) {\n    int[][int] = (int[][(int + 1)]) - 1;\n} else {\n    int[][int] = int[][(int - 1)];\n}"},"status":-1},{"failures":[],"tindex":"1168fb1e-415b-11e5-9db5-d39535296839","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:304","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[8,9,10,11,12,13,14,15],"tindex":"1168fb1f-415b-11e5-9db5-8520e7182109","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:1033","type":"CtAssignmentImpl","sourcecode":"this.boolean = java.io.ObjectInputStream.readBoolean()"},"status":-1},{"failures":[],"tindex":"1168fb20-415b-11e5-9db5-e9e9c616d61e","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:255","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.AbstractLinkedList<E>.(size()) > 0) {\n    final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.CursorableLinkedList<E>.iterator();\n    while (java.util.Iterator<E>.hasNext()) {\n        java.util.Iterator<E>.next();\n        java.util.Iterator<E>.remove();\n    }\n} "},"status":-2},{"failures":[16,17,18],"tindex":"11692231-415b-11e5-9db5-0599943f15a8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1065","type":"CtIfImpl","sourcecode":"if ((java.util.Iterator<? extends I> != null) && (org.apache.commons.collections4.Transformer<? super I, ? extends O> != null)) {\n    while (java.util.Iterator<? extends I>.hasNext()) {\n        final I I = java.util.Iterator<? extends I>.next();\n        final O O = org.apache.commons.collections4.Transformer<? super I, ? extends O>.transform(I);\n        R.add(O);\n    }\n} "},"status":-1},{"failures":[],"tindex":"11692232-415b-11e5-9db5-3f76215cf503","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.CloneTransformer:67","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.CloneTransformer:69","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.PrototypeFactory.prototypeFactory(T).create()"},"status":-2},{"failures":[19,20],"tindex":"11692233-415b-11e5-9db5-d9a8ca326e1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:467","type":"CtReturnImpl","sourcecode":"return false"},"status":-1},{"failures":[],"tindex":"11692234-415b-11e5-9db5-7930d9ca0591","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:1058","type":"CtAssignmentImpl","sourcecode":"int = (int)++"},"variableMap":{"nextIndex":"cacheSize","currentIndex":"cacheSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:173","type":"CtUnaryOperatorImpl","sourcecode":"(int)++"},"status":0},{"failures":[],"tindex":"11692235-415b-11e5-9db5-43879c64165a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:89","type":"CtIfImpl","sourcecode":"if (K == null) {\n    return 0;\n} "},"status":0},{"failures":[],"tindex":"11692236-415b-11e5-9db5-bbd042c535fd","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:112","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl","sourcecode":"return java.util.Map<E, ? super V>.isEmpty()"},"status":-2},{"failures":[],"tindex":"11694947-415b-11e5-9db5-2ba026c2030b","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:96","type":"CtReturnImpl","sourcecode":"return ((int * (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)) + (java.lang.Integer.numberOfLeadingZeros(int))) - (org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int)"},"variableMap":{"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.LENGTH":"i","x":"i","i":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:136","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"11694948-415b-11e5-9db5-2f93bbcfd117","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl","sourcecode":"if ((int) >= 0) {\n    (int)++;\n} "},"variableMap":{"relativePosition":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl","sourcecode":"if (int < int) {\n    int--;\n} "},"status":-2},{"failures":[21,22,23],"tindex":"11694949-415b-11e5-9db5-d1fa5e16bdd1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:211","type":"CtReturnImpl","sourcecode":"return java.util.List<K>.get((int - 1))"},"status":-1},{"failures":[24,25,26,27,28,29,30],"tindex":"1169494a-415b-11e5-9db5-af90685f9869","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1167","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} "},"status":-1},{"failures":[31,32,33,34,35,36,37,24,38,25,39,40,41,42,43,44,45],"tindex":"1169494b-415b-11e5-9db5-9bba8a47712b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1252","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int));\n} "},"variableMap":{"i":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl","sourcecode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[46],"tindex":"1169494c-415b-11e5-9db5-97e9c01836e3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl","sourcecode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} "},"variableMap":{"count":"count","closure":"closure"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl","sourcecode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} "},"status":-1},{"failures":[],"tindex":"1169705d-415b-11e5-9db5-7d301c9cd35c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:160","type":"CtOperatorAssignmentImpl","sourcecode":"int += int << 3"},"variableMap":{"hash":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:330","type":"CtOperatorAssignmentImpl","sourcecode":"int -= org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56],"tindex":"1169705e-415b-11e5-9db5-bb35c5dfc63d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:425","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            int += org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.hashCode();\n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}