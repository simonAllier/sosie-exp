{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":54,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":73,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":20,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetClearChangesMap":95,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":18,"org.apache.commons.collections4.ListUtilsTest.testHashCode":108,"org.apache.commons.collections4.map.SingletonMapTest.testBoundedMap":110,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":57,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testRemove":1,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testRetainAll":2,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":55,"org.apache.commons.collections4.map.LRUMapTest.testValuesIteratorRemoveChangesMap":106,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":101,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":43,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":81,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":82,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":61,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":45,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":46,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":16,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":35,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":44,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":74,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":52,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":72,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":86,"org.apache.commons.collections4.comparators.TransformingComparatorTest.testSerializeDeserializeThenCompare":5,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":14,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":50,"org.apache.commons.collections4.map.LinkedMapTest.testValuesIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":62,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":88,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":15,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":17,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":104,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":40,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":85,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":75,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":91,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":90,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":77,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":105,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":6,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":41,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":36,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":38,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":53,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":42,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":32,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":9,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":92,"org.apache.commons.collections4.CollectionUtilsTest.getFromEnumeration":76,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":84,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":98,"org.apache.commons.collections4.map.Flat3MapTest.testMapHashCode":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":58,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":66,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":10,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":23,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":99,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":93,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":29,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":70,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":39,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":97,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":109,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":100,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":7,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":13,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":34,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":49,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":0,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":47,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":3,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":63,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":69,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":78,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":71,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":94,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":87,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":24,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":103,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":60,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":89,"org.apache.commons.collections4.map.ReferenceMapTest.testMapHashCode":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":67,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":12,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":25,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":48,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":37,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":22},"transformations":[{"failures":[],"tindex":"6246e3e2-416a-11e5-b774-cbef26cd299c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:200","type":"CtIfImpl","sourcecode":"if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n    return true;\n} "},"variableMap":{"composite":"value","i":"length","key":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.StaticBucketMap:247","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[].int) ; int++) {\n    synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n        while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n            if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n                return true;\n            } \n            org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n        }\n    }\n}"},"status":-2},{"failures":[0],"tindex":"6246e3e3-416a-11e5-b774-df3ceaee05d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.AllPredicate:64","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"variableMap":{"predicates":"predicates"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.AnyPredicate:60","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))"},"status":-1},{"failures":[],"tindex":"62470af4-416a-11e5-b774-a5948c8329c8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl","sourcecode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])"},"variableMap":{"iArgs":"iArgs","iConstructor":"iConstructor"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException ex) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}"},"status":-2},{"failures":[],"tindex":"62470af5-416a-11e5-b774-4db10abbf0be","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl","sourcecode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} "},"variableMap":{"list1":"coll","list2":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:365","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.AbstractMapBag<E>.retainAll(new org.apache.commons.collections4.bag.HashBag<java.lang.Object>(java.util.Collection<?>))"},"status":-2},{"failures":[1],"tindex":"62470af6-416a-11e5-b774-cb8b5e05791f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.SetUniqueList:98","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Set must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")"},"status":-1},{"failures":[2,3,4],"tindex":"62470af7-416a-11e5-b774-47ec5e6731d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:563","type":"CtAssignmentImpl","sourcecode":"boolean = false"},"variableMap":{"valid":"modified"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:284","type":"CtAssignmentImpl","sourcecode":"boolean = true"},"status":-1},{"failures":[5],"tindex":"62470af8-416a-11e5-b774-6f59a694ea70","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl","sourcecode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} "},"variableMap":{"o1":"object","o2":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} "},"status":-1},{"failures":[],"tindex":"62470af9-416a-11e5-b774-77e7aa0c5a01","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1021","type":"CtIfImpl","sourcecode":"if (int < 1) {\n    throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\");\n} "},"variableMap":{"estimatedSize":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:129","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Object[].int) ; int++) {\n    java.lang.Object[][int] = new org.apache.commons.collections4.map.UnmodifiableEntrySet.UnmodifiableEntry(((java.util.Map.Entry<K, V>)(java.lang.Object[][int])));\n}"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"6247320a-416a-11e5-b774-939fe2685c5d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:269","type":"CtIfImpl","sourcecode":"if ((int) == (-1)) {\n    throw new java.lang.IllegalStateException(\"No value can be removed at present\");\n} "},"variableMap":{"lastReturned":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1352","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n    int += java.util.Iterator<java.util.Map.Entry<K, V>>.next().hashCode();\n}"},"status":-1},{"failures":[],"tindex":"6247320b-416a-11e5-b774-79c5118defd6","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1388","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\")\")"},"variableMap":{"buffer":"buf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:377","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('}')"},"status":0},{"failures":[76],"tindex":"6247320c-416a-11e5-b774-2169bebd9dfd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:354","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException(\"No mutator specified\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1284","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int))"},"status":-1},{"failures":[77,78],"tindex":"6247320d-416a-11e5-b774-f71412dbd332","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()"},"status":-1},{"failures":[],"tindex":"6247320e-416a-11e5-b774-3333b79113c9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:637","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object)"},"variableMap":{"k":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.PassiveExpiringMap:491","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object)"},"status":-2},{"failures":[79,80,81,82,83,84,85,86,87,88,89,90,91,92],"tindex":"6247320f-416a-11e5-b774-fbf5dba1cf1a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2403","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>(null , null , -1)"},"variableMap":{"root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:437","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[93,94,95,96,97,98,99,100,101,102,103,104,105],"tindex":"62475920-416a-11e5-b774-b392e660ec91","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:321","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    org.apache.commons.collections4.set.CompositeSet<K>.addComposited(this.java.util.Map<K, V>[][int].keySet());\n}"},"status":-1},{"failures":[19,23,106,69,73,107],"tindex":"62475921-416a-11e5-b774-d70eb73cdcb3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    return false;\n} "},"variableMap":{"obj":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl","sourcecode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"62475922-416a-11e5-b774-89af0ae65d50","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.MultiKeyMap:338","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n    return V;\n} "},"variableMap":{"key1":"key4","entry":"entry","key2":"key3","previous":"entry","hashCode":"hashCode","key3":"key1","this":"this","index":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:409","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n    return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n} "},"status":-2},{"failures":[108],"tindex":"62478033-416a-11e5-b774-c93a90b228aa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:288","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<?>.hasNext()) {\n    final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n    int = (31 * int) + (java.lang.Object == null ? 0 : java.lang.Object.hashCode());\n}"},"status":-1},{"failures":[109],"tindex":"62478034-416a-11e5-b774-ffdc7b36498b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ListUtils:686","type":"CtIfImpl","sourcecode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" must be less than size \") + int));\n} "},"variableMap":{"index":"index","listSize":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:340","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)"},"status":-1},{"failures":[110],"tindex":"62478035-416a-11e5-b774-016173645ee3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.SingletonMap:169","type":"CtReturnImpl","sourcecode":"return true"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}