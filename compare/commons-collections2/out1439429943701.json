{"failureDictionary":{"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":10,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEqualsAndHashCode":33,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListEquals":38,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemove":53,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndex":40,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListHashCode":60,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testKeySetIteratorRemoveChangesMap":29,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContainsAll":72,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRemoveAll":54,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testValuesIteratorRemoveChangesMap":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIndexOf":41,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRetainAll":78,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":20,"org.apache.commons.collections4.functors.ComparatorPredicateTest.compareLess":21,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":35,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":2,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndex":37,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":5,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemove":76,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":9,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionToArray2":79,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":16,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIsEmpty":73,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":13,"org.apache.commons.collections4.SetUtilsTest.testHashCode":25,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":4,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":7,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorAdd":66,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContains":48,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListEquals":59,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":11,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionRetainAll":55,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetRemoveAll":24,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndex":43,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAdd":46,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":15,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListHashCode":39,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndex":65,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAdd":69,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":19,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":18,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionRemoveAll":77,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":3,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIterator":74,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":6,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":36,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndex":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionContains":71,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapPut":26,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":45,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIteratorRemove":52,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionIteratorRemove":75,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListLastIndexOf":42,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIterator":51,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testMapRemove":27,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":1,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":0,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetRemoveAll":23,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIndexOf":62,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListLastIndexOf":63,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":22,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRemoveAll":30,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndex":61,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndex":64,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":12,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListIteratorSet":67,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndex":44,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionToArray2":56,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionAddAll":47,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testCollectionAddAll":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionIsEmpty":50,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testFullListCompatibility":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":57,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCollectionContainsAll":49,"org.apache.commons.collections4.bidimap.TreeBidiMapTest.testEntrySetRetainAll":31},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],"tindex":"143fcbf3-415c-11e5-a536-a700401b6c37","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)"},"variableMap":{"this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)"},"status":-1},{"failures":[],"tindex":"143ff304-415c-11e5-a536-a19f87ed300f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.list.TreeList:583","type":"CtIfImpl","sourcecode":"if ((int) > 0) {\n    (int)--;\n} "},"variableMap":{"relativePosition":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:611","type":"CtIfImpl","sourcecode":"if ((int) >= (int)) {\n    final int int = (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int) * 2;\n    if (int <= (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(int);\n    } \n} "},"status":-2},{"failures":[21],"tindex":"143ff305-415c-11e5-a536-efa228d4dae9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ComparatorPredicate:178","type":"CtBreakImpl","sourcecode":"break"},"status":-1},{"failures":[],"tindex":"143ff306-415c-11e5-a536-b9de1d321af6","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:185","type":"CtReturnImpl","sourcecode":"return java.lang.Integer == null"},"variableMap":{"position":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:155","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.(indexOf(java.lang.Object)) != (-1)"},"status":-2},{"failures":[],"tindex":"143ff307-415c-11e5-a536-d16de169e42f","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:131","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[22,23,24],"tindex":"143ff308-415c-11e5-a536-47ebc1d48c2b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.FunctorUtils:80","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate array must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.UnmodifiableSet:101","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[25],"tindex":"14401a19-415c-11e5-a536-2916cdf12441","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:671","type":"CtIfImpl","sourcecode":"if (int > (org.apache.commons.collections4.map.AbstractHashedMap.int)) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap.int;\n} "},"variableMap":{"org.apache.commons.collections4.map.AbstractHashedMap.MAXIMUM_CAPACITY":"hashCode","newCapacity":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.SetUtils:147","type":"CtIfImpl","sourcecode":"if (T != null) {\n    int += T.hashCode();\n} "},"status":-1},{"failures":[],"tindex":"14401a1a-415c-11e5-a536-f9974482ed65","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator:78","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().inverseBidiMap()"},"variableMap":{"this":"reverseMap"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:88","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.bidimap.DualHashBidiMap<V, K>(java.util.Map<V, K> , java.util.Map<K, V> , org.apache.commons.collections4.BidiMap<K, V>)"},"status":-2},{"failures":[],"tindex":"14401a1b-415c-11e5-a536-83b183dbfb02","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.IteratorUtils:495","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.iterators.IteratorChain<E>(java.util.Iterator<? extends E> , java.util.Iterator<? extends E>)"},"status":-2},{"failures":[26,27,28,29,30,31,32],"tindex":"14401a1c-415c-11e5-a536-571cbbc5bcb7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:718","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}"},"status":-1},{"failures":[],"tindex":"14401a1d-415c-11e5-a536-070f6ece2afb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.TransformedList:114","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.((java.util.List<E>)(decorated()))"},"status":-2},{"failures":[],"tindex":"14401a1e-415c-11e5-a536-6feb26334a20","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:573","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"variableMap":{"p":"right","parent":"right","left":"right","h":"p"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:601","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.isValidUplink(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} "},"status":-2},{"failures":[],"tindex":"1440412f-415c-11e5-a536-0f3676f17308","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:598","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:548","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupValue(java.lang.Object)"},"status":-2},{"failures":[],"tindex":"14404130-415c-11e5-a536-51555182b53d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.CompositeMap:282","type":"CtForImpl","sourcecode":"for (int int = (this.java.util.Map<K, V>[].int) - 1 ; int >= 0 ; --int) {\n    if (this.java.util.Map<K, V>[][int].containsKey(java.lang.Object)) {\n        return this.java.util.Map<K, V>[][int].get(java.lang.Object);\n    } \n}"},"variableMap":{"composite":"key2","length":"index","key":"key2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:337","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"14404131-415c-11e5-a536-b5a6d147469b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)"},"variableMap":{"key":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:152","type":"CtIfImpl","sourcecode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} "},"status":-2},{"failures":[],"tindex":"14404132-415c-11e5-a536-c9e72d3a02a9","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.MapUtils:1438","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.MultiValueMap.<K,V>multiValueMap(java.util.Map<K, ? super java.util.Collection<V>>)"},"variableMap":{"map":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiValueMap:105","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.MultiValueMap<K, V>(java.util.Map<K, ? super C> , new org.apache.commons.collections4.map.MultiValueMap.ReflectionFactory<C>(java.lang.Class<C>))"},"status":-2},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80],"tindex":"14406843-415c-11e5-a536-67a67b6ec103","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl","sourcecode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} "},"variableMap":{"iterator":"it2"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl","sourcecode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[],"tindex":"14406844-415c-11e5-a536-a155b1f43858","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl","sourcecode":"if (int >= (int)) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + (int)));\n} "},"variableMap":{"size":"largestKey","index":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.PermutationIterator:115","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (int[].int) ; int++) {\n    if ((((boolean[][int]) && (int < ((int[].int) - 1))) && ((int[][int]) > (int[][(int + 1)]))) || (((!(boolean[][int])) && (int > 0)) && ((int[][int]) > (int[][(int - 1)])))) {\n        if ((int[][int]) > int) {\n            int = int[][int];\n            int = int;\n        } \n    } \n}"},"status":-2},{"failures":[],"tindex":"14406845-415c-11e5-a536-d5b8f8d87134","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1644","type":"CtIfImpl","sourcecode":"if ((int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} "},"variableMap":{"expectedModifications":"hash","modifications":"hash"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.ComparatorChain:306","type":"CtIfImpl","sourcecode":"if (null != (java.util.List<java.util.Comparator<E>>)) {\n    int ^= java.util.List<java.util.Comparator<E>>.hashCode();\n} "},"status":0},{"failures":[],"tindex":"14406846-415c-11e5-a536-4f2bb93a5f59","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}