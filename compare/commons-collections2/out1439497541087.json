{"failureDictionary":{"org.apache.commons.collections4.map.ReferenceMapTest.testMapPutAll":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":52,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":83,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":34,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":67,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":43,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":93,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":75,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":1,"org.apache.commons.collections4.map.ReferenceMapTest.testMapRemove":15,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":68,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":76,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":94,"org.apache.commons.collections4.trie.PatriciaTrieTest.testPrefixMap":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":78,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":58,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemoveChangesMap":103,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":49,"org.apache.commons.collections4.trie.PatriciaTrieTest.testMapRemove":99,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove1":100,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":87,"org.apache.commons.collections4.trie.PatriciaTrieTest.testEntrySetRemove2":101,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":0,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":60,"org.apache.commons.collections4.map.ReferenceMapTest.testMapIsEmpty":5,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":38,"org.apache.commons.collections4.CollectionUtilsTest.get":117,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":72,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":28,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":32,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":35,"org.apache.commons.collections4.map.ReferenceMapTest.testMapToString":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":33,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastKeySet":105,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":56,"org.apache.commons.collections4.map.ReferenceMapTest.testMapGet":11,"org.apache.commons.collections4.map.ReferenceMapTest.testMapEquals":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testSerializeDeserializeThenCompare":97,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSimpleSerialization":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":81,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":70,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemoveChangesMap":111,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":96,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":25,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":39,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":88,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":40,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":55,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastEntrySet":104,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":36,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":65,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove2":109,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testEntrySetRemove1":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":80,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":44,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":17,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testSerializeDeserializeThenCompare":115,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":42,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":53,"org.apache.commons.collections4.map.ReferenceMapTest.testMapPut":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":57,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":69,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":20,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testKeySetRemoveChangesMap":110,"org.apache.commons.collections4.trie.PatriciaTrieTest.testKeySetRemoveChangesMap":102,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":26,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":21,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":91,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":46,"org.apache.commons.collections4.map.ReferenceMapTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":31,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":54,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":18,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":23,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsValue":9,"org.apache.commons.collections4.map.ReferenceMapTest.testMapSize":6,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":82,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":3,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":37,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testRepeatedSerialization":112,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":2,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testFailFastValues":106,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":119,"org.apache.commons.collections4.CollectionUtilsTest.getPositiveOutOfBounds":118,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":64,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":85,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testFullQueueSerialization":114,"org.apache.commons.collections4.map.ReferenceMapTest.testMapClear":7,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":47,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":79,"org.apache.commons.collections4.trie.PatriciaTrie2Test.testMapRemove":107,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapPut":4,"org.apache.commons.collections4.queue.CircularFifoQueueTest.testEmptyQueueSerialization":113,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":27,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":22,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":61,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":48,"org.apache.commons.collections4.map.ReferenceMapTest.testMapContainsKey":8,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":51,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":45},"transformations":[{"failures":[0,1,2,3],"tindex":"776e08d1-41f9-11e5-b975-3771207debb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.EditScript:106","type":"CtForEachImpl","sourcecode":"for (final org.apache.commons.collections4.sequence.EditCommand<T> org.apache.commons.collections4.sequence.EditCommand<T> : java.util.List<org.apache.commons.collections4.sequence.EditCommand<T>>) {\n    org.apache.commons.collections4.sequence.EditCommand<T>.accept(org.apache.commons.collections4.sequence.CommandVisitor<T>);\n}"},"status":-1},{"failures":[],"tindex":"776e2fe2-41f9-11e5-b975-6756ea09c83b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ArrayStack:92","type":"CtReturnImpl","sourcecode":"return java.util.ArrayList<E>.get((int - 1))"},"status":-2},{"failures":[],"tindex":"776e2fe3-41f9-11e5-b975-d589abea393c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:841","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"node":"currentNode","rightChild":"currentNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1057","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"776e2fe4-41f9-11e5-b975-6385a645f28c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:847","type":"CtUnaryOperatorImpl","sourcecode":"(int)--"},"variableMap":{"nextIndex":"modCount"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:125","type":"CtUnaryOperatorImpl","sourcecode":"++(int)"},"status":-1},{"failures":[],"tindex":"776e2fe5-41f9-11e5-b975-4bcf841d790c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:181","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"currentIndex":"newSize"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:324","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.ensureCapacity(org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateNewCapacity(int))"},"status":0},{"failures":[],"tindex":"776e2fe6-41f9-11e5-b975-5ba280e87e6a","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1194","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null"},"variableMap":{"last":"entry"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:646","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>"},"status":0},{"failures":[4],"tindex":"776e56f7-41f9-11e5-b975-01818811daeb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:270","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"No value can be removed at present\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:84","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-1},{"failures":[],"tindex":"776e56f8-41f9-11e5-b975-e7f585ae60d7","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl","sourcecode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}"},"status":-2},{"failures":[],"tindex":"776e56f9-41f9-11e5-b975-93e4046f26d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl","sourcecode":"return int < 0 ? int * (-1) : int"},"variableMap":{"hash":"total"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.TransformingComparator:98","type":"CtReturnImpl","sourcecode":"return int"},"status":0},{"failures":[],"tindex":"776e56fa-41f9-11e5-b975-bf33d06b5b33","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()"},"variableMap":{"this":"collection"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1787","type":"CtReturnImpl","sourcecode":"return java.util.Collection<E>.iterator().next()"},"status":-2},{"failures":[],"tindex":"776e56fb-41f9-11e5-b975-6195b641bb61","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.ConstantTransformer:109","type":"CtReturnImpl","sourcecode":"return true"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97],"tindex":"776e56fc-41f9-11e5-b975-9b05a800559b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.SingletonMap:542","type":"CtIfImpl","sourcecode":"if ((java.util.Map<?, ?>.size()) != 1) {\n    return false;\n} "},"variableMap":{"other":"map"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1321","type":"CtTryImpl","sourcecode":"try {\n    while (org.apache.commons.collections4.MapIterator<?, ?>.hasNext()) {\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n        final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n        if (java.lang.Object == null) {\n            if (((java.util.Map<?, ?>.get(java.lang.Object)) != null) || ((java.util.Map<?, ?>.containsKey(java.lang.Object)) == false)) {\n                return false;\n            } \n        } else {\n            if ((java.lang.Object.equals(java.util.Map<?, ?>.get(java.lang.Object))) == false) {\n                return false;\n            } \n        }\n    }\n} catch (final java.lang.ClassCastException ignored) {\n    return false;\n} catch (final java.lang.NullPointerException ignored) {\n    return false;\n}"},"status":-1},{"failures":[],"tindex":"776e7e0d-41f9-11e5-b975-4b7f8b0a7537","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:495","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.grow()"},"variableMap":{"this":"result"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl","sourcecode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}"},"status":-2},{"failures":[98,99,100,101,102,103,104,105,106,107,108,109,110,111],"tindex":"776e7e0e-41f9-11e5-b975-0ba89cd5fd04","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:91","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null"},"variableMap":{"parent":"path","root":"current"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:437","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-1},{"failures":[112,113,114,115,116],"tindex":"776e7e0f-41f9-11e5-b975-33369f5ced7e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:604","type":"CtForEachImpl","sourcecode":"for (final E E : this) {\n    java.io.ObjectOutputStream.writeObject(E);\n}"},"variableMap":{"outputStream":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.CircularFifoQueue:118","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.defaultWriteObject()"},"status":-1},{"failures":[],"tindex":"776e7e10-41f9-11e5-b975-1b01e159f4ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[],"tindex":"776e7e11-41f9-11e5-b975-2bdaf5ed6f0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())"},"status":-2},{"failures":[117,118],"tindex":"776ea522-41f9-11e5-b975-494808b7d214","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.CollectionUtils:1271","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"variableMap":{"this":"object","i":"i","object":"object"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException ex) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}"},"status":-1},{"failures":[],"tindex":"776ea523-41f9-11e5-b975-97169039ab3e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.functors.NullPredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.Predicate"},"variableMap":{"org.apache.commons.collections4.functors.NullPredicate.INSTANCE":"org.apache.commons.collections4.functors.FalsePredicate.INSTANCE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.FalsePredicate:68","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate"},"status":0},{"failures":[119],"tindex":"776ea524-41f9-11e5-b975-f71532ff3dbb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.IteratorUtils:1022","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"Estimated size must be greater than 0\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}