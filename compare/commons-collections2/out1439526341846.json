{"failureDictionary":{"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":55,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":52,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":3,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":46,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":6,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":39,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":60,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":58,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":41,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":14,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":50,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":45,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveChangesMap":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":17,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":51,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":1,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":8,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":54,"org.apache.commons.collections4.set.CompositeSetTest.testRemoveComposited":63,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":33,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":42,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyPut":70,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":15,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":5,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":18,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":35,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":21,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":66,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":12,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":67,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":2,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":26,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":23,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":27,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":57,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":64,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":47,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":0,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":37,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":43,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":40,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":28,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":49,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":38,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testShrinkCache":69,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetRemoveChangesMap":68,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":59,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":9,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":10,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":62,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":34,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":56,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":22,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":53,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":61,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":32,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":48,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":25,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":13,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":24,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":36,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":7,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":11,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":20,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":44},"transformations":[{"failures":[],"tindex":"86067889-423c-11e5-9b00-1bb8922c9046","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.CompositeCollection:391","type":"CtReturnImpl","sourcecode":"return new java.util.ArrayList<E>(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractReferenceMap:348","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"status":-2},{"failures":[],"tindex":"86069f9a-423c-11e5-9b00-c56542200588","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:868","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"variableMap":{"leftChild":"siblingNode","node":"siblingNode","dataElement":"dataElement"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1062","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n}"},"status":-2},{"failures":[],"tindex":"8606c6ab-423c-11e5-9b00-83f9b23998dd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.list.NodeCachingLinkedList<E>.isCacheFull()) {\n    return ;\n} "},"status":0},{"failures":[0,1],"tindex":"8606c6ac-423c-11e5-9b00-5fb3260626d8","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl","sourcecode":"return (!(boolean)) && (!(boolean))"},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:290","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-1},{"failures":[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43],"tindex":"8606c6ad-423c-11e5-9b00-397377c2c5d1","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()"},"status":-1},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60],"tindex":"8606edbe-423c-11e5-9b00-23bc7fabeef7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.CursorableLinkedList:333","type":"CtWhileImpl","sourcecode":"while (java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.hasNext()) {\n    final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next();\n    final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get();\n    if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n        java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n    } else {\n        org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeRemoved(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n}"},"status":-1},{"failures":[],"tindex":"8606edbf-423c-11e5-9b00-6d60f4746a81","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl","sourcecode":"int int = 17"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:224","type":"CtLocalVariableImpl","sourcecode":"int int = 0"},"status":-2},{"failures":[61,62],"tindex":"8606edc0-423c-11e5-9b00-3beff41bb54b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()"},"status":-1},{"failures":[63,64,65,66,67,68],"tindex":"8606edc1-423c-11e5-9b00-1ff57aec9db5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:230","type":"CtReturnImpl","sourcecode":"return java.util.Set<E>.remove(java.lang.Object)"},"status":-1},{"failures":[],"tindex":"860714d2-423c-11e5-9b00-c18a52fb7b62","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.functors.TransformedPredicate:57","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.UnmodifiableMap:128","type":"CtThrowImpl","sourcecode":"throw new java.lang.UnsupportedOperationException()"},"status":-2},{"failures":[],"tindex":"860714d3-423c-11e5-9b00-51bc0b07828f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.ListUtils:94","type":"CtIfImpl","sourcecode":"if ((java.util.List<? extends E>.size()) > (java.util.List<? extends E>.size())) {\n    java.util.List<? extends E> = java.util.List<? extends E>;\n    java.util.List<? extends E> = java.util.List<? extends E>;\n} "},"status":0},{"failures":[],"tindex":"860714d4-423c-11e5-9b00-c93961f6b8c2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:111","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<K>.hasNext() ? java.util.Iterator<K>.next() : null"},"variableMap":{"it":"it"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:158","type":"CtReturnImpl","sourcecode":"return java.util.Iterator<K>.next()"},"status":0},{"failures":[],"tindex":"860714d5-423c-11e5-9b00-97bad28c6d9f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}"},"variableMap":{"root":"parent"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1225","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>"},"status":-2},{"failures":[],"tindex":"86073be6-423c-11e5-9b00-431265a1ad65","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl","sourcecode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}"},"status":0},{"failures":[],"tindex":"86073be7-423c-11e5-9b00-91fff99848a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:83","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException(\"DefaultKeyValue may not contain itself as a key.\")"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.ListOrderedMap:449","type":"CtThrowImpl","sourcecode":"throw new java.lang.IndexOutOfBoundsException((((\"Index: \" + int) + \", Size: \") + (java.util.List<K>.size())))"},"status":-2},{"failures":[69],"tindex":"86073be8-423c-11e5-9b00-855b5e2eb9fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:830","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"variableMap":{"next":"header"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:520","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>"},"status":-1},{"failures":[],"tindex":"86073be9-423c-11e5-9b00-13633bad0ffb","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:715","type":"CtLocalVariableImpl","sourcecode":"boolean boolean = false"},"status":-2},{"failures":[70],"tindex":"860762fa-423c-11e5-9b00-072b43e1c1cf","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:454","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K, K))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n    return V;\n} "},"status":-1},{"failures":[],"tindex":"860762fb-423c-11e5-9b00-a5d2bae7cd17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:146","type":"CtReturnImpl","sourcecode":"return ((this.int) - org.apache.commons.collections4.iterators.ObjectArrayIterator<E>.(getStartIndex())) - 1"},"status":-2},{"failures":[],"tindex":"860762fc-423c-11e5-9b00-3989daf855a9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:571","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.UnmodifiableQueue:103","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.queue.AbstractQueueDecorator<E>.decorated().iterator())"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}