{"failureDictionary":{"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":140,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetIteratorRemoveChangesMap":58,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":86,"org.apache.commons.collections4.map.Flat3MapTest.testFailFastEntrySet":2,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":42,"org.apache.commons.collections4.map.LinkedMapTest.testMapPut":122,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":106,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":31,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetIteratorRemoveChangesMap":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":87,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveAll":133,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateFibEvenOdd":178,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":191,"org.apache.commons.collections4.CollectionUtilsTest.testCollate":175,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRetainAll":22,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":166,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testLength":190,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":43,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":0,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPut":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":96,"org.apache.commons.collections4.comparators.FixedOrderComparatorTest.testUnknownObjectBehavior":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":90,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":110,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":163,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPut":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":104,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testFullIterator":184,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateOddEven":176,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromDouble":182,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":25,"org.apache.commons.collections4.map.HashedMapTest.testFailFastEntrySet":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":103,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":148,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":188,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":101,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRetainAll":134,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":62,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove3":131,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":47,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove2":130,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemove1":129,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapPutAll":147,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":116,"org.apache.commons.collections4.map.Flat3MapTest.testClone4":1,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":120,"org.apache.commons.collections4.map.LinkedMapTest.testMapPutAll":123,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":100,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testFailFastEntrySet":137,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":28,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenOdd":177,"org.apache.commons.collections4.map.Flat3MapTest.testMapPutAll":11,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":144,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEvenEven":181,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.map.LRUMapTest.testClone":60,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":93,"org.apache.commons.collections4.map.HashedMapTest.testMapPut":45,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveAll":56,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":34,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":12,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetClearChangesMap":125,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":84,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":26,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove1":17,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":64,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove2":18,"org.apache.commons.collections4.map.LRUMapTest.testFailFastEntrySet":61,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":172,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemove3":19,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":27,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveChangesMap":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveChangesMap":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":143,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains2":15,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains3":16,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":40,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":124,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetContains1":14,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetClearChangesMap":48,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":92,"org.apache.commons.collections4.map.HashedMapTest.testClone":35,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":68,"org.apache.commons.collections4.map.TransformedMapTest.testFactory_decorateTransform":108,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":173,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetClearChangesMap":13,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemoveAll":157,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":3,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.CollectionUtilsTest.testCollateIgnoreDuplicates":174,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":138,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":66,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":141,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetRemoveChangesMap":132,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":145,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":44,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":7,"org.apache.commons.collections4.map.LRUMapTest.testSynchronizedRemoveFromEntrySet":59,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":85,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":165,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains1":49,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains2":50,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":6,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testIterateEven":180,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":89,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove1":52,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":29,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove2":53,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemove3":54,"org.apache.commons.collections4.map.LRUMapTest.testMapPut":70,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":167,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":41,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":119,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":142,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":171,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":168,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":4,"org.apache.commons.collections4.map.Flat3MapTest.testMapPut":10,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":111,"org.apache.commons.collections4.map.HashedMapTest.testMapPutAll":46,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.map.LinkedMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.map.LinkedMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRemoveChangesMap":55,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":94,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":118,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":5,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetClearChangesMap":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":107,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":169,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":37,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequenceWithString":187,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testNullComparator":179,"org.apache.commons.collections4.ListUtilsTest.testLongestCommonSubsequence":186,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains3":76,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove3":79,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove2":78,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetRemove1":77,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":24,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove3":155,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testClone":136,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":39,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemove":185,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains1":74,"org.apache.commons.collections4.map.LRUMapTest.testEntrySetContains2":75,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetRetainAll":57,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains1":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains2":151,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetContains3":152,"org.apache.commons.collections4.map.LRUMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetIteratorRemoveChangesMap":23,"org.apache.commons.collections4.map.HashedMapTest.testEntrySetContains3":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":91,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetRetainAll":158,"org.apache.commons.collections4.map.LinkedMapTest.testClone":112,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":9,"org.apache.commons.collections4.iterators.CollatingIteratorTest.testRemoveFromSingle":183,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":72,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":160,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testMinimal":189,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testEntrySetClearChangesMap":149,"org.apache.commons.collections4.map.Flat3MapTest.testEntrySetRemoveAll":21,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":139,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":105},"transformations":[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"tindex":"ec0484fa-41ea-11e5-8bd7-6fb347a48f58","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:811","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this)"},"status":-1},{"failures":[160],"tindex":"ec04ac0b-41ea-11e5-8bd7-c97987f060ec","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.queue.TransformedQueue:123","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().peek()"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.queue.TransformedQueue:119","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().poll()"},"status":-1},{"failures":[],"tindex":"ec04ac0c-41ea-11e5-8bd7-cfa698e535a0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.NotNullPredicate:64","type":"CtReturnImpl","sourcecode":"return T != null"},"status":-2},{"failures":[],"tindex":"ec04ac0d-41ea-11e5-8bd7-b53ab5c2f5bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.LRUMap:424","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.LRUMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"variableMap":{"in":"in","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CaseInsensitiveMap:158","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.doReadObject(java.io.ObjectInputStream)"},"status":0},{"failures":[],"tindex":"ec04d31e-41ea-11e5-8bd7-c51c6150f997","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl","sourcecode":"return (boolean) && (!(boolean))"},"variableMap":{"removed":"changed","beforeFirst":"changed"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.AbstractMapBag:279","type":"CtReturnImpl","sourcecode":"return boolean"},"status":0},{"failures":[],"tindex":"ec04d31f-41ea-11e5-8bd7-bf8db6cae490","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:311","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[161],"tindex":"ec04d320-41ea-11e5-8bd7-8f0781890315","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.ArrayStack:90","type":"CtThrowImpl","sourcecode":"throw new java.util.EmptyStackException()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.comparators.FixedOrderComparator:239","type":"CtThrowImpl","sourcecode":"throw new java.lang.IllegalArgumentException((\"Attempting to compare unknown object \" + java.lang.Object))"},"status":-1},{"failures":[],"tindex":"ec04d321-41ea-11e5-8bd7-99178afa0f19","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1454","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:105","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().iterator())"},"status":-2},{"failures":[162,163,164,165,166,167,168,169,170,171,172,173],"tindex":"ec04d322-41ea-11e5-8bd7-2dcec63c979b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl","sourcecode":"return int > 0"},"variableMap":{"ret":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.CompositeMap:297","type":"CtIfImpl","sourcecode":"if (!(this.java.util.Map<K, V>[][int].isEmpty())) {\n    return false;\n} "},"status":-1},{"failures":[],"tindex":"ec04d323-41ea-11e5-8bd7-155d74b62df0","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.functors.TransformerPredicate:48","type":"CtIfImpl","sourcecode":"if (org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} "},"status":-2},{"failures":[174,175,176,177,178,179,180,181,182,183,184,185],"tindex":"ec04fa34-41ea-11e5-8bd7-03bf50a82766","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.iterators.CollatingIterator:296","type":"CtAssignmentImpl","sourcecode":"java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size())"},"status":-1},{"failures":[],"tindex":"ec04fa35-41ea-11e5-8bd7-f1822196a061","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl","sourcecode":"return null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:784","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry().getKey()"},"status":-2},{"failures":[],"tindex":"ec04fa36-41ea-11e5-8bd7-25295a423a83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:87","type":"CtIfImpl","sourcecode":"if (java.util.Collection<? extends E> instanceof org.apache.commons.collections4.BoundedCollection) {\n    break;\n} "},"variableMap":{"coll":"coll"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.set.CompositeSet:287","type":"CtForEachImpl","sourcecode":"for (final java.util.Collection<E> java.util.Collection<E> : java.util.List<java.util.Set<E>>) {\n    boolean |= java.util.Collection<E>.removeAll(java.util.Collection<?>);\n}"},"status":-2},{"failures":[],"tindex":"ec04fa37-41ea-11e5-8bd7-a7b0a33ace63","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl","sourcecode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} "},"status":-2},{"failures":[],"tindex":"ec04fa38-41ea-11e5-8bd7-67040667c39c","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl","sourcecode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)"},"status":-2},{"failures":[],"tindex":"ec04fa39-41ea-11e5-8bd7-3df387853aea","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)"},"variableMap":{"value":"key"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.Flat3Map:149","type":"CtSwitchImpl","sourcecode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            return V;\n        } \n}"},"status":-2},{"failures":[],"tindex":"ec04fa3a-41ea-11e5-8bd7-d305d2485b16","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.AbstractHashedMap:991","type":"CtReturnImpl","sourcecode":"return org.apache.commons.collections4.map.AbstractHashedMap.Values<V>"},"variableMap":{"values":"values"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:410","type":"CtReturnImpl","sourcecode":"return java.util.Collection<V>"},"status":0},{"failures":[],"tindex":"ec05214b-41ea-11e5-8bd7-affb742eebe3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.map.Flat3Map:441","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return null;\n} "},"variableMap":{"size":"hashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.map.MultiKeyMap:179","type":"CtWhileImpl","sourcecode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, K, K))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().updateEntry(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, V);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}"},"status":-2},{"failures":[],"tindex":"ec05214c-41ea-11e5-8bd7-9f01d056fba9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.collections4.list.AbstractLinkedList:546","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"));\n} "},"variableMap":{"size":"numberOfNodesToCache","index":"numberOfNodesToCache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.list.NodeCachingLinkedList:219","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.NodeCachingLinkedList<E>.addNodeToCache(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}"},"status":0},{"failures":[186,187,188,189,190,191],"tindex":"ec05214d-41ea-11e5-8bd7-176aa0e002ba","series":0,"name":"add","transplant":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:273","type":"CtInvocationImpl","sourcecode":"org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)))"},"variableMap":{"j":"start2","script":"script","sequence2":"sequence1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.collections4.sequence.SequencesComparator:257","type":"CtIfImpl","sourcecode":"if (((org.apache.commons.collections4.sequence.SequencesComparator.Snake == null) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) || (((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) == int) && ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag()) == (int - int)))) {\n    int int = int;\n    int int = int;\n    while ((int < int) || (int < int)) {\n        if (((int < int) && (int < int)) && (org.apache.commons.collections4.Equator<? super T>.equate(java.util.List<T>.get(int), java.util.List<T>.get(int)))) {\n            org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n            ++int;\n            ++int;\n        } else {\n            if ((int - int) > (int - int)) {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.DeleteCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            } else {\n                org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.InsertCommand<T>(java.util.List<T>.get(int)));\n                ++int;\n            }\n        }\n    }\n} else {\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(int, org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), org.apache.commons.collections4.sequence.EditScript<T>);\n    for (int int = org.apache.commons.collections4.sequence.SequencesComparator.Snake.getStart() ; int < (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) ; ++int) {\n        org.apache.commons.collections4.sequence.EditScript<T>.append(new org.apache.commons.collections4.sequence.KeepCommand<T>(java.util.List<T>.get(int)));\n    }\n    org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>);\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-collections4","generatorVersion":"1.0","version":"4.0"}}