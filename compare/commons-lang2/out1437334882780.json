{"failureDictionary":{"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":15,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeMethod":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":12,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiByteArray":49,"org.apache.commons.lang3.ArrayUtilsTest.testIsEquals":47,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":10,"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testAppendSuper":55,"org.apache.commons.lang3.builder.DiffBuilderTest.testByteArray":50,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":24,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testAppendSuper":56,"org.apache.commons.lang3.builder.EqualsBuilderTest.testByteArrayHiddenByObject":48,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testAppendSuper":54,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":13,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":26,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveOrWrapper":33,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":11,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":0,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testGetMatchingAccessibleMethod":46,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareTransients":30,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":18,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testAppendSuper":59,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Autoboxing":40,"org.apache.commons.lang3.reflect.MethodUtilsTest.testGetMatchingAccessibleMethod":43,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testAppendSuper":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":22,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatDurationWords":31,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":52,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":2,"org.apache.commons.lang3.ClassUtilsTest.testWrapperToPrimitive":34,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_DefaultUnboxing_Widening":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":5,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":16,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompare":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":17,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable":32,"org.apache.commons.lang3.reflect.MethodUtilsTest.testInvokeStaticMethod":42,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray_Autoboxing":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":1,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_ClassArray_ClassArray":38,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionCompare":29,"org.apache.commons.lang3.StringUtilsIsTest.testIsNumeric":51,"org.apache.commons.lang3.ClassUtilsTest.testIsPrimitiveWrapper":36,"org.apache.commons.lang3.builder.CompareToBuilderTest.testReflectionHierarchyCompareExcludeFields":27,"org.apache.commons.lang3.reflect.ConstructorUtilsTest.testInvokeConstructor":45,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":58,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":19,"org.apache.commons.lang3.ClassUtilsTest.test_isAssignable_Unboxing_Widening":39,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":21},"transformations":[{"failures":[],"tindex":"22a2cf45-2e4e-11e5-9c34-1bd8ed124ee1","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:486","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"tindex":"22a2f656-2e4e-11e5-9c34-3fd648fc5784","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1366","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    char[][(int)++] = char;\n}"},"variableMap":{"size":"pos","length":"startMatchLen","padChar":"escape","buffer":"chars"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}"},"status":-1},{"failures":[],"tindex":"22a34477-2e4e-11e5-9c34-d77ea3a42392","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:469","type":"CtReturnImpl","sourcecode":"return java.lang.Boolean.booleanValue() ? int : int"},"status":-2},{"failures":[],"tindex":"22a34478-2e4e-11e5-9c34-a98925609a69","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:748","type":"CtIfImpl","sourcecode":"if ((int < 0) || (int > (char[].int))) {\n    throw new java.lang.StringIndexOutOfBoundsException((\"Invalid startIndex: \" + int));\n} "},"variableMap":{"startIndex":"size","length":"size","chars":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1870","type":"CtIfImpl","sourcecode":"if (char != char) {\n    for (int int = 0 ; int < (int) ; int++) {\n        if ((char[][int]) == char) {\n            char[][int] = char;\n            break;\n        } \n    }\n} "},"status":0},{"failures":[],"tindex":"22a34479-2e4e-11e5-9c34-c3d8a8090c0c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:338","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?>"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:687","type":"CtLocalVariableImpl","sourcecode":"java.lang.Class<?> java.lang.Class<?> = org.apache.commons.lang3.builder.ToStringBuilder.getObject().getClass()"},"status":-2},{"failures":[],"tindex":"22a3447a-2e4e-11e5-9c34-31ad562870cc","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1830","type":"CtReturnImpl","sourcecode":"return ((java.util.Calendar)(java.util.Calendar.clone()))"},"variableMap":{"spot":"truncated"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:834","type":"CtReturnImpl","sourcecode":"return java.util.Calendar"},"status":1},{"failures":[],"tindex":"22a36b8b-2e4e-11e5-9c34-73102de54c1d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4154","type":"CtReturnImpl","sourcecode":"return float[]"},"variableMap":{"newArray":"org.apache.commons.lang3.ArrayUtils.EMPTY_FLOAT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1166","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.float[]"},"status":0},{"failures":[],"tindex":"22a36b8c-2e4e-11e5-9c34-83f4eb4dbc93","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:706","type":"CtLocalVariableImpl","sourcecode":"final int int = org.apache.commons.lang3.text.StrBuilder.length()"},"status":-2},{"failures":[],"tindex":"22a36b8d-2e4e-11e5-9c34-3f90f2b485f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:6541","type":"CtIfImpl","sourcecode":"if (java.lang.CharSequence == java.lang.CharSequence) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"variableMap":{"cs1":"seq","org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND","cs2":"seq"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1192","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"status":-2},{"failures":[27,28,29,30],"tindex":"22a36b8e-2e4e-11e5-9c34-ab16164c491e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharRange:341","type":"CtIfImpl","sourcecode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException();\n} "},"variableMap":{"hasNext":"useTransients"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:317","type":"CtIfImpl","sourcecode":"if ((((!(org.apache.commons.lang3.ArrayUtils.contains(java.lang.String[], java.lang.reflect.Field.getName()))) && ((java.lang.reflect.Field.getName().indexOf('$')) == (-1))) && (boolean || (!(java.lang.reflect.Modifier.isTransient(java.lang.reflect.Field.getModifiers()))))) && (!(java.lang.reflect.Modifier.isStatic(java.lang.reflect.Field.getModifiers())))) {\n    try {\n        org.apache.commons.lang3.builder.CompareToBuilder.append(java.lang.reflect.Field.get(java.lang.Object), java.lang.reflect.Field.get(java.lang.Object));\n    } catch (final java.lang.IllegalAccessException e) {\n        throw new java.lang.InternalError(\"Unexpected IllegalAccessException\");\n    }\n} "},"status":-1},{"failures":[31],"tindex":"22a3929f-2e4e-11e5-9c34-f314c0b4c623","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:203","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"tindex":"22a392a0-2e4e-11e5-9c34-dd2eb424d5b5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:100","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.ClassUtils.java.util.Map<java.lang.Class<?>, java.lang.Class<?>>.put(java.lang.Class<?>, java.lang.Class<?>)"},"status":-1},{"failures":[],"tindex":"22a392a1-2e4e-11e5-9c34-fbc8c48e0cb4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:271","type":"CtLocalVariableImpl","sourcecode":"double double"},"status":-2},{"failures":[],"tindex":"22a392a2-2e4e-11e5-9c34-b34bcf895192","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2100","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return false;\n} "},"variableMap":{"str":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:1316","type":"CtIfImpl","sourcecode":"if (!(java.lang.Character.isDigit(java.lang.String.charAt(int)))) {\n    return false;\n} "},"status":0},{"failures":[47,48,49,50],"tindex":"22a3b9b3-2e4e-11e5-9c34-a1706567f11e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtInvocationImpl","sourcecode":"new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object)"},"variableMap":{"array2":"lhs","array1":"lhs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:481","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.EqualsBuilder.append(((byte[])(java.lang.Object)), ((byte[])(java.lang.Object)))"},"status":-1},{"failures":[],"tindex":"22a3b9b4-2e4e-11e5-9c34-59c3f7c4ac88","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:173","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Long.parseLong(java.lang.String);\n} catch (final java.lang.NumberFormatException nfe) {\n    return long;\n}"},"variableMap":{"str":"str","defaultValue":"defaultValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:170","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return long;\n} "},"status":0},{"failures":[],"tindex":"22a3b9b5-2e4e-11e5-9c34-1320af6b6df2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.WordUtils:176","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = org.apache.commons.lang3.SystemUtils.java.lang.String;\n} "},"variableMap":{"newLineStr":"fieldName","org.apache.commons.lang3.SystemUtils.LINE_SEPARATOR":"arraySeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1360","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (float[].int) ; int++) {\n    if (int > 0) {\n        java.lang.StringBuffer.append(java.lang.String);\n    } \n    org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, float[][int]);\n}"},"status":-2},{"failures":[],"tindex":"22a3b9b6-2e4e-11e5-9c34-e1781c7c45fd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:4957","type":"CtIfImpl","sourcecode":"if (int > int) {\n    final int int = int;\n    int = int;\n    int = int;\n} "},"variableMap":{"start":"dstPos","end":"shift"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1299","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    int = (int * 8) + int;\n    byte[][(int + int)] = ((byte)(255 & (long >> int)));\n}"},"status":-2},{"failures":[51],"tindex":"22a3e0c7-2e4e-11e5-9c34-4df1326c32ad","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:363","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isBlank(java.lang.CharSequence)) {\n    return true;\n} "},"variableMap":{"cs":"cs","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:6034","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.isEmpty(java.lang.CharSequence)) {\n    return false;\n} "},"status":-1},{"failures":[52,53,54,55,56,57,58,59],"tindex":"22a3e0c8-2e4e-11e5-9c34-57cae6d5f1bb","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.CharUtils:173","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.StringUtils.isEmpty(java.lang.String)) {\n    throw new java.lang.IllegalArgumentException(\"The String must not be empty\");\n} "},"variableMap":{"str":"superToString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:342","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendToString(java.lang.StringBuffer, java.lang.String)"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}