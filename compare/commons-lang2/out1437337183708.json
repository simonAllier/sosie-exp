{"failureDictionary":{"org.apache.commons.lang3.builder.NoFieldNamesToStringStyleTest.testObjectArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":43,"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testObjectArray":15,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayDouble":19,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyArray":53,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":64,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testPerson":46,"org.apache.commons.lang3.builder.SimpleToStringStyleTest.testObjectArray":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":70,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLong":23,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArray":31,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNull":48,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":58,"org.apache.commons.lang3.builder.DiffBuilderTest.testSimilarObjectIgnoresAppends":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":62,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_StringBuffer":73,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiDoubleArray":30,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeEmptyCollection":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":40,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullCollection":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":33,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNull":57,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeNullArray":52,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDoubleArrayHiddenByObject":29,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendWithNullText":72,"org.apache.commons.lang3.concurrent.TimedSemaphoreTest.testAcquireMultipleThreads":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":11,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":54,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringStringarray":4,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArrayWithNulls":56,"org.apache.commons.lang3.ConversionTest.testHexToByte":75,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":41,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_Object":74,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":42,"org.apache.commons.lang3.CharSetUtilsTest.testKeep_StringString":2,"org.apache.commons.lang3.builder.EqualsBuilderTest.testRaggedArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":39,"org.apache.commons.lang3.ObjectUtilsTest.testMode":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":63,"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testObjectArray":6,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":61,"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":38,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollectionWithNulls":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":67,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringStringarray":3,"org.apache.commons.lang3.CharSetUtilsTest.testDelete_StringString":1,"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testObjectArray":17,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArray":26,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMultiLongArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":12,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_StrMatcher":0,"org.apache.commons.lang3.builder.EqualsBuilderTest.testLongArrayHiddenByObject":24,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":44,"org.apache.commons.lang3.builder.EqualsBuilderTest.testDouble":28,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":8,"org.apache.commons.lang3.builder.EqualsBuilderTest.testReflectionArrays":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":35,"org.apache.commons.lang3.ArrayUtilsTest.testSubarrayLong":18,"org.apache.commons.lang3.builder.EqualsBuilderTest.testMixedArray":25,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_StringBuffer":71,"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExcludeCollection":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":66,"org.apache.commons.lang3.builder.RecursiveToStringStyleTest.testObjectArray":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":37,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":69},"transformations":[{"failures":[0],"tindex":"7e18b5c1-2e53-11e5-b7eb-f775970a20a4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BitField:95","type":"CtReturnImpl","sourcecode":"return int & (int)"},"variableMap":{"_mask":"size","holder":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2497","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.text.StrBuilder.lastIndexOf(org.apache.commons.lang3.text.StrMatcher, int)"},"status":-1},{"failures":[],"tindex":"7e18dcd2-2e53-11e5-b7eb-8dd32a4ae0f1","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:280","type":"CtAssignmentImpl","sourcecode":"int = (int * int) + int"},"variableMap":{"a1":"i","numer0":"i","numer1":"i","numer2":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1655","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"status":1},{"failures":[],"tindex":"7e1903e3-2e53-11e5-b7eb-87b555d2a14e","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1159","type":"CtLocalVariableImpl","sourcecode":"java.util.Calendar java.util.Calendar = null"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:452","type":"CtLocalVariableImpl","sourcecode":"final java.util.Calendar java.util.Calendar = org.apache.commons.lang3.time.FastDatePrinter.newCalendar()"},"status":-2},{"failures":[],"tindex":"7e1903e4-2e53-11e5-b7eb-8d27a76b029b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:324","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    return byte;\n} "},"variableMap":{"str":"str","defaultValue":"defaultValue"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:327","type":"CtTryImpl","sourcecode":"try {\n    return java.lang.Byte.parseByte(java.lang.String);\n} catch (final java.lang.NumberFormatException nfe) {\n    return byte;\n}"},"status":-2},{"failures":[1,2,3,4],"tindex":"7e1903e5-2e53-11e5-b7eb-1dc01f3b9064","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:141","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(\"\\t[\")"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.CharSetUtils:228","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append(char[][int])"},"status":-1},{"failures":[5],"tindex":"7e192af6-2e53-11e5-b7eb-b3735343a4ae","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.BackgroundInitializer:218","type":"CtInvocationImpl","sourcecode":"java.lang.Thread.currentThread().interrupt()"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.event.EventListenerSupport:242","type":"CtInvocationImpl","sourcecode":"java.io.ObjectOutputStream.writeObject(java.util.ArrayList<L>.toArray(L[]))"},"status":-1},{"failures":[],"tindex":"7e192af7-2e53-11e5-b7eb-1f25217bb3cf","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:120","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.toString(this)"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1771","type":"CtReturnImpl","sourcecode":"return java.lang.StringBuilder.toString()"},"status":-2},{"failures":[],"tindex":"7e192af8-2e53-11e5-b7eb-8d4dcfcc8e30","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:213","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    return org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction;\n} "},"variableMap":{"org.apache.commons.lang3.math.Fraction.ZERO":"fraction","numerator":"denominator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:758","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.lang3.math.Fraction((boolean ? org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.addAndCheck(int, int) : org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.subAndCheck(int, int)) , org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction.mulPosAndCheck(int, org.apache.commons.lang3.math.Fraction.int))"},"status":0},{"failures":[],"tindex":"7e192af9-2e53-11e5-b7eb-2724ae7a72b1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:377","type":"CtReturnImpl","sourcecode":"return java.lang.Short.parseShort(java.lang.String)"},"status":-2},{"failures":[6,7,8,9,10,11,12,13,14,15,16,17],"tindex":"7e19520a-2e53-11e5-b7eb-1fae8a3da39e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:1201","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append('+')"},"variableMap":{"buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1057","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuffer.append(java.lang.String)"},"status":-1},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31],"tindex":"7e19520b-2e53-11e5-b7eb-6fa1b79c8c42","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:1052","type":"CtOperatorAssignmentImpl","sourcecode":"boolean ^= boolean"},"variableMap":{"result":"isEquals","element":"isEquals"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:510","type":"CtAssignmentImpl","sourcecode":"boolean = long == long"},"status":-1},{"failures":[],"tindex":"7e19520c-2e53-11e5-b7eb-ef16140941a0","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4181","type":"CtReturnImpl","sourcecode":"return int[]"},"variableMap":{"newArray":"org.apache.commons.lang3.ArrayUtils.EMPTY_INT_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:554","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.int[]"},"status":0},{"failures":[32],"tindex":"7e19520d-2e53-11e5-b7eb-fb32afa78a8e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ObjectUtils:123","type":"CtForEachImpl","sourcecode":"for (final T T : T[]) {\n    if (T != null) {\n        return T;\n    } \n}"},"variableMap":{"values":"items"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:571","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.ArrayUtils.isNotEmpty(T[])) {\n    final java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt> = new java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>(T[].int);\n    for (final T T : T[]) {\n        final org.apache.commons.lang3.mutable.MutableInt org.apache.commons.lang3.mutable.MutableInt = java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.get(T);\n        if (org.apache.commons.lang3.mutable.MutableInt == null) {\n            java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.put(T, new org.apache.commons.lang3.mutable.MutableInt(1));\n        } else {\n            org.apache.commons.lang3.mutable.MutableInt.increment();\n        }\n    }\n    T T = null;\n    int int = 0;\n    for (final java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt> : java.util.HashMap<T, org.apache.commons.lang3.mutable.MutableInt>.entrySet()) {\n        final int int = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getValue().intValue();\n        if (int == int) {\n            T = null;\n        } else if (int > int) {\n            int = int;\n            T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n        } \n    }\n    return T;\n} "},"status":-1},{"failures":[33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"7e19791e-2e53-11e5-b7eb-3f01e0dcfa87","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.CompareToBuilder:314","type":"CtInvocationImpl","sourcecode":"java.lang.reflect.AccessibleObject.setAccessible(java.lang.reflect.Field[], true)"},"variableMap":{"fields":"fields"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:520","type":"CtForEachImpl","sourcecode":"for (final java.lang.reflect.Field java.lang.reflect.Field : java.lang.reflect.Field[]) {\n    final java.lang.String java.lang.String = java.lang.reflect.Field.getName();\n    if (org.apache.commons.lang3.builder.ReflectionToStringBuilder.accept(java.lang.reflect.Field)) {\n        try {\n            final java.lang.Object java.lang.Object = org.apache.commons.lang3.builder.ReflectionToStringBuilder.getValue(java.lang.reflect.Field);\n            org.apache.commons.lang3.builder.ToStringBuilder.append(java.lang.String, java.lang.Object);\n        } catch (final java.lang.IllegalAccessException ex) {\n            throw new java.lang.InternalError((\"Unexpected IllegalAccessException: \" + (java.lang.IllegalAccessException.getMessage())));\n        }\n    } \n}"},"status":-1},{"failures":[58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74],"tindex":"7e19791f-2e53-11e5-b7eb-137c4462669f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:4532","type":"CtAssignmentImpl","sourcecode":"int = int + int"},"variableMap":{"start":"size","end":"size","replLength":"strLen"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:581","type":"CtOperatorAssignmentImpl","sourcecode":"int += int"},"status":-1},{"failures":[],"tindex":"7e19a030-2e53-11e5-b7eb-5f7d1961b50f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:205","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n} "},"variableMap":{"duration":"str","tmp":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.WordUtils:546","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.String.charAt(int);\n    if (org.apache.commons.lang3.text.WordUtils.org.apache.commons.lang3.text.WordUtils.isDelimiter(char, char[])) {\n        boolean = true;\n    } else if (boolean) {\n        char[][int++] = char;\n        boolean = false;\n    } else {\n        continue;\n    }\n}"},"status":-2},{"failures":[75],"tindex":"7e19a031-2e53-11e5-b7eb-d3458cc4e66b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","type":"CtOperatorAssignmentImpl","sourcecode":"this.byte += byte"},"variableMap":{"value":"out","operand":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1020","type":"CtAssignmentImpl","sourcecode":"byte = ((byte)((byte & (~int)) | int))"},"status":-1},{"failures":[],"tindex":"7e19a032-2e53-11e5-b7eb-1b5ffe953d16","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:804","type":"CtLocalVariableImpl","sourcecode":"final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String)"},"status":-2},{"failures":[],"tindex":"7e19c743-2e53-11e5-b7eb-5bc8cf8864f0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:374","type":"CtReturnImpl","sourcecode":"return short[].clone()"},"status":-2},{"failures":[],"tindex":"7e19c744-2e53-11e5-b7eb-67e836c0c003","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:207","type":"CtReturnImpl","sourcecode":"return new org.apache.commons.lang3.builder.EqualsBuilder().append(java.lang.Object, java.lang.Object).isEquals()"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"7e192af8-2e53-11e5-b7eb-8d4dcfcc8e30","diffs":[{"branches":{"org.apache.commons.lang3.math.FractionTest.testSubtract":["org.apache.commons.lang3.math.Fraction_int_subAndCheck(int,int).e1","org.apache.commons.lang3.math.Fraction_int_subAndCheck(int,int).t1","org.apache.commons.lang3.math.Fraction_int_subAndCheck(int,int).b"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.math.FractionTest.testSubtract":["org.apache.commons.lang3.math.Fraction.int subAndCheck(int,int)"]},"edges":{"org.apache.commons.lang3.math.FractionTest.testSubtract":["org.apache.commons.lang3.math.Fraction.org.apache.commons.lang3.math.Fraction addSub(org.apache.commons.lang3.math.Fraction,boolean) -> org.apache.commons.lang3.math.Fraction.int subAndCheck(int,int)"]},"type":"graph"}]}]}