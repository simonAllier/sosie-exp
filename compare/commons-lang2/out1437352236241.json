{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionHierarchy":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":54,"org.apache.commons.lang3.text.StrTokenizerTest.test5":3,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":69,"org.apache.commons.lang3.text.StrTokenizerTest.test7":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArrayArray":20,"org.apache.commons.lang3.text.StrTokenizerTest.test6":4,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":40,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":66,"org.apache.commons.lang3.text.StrTokenizerTest.test1":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectCycle":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBlank":27,"org.apache.commons.lang3.builder.ToStringStyleTest.testSetFieldSeparator":7,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":90,"org.apache.commons.lang3.ConversionTest.testByteArrayToUuid":9,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":22,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectBuild":16,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppendln_CharArray":92,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":61,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":85,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":94,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBoolean":36,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":65,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":47,"org.apache.commons.lang3.math.NumberUtilsTest.testMaxInt":76,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDouble":10,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":53,"org.apache.commons.lang3.ArrayUtilsTest.testLastIndexOfDoubleWithStartIndex":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":14,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycle":25,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloat":28,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":42,"org.apache.commons.lang3.text.StrBuilderTest.testAsWriter":93,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":55,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":71,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":80,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":60,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":37,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInt":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":64,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":13,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":50,"org.apache.commons.lang3.ObjectUtilsTest.testMode":77,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLong":33,"org.apache.commons.lang3.ConversionTest.testByteArrayToLong":8,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":52,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":70,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayArrayCycle":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByte":31,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testAppend_CharArray":91,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":87,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArrayArray":26,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":62,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty1":0,"org.apache.commons.lang3.text.StrTokenizerTest.testBasicEmpty2":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSoloEscaping":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testChar":32,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArrayArray":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":68,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":41,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArray":34,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":75,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":88,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObjectArray":15,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceTwoVarsReflectionObjectCycle":19,"org.apache.commons.lang3.BooleanUtilsTest.test_toBoolean_Integer_Integer_Integer":6,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShort":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":59,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":73,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":45,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":89},"transformations":[{"failures":[],"tindex":"8a1ad199-2e76-11e5-80c4-d194915b0df0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:1017","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ClassUtils.org.apache.commons.lang3.ClassUtils.getShortCanonicalName(java.lang.Object.getClass().getName())"},"status":-2},{"failures":[],"tindex":"8a1b1fba-2e76-11e5-80c4-35289857edc2","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:334","type":"CtAssignmentImpl","sourcecode":"boolean = !boolean"},"variableMap":{"inLiteral":"appendTransients"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:636","type":"CtAssignmentImpl","sourcecode":"this.boolean = boolean"},"status":-2},{"failures":[],"tindex":"8a1b1fbb-2e76-11e5-80c4-6316094bde78","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.exception.DefaultExceptionContext:135","type":"CtInvocationImpl","sourcecode":"java.lang.StringBuilder.append('\\n')"},"status":0},{"failures":[0,1,2,3,4,5],"tindex":"8a1b1fbc-2e76-11e5-80c4-c7d877d779ca","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:710","type":"CtReturnImpl","sourcecode":"return int + int"},"status":-1},{"failures":[6],"tindex":"8a1b1fbd-2e76-11e5-80c4-83b0db36fff9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:291","type":"CtIfImpl","sourcecode":"if (java.lang.Integer == null) {\n    return true;\n} "},"status":-1},{"failures":[],"tindex":"8a1b1fbe-2e76-11e5-80c4-75072f174990","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:1109","type":"CtReturnImpl","sourcecode":"return \"StrTokenizer[not tokenized yet]\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:1661","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.classToString(((java.lang.Class<?>)(java.lang.reflect.Type)))"},"status":1},{"failures":[7],"tindex":"8a1b46cf-2e76-11e5-80c4-0fea67164cf2","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:199","type":"CtIfImpl","sourcecode":"if ((java.lang.String.length()) != (java.lang.String.length())) {\n    java.lang.String = java.lang.String;\n    java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 minutes\", \"\");\n    if ((java.lang.String.length()) != (java.lang.String.length())) {\n        java.lang.String = java.lang.String;\n        java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\");\n        if ((java.lang.String.length()) != (java.lang.String.length())) {\n            java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 days\", \"\");\n        } \n    } \n} "},"variableMap":{"duration":"fieldSeparator","tmp":"fieldSeparator"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1896","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    java.lang.String = \"\";\n} "},"status":-1},{"failures":[8,9],"tindex":"8a1b46d0-2e76-11e5-80c4-47f957cb9391","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.StopWatch:339","type":"CtReturnImpl","sourcecode":"return (this.long) - (this.long)"},"variableMap":{"stopTime":"out","startTime":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:813","type":"CtReturnImpl","sourcecode":"return long"},"status":-1},{"failures":[10,11],"tindex":"8a1b46d1-2e76-11e5-80c4-4fd80b45dd83","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2348","type":"CtIfImpl","sourcecode":"if (int > (int)) {\n    return -1;\n} "},"variableMap":{"strLen":"startIndex","size":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2661","type":"CtForImpl","sourcecode":"for (int int = int ; int >= 0 ; int--) {\n    if (double == (double[][int])) {\n        return int;\n    } \n}"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75],"tindex":"8a1b6de2-2e76-11e5-80c4-2de8c49b3ca5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:60","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.setUseIdentityHashCode(false)"},"variableMap":{"this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1218","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, char[])"},"status":-1},{"failures":[],"tindex":"8a1b6de3-2e76-11e5-80c4-1970f86155a3","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDateFormat:289","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getTimeInstance(int, java.util.TimeZone, java.util.Locale)"},"variableMap":{"timeZone":"timeZone","style":"timeStyle","locale":"locale","org.apache.commons.lang3.time.FastDateFormat.cache":"org.apache.commons.lang3.time.FastDateFormat.cache"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateFormat:355","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FastDateFormat.org.apache.commons.lang3.time.FormatCache<org.apache.commons.lang3.time.FastDateFormat>.getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale)"},"status":-2},{"failures":[76],"tindex":"8a1b6de4-2e76-11e5-80c4-7976419595a5","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:302","type":"CtWhileImpl","sourcecode":"while (int < 0) {\n    int += 60;\n    int -= 1;\n}"},"variableMap":{"seconds":"j","minutes":"j"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:966","type":"CtIfImpl","sourcecode":"if ((int[][int]) > int) {\n    int = int[][int];\n} "},"status":-1},{"failures":[],"tindex":"8a1b6de5-2e76-11e5-80c4-4b587eaa60aa","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","type":"CtUnaryOperatorImpl","sourcecode":"int++"},"variableMap":{"k":"replLength"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4532","type":"CtAssignmentImpl","sourcecode":"int = int + int"},"status":-2},{"failures":[],"tindex":"8a1b94f6-2e76-11e5-80c4-d76c5bbe0c6c","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.concurrent.LazyInitializer:101","type":"CtAssignmentImpl","sourcecode":"T = T"},"variableMap":{"result":"element1","object":"element1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Range:161","type":"CtAssignmentImpl","sourcecode":"this.T = T"},"status":-2},{"failures":[77],"tindex":"8a1b94f7-2e76-11e5-80c4-2d9a974e1317","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:5283","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    break;\n} "},"variableMap":{"found":"max"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ObjectUtils:585","type":"CtIfImpl","sourcecode":"if (int == int) {\n    T = null;\n} else if (int > int) {\n    int = int;\n    T = java.util.Map.Entry<T, org.apache.commons.lang3.mutable.MutableInt>.getKey();\n} "},"status":-1},{"failures":[],"tindex":"8a1b94f8-2e76-11e5-80c4-5915b15b9562","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:398","type":"CtReturnImpl","sourcecode":"return char[]"},"variableMap":{"destination":"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:379","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.char[]"},"status":-2},{"failures":[78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93],"tindex":"8a1b94f9-2e76-11e5-80c4-335bf1869a9b","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} "},"variableMap":{"numerator":"len"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:729","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], 0, char[], int, int)"},"status":-1},{"failures":[],"tindex":"8a1bbc0a-2e76-11e5-80c4-f774ddcf9bfd","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} "},"variableMap":{"numerator":"pos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.CharSequenceTranslator:84","type":"CtWhileImpl","sourcecode":"while (int < int) {\n    final int int = org.apache.commons.lang3.text.translate.CharSequenceTranslator.translate(java.lang.CharSequence, int, java.io.Writer);\n    if (int == 0) {\n        final char[] char[] = java.lang.Character.toChars(java.lang.Character.codePointAt(java.lang.CharSequence, int));\n        java.io.Writer.write(char[]);\n        int += char[].int;\n        continue;\n    } \n    for (int int = 0 ; int < int ; int++) {\n        int += java.lang.Character.charCount(java.lang.Character.codePointAt(java.lang.CharSequence, int));\n    }\n}"},"status":0},{"failures":[94],"tindex":"8a1bbc0b-2e76-11e5-80c4-13c28c36a8d1","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:320","type":"CtInvocationImpl","sourcecode":"java.text.ParsePosition.setIndex((int + (java.util.regex.Matcher.end())))"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":19,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"8a1b1fbe-2e76-11e5-80c4-75072f174990","diffs":[{"branches":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.reflect.TypeUtils_java.lang.String_classToString(java.lang.Class).e2","org.apache.commons.lang3.reflect.TypeUtils_java.lang.String_classToString(java.lang.Class).b","org.apache.commons.lang3.reflect.TypeUtils_java.lang.String_classToString(java.lang.Class).e1"]},"type":"branch"},{"nodes":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.reflect.TypeUtils.java.lang.String classToString(java.lang.Class)"]},"edges":{"org.apache.commons.lang3.reflect.TypeLiteralTest.testTyped":["org.apache.commons.lang3.reflect.TypeUtils.java.lang.String toString(java.lang.reflect.Type) -> org.apache.commons.lang3.reflect.TypeUtils.java.lang.String classToString(java.lang.Class)"]},"type":"graph"}]}]}