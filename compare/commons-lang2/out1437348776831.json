{"failureDictionary":{"org.apache.commons.lang3.StringEscapeUtilsTest.testLang911":19,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String_int":66,"org.apache.commons.lang3.ArrayUtilsTest.testToPrimitive_double_double":68,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceChangedMap":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":16,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplaceSystemProperties":40,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeUnknownEntity":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":38,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":54,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_LocaleLocale":58,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":27,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplace":37,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":0,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableRecursive":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapFull":56,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":39,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_noMatch":62,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":9,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":32,"org.apache.commons.lang3.text.StrSubstitutorTest.testDefaultValueDelimiters":48,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":11,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHiragana":26,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorNoArgs":42,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlSupplementaryCharacters":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":17,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":5,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":24,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_String":64,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":13,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String_nullValue":63,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePartialString_noReplace":57,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariable":50,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":14,"org.apache.commons.lang3.text.StrSubstitutorTest.testSamePrefixAndSuffix":36,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char":67,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlHighUnicode":21,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtStart":55,"org.apache.commons.lang3.text.StrSubstitutorTest.testResolveVariable":52,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":3,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":29,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testCyclicReplacement":30,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":8,"org.apache.commons.lang3.LocaleUtilsTest.testLocaleLookupList_Locale":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testStaticReplacePrefixSuffix":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":20,"org.apache.commons.lang3.text.StrSubstitutorTest.testConstructorMapPrefixSuffix":35,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":34,"org.apache.commons.lang3.text.StrBuilderTest.testStartsWith":60,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJavaWithSlash":12,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":31,"org.apache.commons.lang3.ArrayUtilsTest.testSameLengthDouble":1,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceWeirdPattens":46,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":47,"org.apache.commons.lang3.BooleanUtilsTest.test_toBooleanObject_String_String_String_String":61,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang720":18,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceInVariableDisabled":53,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":10,"org.apache.commons.lang3.AnnotationUtilsTest.testHashCode":2,"org.apache.commons.lang3.text.StrBuilderTest.testLastIndexOf_char_int":65,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":7,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHexCharsHtml":22,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeXmlSupplementaryCharacters":23,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceAdjacentAtEnd":43,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":49,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSolo":44,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":51},"transformations":[{"failures":[0],"tindex":"7c2d6c40-2e6e-11e5-850c-c1e371c9c26a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1623","type":"CtIfImpl","sourcecode":"if (((int - 1) + int) >= 16) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 16\");\n} "},"variableMap":{"nBools":"length","srcPos":"size"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1560","type":"CtInvocationImpl","sourcecode":"java.lang.System.arraycopy(char[], int, char[], (int + int), ((int) - int))"},"status":-1},{"failures":[],"tindex":"7c2dba61-2e6e-11e5-850c-8767cfd3dc3e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2349","type":"CtReturnImpl","sourcecode":"return -1"},"status":0},{"failures":[],"tindex":"7c2dba62-2e6e-11e5-850c-4b4eb29e5055","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:182","type":"CtLocalVariableImpl","sourcecode":"long long"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:133","type":"CtLocalVariableImpl","sourcecode":"long long = 0"},"status":-2},{"failures":[],"tindex":"7c2dba63-2e6e-11e5-850c-3168a47a384d","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:182","type":"CtAssignmentImpl","sourcecode":"java.lang.String = org.apache.commons.lang3.StringUtils.replaceOnce(java.lang.String, \" 0 hours\", \"\")"},"variableMap":{"duration":"className","tmp":"className"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:1116","type":"CtAssignmentImpl","sourcecode":"java.lang.String = java.lang.String.substring(1)"},"status":1},{"failures":[1],"tindex":"7c2dba64-2e6e-11e5-850c-0f3846cd9f90","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1341","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[2],"tindex":"7c2de175-2e6e-11e5-850c-1d35e45ebb96","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.reflect.InheritanceUtils:50","type":"CtIfImpl","sourcecode":"if ((java.lang.Class<?> == null) || (java.lang.Class<?> == null)) {\n    return -1;\n} "},"variableMap":{"parent":"componentType","child":"componentType"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:345","type":"CtIfImpl","sourcecode":"if (java.lang.Class<?>.equals(java.lang.Byte.java.lang.Class<java.lang.Byte>)) {\n    return java.util.Arrays.hashCode(((byte[])(java.lang.Object)));\n} "},"status":-1},{"failures":[],"tindex":"7c2de176-2e6e-11e5-850c-9de532b6b537","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:631","type":"CtIfImpl","sourcecode":"if (java.lang.StringBuffer == null) {\n    return false;\n} "},"status":0},{"failures":[3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27],"tindex":"7c2de177-2e6e-11e5-850c-b1112818afef","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringEscapeUtils:261","type":"CtIfImpl","sourcecode":"if (int != 0) {\n    throw new java.lang.IllegalStateException(\"CsvEscaper should never reach the [1] index\");\n} "},"variableMap":{"index":"longest"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:71","type":"CtIfImpl","sourcecode":"if ((int + (int)) > (java.lang.CharSequence.length())) {\n    int = (java.lang.CharSequence.length()) - int;\n} "},"status":-1},{"failures":[28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57],"tindex":"7c2de178-2e6e-11e5-850c-5d347b237d9e","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.exception.ExceptionUtils:536","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(java.util.List<java.lang.String>.get(int))"},"variableMap":{"trace":"priorVariables","frames":"priorVariables","j":"length"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:834","type":"CtInvocationImpl","sourcecode":"java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int))"},"status":-1},{"failures":[58,59],"tindex":"7c2e0889-2e6e-11e5-850c-07bf69df7698","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.LocaleUtils:305","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Locale>.add(java.util.Locale)"},"variableMap":{"countries":"list","locale":"locale"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.LocaleUtils:199","type":"CtInvocationImpl","sourcecode":"java.util.List<java.util.Locale>.add(new java.util.Locale(java.util.Locale.getLanguage() , java.util.Locale.getCountry()))"},"status":-1},{"failures":[],"tindex":"7c2e088a-2e6e-11e5-850c-13198164722d","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1389","type":"CtIfImpl","sourcecode":"if (boolean || boolean) {\n    return false;\n} "},"variableMap":{"hasDecPoint":"useIdentityHashCode","hasExp":"useIdentityHashCode"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:1646","type":"CtReturnImpl","sourcecode":"return boolean"},"status":-2},{"failures":[],"tindex":"7c2e088b-2e6e-11e5-850c-83efe6f0289f","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.TypeUtils:989","type":"CtReturnImpl","sourcecode":"return java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>"},"variableMap":{"typeVarAssigns":"subtypeVarAssigns"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.reflect.TypeUtils:802","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.reflect.TypeUtils.org.apache.commons.lang3.reflect.TypeUtils.getTypeArguments(((java.lang.reflect.ParameterizedType)(java.lang.reflect.Type)), java.lang.Class<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>)"},"status":-2},{"failures":[],"tindex":"7c2e088c-2e6e-11e5-850c-41c709058989","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDatePrinter:195","type":"CtSwitchImpl","sourcecode":"switch (char) {\n    case 'G' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'y' :\n        if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitYearField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, (int < 4 ? 4 : int));\n        }\n        break;\n    case 'M' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 3) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        } else if (int == 2) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField.org.apache.commons.lang3.time.FastDatePrinter.TwoDigitMonthField;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField.org.apache.commons.lang3.time.FastDatePrinter.UnpaddedMonthField;\n        }\n        break;\n    case 'd' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'h' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwelveHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'H' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'm' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 's' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'S' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'E' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , (int < 4 ? java.lang.String[] : java.lang.String[]));\n        break;\n    case 'D' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'F' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'w' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'W' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'a' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TextField(java.util.Calendar.int , java.lang.String[]);\n        break;\n    case 'k' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TwentyFourHourField(org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int));\n        break;\n    case 'K' :\n        org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.selectNumberRule(java.util.Calendar.int, int);\n        break;\n    case 'z' :\n        if (int >= 4) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNameRule(java.util.TimeZone , java.util.Locale , java.util.TimeZone.int);\n        }\n        break;\n    case 'Z' :\n        if (int == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule.org.apache.commons.lang3.time.FastDatePrinter.TimeZoneNumberRule;\n        }\n        break;\n    case '\\'' :\n        final java.lang.String java.lang.String = java.lang.String.substring(1);\n        if ((java.lang.String.length()) == 1) {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.CharacterLiteral(java.lang.String.charAt(0));\n        } else {\n            org.apache.commons.lang3.time.FastDatePrinter.Rule = new org.apache.commons.lang3.time.FastDatePrinter.StringLiteral(java.lang.String);\n        }\n        break;\n    default :\n        throw new java.lang.IllegalArgumentException((\"Illegal pattern component: \" + java.lang.String));\n}"},"status":-2},{"failures":[],"tindex":"7c2e56ad-2e6e-11e5-850c-6f6dac57d4a8","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.reflect.FieldUtils:468","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.Validate.isTrue((java.lang.Object != null), \"target object must not be null\")"},"variableMap":{"target":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:543","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}"},"status":1},{"failures":[60],"tindex":"7c2e56ae-2e6e-11e5-850c-85995e1ed559","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1360","type":"CtIfImpl","sourcecode":"if (((((char[][int]) < '0') || ((char[][int]) > '9')) && (((char[][int]) < 'a') || ((char[][int]) > 'f'))) && (((char[][int]) < 'A') || ((char[][int]) > 'F'))) {\n    return false;\n} "},"variableMap":{"i":"len","chars":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2083","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    if ((char[][int]) != (java.lang.String.charAt(int))) {\n        return false;\n    } \n}"},"status":-1},{"failures":[61,62,63],"tindex":"7c2e7dbf-2e6e-11e5-850c-37690173de89","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.BooleanUtils:671","type":"CtIfImpl","sourcecode":"if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} "},"variableMap":{"str":"str","nullString":"str"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:657","type":"CtIfImpl","sourcecode":"if (java.lang.String == null) {\n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return java.lang.Boolean.java.lang.Boolean;\n    } \n    if (java.lang.String == null) {\n        return null;\n    } \n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return java.lang.Boolean.java.lang.Boolean;\n} else if (java.lang.String.equals(java.lang.String)) {\n    return null;\n} "},"status":-1},{"failures":[],"tindex":"7c2e7dc0-2e6e-11e5-850c-7909787f116b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.HashCodeBuilder:927","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"7c2e7dc1-2e6e-11e5-850c-a7a355ff98ba","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1093","type":"CtAssignmentImpl","sourcecode":"int = (int & (~int)) | int"},"variableMap":{"bits":"java.util.Calendar.DAY_OF_MONTH","out":"days","mask":"java.util.Calendar.DAY_OF_MONTH"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:317","type":"CtOperatorAssignmentImpl","sourcecode":"int += java.util.Calendar.getActualMaximum(java.util.Calendar.int)"},"status":-2},{"failures":[64,65,66,67],"tindex":"7c2ea4d2-2e6e-11e5-850c-89142dc4cfca","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.RandomUtils:89","type":"CtIfImpl","sourcecode":"if (int == int) {\n    return int;\n} "},"variableMap":{"startInclusive":"startIndex","endExclusive":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2426","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return -1;\n} "},"status":-1},{"failures":[68],"tindex":"7c2ea4d3-2e6e-11e5-850c-77835ec50b33","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3326","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < (java.lang.Double[].int) ; int++) {\n    final java.lang.Double java.lang.Double = java.lang.Double[][int];\n    double[][int] = java.lang.Double == null ? double : java.lang.Double.doubleValue();\n}"},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"7c2dba63-2e6e-11e5-850c-3168a47a384d","diffs":[{"nodes":{"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":["org.apache.commons.lang3.StringUtils.java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int)","org.apache.commons.lang3.StringUtils.java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)"]},"edges":{"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":["org.apache.commons.lang3.StringUtils.java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String) -> org.apache.commons.lang3.StringUtils.java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int)","org.apache.commons.lang3.StringUtils.java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,int) -> org.apache.commons.lang3.StringUtils.boolean isEmpty(java.lang.CharSequence)","org.apache.commons.lang3.ClassUtils.java.lang.String getCanonicalName(java.lang.String) -> org.apache.commons.lang3.StringUtils.java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.ClassUtilsTest.test_getPackageCanonicalName_Object":["org.apache.commons.lang3.StringUtils_java.lang.String_replace(java.lang.String,java.lang.String,java.lang.String,int).e1","org.apache.commons.lang3.StringUtils_java.lang.String_replaceOnce(java.lang.String,java.lang.String,java.lang.String).b","org.apache.commons.lang3.StringUtils_java.lang.String_replace(java.lang.String,java.lang.String,java.lang.String,int).t2","org.apache.commons.lang3.StringUtils_java.lang.String_replace(java.lang.String,java.lang.String,java.lang.String,int).b"]},"type":"branch"}]},{"transformation":"7c2e56ad-2e6e-11e5-850c-6f6dac57d4a8","diffs":[{"nodes":{"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.AnnotationUtilsTest.testToString":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.text.StrTokenizerTest.test1":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.ArrayUtilsTest.testToString":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":["org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"]},"edges":{"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.AnnotationUtilsTest.testToString":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.text.StrTokenizerTest.test1":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.ArrayUtilsTest.testToString":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"],"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":["org.apache.commons.lang3.builder.ToStringStyle.void appendInternal(java.lang.StringBuffer,java.lang.String,java.lang.Object,boolean) -> org.apache.commons.lang3.Validate.void isTrue(boolean,java.lang.String,java.lang.Object[])"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.builder.DiffResultTest.testToStringSpecifyStyleOutput":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.AnnotationUtilsTest.testToString":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.builder.ShortPrefixToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.builder.MultiLineToStringStyleTest.testAppendSuper":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.builder.ReflectionToStringBuilderExcludeTest.test_toStringExclude":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.text.StrTokenizerTest.test1":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.builder.StandardToStringStyleTest.testObjectArray":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.ArrayUtilsTest.testToString":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"],"org.apache.commons.lang3.builder.DefaultToStringStyleTest.testLongArrayArray":["org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).b","org.apache.commons.lang3.Validate_void_isTrue(boolean,java.lang.String,java.lang.Object[]).e1"]},"type":"branch"}]}]}