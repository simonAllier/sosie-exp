{"failureDictionary":{"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArray":129,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone":90,"org.apache.commons.lang3.ConversionTest.testBinaryBeMsb0ToHexDigit_2args":135,"org.apache.commons.lang3.time.FastDateParserTest.testParseLongShort":112,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatUTC":4,"org.apache.commons.lang3.time.DateFormatUtilsTest.testSMTP":7,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_BC":71,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang303":19,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSecond":31,"org.apache.commons.lang3.time.FastDateParserTest.testTimeZoneMatches":120,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_BC":111,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String":86,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testSimpleDate":13,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDifferingStyles":89,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_4bits_2args":1,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLocaleMatches":16,"org.apache.commons.lang3.time.FastDateParserTest.testLANG_832":108,"org.apache.commons.lang3.time.FastDateParserTest.testToStringContainsName":107,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDate":38,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_AD":72,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeNoTISO":9,"org.apache.commons.lang3.time.FastDateFormatTest.testCheckDefaults":88,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testShortDateStyleWithLocales":52,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_LongNoEra_AD":70,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang538":20,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundSemiMonth":35,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testCalendarTimezoneRespected":18,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDefaults":93,"org.apache.commons.lang3.text.StrBuilderTest.testCapacityAndLength":131,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testIndexOfIgnoreCase_String":136,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.test_Equality_Hash":66,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateYear":48,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateAmPm":45,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_Locale":91,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_BC":116,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testEquals":74,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateTimeInstance":92,"org.apache.commons.lang3.time.FastDateParserTest.testSpecialCharacters":94,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Short_BC":73,"org.apache.commons.lang3.time.FastDateParserTest.testLowYearPadding":101,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testTimeZoneMatches":25,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_AD":59,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHour":39,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateTimeISO":8,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_BC":114,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testTimeZoneMatches":77,"org.apache.commons.lang3.time.FastDateFormatTest.testDateDefaults":87,"org.apache.commons.lang3.time.FastDateParserTest.testMilleniumBug":96,"org.apache.commons.lang3.time.FastDateFormatTest.test_changeDefault_Locale_DateInstance":84,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMilliSecond":28,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testAmPm":57,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testPatternMatches":78,"org.apache.commons.lang3.time.FastDatePrinterTest.testCalendarTimezoneRespected":79,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Short_AD":115,"org.apache.commons.lang3.time.FastDateFormatTest.testTimeDateDefaults":85,"org.apache.commons.lang3.time.DateFormatUtilsTest.testDateISO":10,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithSupplementaryChars":124,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringCharArrayWithBadSupplementaryChars":125,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSecond":36,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_ShortNoEra_AD":110,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testFormat":24,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHourOfDay":42,"org.apache.commons.lang3.AnnotationUtilsTest.testNonEquivalentAnnotationsOfSameType":3,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseLongShort":69,"org.apache.commons.lang3.time.FastDateParserTest.testParseNumerics":104,"org.apache.commons.lang3.time.FastDateParserTest.testPatternMatches":121,"org.apache.commons.lang3.time.FastDateParserTest.testParseZone":99,"org.apache.commons.lang3.time.DateFormatUtilsTest.testTimeISO":5,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundHourOfDay":44,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLowYearPadding":58,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLANG_832":65,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_AD":67,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMonth":32,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateSemiMonth":33,"org.apache.commons.lang3.time.FastDateParserTest.testLocaleMatches":97,"org.apache.commons.lang3.time.FastDateParserTest.test_Equality_Hash":109,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testToStringContainsName":22,"org.apache.commons.lang3.time.FastDateParserTest.testLang538":106,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormatCalendar":6,"org.apache.commons.lang3.time.FastDateParserTest.testLang303":105,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsert":134,"org.apache.commons.lang3.ConversionTest.testBinaryToHexDigitMsb0_bits":0,"org.apache.commons.lang3.time.FastDateParserTest.testShortDateStyleWithLocales":95,"org.apache.commons.lang3.time.FastDateFormatTest.testParseSync":81,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_AD":102,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateHour":47,"org.apache.commons.lang3.time.FastDateParserTest.testAmPm":100,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDate":46,"org.apache.commons.lang3.time.FastDateFormatTest.testLang954":82,"org.apache.commons.lang3.AnnotationUtilsTest.testEquivalence":2,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_ShortNoEra_BC":68,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testMilleniumBug":15,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundYear":40,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocales_Long_BC":60,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringString":127,"org.apache.commons.lang3.time.FastDateParserTest.testQuotes":119,"org.apache.commons.lang3.math.FractionTest.testToProperString":130,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testEquals":23,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_LongNoEra_AD":113,"org.apache.commons.lang3.time.DateUtilsTest.testLang530":50,"org.apache.commons.lang3.time.DateFormatUtilsTest.testFormat":11,"org.apache.commons.lang3.time.FastDateParserTest.testLocales_Long_BC":103,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMonth":43,"org.apache.commons.lang3.time.FastDateParserTest.testDayOf":98,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseNumerics":61,"org.apache.commons.lang3.time.FastDateParserTest.testEquals":117,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang538":63,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMinute":34,"org.apache.commons.lang3.time.FastDateParserTest.testParses":118,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundAmPm":37,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithSupplementaryChars":128,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateDayOfMonth":49,"org.apache.commons.lang3.time.DateFormatUtilsTest.testConstructor":12,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParseZone":56,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLang645":21,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance":80,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testSpecialCharacters":51,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvWriter":123,"org.apache.commons.lang3.text.StrBuilderTest.testSetLength":132,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testParses":75,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testLowYearPadding":17,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundDayOfMonth":29,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testTruncateMilliSecond":41,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testToStringContainsName":64,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLang303":62,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testPatternMatches":26,"org.apache.commons.lang3.time.DateUtilsRoundingTest.testRoundMinute":30,"org.apache.commons.lang3.time.FastDateFormatTest.test_getInstance_String_TimeZone_Locale":83,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testLocaleMatches":54,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testDayOf":55,"org.apache.commons.lang3.time.FastDateFormat_PrinterTest.testShortDateStyleWithLocales":14,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testMilleniumBug":53,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeCsvString":122,"org.apache.commons.lang3.text.StrBuilderAppendInsertTest.testInsertWithNullText":133,"org.apache.commons.lang3.time.DurationFormatUtilsTest.testFormatPeriodISO":27,"org.apache.commons.lang3.time.FastDateFormat_ParserTest.testQuotes":76,"org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAny_StringWithBadSupplementaryChars":126},"transformations":[{"failures":[0,1],"tindex":"1b8dfd2d-2e5b-11e5-897d-7b4216e01c6c","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:338","type":"CtIfImpl","sourcecode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return '7';\n    } else {\n        return '6';\n    }\n} else {\n    if (boolean[][int]) {\n        return '5';\n    } else {\n        return '4';\n    }\n}"},"variableMap":{"srcPos":"srcPos","src":"src","length":"srcPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:424","type":"CtIfImpl","sourcecode":"if (boolean[][int]) {\n    return 'b';\n} else {\n    return '3';\n}"},"status":-1},{"failures":[],"tindex":"1b8e4b4e-2e5b-11e5-897d-815ec259cc3b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.DiffResult:130","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.builder.ToStringStyle"},"status":-2},{"failures":[],"tindex":"1b8e4b4f-2e5b-11e5-897d-53ba6258f365","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.Conversion:565","type":"CtReturnImpl","sourcecode":"return '4'"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:322","type":"CtIfImpl","sourcecode":"if (((boolean[].int) > (int + 1)) && (boolean[][(int + 1)])) {\n    if (boolean[][int]) {\n        return 'b';\n    } else {\n        return 'a';\n    }\n} else {\n    if (boolean[][int]) {\n        return '9';\n    } else {\n        return '8';\n    }\n}"},"status":-2},{"failures":[2,3],"tindex":"1b8e4b50-2e5b-11e5-897d-25e4ba9024fe","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.AnnotationUtils:313","type":"CtReturnImpl","sourcecode":"return java.util.Arrays.equals(((boolean[])(java.lang.Object)), ((boolean[])(java.lang.Object)))"},"variableMap":{"o1":"o2","o2":"o1"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.AnnotationUtils:289","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.AnnotationUtils.org.apache.commons.lang3.AnnotationUtils.annotationArrayMemberEquals(((java.lang.annotation.Annotation[])(java.lang.Object)), ((java.lang.annotation.Annotation[])(java.lang.Object)))"},"status":-1},{"failures":[],"tindex":"1b8e4b51-2e5b-11e5-897d-41c27026c7dd","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:6077","type":"CtAssignmentImpl","sourcecode":"int = int - int"},"variableMap":{"set":"i","count":"srcPos","srcIndex":"srcPos"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1333","type":"CtAssignmentImpl","sourcecode":"int = (int * 8) + int"},"status":-2},{"failures":[],"tindex":"1b8e7262-2e5b-11e5-897d-dd2390f40e1a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FormatCache:125","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.time.FormatCache<F>.getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)"},"status":-2},{"failures":[],"tindex":"1b8e7263-2e5b-11e5-897d-975ae78bc2b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.BooleanUtils:943","type":"CtIfImpl","sourcecode":"if ((java.lang.Boolean[].int) == 0) {\n    throw new java.lang.IllegalArgumentException(\"Array is empty\");\n} "},"status":0},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121],"tindex":"1b8e7264-2e5b-11e5-897d-b920d06d6fac","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.FastDateParser:155","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.lang3.time.FastDateParser.Strategy = null"},"variableMap":{"nextStrategy":"nextStrategy"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:159","type":"CtAssignmentImpl","sourcecode":"org.apache.commons.lang3.time.FastDateParser.Strategy = org.apache.commons.lang3.time.FastDateParser.getStrategy(java.lang.String, java.util.Calendar)"},"status":-1},{"failures":[],"tindex":"1b8e9975-2e5b-11e5-897d-bb8eaebc7ccd","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:1367","type":"CtIfImpl","sourcecode":"if (java.lang.Character.isDigit(char[][(int + 1)])) {\n    int int = int + 1;\n    for ( ; int < (char[].int) ; int++) {\n        if (((char[][int]) < '0') || ((char[][int]) > '7')) {\n            return false;\n        } \n    }\n    return true;\n} "},"variableMap":{"start":"size","length":"size","chars":"otherBuf"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2660","type":"CtForImpl","sourcecode":"for (int int = (int) - 1 ; int >= 0 ; int--) {\n    final char char = char[][int];\n    final char char = char[][int];\n    if ((char != char) && ((java.lang.Character.toUpperCase(char)) != (java.lang.Character.toUpperCase(char)))) {\n        return false;\n    } \n}"},"status":0},{"failures":[122,123,124,125,126,127,128,129],"tindex":"1b8e9976-2e5b-11e5-897d-5fcd90c664b9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.StringUtils:1882","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    for (int int = 0 ; int < int ; int++) {\n        if ((char[][int]) == char) {\n            if (java.lang.Character.isHighSurrogate(char)) {\n                if (int == int) {\n                    return false;\n                } \n                if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                    return false;\n                } \n            } else {\n                return false;\n            }\n        } \n    }\n}"},"variableMap":{"cs":"cs","searchLen":"csLength","csLen":"searchLast","searchLast":"csLast","searchChars":"searchChars","csLast":"csLast"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1626","type":"CtForImpl","sourcecode":"for (int int = 0 ; int < int ; int++) {\n    final char char = java.lang.CharSequence.charAt(int);\n    for (int int = 0 ; int < int ; int++) {\n        if ((char[][int]) == char) {\n            if (java.lang.Character.isHighSurrogate(char)) {\n                if (int == int) {\n                    return true;\n                } \n                if ((int < int) && ((char[][(int + 1)]) == (java.lang.CharSequence.charAt((int + 1))))) {\n                    return true;\n                } \n            } else {\n                return true;\n            }\n        } \n    }\n}"},"status":-1},{"failures":[],"tindex":"1b8ec087-2e5b-11e5-897d-b9fa6582b8a3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DateUtils:1830","type":"CtReturnImpl","sourcecode":"return ((java.util.Calendar)(java.util.Calendar.clone()))"},"variableMap":{"spot":"truncated"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.DateUtils:834","type":"CtReturnImpl","sourcecode":"return java.util.Calendar"},"status":1},{"failures":[130],"tindex":"1b8ec088-2e5b-11e5-897d-5fee3059834c","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:178","type":"CtAssignmentImpl","sourcecode":"java.lang.String = \" \" + java.lang.String"},"variableMap":{"duration":"toProperString"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.Fraction:947","type":"CtAssignmentImpl","sourcecode":"java.lang.String = new java.lang.StringBuilder(32).append(org.apache.commons.lang3.math.Fraction.getProperWhole()).append(' ').append(int).append('/').append(org.apache.commons.lang3.math.Fraction.getDenominator()).toString()"},"status":-1},{"failures":[],"tindex":"1b8ec089-2e5b-11e5-897d-85ab7f269562","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.Diff:85","type":"CtReturnImpl","sourcecode":"return java.lang.String"},"variableMap":{"fieldName":"text"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:4485","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.replace(java.lang.String, java.lang.String, java.lang.String, -1)"},"status":-2},{"failures":[131,132],"tindex":"1b8ec08a-2e5b-11e5-897d-1bf15f3354cb","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1580","type":"CtAssignmentImpl","sourcecode":"char[][int++] = 't'"},"variableMap":{"index":"i","buffer":"buffer"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:211","type":"CtAssignmentImpl","sourcecode":"char[][int] = '\u0000'"},"status":-1},{"failures":[],"tindex":"1b8ee79b-2e5b-11e5-897d-bd3f010f9f2d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ClassUtils:733","type":"CtReturnImpl","sourcecode":"return java.lang.Class<?>[]"},"status":0},{"failures":[133,134],"tindex":"1b8ee79c-2e5b-11e5-897d-719b8cb168d3","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:2020","type":"CtIfImpl","sourcecode":"if ((int) == 0) {\n    return this;\n} "},"variableMap":{"size":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:1523","type":"CtIfImpl","sourcecode":"if (char[] == null) {\n    return org.apache.commons.lang3.text.StrBuilder.insert(int, java.lang.String);\n} "},"status":-1},{"failures":[135],"tindex":"1b8ee79d-2e5b-11e5-897d-771927e54d67","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:522","type":"CtAssignmentImpl","sourcecode":"int = 0"},"status":-1},{"failures":[136],"tindex":"1b8ee79e-2e5b-11e5-897d-31d060f914d4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:141","type":"CtReturnImpl","sourcecode":"return 15"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:1074","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.StringUtils.org.apache.commons.lang3.StringUtils.indexOfIgnoreCase(java.lang.CharSequence, java.lang.CharSequence, 0)"},"status":-1},{"failures":[],"tindex":"1b8ee79f-2e5b-11e5-897d-4170e7ebf0f8","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.math.Fraction:597","type":"CtOperatorAssignmentImpl","sourcecode":"int /= 2"},"variableMap":{"u":"sz"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:54","type":"CtAssignmentImpl","sourcecode":"int = int"},"status":-2},{"failures":[],"tindex":"1b8f0eb0-2e5b-11e5-897d-3b9dbd6133ea","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:3600","type":"CtReturnImpl","sourcecode":"return (T[] != null) && ((T[].int) != 0)"},"status":-2}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"},"diffs":[{"transformation":"1b8e7263-2e5b-11e5-897d-975ae78bc2b8","diffs":[{"nodes":{"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":["org.apache.commons.lang3.BooleanUtils.boolean and(boolean[])","org.apache.commons.lang3.ArrayUtils.boolean[] toPrimitive(java.lang.Boolean[])"]},"edges":{"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":["org.apache.commons.lang3.BooleanUtils.java.lang.Boolean and(java.lang.Boolean[]) -> org.apache.commons.lang3.BooleanUtils.boolean and(boolean[])","org.apache.commons.lang3.BooleanUtils.java.lang.Boolean and(java.lang.Boolean[]) -> org.apache.commons.lang3.ArrayUtils.boolean[] toPrimitive(java.lang.Boolean[])"]},"type":"graph"},{"branches":{"org.apache.commons.lang3.BooleanUtilsTest.testAnd_object_emptyInput":["org.apache.commons.lang3.ArrayUtils_boolean[]_toPrimitive(java.lang.Boolean[]).t2","org.apache.commons.lang3.ArrayUtils_boolean[]_toPrimitive(java.lang.Boolean[]).e1","org.apache.commons.lang3.ArrayUtils_boolean[]_toPrimitive(java.lang.Boolean[]).b"]},"type":"branch"}]}]}