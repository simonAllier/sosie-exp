{"failureDictionary":{"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx1":21,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSelfInstanceVarReflectionObjectCycle":43,"org.apache.commons.lang3.builder.ToStringBuilderTest.testShortArray":29,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendSuper":45,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang313":77,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx2":22,"org.apache.commons.lang3.tuple.ImmutablePairTest.testEquals":2,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArray":12,"org.apache.commons.lang3.builder.ToStringBuilderTest.testConstructorEx3":23,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDouble":39,"org.apache.commons.lang3.builder.ToStringBuilderTest.testCharArrayArray":42,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceUnknownKey":60,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceIncompletePrefix":65,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArray":8,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml":81,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArrayArray":37,"org.apache.commons.lang3.builder.DiffResultTest.testListIsNonModifiable":3,"org.apache.commons.lang3.tuple.MutablePairTest.testEquals":1,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArray":10,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixNoSuffix":61,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEscaping":55,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtml":72,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArray":51,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionShortArray":41,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceSimple":58,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionLongArray":19,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJson":74,"org.apache.commons.lang3.builder.ToStringBuilderTest.testBooleanArrayArray":7,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionObjectCycle":28,"org.apache.commons.lang3.StringEscapeUtilsTest.testLang708":78,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBoolean":6,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXmlAllCharacters":68,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeHtmlVersions":80,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEmbeddedPatternInChoice":84,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionyteArray":14,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml10":75,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArrayArray":30,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionBooleanArrayArray":26,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeXml11":76,"org.apache.commons.lang3.ConversionTest.testHexToByte":0,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharArray":47,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArrayArray":16,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInheritedReflectionStatics":31,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testBasicLookup":66,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceNoPrefixSuffix":56,"org.apache.commons.lang3.text.translate.LookupTranslatorTest.testLang882":67,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayAndObjectCycle":35,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArrayArray":9,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeHtml4":71,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testOverriddenBuiltinFormat":82,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectArray":24,"org.apache.commons.lang3.builder.ToStringBuilderTest.testByteArrayArray":40,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedFormats":85,"org.apache.commons.lang3.builder.ToStringBuilderTest.testDoubleArrayArray":5,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionDoubleArray":15,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeEcmaScript":79,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionObjectCycle":25,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceRecursive":59,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceToIdentical":57,"org.apache.commons.lang3.builder.ToStringBuilderTest.testLongArray":27,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionIntArray":46,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionInteger":11,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionStatics":18,"org.apache.commons.lang3.builder.ToStringBuilderTest.testGetSetDefault":48,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSetDefaultEx":36,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceEmptyKeys":62,"org.apache.commons.lang3.builder.ToStringBuilderTest.testIntArray":38,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testExtendedAndBuiltInFormats":86,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionArrayCycleLevel2":33,"org.apache.commons.lang3.StringEscapeUtilsTest.testEscapeJava":73,"org.apache.commons.lang3.text.ExtendedMessageFormatTest.testEscapedQuote_LANG_477":83,"org.apache.commons.lang3.builder.ToStringBuilderTest.testInnerClassReflection":49,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionhortArrayArray":20,"org.apache.commons.lang3.builder.ToStringBuilderTest.testObject":44,"org.apache.commons.lang3.builder.ToStringBuilderTest.testFloatArrayArray":13,"org.apache.commons.lang3.StringEscapeUtilsTest.testStandaloneAmphersand":70,"org.apache.commons.lang3.StringEscapeUtilsTest.testUnescapeJava":69,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionFloatArrayArray":52,"org.apache.commons.lang3.builder.DiffResultTest.testIterator":4,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplaceComplexEscaping":63,"org.apache.commons.lang3.builder.ToStringBuilderTest.testAppendToString":34,"org.apache.commons.lang3.math.NumberUtilsTest.testCreateNumberMagnitude":53,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionCharacter":50,"org.apache.commons.lang3.builder.ToStringBuilderTest.testReflectionByteArrayArray":32,"org.apache.commons.lang3.math.NumberUtilsTest.TestLang747":54,"org.apache.commons.lang3.builder.ToStringBuilderTest.testSimpleReflectionStatics":17,"org.apache.commons.lang3.text.StrSubstitutorTest.testReplacePrefixNoSuffix":64},"transformations":[{"failures":[0],"tindex":"78e3580f-2c02-11e5-9b04-0dd03b8d13e9","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.mutable.MutableByte:138","type":"CtOperatorAssignmentImpl","sourcecode":"this.byte += byte"},"variableMap":{"value":"out","operand":"out"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.Conversion:1020","type":"CtAssignmentImpl","sourcecode":"byte = ((byte)((byte & (~int)) | int))"},"status":-1},{"failures":[],"tindex":"78e37f20-2c02-11e5-9b04-91cb27d7c9e1","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.ReflectionToStringBuilder:315","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.java.lang.String[]"},"variableMap":{"org.apache.commons.lang3.ArrayUtils.EMPTY_STRING_ARRAY":"strs"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:734","type":"CtReturnImpl","sourcecode":"return java.lang.String[]"},"status":-2},{"failures":[1,2,3,4],"tindex":"78e3a631-2c02-11e5-9b04-5da686c70ac4","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:330","type":"CtReturnImpl","sourcecode":"return false"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.tuple.Pair:132","type":"CtReturnImpl","sourcecode":"return true"},"status":-1},{"failures":[5,5,6,7,7,8,8,9,9,10,11,12,12,13,13,14,15,16,17,18,19,20,21,22,23,24,25,26,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,51,52,52],"tindex":"78e3a632-2c02-11e5-9b04-0770887b210a","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.builder.ToStringStyle:550","type":"CtIfImpl","sourcecode":"if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}"},"variableMap":{"fieldName":"fieldName","this":"this","detail":"detail","buffer":"buffer","value":"value"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.builder.ToStringStyle:529","type":"CtIfImpl","sourcecode":"if (java.lang.Object instanceof double[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((double[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof float[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((float[])(java.lang.Object)));\n    }\n} else if (java.lang.Object instanceof boolean[]) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((boolean[])(java.lang.Object)));\n    }\n} else if (java.lang.Object.getClass().isArray()) {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, ((java.lang.Object[])(java.lang.Object)));\n    }\n} else {\n    if (boolean) {\n        org.apache.commons.lang3.builder.ToStringStyle.appendDetail(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    } else {\n        org.apache.commons.lang3.builder.ToStringStyle.appendSummary(java.lang.StringBuffer, java.lang.String, java.lang.Object);\n    }\n}"},"status":-1},{"failures":[],"tindex":"78e4b7a3-2c02-11e5-9b04-97ad48e679ee","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrTokenizer:102","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setDelimiterMatcher(org.apache.commons.lang3.text.StrMatcher.tabMatcher())"},"variableMap":{"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE":"org.apache.commons.lang3.text.StrTokenizer.TSV_TOKENIZER_PROTOTYPE"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrTokenizer:106","type":"CtInvocationImpl","sourcecode":"org.apache.commons.lang3.text.StrTokenizer.org.apache.commons.lang3.text.StrTokenizer.setEmptyTokenAsNull(false)"},"status":-2},{"failures":[],"tindex":"78e4b7a4-2c02-11e5-9b04-b7e0d2501739","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:4938","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.remove(((java.lang.Object)(float[])), int)))"},"variableMap":{"array":"array","this":"this","index":"index"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4514","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.((float[])(org.apache.commons.lang3.ArrayUtils.add(float[], int, java.lang.Float.valueOf(float), java.lang.Float.java.lang.Class<java.lang.Float>)))"},"status":-2},{"failures":[53,54],"tindex":"78e4b7a5-2c02-11e5-9b04-93f8a0e7057f","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.NumberUtils:586","type":"CtTryImpl","sourcecode":"try {\n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} catch (final java.lang.NumberFormatException nfe) {\n}"},"variableMap":{"str":"str","this":"this"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.math.NumberUtils:466","type":"CtIfImpl","sourcecode":"if (int > 0) {\n    char char = 0;\n    for (int int = int ; int < (java.lang.String.length()) ; int++) {\n        char = java.lang.String.charAt(int);\n        if (char == '0') {\n            int++;\n        } else {\n            break;\n        }\n    }\n    final int int = (java.lang.String.length()) - int;\n    if ((int > 16) || ((int == 16) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createBigInteger(java.lang.String);\n    } \n    if ((int > 8) || ((int == 8) && (char > '7'))) {\n        return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createLong(java.lang.String);\n    } \n    return org.apache.commons.lang3.math.NumberUtils.org.apache.commons.lang3.math.NumberUtils.createInteger(java.lang.String);\n} "},"status":-1},{"failures":[],"tindex":"78e4b7a6-2c02-11e5-9b04-9714549f494e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:6088","type":"CtReturnImpl","sourcecode":"return java.lang.Object"},"status":-2},{"failures":[],"tindex":"78e4b7a7-2c02-11e5-9b04-35266ab95185","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.time.DurationFormatUtils:350","type":"CtOperatorAssignmentImpl","sourcecode":"int += 1"},"variableMap":{"days":"java.util.Calendar.YEAR"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.time.FastDateParser:117","type":"CtAssignmentImpl","sourcecode":"int = java.util.Calendar.get(java.util.Calendar.int)"},"status":-2},{"failures":[],"tindex":"78e4deb8-2c02-11e5-9b04-35e82ea72910","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:620","type":"CtAssignmentImpl","sourcecode":"int = (int - int) / 2"},"variableMap":{"t":"length","u":"startIndex","v":"startIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:1960","type":"CtAssignmentImpl","sourcecode":"int = (java.lang.Object[].int) - 1"},"status":-2},{"failures":[],"tindex":"78e4deb9-2c02-11e5-9b04-a7cc0dd59274","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:1764","type":"CtIfImpl","sourcecode":"if (int >= 0) {\n    org.apache.commons.lang3.text.StrBuilder.deleteImpl(int, (int + int), int);\n} "},"variableMap":{"len":"pos","this":"buf","index":"offset"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrSubstitutor:766","type":"CtIfImpl","sourcecode":"if (int == 0) {\n    int++;\n} else {\n    if ((int > int) && ((char[][(int - 1)]) == char)) {\n        org.apache.commons.lang3.text.StrBuilder.deleteCharAt((int - 1));\n        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n        int--;\n        boolean = true;\n        int--;\n    } else {\n        final int int = int;\n        int += int;\n        int int = 0;\n        int int = 0;\n        while (int < int) {\n            if (boolean && ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int)) != 0)) {\n                int++;\n                int += int;\n                continue;\n            } \n            int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, int);\n            if (int == 0) {\n                int++;\n            } else {\n                if (int == 0) {\n                    java.lang.String java.lang.String = new java.lang.String(char[] , (int + int) , ((int - int) - int));\n                    if (boolean) {\n                        final org.apache.commons.lang3.text.StrBuilder org.apache.commons.lang3.text.StrBuilder = new org.apache.commons.lang3.text.StrBuilder(java.lang.String);\n                        org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, 0, org.apache.commons.lang3.text.StrBuilder.length());\n                        java.lang.String = org.apache.commons.lang3.text.StrBuilder.toString();\n                    } \n                    int += int;\n                    final int int = int;\n                    java.lang.String java.lang.String = java.lang.String;\n                    java.lang.String java.lang.String = null;\n                    if (org.apache.commons.lang3.text.StrMatcher != null) {\n                        final char[] char[] = java.lang.String.toCharArray();\n                        int int = 0;\n                        for (int int = 0 ; int < (char[].int) ; int++) {\n                            if ((!boolean) && ((org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int, int, char[].int)) != 0)) {\n                                break;\n                            } \n                            if ((int = org.apache.commons.lang3.text.StrMatcher.isMatch(char[], int)) != 0) {\n                                java.lang.String = java.lang.String.substring(0, int);\n                                java.lang.String = java.lang.String.substring((int + int));\n                                break;\n                            } \n                        }\n                    } \n                    if (java.util.List<java.lang.String> == null) {\n                        java.util.List<java.lang.String> = new java.util.ArrayList<java.lang.String>();\n                        java.util.List<java.lang.String>.add(new java.lang.String(char[] , int , int));\n                    } \n                    org.apache.commons.lang3.text.StrSubstitutor.checkCyclicSubstitution(java.lang.String, java.util.List<java.lang.String>);\n                    java.util.List<java.lang.String>.add(java.lang.String);\n                    java.lang.String java.lang.String = org.apache.commons.lang3.text.StrSubstitutor.resolveVariable(java.lang.String, org.apache.commons.lang3.text.StrBuilder, int, int);\n                    if (java.lang.String == null) {\n                        java.lang.String = java.lang.String;\n                    } \n                    if (java.lang.String != null) {\n                        final int int = java.lang.String.length();\n                        org.apache.commons.lang3.text.StrBuilder.replace(int, int, java.lang.String);\n                        boolean = true;\n                        int int = org.apache.commons.lang3.text.StrSubstitutor.substitute(org.apache.commons.lang3.text.StrBuilder, int, int, java.util.List<java.lang.String>);\n                        int = (int + int) - (int - int);\n                        int += int;\n                        int += int;\n                        int += int;\n                        char[] = org.apache.commons.lang3.text.StrBuilder.char[];\n                    } \n                    java.util.List<java.lang.String>.remove(((java.util.List<java.lang.String>.size()) - 1));\n                    break;\n                } else {\n                    int--;\n                    int += int;\n                }\n            }\n        }\n    }\n}"},"status":-2},{"failures":[],"tindex":"78e52cda-2c02-11e5-9b04-f36ff3f07bbe","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.text.StrBuilder:358","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.char[]"},"variableMap":{"org.apache.commons.lang3.ArrayUtils.EMPTY_CHAR_ARRAY":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4839","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])"},"status":-2},{"failures":[],"tindex":"78e553eb-2c02-11e5-9b04-5fa8834d8b08","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.ArrayUtils:3792","type":"CtIfImpl","sourcecode":"if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} else if (char[] == null) {\n    return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[]);\n} "},"variableMap":{"array2":"array","this":"this","array1":"array"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:5624","type":"CtReturnImpl","sourcecode":"return org.apache.commons.lang3.ArrayUtils.org.apache.commons.lang3.ArrayUtils.clone(char[])"},"status":-2},{"failures":[55,56,57,58,59,60,61,62,63,64,65],"tindex":"78e553ec-2c02-11e5-9b04-3d665b85c242","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.Conversion:1589","type":"CtIfImpl","sourcecode":"if (((int - 1) + int) >= 32) {\n    throw new java.lang.IllegalArgumentException(\"nBools-1+srcPos is greather or equal to than 32\");\n} "},"variableMap":{"nBools":"endIndex","srcPos":"endIndex"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:418","type":"CtIfImpl","sourcecode":"if (int > int) {\n    throw new java.lang.StringIndexOutOfBoundsException(\"end < start\");\n} "},"status":-1},{"failures":[],"tindex":"78e553ed-2c02-11e5-9b04-03c83841912b","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.time.FastDatePrinter:975","type":"CtReturnImpl","sourcecode":"return 2"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.StringUtils:2034","type":"CtReturnImpl","sourcecode":"return int"},"status":-2},{"failures":[],"tindex":"78e553ee-2c02-11e5-9b04-c1fc6210ba68","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.builder.EqualsBuilder:327","type":"CtReturnImpl","sourcecode":"return true"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.StrBuilder:2706","type":"CtReturnImpl","sourcecode":"return false"},"status":-2},{"failures":[],"tindex":"78e553ef-2c02-11e5-9b04-df734eeca60d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:4572","type":"CtLocalVariableImpl","sourcecode":"final java.lang.Object java.lang.Object = java.lang.reflect.Array.newInstance(java.lang.Class<?>, (int + 1))"},"status":-2},{"failures":[],"tindex":"78e553f0-2c02-11e5-9b04-a979f879e3ed","series":0,"name":"add","transplant":{"position":"org.apache.commons.lang3.StringUtils:1378","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    return org.apache.commons.lang3.StringUtils.int;\n} "},"variableMap":{"org.apache.commons.lang3.StringUtils.INDEX_NOT_FOUND":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND","startPos":"org.apache.commons.lang3.ArrayUtils.INDEX_NOT_FOUND"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.ArrayUtils:2591","type":"CtIfImpl","sourcecode":"if (org.apache.commons.lang3.ArrayUtils.isEmpty(double[])) {\n    return org.apache.commons.lang3.ArrayUtils.int;\n} "},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81],"tindex":"78e57b01-2c02-11e5-9b04-d39411e0e10b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.translate.LookupTranslator:75","type":"CtForImpl","sourcecode":"for (int int = int ; int >= (int) ; int--) {\n    final java.lang.CharSequence java.lang.CharSequence = java.lang.CharSequence.subSequence(int, (int + int));\n    final java.lang.CharSequence java.lang.CharSequence = java.util.HashMap<java.lang.String, java.lang.CharSequence>.get(java.lang.CharSequence.toString());\n    if (java.lang.CharSequence != null) {\n        java.io.Writer.write(java.lang.CharSequence.toString());\n        return int;\n    } \n}"},"status":-1},{"failures":[82,83,84,85,86],"tindex":"78e57b02-2c02-11e5-9b04-9fcecb127673","series":0,"name":"replace","transplant":{"position":"org.apache.commons.lang3.math.Fraction:179","type":"CtIfImpl","sourcecode":"if (int < 0) {\n    throw new java.lang.ArithmeticException(\"The numerator must not be negative\");\n} "},"variableMap":{"numerator":"i"},"type":"adrStmt","transplantationPoint":{"position":"org.apache.commons.lang3.text.ExtendedMessageFormat:202","type":"CtIfImpl","sourcecode":"if (java.text.Format != null) {\n    java.text.Format[][int] = java.text.Format;\n} "},"status":-1}],"header":{"groupId":"org.apache.commons","transformationCount":20,"projectType":"maven","artifactId":"commons-lang3","generatorVersion":"1.0","version":"3.3.2"}}