{"failureDictionary":{"zip.LZWTest.sizeTest":1,"zip.LZWTest.compressDecompressTest":0},"transformations":[{"failures":[],"tindex":"41ad295a-1211-11e6-9b84-35f66b0a1067","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41ad295b-1211-11e6-9b84-59c169adb1f6","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"41ad295c-1211-11e6-9b84-799a15f37c92","series":0,"name":"add","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":0},{"failures":[0],"tindex":"41ad506d-1211-11e6-9b84-799a1fb75a4a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41ad506e-1211-11e6-9b84-49fe6597a53a","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41ad506f-1211-11e6-9b84-2bd6b6a967fd","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41ad5070-1211-11e6-9b84-21ae833e470e","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"41ad5071-1211-11e6-9b84-19e9cf0c30ba","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"41ad7782-1211-11e6-9b84-677e8e61c416","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"status":-1},{"failures":[0],"tindex":"41ad7783-1211-11e6-9b84-a7abf54de3f0","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"41ad7784-1211-11e6-9b84-91ad59d70b23","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41ad7785-1211-11e6-9b84-75ac55ac6fec","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"41ad7786-1211-11e6-9b84-e5dce880d59b","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41ad7787-1211-11e6-9b84-8781d03a414f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"status":-1},{"failures":[0],"tindex":"41ad7788-1211-11e6-9b84-9b24856274d0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[0],"tindex":"41ad9e99-1211-11e6-9b84-c3c63538b409","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[],"tindex":"41ad9e9a-1211-11e6-9b84-85dc21571341","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":0},{"failures":[],"tindex":"41ad9e9b-1211-11e6-9b84-95a4bdd2676a","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[],"tindex":"41ad9e9c-1211-11e6-9b84-b7843d3c6b8a","series":0,"name":"add","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":0},{"failures":[0],"tindex":"41adc5ad-1211-11e6-9b84-d330a8e8ccab","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"41adc5ae-1211-11e6-9b84-273b80c3660b","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":0},{"failures":[],"tindex":"41adc5af-1211-11e6-9b84-e53dd4148746","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[],"tindex":"41adc5b0-1211-11e6-9b84-1fd93154df98","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41adc5b1-1211-11e6-9b84-f766070f6757","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[0],"tindex":"41adecc2-1211-11e6-9b84-4f6cb9fbdbe0","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[],"tindex":"41adecc3-1211-11e6-9b84-b95531e2d881","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41adecc4-1211-11e6-9b84-21e42d3b637f","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"41adecc5-1211-11e6-9b84-21772bd55024","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41adecc6-1211-11e6-9b84-b15e2d76a470","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":0},{"failures":[],"tindex":"41adecc7-1211-11e6-9b84-23511ead2fa3","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41adecc8-1211-11e6-9b84-6dddce47c312","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[0],"tindex":"41ae13d9-1211-11e6-9b84-5beeebd14cf5","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"41ae13da-1211-11e6-9b84-53c498b4c6c1","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"41ae13db-1211-11e6-9b84-692a48dacab2","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[],"tindex":"41ae13dc-1211-11e6-9b84-0d7d961df154","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41ae13dd-1211-11e6-9b84-a7074f9d07e8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"status":-1},{"failures":[],"tindex":"41ae13de-1211-11e6-9b84-29327e53e59a","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"41ae13df-1211-11e6-9b84-5b57658ae9b4","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"41ae13e0-1211-11e6-9b84-4f03cb3ea322","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41ae13e1-1211-11e6-9b84-9977c0f9e316","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"41ae3af2-1211-11e6-9b84-ddabca9bbcaa","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[],"tindex":"41ae3af3-1211-11e6-9b84-bfcfb888de48","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[],"tindex":"41ae3af4-1211-11e6-9b84-fd9d8e88e676","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put(wc, (dictSize++))","position":"zip.LZW:23","type":"CtInvocationImpl","sourcecode":"dictionary.put(wc, (dictSize++))"},"status":0},{"failures":[0],"tindex":"41ae3af5-1211-11e6-9b84-5ddfef31f55f","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"41ae3af6-1211-11e6-9b84-6db4388e0fee","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"wc"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41ae3af7-1211-11e6-9b84-159b2d733858","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"41ae3af8-1211-11e6-9b84-b3278e762d2e","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41ae6209-1211-11e6-9b84-21eb63a2688b","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[],"tindex":"41ae620a-1211-11e6-9b84-39d447fab08c","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41ae620b-1211-11e6-9b84-012782de8979","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41ae620c-1211-11e6-9b84-13bd8660de9b","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"41ae620d-1211-11e6-9b84-9333750c1d9b","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"41ae620e-1211-11e6-9b84-4785c05ab706","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[0],"tindex":"41ae620f-1211-11e6-9b84-2dc7f130ea95","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"41ae6210-1211-11e6-9b84-fd697cfe1473","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"41ae6211-1211-11e6-9b84-f9f6beb2aaf1","series":0,"name":"add","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"41ae8922-1211-11e6-9b84-a7bc4a48af17","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"status":-1},{"failures":[],"tindex":"41ae8923-1211-11e6-9b84-cdbe63f321cc","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":0},{"failures":[],"tindex":"41ae8924-1211-11e6-9b84-a9933d5841e0","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[],"tindex":"41ae8925-1211-11e6-9b84-911f79f8ab9b","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"41ae8926-1211-11e6-9b84-c39a58ef077d","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"status":-1},{"failures":[0],"tindex":"41ae8927-1211-11e6-9b84-81c138ab29a3","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"41ae8928-1211-11e6-9b84-6596f6e0d7dc","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41ae8929-1211-11e6-9b84-d57efce0079a","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"41aeb03a-1211-11e6-9b84-715ce27256eb","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"41aeb03b-1211-11e6-9b84-27ce46f31142","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[],"tindex":"41aeb03c-1211-11e6-9b84-85df32f91019","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put(wc, (dictSize++))","position":"zip.LZW:23","type":"CtInvocationImpl","sourcecode":"dictionary.put(wc, (dictSize++))"},"status":0},{"failures":[],"tindex":"41aeb03d-1211-11e6-9b84-d75616c7f70c","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"41aeb03e-1211-11e6-9b84-a367130acaa1","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"41aeb03f-1211-11e6-9b84-0bd19d9c664b","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41aeb040-1211-11e6-9b84-35ce1d1ff7c9","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"41aeb041-1211-11e6-9b84-63bd8954e74a","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[],"tindex":"41aeb042-1211-11e6-9b84-158c0c088407","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0,1],"tindex":"41aed753-1211-11e6-9b84-293a80086955","series":0,"name":"add","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"41aed754-1211-11e6-9b84-23163feacacb","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"41aed755-1211-11e6-9b84-c91805f9ad07","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"41aed756-1211-11e6-9b84-819ffe465707","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[],"tindex":"41aed757-1211-11e6-9b84-b7a28957cd72","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"41aed758-1211-11e6-9b84-bb1b321d50e8","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41aed759-1211-11e6-9b84-1d3aed3db113","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[],"tindex":"41aefe6a-1211-11e6-9b84-7b565f2907a4","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"41aefe6b-1211-11e6-9b84-654e38db0320","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41aefe6c-1211-11e6-9b84-ed6aa0243dda","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"41aefe6d-1211-11e6-9b84-a9cae6eed39a","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[],"tindex":"41aefe6e-1211-11e6-9b84-9dc15d882f6f","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41aefe6f-1211-11e6-9b84-535dba6c679a","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"41af2480-1211-11e6-9b84-f3a61be463a9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"status":-1},{"failures":[],"tindex":"41af2481-1211-11e6-9b84-e966ad8426d2","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41af2482-1211-11e6-9b84-5303e83a54e9","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"status":-1},{"failures":[0],"tindex":"41af2483-1211-11e6-9b84-13eae58cbffd","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.add(dictionary.get(w))","position":"zip.LZW:21","type":"CtInvocationImpl","sourcecode":"result.add(dictionary.get(w))"},"status":-1},{"failures":[],"tindex":"41af2484-1211-11e6-9b84-97d997c48fe6","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0],"tindex":"41af2485-1211-11e6-9b84-99444d882a48","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append(entry)","position":"zip.LZW:53","type":"CtInvocationImpl","sourcecode":"result.append(entry)"},"status":-1},{"failures":[],"tindex":"41af2486-1211-11e6-9b84-99884dea25fd","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":0},{"failures":[],"tindex":"41af2487-1211-11e6-9b84-b367ea2c7dbd","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[],"tindex":"41af2488-1211-11e6-9b84-c1a3fd6e9132","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"41af2489-1211-11e6-9b84-f520761aa2ec","series":0,"name":"add","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41af248a-1211-11e6-9b84-db77c8bec469","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"41af4b9b-1211-11e6-9b84-f55eaa7e55d4","series":0,"name":"add","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"uncompressed"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"41af4b9c-1211-11e6-9b84-cf7748453f3c","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0],"tindex":"41af4b9d-1211-11e6-9b84-893596ceb4de","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1}],"header":{"groupId":"small-program","transformationCount":100,"projectType":"maven","artifactId":"zip","generatorVersion":"1.0","version":"1.0"}}