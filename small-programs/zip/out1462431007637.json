{"failureDictionary":{"zip.LZWTest.sizeTest":1,"zip.LZWTest.compressDecompressTest":0},"transformations":[{"failures":[0],"tindex":"9ab4af6a-128d-11e6-a3b6-31cec6788765","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.add(dictionary.get(w))","position":"zip.LZW:21","type":"CtInvocationImpl","sourcecode":"result.add(dictionary.get(w))"},"status":-1},{"failures":[0],"tindex":"9ab4d67b-128d-11e6-a3b6-75b18a2311f2","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[0],"tindex":"9ab4d67c-128d-11e6-a3b6-45497ac8b9ad","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"9ab4fd8d-128d-11e6-a3b6-db9fd188fe08","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab4fd8e-128d-11e6-a3b6-c397a0535fb0","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"9ab4fd8f-128d-11e6-a3b6-d91a23602047","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":0},{"failures":[0],"tindex":"9ab4fd90-128d-11e6-a3b6-e92f7c80a8e3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"status":-1},{"failures":[0],"tindex":"9ab524a1-128d-11e6-a3b6-05f2344a1ba0","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"9ab524a2-128d-11e6-a3b6-c714367ed946","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"wc"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"9ab524a3-128d-11e6-a3b6-71ac72c81793","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[0],"tindex":"9ab54bb4-128d-11e6-a3b6-27225d5c1536","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab54bb5-128d-11e6-a3b6-b116eadf311e","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab54bb6-128d-11e6-a3b6-578fe0dc3720","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"9ab54bb7-128d-11e6-a3b6-9daed897d147","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"9ab572c8-128d-11e6-a3b6-ddeb2ee431a7","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[],"tindex":"9ab572c9-128d-11e6-a3b6-cb95caac7b0b","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0],"tindex":"9ab572ca-128d-11e6-a3b6-11e78bf4e9a9","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[],"tindex":"9ab572cb-128d-11e6-a3b6-8f8246e78ce5","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[],"tindex":"9ab599dc-128d-11e6-a3b6-ff51ad61fef2","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"9ab599dd-128d-11e6-a3b6-fdc7637ff008","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"9ab599de-128d-11e6-a3b6-81816923d916","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"status":-1},{"failures":[0],"tindex":"9ab599df-128d-11e6-a3b6-0dcbb1bc05c0","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.add(dictionary.get(w))","position":"zip.LZW:21","type":"CtInvocationImpl","sourcecode":"result.add(dictionary.get(w))"},"status":-1},{"failures":[],"tindex":"9ab5c0f0-128d-11e6-a3b6-c5385374733c","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"9ab5c0f1-128d-11e6-a3b6-738467e74731","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append(entry)","position":"zip.LZW:53","type":"CtInvocationImpl","sourcecode":"result.append(entry)"},"status":-1},{"failures":[],"tindex":"9ab5c0f2-128d-11e6-a3b6-b7419b044c94","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab5c0f3-128d-11e6-a3b6-3f6b75b828a4","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"status":-1},{"failures":[],"tindex":"9ab5c0f4-128d-11e6-a3b6-175dcafd8b6d","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"9ab5c0f5-128d-11e6-a3b6-b377773d4ec6","series":0,"name":"add","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":0},{"failures":[],"tindex":"9ab5e806-128d-11e6-a3b6-4364f76df886","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":0},{"failures":[],"tindex":"9ab5e807-128d-11e6-a3b6-e55db4c67aef","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":0},{"failures":[],"tindex":"9ab5e808-128d-11e6-a3b6-63927e20e5a5","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0],"tindex":"9ab5e809-128d-11e6-a3b6-4fdc6f17d8b8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"status":-1},{"failures":[],"tindex":"9ab5e80a-128d-11e6-a3b6-374b7914544a","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab60f1b-128d-11e6-a3b6-73a598d7fddf","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[],"tindex":"9ab60f1c-128d-11e6-a3b6-1b26ed038bf7","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"9ab60f1d-128d-11e6-a3b6-d971d18f8adf","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"9ab60f1e-128d-11e6-a3b6-6d0798e354ae","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":0},{"failures":[0],"tindex":"9ab60f1f-128d-11e6-a3b6-f91e45b757f5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab60f20-128d-11e6-a3b6-81bf45af5b76","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab63631-128d-11e6-a3b6-7338a5fd7924","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab63632-128d-11e6-a3b6-8591a9f82dc6","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[],"tindex":"9ab63633-128d-11e6-a3b6-a3243f6462da","series":0,"name":"add","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":0},{"failures":[0],"tindex":"9ab63634-128d-11e6-a3b6-117f00384920","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"9ab63635-128d-11e6-a3b6-155a5789ab31","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"9ab63636-128d-11e6-a3b6-b1c11b823824","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"9ab65d47-128d-11e6-a3b6-07930bbf424b","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab65d48-128d-11e6-a3b6-7b459523967a","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"9ab65d49-128d-11e6-a3b6-4de821f38776","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"9ab65d4a-128d-11e6-a3b6-6198e682053f","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab65d4b-128d-11e6-a3b6-eddd405ccaad","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab65d4c-128d-11e6-a3b6-43912ed6f660","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab6845d-128d-11e6-a3b6-e770038c0118","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"9ab6845e-128d-11e6-a3b6-4f371e1c19dd","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[],"tindex":"9ab6845f-128d-11e6-a3b6-b75ed4a8682f","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"9ab68460-128d-11e6-a3b6-83787c4c0bf9","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab68461-128d-11e6-a3b6-41a38158df75","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":0},{"failures":[],"tindex":"9ab6ab72-128d-11e6-a3b6-7b5959c72738","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"9ab6ab73-128d-11e6-a3b6-11809bbd71bc","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"9ab6ab74-128d-11e6-a3b6-8d738b1ab276","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"9ab6ab75-128d-11e6-a3b6-cbb8f05e7c1f","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0],"tindex":"9ab6ab76-128d-11e6-a3b6-2d4c09ea48ad","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"9ab6d287-128d-11e6-a3b6-e7a25992e48a","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"9ab6d288-128d-11e6-a3b6-cd4bf8454bc1","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[0],"tindex":"9ab6d289-128d-11e6-a3b6-63c06f9f5cc9","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"w = \"\" + c","position":"zip.LZW:24","type":"CtAssignmentImpl","sourcecode":"w = \"\" + c"},"status":-1},{"failures":[0],"tindex":"9ab6d28a-128d-11e6-a3b6-e5f9d96975ff","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[0],"tindex":"9ab6d28b-128d-11e6-a3b6-33c17cbfd992","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"entry","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"9ab6f99c-128d-11e6-a3b6-21c0384be2fe","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab6f99d-128d-11e6-a3b6-63091678dda5","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"status":-1},{"failures":[0],"tindex":"9ab6f99e-128d-11e6-a3b6-119742d6dd4b","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.add(dictionary.get(w))","position":"zip.LZW:21","type":"CtInvocationImpl","sourcecode":"result.add(dictionary.get(w))"},"status":-1},{"failures":[],"tindex":"9ab6f99f-128d-11e6-a3b6-db2c7b5d388c","series":0,"name":"add","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"9ab6f9a0-128d-11e6-a3b6-8b093efbde29","series":0,"name":"replace","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab6f9a1-128d-11e6-a3b6-0525fa9cf344","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"wc"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab6f9a2-128d-11e6-a3b6-7d64f00e6265","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[],"tindex":"9ab720b3-128d-11e6-a3b6-1bead0cc7799","series":0,"name":"add","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":0},{"failures":[],"tindex":"9ab720b4-128d-11e6-a3b6-5954818ffc84","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"status":-2},{"failures":[0],"tindex":"9ab720b5-128d-11e6-a3b6-273efb3b67d7","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab720b6-128d-11e6-a3b6-3305822c0e9d","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[0],"tindex":"9ab720b7-128d-11e6-a3b6-f5f8cee48e3c","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"uncompressed"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab747c8-128d-11e6-a3b6-013b987fb503","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[0,1],"tindex":"9ab747c9-128d-11e6-a3b6-1bf017994fa9","series":0,"name":"add","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab747ca-128d-11e6-a3b6-2d415c3042d8","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"status":-2},{"failures":[],"tindex":"9ab747cb-128d-11e6-a3b6-93c9fe94436e","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"9ab747cc-128d-11e6-a3b6-ff9a78bb4037","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.add(dictionary.get(w))","position":"zip.LZW:21","type":"CtInvocationImpl","sourcecode":"result.add(dictionary.get(w))"},"status":-1},{"failures":[],"tindex":"9ab76edd-128d-11e6-a3b6-d99b13e2b420","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"status":-2},{"failures":[0],"tindex":"9ab76ede-128d-11e6-a3b6-a91dfb38573c","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[0],"tindex":"9ab76edf-128d-11e6-a3b6-2958ba227be5","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[0],"tindex":"9ab76ee0-128d-11e6-a3b6-c348ce81e2c0","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"w"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[0],"tindex":"9ab76ee1-128d-11e6-a3b6-5d3ceb6adee8","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab76ee2-128d-11e6-a3b6-01ca841789f7","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"9ab794f3-128d-11e6-a3b6-a51eca9eeca3","series":0,"name":"delete","type":"adrStmt","transplantationPoint":{"toString":"result.append(entry)","position":"zip.LZW:53","type":"CtInvocationImpl","sourcecode":"result.append(entry)"},"status":-1},{"failures":[0],"tindex":"9ab794f4-128d-11e6-a3b6-0faefe1f2168","series":0,"name":"replace","transplant":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"variableMap":{"result":"result","dictionary":"dictionary","w":"uncompressed"},"type":"adrStmt","transplantationPoint":{"toString":"for (char c : uncompressed.toCharArray()) {\n    java.lang.String wc = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}","position":"zip.LZW:16","type":"CtForEachImpl","sourcecode":"for (char char : uncompressed.toCharArray()) {\n    java.lang.String java.lang.String = w + c;\n    if (dictionary.containsKey(wc))\n        w = wc;\n    else {\n        result.add(dictionary.get(w));\n        dictionary.put(wc, (dictSize++));\n        w = \"\" + c;\n    }\n}"},"status":-1},{"failures":[],"tindex":"9ab794f5-128d-11e6-a3b6-6d9495a35bc0","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"9ab794f6-128d-11e6-a3b6-8395e8ee75a9","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}","position":"zip.LZW:18","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(wc))\n    w = wc;\nelse {\n    result.add(dictionary.get(w));\n    dictionary.put(wc, (dictSize++));\n    w = \"\" + c;\n}"},"status":-1},{"failures":[],"tindex":"9ab7bc07-128d-11e6-a3b6-813a461b107a","series":0,"name":"replace","transplant":{"toString":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n","position":"zip.LZW:46","type":"CtIfImpl","sourcecode":"if (dictionary.containsKey(k))\n    entry = dictionary.get(k);\nelse if (k == dictSize)\n    entry = w + (w.charAt(0));\nelse\n    throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n"},"variableMap":{"entry":"w","dictionary":"dictionary","w":"w","dictSize":"dictSize","k":"dictSize"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-2},{"failures":[0],"tindex":"9ab7bc08-128d-11e6-a3b6-dd029057513d","series":0,"name":"replace","transplant":{"toString":"w = entry","position":"zip.LZW:58","type":"CtAssignmentImpl","sourcecode":"w = entry"},"variableMap":{"entry":"w","w":"entry"},"type":"adrStmt","transplantationPoint":{"toString":"dictionary.put((dictSize++), (w + (entry.charAt(0))))","position":"zip.LZW:56","type":"CtInvocationImpl","sourcecode":"dictionary.put((dictSize++), (w + (entry.charAt(0))))"},"status":-1},{"failures":[],"tindex":"9ab7bc09-128d-11e6-a3b6-4d9271be750e","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2},{"failures":[0],"tindex":"9ab7bc0a-128d-11e6-a3b6-afde77e631fb","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);","position":"zip.LZW:11","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put((\"\" + ((char)(i))), i);"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n","position":"zip.LZW:29","type":"CtIfImpl","sourcecode":"if (!(w.equals(\"\")))\n    result.add(dictionary.get(w));\n"},"status":-1},{"failures":[],"tindex":"9ab7bc0b-128d-11e6-a3b6-b93faa1568d1","series":0,"name":"replace","transplant":{"toString":"java.lang.String entry","position":"zip.LZW:45","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String"},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String w = \"\" + ((char)((int)(compressed.remove(0))))","position":"zip.LZW:42","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\" + ((char)((int)(compressed.remove(0))))"},"status":-2},{"failures":[0],"tindex":"9ab7bc0c-128d-11e6-a3b6-8fd8dc24d36b","series":0,"name":"replace","transplant":{"toString":"for (int i = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));","position":"zip.LZW:39","type":"CtForImpl","sourcecode":"for (int int = 0 ; i < 256 ; i++)\n    dictionary.put(i, (\"\" + ((char)(i))));"},"variableMap":{"dictionary":"dictionary"},"type":"adrStmt","transplantationPoint":{"toString":"for (int k : compressed) {\n    java.lang.String entry;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}","position":"zip.LZW:44","type":"CtForEachImpl","sourcecode":"for (int int : compressed) {\n    java.lang.String java.lang.String;\n    if (dictionary.containsKey(k))\n        entry = dictionary.get(k);\n    else if (k == dictSize)\n        entry = w + (w.charAt(0));\n    else\n        throw new java.lang.IllegalArgumentException((\"Bad compressed k: \" + k));\n    \n    result.append(entry);\n    dictionary.put((dictSize++), (w + (entry.charAt(0))));\n    w = entry;\n}"},"status":-1},{"failures":[],"tindex":"9ab7e31d-128d-11e6-a3b6-1ba9dd92bb56","series":0,"name":"add","transplant":{"toString":"java.lang.String w = \"\"","position":"zip.LZW:14","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = \"\""},"variableMap":{},"type":"adrStmt","transplantationPoint":{"toString":"java.lang.String wc = w + c","position":"zip.LZW:17","type":"CtLocalVariableImpl","sourcecode":"java.lang.String java.lang.String = w + c"},"status":-2}],"header":{"groupId":"small-program","transformationCount":100,"projectType":"maven","artifactId":"zip","generatorVersion":"1.0","version":"1.0"}}