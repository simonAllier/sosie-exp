[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:229","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[0,1,2],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().mapIterator()","position":"org.apache.commons.collections4.map.MultiKeyMap:871","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.functors.InvokerTransformer:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl"},"status":-2},{"failures":[3,4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[5,6,7],"variableMapping":{"root":"root","transformer":"transformer","this":"this"},"name":"add","transplant":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"object","key":"object"},"name":"add","transplant":{"sourceCode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","position":"org.apache.commons.collections4.map.AbstractReferenceMap:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 1 :\n    if (((int) == int) && (java.lang.Object.equals(K))) {\n        return true;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:228","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.ListOrderedSet.org.apache.commons.collections4.set.ListOrderedSet.listOrderedSet(java.util.Set<E>)","position":"org.apache.commons.collections4.SetUtils:247","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"hasNext":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"return (this.boolean) == false","position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[5,6,7,8,9,10,11,12,13,14,15],"variableMapping":{"stack":"stack","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-1},{"failures":[16,17,18,19,20,21,22,23,24,25],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"addAll() is not supported on CompositeCollection without a CollectionMutator strategy\")","position":"org.apache.commons.collections4.collection.CompositeCollection:277","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final boolean boolean = org.apache.commons.collections4.collection.AbstractCollectionDecorator<C>.remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.IndexedCollection:207","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":-2},{"failures":[26],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer arrays must be the same size\")","position":"org.apache.commons.collections4.functors.SwitchTransformer:63","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().add(E, int)","position":"org.apache.commons.collections4.bag.SynchronizedBag:89","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[27],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.CollectionUtils:879","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null","position":"org.apache.commons.collections4.list.AbstractLinkedList:883","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[28],"binaryOperator":"(java.util.List<E>.size()) - 1","name":"math","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-2},{"failures":[29,30,31,32,33,34],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' does not exist\")","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:131","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException((((((((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"))","position":"org.apache.commons.collections4.map.LRUMap:324","type":"CtThrowImpl"},"status":0},{"failures":[35],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")","position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl"},"status":-1},{"failures":[27],"variableMapping":{"this":"this","previousObjectSet":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"if (this.boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n        org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>);\n        return V;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}","position":"org.apache.commons.collections4.map.MultiKeyMap:480","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"prototype":"prototype"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T })","position":"org.apache.commons.collections4.functors.PrototypeFactory:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.queue.CircularFifoQueue:157","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.CompositeMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-2},{"failures":[36],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator","position":"org.apache.commons.collections4.functors.DefaultEquator:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map Entry must not be null\")","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:43","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object","k":"object"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<?>[][int]) == null) {\n    throw new java.lang.IllegalArgumentException(((\"The predicate array must not contain a null predicate, index \" + int) + \" was null\"));\n} ","position":"org.apache.commons.collections4.functors.FunctorUtils:83","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,30,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,31,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,33,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,34,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.AbstractLinkedList:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<T>.add(T)","position":"org.apache.commons.collections4.sequence.ReplacementsFinder:78","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-2},{"failures":[249],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.Class<?>.isInstance(java.lang.Object)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:70","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1889","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[250,251,252,253,254,255],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:988","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.SingletonIterator:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}","position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.AbstractMap<K, V>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:748","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[256],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Closure<? super E>[] org.apache.commons.collections4.Closure<? super E>[] = new org.apache.commons.collections4.Closure[int]","position":"org.apache.commons.collections4.ClosureUtils:360","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (!(boolean)) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.IteratorChain:252","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A submap used for prefix views over the {@link Trie}.\n */\nprivate class PrefixRangeMap extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap {\n    private final K prefix;\n\n    private final int offsetInBits;\n\n    private final int lengthInBits;\n\n    private K fromKey = null;\n\n    private K toKey = null;\n\n    private transient int expectedModCount = 0;\n\n    private int size = -1;\n\n    /** \n     * Creates a {@link PrefixRangeMap}.\n     */\nprivate PrefixRangeMap(final K prefix ,final int offsetInBits ,final int lengthInBits) {\n        this.K = K;\n        this.int = int;\n        this.int = int;\n    }\n\n    /** \n     * This method does two things. It determines the FROM\n     * and TO range of the {@link PrefixRangeMap} and the number\n     * of elements in the range. This method must be called every\n     * time the {@link Trie} has changed.\n     */\nprivate int fixup() {\n        if (((int) == (-1)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int) != (int))) {\n            final java.util.Iterator<java.util.Map.Entry<K, V>> java.util.Iterator<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.entrySet().iterator();\n            int = 0;\n            java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null;\n            if (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n                java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next();\n                int = 1;\n            } \n            K = java.util.Map.Entry<K, V> == null ? null : java.util.Map.Entry<K, V>.getKey();\n            if ((K) != null) {\n                final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.previousEntry(((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)(java.util.Map.Entry<K, V>)));\n                K = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == null ? null : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey();\n            } \n            K = K;\n            while (java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()) {\n                ++(int);\n                java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next();\n            }\n            K = java.util.Map.Entry<K, V> == null ? null : java.util.Map.Entry<K, V>.getKey();\n            if ((K) != null) {\n                java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)(java.util.Map.Entry<K, V>)));\n                K = java.util.Map.Entry<K, V> == null ? null : java.util.Map.Entry<K, V>.getKey();\n            } \n            int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n        } \n        return int;\n    }\n\n    public K firstKey() {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup();\n        java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null;\n        if ((K) == null) {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n        } else {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.higherEntry(K);\n        }\n        final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null;\n        if ((java.util.Map.Entry<K, V> == null) || (!(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K)))) {\n            throw new java.util.NoSuchElementException();\n        } \n        return K;\n    }\n\n    public K lastKey() {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.fixup();\n        java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null;\n        if ((K) == null) {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry();\n        } else {\n            java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lowerEntry(K);\n        }\n        final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null;\n        if ((java.util.Map.Entry<K, V> == null) || (!(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K)))) {\n            throw new java.util.NoSuchElementException();\n        } \n        return K;\n    }\n\n    /** \n     * Returns true if this {@link PrefixRangeMap}'s key is a prefix of the provided key.\n     */\n@java.lang.Override\n    protected boolean inRange(final K key) {\n        return org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K);\n    }\n\n    /** \n     * Same as {@link #inRange(Object)}.\n     */\n@java.lang.Override\n    protected boolean inRange2(final K key) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.inRange(K);\n    }\n\n    /** \n     * Returns true if the provided Key is in the FROM range of the {@link PrefixRangeMap}.\n     */\n@java.lang.Override\n    protected boolean inFromRange(final K key, final boolean forceInclusive) {\n        return org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K);\n    }\n\n    /** \n     * Returns true if the provided Key is in the TO range of the {@link PrefixRangeMap}.\n     */\n@java.lang.Override\n    protected boolean inToRange(final K key, final boolean forceInclusive) {\n        return org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().isPrefix(K, int, int, K);\n    }\n\n    @java.lang.Override\n    protected java.util.Set<java.util.Map.Entry<K, V>> createEntrySet() {\n        return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this);\n    }\n\n    @java.lang.Override\n    public K getFromKey() {\n        return K;\n    }\n\n    @java.lang.Override\n    public K getToKey() {\n        return K;\n    }\n\n    @java.lang.Override\n    public boolean isFromInclusive() {\n        return false;\n    }\n\n    @java.lang.Override\n    public boolean isToInclusive() {\n        return false;\n    }\n\n    @java.lang.Override\n    protected java.util.SortedMap<K, V> createRangeMap(final K fromKey, final boolean fromInclusive, final K toKey, final boolean toInclusive) {\n        return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap(K , boolean , K , boolean);\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2082","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":-2},{"failures":[320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-1},{"failures":[340,341,342,343,344,345,27,346,347,348,349,350],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"mutation","return":"return true","status":-1},{"failures":[351],"binaryOperator":"int < int","name":"negateConditional","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> == null) {\n    java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove();\n} else {\n    org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.nodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n}","position":"org.apache.commons.collections4.list.CursorableLinkedList:317","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(((((\"Cannot add Object \\'\" + E) + \"\\' - Predicate \\'\") + (org.apache.commons.collections4.Predicate<? super E>)) + \"\\' rejected it\"))","position":"org.apache.commons.collections4.collection.PredicatedCollection:101","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-2},{"failures":[312],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"mutation","return":"return false","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)","position":"org.apache.commons.collections4.map.UnmodifiableMap:156","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()","position":"org.apache.commons.collections4.list.AbstractLinkedList:298","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"status":-2},{"failures":[352,353,354,355],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    ((org.apache.commons.collections4.ResettableIterator<? extends E>)(java.util.Iterator<? extends E>)).reset();\n} ","position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:214","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"entry":"entry"},"name":"add","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = ((org.apache.commons.collections4.OrderedMapIterator<K, V>)(org.apache.commons.collections4.OrderedMapIterator<K, ? extends V>))","position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:54","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.functors.FactoryTransformer.org.apache.commons.collections4.functors.FactoryTransformer.factoryTransformer(org.apache.commons.collections4.Factory<? extends V>))","position":"org.apache.commons.collections4.map.DefaultedMap:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[356,357,358,359,360],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object);\n}","position":"org.apache.commons.collections4.bag.SynchronizedBag:107","type":"CtSynchronizedImpl"},"status":-1},{"failures":[1,2],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasPrevious()","position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:81","type":"CtReturnImpl"},"status":-2},{"failures":[361,362,363,364,365,366,367,368,369,370,371],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:539","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E == null) {\n    E = org.apache.commons.collections4.Factory<? extends E>.create();\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.KeySetIterator<K>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:920","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = java.util.Comparator<? super E>.compare(E, E)","position":"org.apache.commons.collections4.comparators.ComparatorChain:277","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList<E>.add(int, E)","position":"org.apache.commons.collections4.list.TreeList:1119","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieMapIterator.nextEntry().getKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1615","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:385","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[340,342,343,344,27,347,348,349,350],"variableMapping":{"index":"nextIndex","lastItemIndex":"nextIndex"},"name":"replace","transplant":{"sourceCode":"this.int = --(this.int)","position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":27,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":64,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":187,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":263,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":28,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":271,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":3,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":243,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":194,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":365,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":298,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":51,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":163,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":282,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":306,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":110,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":29,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":117,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":220,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":354,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":258,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":36,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":145,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":336,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":352,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":85,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":21,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":213,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":94,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":128,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":166,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":95,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":218,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":96,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":72,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":244,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":315,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":106,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":75,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":156,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":48,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":228,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":34,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":340,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":79,"org.apache.commons.collections4.ListUtilsTest.testLazyList":351,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":180,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":120,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":345,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":203,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":307,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":321,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":20,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":57,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":116,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testReverse":1,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":130,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":339,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":44,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":215,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":319,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":242,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":25,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":196,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":283,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":137,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":311,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":295,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":33,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":92,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":342,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":37,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":123,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":198,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":131,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":139,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":294,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":178,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":63,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":142,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":111,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":11,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":104,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":190,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":238,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":217,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":357,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":12,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":355,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":230,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":299,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":348,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":45,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":93,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":177,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":285,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":301,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":98,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":140,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":312,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":181,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":200,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":317,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":52,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":341,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":161,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":162,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":272,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":118,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":160,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":15,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":114,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":366,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":236,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":278,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":235,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":237,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":284,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":234,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":287,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":303,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":207,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":47,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":148,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":134,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":83,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":288,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":269,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":291,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":331,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":132,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRetainAll":326,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":133,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":302,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":13,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":273,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":344,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":97,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":61,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":370,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":304,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":337,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":58,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":115,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":333,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":129,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":364,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":231,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":232,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":233,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":266,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":22,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":112,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":239,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":153,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":368,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":60,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":86,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":367,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":159,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":343,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":241,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":300,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":182,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":214,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":40,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":14,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":184,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":246,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":264,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":10,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":150,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":43,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":82,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":41,"org.apache.commons.collections4.PredicateUtilsTest.testInstanceOfPredicate":249,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":50,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":9,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":195,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":87,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":305,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":62,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":165,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":53,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":252,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":167,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":267,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":89,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":168,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":353,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":169,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":224,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":245,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":73,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":113,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":172,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":80,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":201,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":225,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":248,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":122,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":103,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":212,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":347,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":84,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":119,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagRetainAll":324,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":102,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":262,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":221,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":8,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testWalkForwardAndBack":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":56,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":279,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":70,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":281,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":356,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":69,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":280,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":256,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":66,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":67,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":257,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":318,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":68,"org.apache.commons.collections4.ClosureUtilsTest.testExceptionClosure":35,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":216,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":308,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":211,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":188,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":109,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":205,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":99,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":193,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":330,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":171,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":101,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":320,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":124,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":338,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":176,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":175,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":174,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":46,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":328,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":346,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":26,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":293,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":226,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":78,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":227,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":76,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":335,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":155,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":240,"org.apache.commons.collections4.bag.TransformedBagTest.testBagRetainAll":325,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":55,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":19,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":260,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":371,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":290,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":314,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":209,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":91,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":191,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":173,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":259,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":276,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":141,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":208,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":202,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":143,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":157,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":5,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":121,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":189,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":6,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":7,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":274,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":275,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":369,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":329,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":286,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":362,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":361,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":223,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":39,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":170,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":185,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":350,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":322,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":183,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":16,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":158,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":316,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":349,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":59,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":268,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":18,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":127,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testEmptyListIteratorIsIndeedEmpty":0,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":313,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":107,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":210,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":277,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":332,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":296,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":297,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":24,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":270,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":206,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":179,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":255,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":358,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":90,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":309,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":265,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":144,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":359,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRetainAll":323,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":219,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":149,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":54,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":363,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":253,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":247,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":254,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":327,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":147,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":229,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":310,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":251,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":77,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":105,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":81,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":154}}]
