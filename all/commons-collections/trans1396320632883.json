[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[]","position":"org.apache.commons.collections4.map.AbstractHashedMap:362","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"nextObjectSet","changed":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"status":0},{"failures":[0,1],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = true","position":"org.apache.commons.collections4.map.ListOrderedMap:364","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:1045","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[2],"variableMapping":{"this":"this","previousObjectSet":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"if (this.boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * Wraps another object and uses the provided Equator to implement\n * {@link #equals(Object)} and {@link #hashCode()}.\n * <p>\n * This class can be used to store objects into a Map.\n * \n * @param <O>  the element type\n * @since 4.0\n */\nprivate static class EquatorWrapper<O> {\n    private final org.apache.commons.collections4.Equator<O> equator;\n\n    private final O object;\n\n    public EquatorWrapper(final org.apache.commons.collections4.Equator<O> equator ,final O object) {\n        this.org.apache.commons.collections4.Equator<O> = org.apache.commons.collections4.Equator<O>;\n        this.O = O;\n    }\n\n    public O getObject() {\n        return O;\n    }\n\n    @java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n            return false;\n        } \n        @java.lang.SuppressWarnings(value = \"unchecked\")\n        final org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O> = ((org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>)(java.lang.Object));\n        return org.apache.commons.collections4.Equator<O>.equate(O, org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>.getObject());\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return org.apache.commons.collections4.Equator<O>.hash(O);\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:569","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")","position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"lastUsedIterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":0},{"failures":[3],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Inner class EntrySet.\n */\nprotected static class EntrySet<K, V> extends org.apache.commons.collections4.bidimap.AbstractDualBidiMap.View<K, V, java.util.Map.Entry<K, V>> implements java.util.Set<java.util.Map.Entry<K, V>> {\n    /** \n     * Serialization version\n     */\nprivate static final long serialVersionUID = 4040410962603292348L;\n\n    /** \n     * Constructs a new view of the BidiMap.\n     * \n     * @param parent  the parent BidiMap\n     */\nprotected EntrySet(final org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V> parent) {\n        org.apache.commons.collections4.bidimap.AbstractDualBidiMap.View<K, V, java.util.Map.Entry<K, V>>.super(org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.entrySet(), org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>);\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<java.util.Map.Entry<K, V>> iterator() {\n        return org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.createEntrySetIterator(org.apache.commons.collections4.bidimap.AbstractDualBidiMap.View<K, V, java.util.Map.Entry<K, V>>.iterator());\n    }\n\n    @java.lang.Override\n    public boolean remove(final java.lang.Object obj) {\n        if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n            return false;\n        } \n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey();\n        if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(java.lang.Object)) {\n            final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(java.lang.Object);\n            if (V == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : V.equals(java.util.Map.Entry<?, ?>.getValue())) {\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(java.lang.Object);\n                org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(V);\n                return true;\n            } \n        } \n        return false;\n    }\n}","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:565","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[59,60,61,62,63,64,65,66],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.sequence.SequencesComparator:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.singletonIterator(java.lang.Object)","position":"org.apache.commons.collections4.IteratorUtils:1099","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:255","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1101","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getKey()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getKey())) && (java.lang.Object == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : java.lang.Object.equals(java.util.Map.Entry<?, ?>.getValue()))","position":"org.apache.commons.collections4.map.Flat3Map:867","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedBag<E>(org.apache.commons.collections4.Bag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedBag:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().subSet(E, E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:104","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[67,68,69,70,71,72,73,74],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:152","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.SortedMap<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.SortedMap<K, ? extends V>));\n    return java.util.SortedMap<K, V>;\n} ","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:61","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[75],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-1},{"failures":[76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"maxElements":"index","index":"index"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    int = int - 1;\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:341","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:539","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[73],"binaryOperator":"(java.util.List<E>.size()) - 1","name":"math","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.collections4.map.Flat3Map:502","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>)","position":"org.apache.commons.collections4.comparators.TransformingComparator:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.org.apache.commons.collections4.map.ListOrderedMap<java.lang.Object, V>.containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.ListOrderedMap:519","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.map.PassiveExpiringMap:447","type":"CtForEachImpl"},"status":0},{"failures":[118],"variableMapping":{"element":"input"},"name":"add","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Map<? super I, ? extends O>.get(I)","position":"org.apache.commons.collections4.functors.MapTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E> = java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.get()","position":"org.apache.commons.collections4.list.CursorableLinkedList:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.FixedSizeList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E == null) {\n    E = org.apache.commons.collections4.Factory<? extends E>.create();\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[119,120],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((T[].int) > (java.lang.Object[].int)) {\n    T[][java.lang.Object[].int] = null;\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:158","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"if (null == java.lang.Object) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"lastReturned":"nextIndex"},"name":"add","transplant":{"sourceCode":"return this.int","position":"org.apache.commons.collections4.iterators.CollatingIterator:286","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.UnmodifiableMap:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    (int)++;\n    if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) == null) {\n        throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")));\n    } \n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>;\n} else if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    throw new java.lang.IllegalStateException((\"Can\\'t move header to MRU\" + \" (please report this to dev@commons.apache.org)\"));\n} ","position":"org.apache.commons.collections4.map.LRUMap:193","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:71","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")","position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[154,155,156,157],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String))","position":"org.apache.commons.collections4.PredicateUtils:213","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<K, V> = new java.util.HashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:100","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:372","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Predicate<E>[] org.apache.commons.collections4.Predicate<E>[] = new org.apache.commons.collections4.Predicate[int]","position":"org.apache.commons.collections4.ClosureUtils:361","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:991","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != null) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(org.apache.commons.collections4.trie.AbstractBitwiseTrie.compare(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getValue(), java.util.Map.Entry<K, V>.getValue()))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2026","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object.getClass().isArray()) {\n    return new org.apache.commons.collections4.iterators.ArrayIterator<java.lang.Object>(java.lang.Object);\n} ","position":"org.apache.commons.collections4.IteratorUtils:1079","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.CollatingIterator:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-2},{"failures":[158,159,160,161,162],"variableMapping":{"nextObjectSet":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"value","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1742","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,131,135,136,137,138,140,142,143,144,145,146,147,148,149,150,151,152,153,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,4,279,280,281,282,283,284,285,286,9,287,288,289,290,291,292,293,294,295,12,296,297,298,299,300,301,302,303,304,305,306,307,308,16,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,59,432,60,61,62,63,64,65,66,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size()","position":"org.apache.commons.collections4.list.FixedSizeList:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = null","position":"org.apache.commons.collections4.map.AbstractLinkedMap:592","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.CompositeSet<K>","position":"org.apache.commons.collections4.map.CompositeMap:324","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Lock.int = 0","position":"org.apache.commons.collections4.map.StaticBucketMap:393","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[472],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.list.LazyList:131","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = ((java.util.Map.Entry<K, V>)(java.lang.Object))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2036","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:825","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()","position":"org.apache.commons.collections4.map.LRUMap:181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, int, java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object))","position":"org.apache.commons.collections4.iterators.ArrayIterator:74","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (java.util.List<E>) != null","position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.insertValue(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:525","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:158","type":"CtReturnImpl"},"status":-2},{"failures":[229],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:44","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsTruePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsTruePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must be empty\")","position":"org.apache.commons.collections4.map.MultiKeyMap:100","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.SynchronizedCollection:198","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"a":"coll","b":"coll"},"name":"replace","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[473,474,475,476,477,478],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:550","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.PushbackIterator:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[326,479,352],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.ListIterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:315","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKeyAndValue(K, V)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:483","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":2,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":338,"org.apache.commons.collections4.map.MultiValueMapTest.testMapEquals":39,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":358,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastValues":15,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":296,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":287,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking":139,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastEntrySet":13,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":333,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":4,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":299,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":136,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":413,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":75,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":59,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":399,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastKeySet":7,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":468,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":160,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":47,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":195,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":436,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":444,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":215,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":281,"org.apache.commons.collections4.ListUtilsTest.testLazyList":472,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":426,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":31,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":315,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":359,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":104,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":415,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":94,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":382,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":245,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":343,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":42,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":312,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":177,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":269,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":440,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":366,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":354,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":16,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":405,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":341,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMap":55,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":291,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":453,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":182,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":428,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":439,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":301,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":18,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":50,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":212,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":138,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":446,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":196,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":266,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":174,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":210,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":38,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":408,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":466,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":183,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":187,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":260,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":308,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":122,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":469,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":164,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":162,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":107,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":374,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":101,"org.apache.commons.collections4.map.MultiValueMapTest.testSize_Key":40,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":443,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":313,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":295,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":109,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":451,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":170,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":128,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":97,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":220,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":78,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":235,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":293,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":68,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":370,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":69,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":393,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMap":58,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":461,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":84,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":64,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":456,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":262,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":186,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":257,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":79,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":243,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":321,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":105,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":311,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":383,"org.apache.commons.collections4.list.SetUniqueListTest.testAdd":123,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":211,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":380,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":403,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":353,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":115,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":236,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":332,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":46,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":254,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":221,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":161,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":116,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":404,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":328,"org.apache.commons.collections4.map.MultiValueMapTest.testRemove_KeyItem":37,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":412,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":460,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":319,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":390,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":422,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":87,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":251,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":389,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":434,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":297,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":314,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":273,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":82,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":124,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":130,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":28,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":259,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":348,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":216,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":267,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":419,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":365,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":361,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":19,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":289,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":263,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":44,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":154,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":163,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":155,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":1,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":156,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":229,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":71,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":302,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":369,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":142,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":290,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":442,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":430,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":185,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":110,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":85,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":96,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":23,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":320,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":427,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":9,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":88,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":25,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":330,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":337,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":30,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":102,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":310,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":367,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":252,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":386,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":305,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":178,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":189,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":351,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":169,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":429,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":118,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":240,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":345,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":364,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":35,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":329,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":151,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":274,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":72,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":24,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":417,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":225,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":114,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":450,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":473,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":474,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":475,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastValues":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":137,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaKeyedIterator":41,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":62,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":318,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":431,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":190,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":352,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":420,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":204,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":149,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":424,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":73,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":445,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":3,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":346,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":464,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":120,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":119,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":437,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":93,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMap":57,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":193,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":135,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":167,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":265,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":277,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":253,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testZeroTimeToLive":27,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":416,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":103,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":385,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":76,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":5,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":347,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":179,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":322,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":250,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":247,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":280,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":238,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":134,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":20,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiMapIteratorSet":479,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":165,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":306,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":363,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":158,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":121,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":218,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":307,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":52,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":397,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":279,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":168,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":331,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":421,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":106,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.map.MultiValueMapTest.testTotalSize":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":356,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":401,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":418,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":294,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":292,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":133,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":377,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":51,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":166,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":376,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":271,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":147,"org.apache.commons.collections4.map.TransformedMapTest.testFailFastEntrySet":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":379,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":144,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":226,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":285,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndexBoundsChecking2":141,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":264,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":99,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":360,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":407,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":349,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":326,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":0,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":60,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":201,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":282,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":454,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":10,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":65,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":100,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":129,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":335,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":255,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":213,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":477,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":414,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":29,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":344,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":45,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":127,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":432,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":398,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":11,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":288,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":355,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":228,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":324,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":234,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":316,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":449,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":188,"org.apache.commons.collections4.list.SetUniqueListTest.testListIterator":126,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":239,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":77,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":89,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":206,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":396,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":476,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":180,"org.apache.commons.collections4.map.MultiValueMapTest.testSize":33,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":132,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":327,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":400,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":433,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":256,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":230,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":207,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":462,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":48,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":372,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":457,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":339,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":270,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":465,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":17,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":300,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":423,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":217,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":232,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":125,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":452,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":140,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":458,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":304,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":278,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":387,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":150,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":435,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":317,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":227,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":381,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":117,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":470,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":275,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":83,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":286,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":172,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":22,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":342,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":67,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":192,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":95,"org.apache.commons.collections4.map.PredicatedMapTest.testFailFastKeySet":14,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":86,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":203,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":425,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":478,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":32,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":409,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":199,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":222,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":191,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":459,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":471,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMap":54,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":448,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":378,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":455,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":233,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":208,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":410,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":261,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":21,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMap":53,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":153,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":91,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":224,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":334,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":284,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":368,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":303,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":391,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":402,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":241,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":214,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":159,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":441,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":268,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":447,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":467,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":406,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":90,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":175,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":131,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":12,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":244,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":388,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":173,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":231,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":70,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":272,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":395,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":81,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":145,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":283,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":350,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":111,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":375,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":325,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":276,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":26,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":248,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":112,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":205,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":371,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":362,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMap":56,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":246,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":194,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":74,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":357,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":438,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":373,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":394,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":463,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":298,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":80,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":219,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":181,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":336,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":237,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":92,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":384}}]
