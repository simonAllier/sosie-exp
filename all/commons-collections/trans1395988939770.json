[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = int[][int]","position":"org.apache.commons.collections4.iterators.PermutationIterator:132","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:77","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{"lastUsedIterator":"lastUsedIterator","currentIterator":"lastUsedIterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:61","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedBag<E>(org.apache.commons.collections4.Bag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedBag:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object))","position":"org.apache.commons.collections4.CollectionUtils:1275","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.mapIterator()","position":"org.apache.commons.collections4.map.MultiKeyMap:740","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"input","this":"this"},"name":"add","transplant":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":0},{"failures":[29,42,55,56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"static class KeySetView<K> extends java.util.AbstractSet<K> {\n    private final org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object> parent;\n\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    KeySetView(final org.apache.commons.collections4.map.ListOrderedMap<K, ?> parent) {\n        java.util.AbstractSet<K>.super();\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object> = ((org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>)(org.apache.commons.collections4.map.ListOrderedMap<K, ?>));\n    }\n\n    @java.lang.Override\n    public int size() {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.size();\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object value) {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.containsKey(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.clear();\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<K> iterator() {\n        return new org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, java.lang.Object>, K>(org.apache.commons.collections4.map.ListOrderedMap<K, java.lang.Object>.entrySet().iterator()) {\n            public K next() {\n                return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, java.lang.Object>, K>.getIterator().next().getKey();\n            }\n        };\n    }\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:553","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:357","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntryImpl(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:701","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final K K = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse.get(V)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2100","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> != (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) ; org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> , int++) {\n    T[][int] = ((T)(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()));\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:182","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[57],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C)","position":"org.apache.commons.collections4.collection.IndexedCollection:200","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[58,59,60,61,62,63,64,65],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.ListIterator<E> java.util.ListIterator<E> = ((java.util.ListIterator<E>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:236","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger = java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.getValue()","position":"org.apache.commons.collections4.bag.AbstractMapBag:222","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return double","position":"org.apache.commons.collections4.MapUtils:845","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<?> instanceof org.apache.commons.collections4.BoundedCollection) {\n    return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull();\n} ","position":"org.apache.commons.collections4.CollectionUtils:1470","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ReverseComparator:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = int","position":"org.apache.commons.collections4.list.TreeList:882","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A list iterator over the linked list.\n */\nprotected static class LinkedListIterator<E> implements java.util.ListIterator<E> , org.apache.commons.collections4.OrderedIterator<E> {\n    /** \n     * The parent list\n     */\nprotected final org.apache.commons.collections4.list.AbstractLinkedList<E> parent;\n\n    /** \n     * The node that will be returned by {@link #next()}. If this is equal\n     * to {@link AbstractLinkedList#header} then there are no more values to return.\n     */\nprotected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> next;\n\n    /** \n     * The index of {@link #next}.\n     */\nprotected int nextIndex;\n\n    /** \n     * The last node that was returned by {@link #next()} or {@link\n     * #previous()}. Set to <code>null<\/code> if {@link #next()} or {@link\n     * #previous()} haven't been called, or if the node has been removed\n     * with {@link #remove()} or a new node added with {@link #add(Object)}.\n     * Should be accessed through {@link #getLastNodeReturned()} to enforce\n     * this behaviour.\n     */\nprotected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> current;\n\n    /** \n     * The modification count that the list is expected to have. If the list\n     * doesn't have this count, then a\n     * {@link java.util.ConcurrentModificationException} may be thrown by\n     * the operations.\n     */\nprotected int expectedModCount;\n\n    /** \n     * Create a ListIterator for a list.\n     * \n     * @param parent  the parent list\n     * @param fromIndex  the index to start at\n     * @throws IndexOutOfBoundsException if fromIndex is less than 0 or greater than the size of the list\n     */\nprotected LinkedListIterator(final org.apache.commons.collections4.list.AbstractLinkedList<E> parent ,final int fromIndex) throws java.lang.IndexOutOfBoundsException {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.list.AbstractLinkedList<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>;\n        this.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        this.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true);\n        this.int = int;\n    }\n\n    /** \n     * Checks the modification count of the list is the value that this\n     * object expects.\n     * \n     * @throws ConcurrentModificationException If the list's modification\n     * count isn't the value that was expected.\n     */\nprotected void checkModCount() {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n\n    /** \n     * Gets the last node returned.\n     * \n     * @return the last node returned\n     * @throws IllegalStateException If {@link #next()} or {@link #previous()} haven't been called,\n     * or if the node has been removed with {@link #remove()} or a new node added with {@link #add(Object)}.\n     */\nprotected org.apache.commons.collections4.list.AbstractLinkedList.Node<E> getLastNodeReturned() throws java.lang.IllegalStateException {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == null) {\n            throw new java.lang.IllegalStateException();\n        } \n        return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    }\n\n    public boolean hasNext() {\n        return (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) != (org.apache.commons.collections4.list.AbstractLinkedList<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n\n    public E next() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount();\n        if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasNext())) {\n            throw new java.util.NoSuchElementException(((\"No element at index \" + (int)) + \".\"));\n        } \n        final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue();\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n        (int)++;\n        return E;\n    }\n\n    public boolean hasPrevious() {\n        return (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) != (org.apache.commons.collections4.list.AbstractLinkedList<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>);\n    }\n\n    public E previous() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount();\n        if (!org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(hasPrevious())) {\n            throw new java.util.NoSuchElementException(\"Already at start of list.\");\n        } \n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n        final E E = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue();\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n        (int)--;\n        return E;\n    }\n\n    public int nextIndex() {\n        return int;\n    }\n\n    public int previousIndex() {\n        return org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.(nextIndex()) - 1;\n    }\n\n    public void remove() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount();\n        if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E>) == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n            org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned());\n        } else {\n            org.apache.commons.collections4.list.AbstractLinkedList<E>.removeNode(org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned());\n            (int)--;\n        }\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n        (int)++;\n    }\n\n    public void set(final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned().setValue(E);\n    }\n\n    public void add(final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.addNodeBefore(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>, E);\n        org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n        (int)++;\n        (int)++;\n    }\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:742","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[66,67,68,69,70,71,72,73,74,75,76,77],"variableMapping":{"stack":"stack","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , 0)","position":"org.apache.commons.collections4.list.AbstractLinkedList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:55","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.bag.AbstractMapBag:90","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.OrderedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.EnumerationIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"new java.util.HashSet<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:38","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:181","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1073","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = null","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:634","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":0},{"failures":[78],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-1},{"failures":[79],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Set<java.lang.Object>.size()) == 0) {\n    org.apache.commons.collections4.list.SetUniqueList<E>.clear();\n} else {\n    for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.SetUniqueList<E>.iterator() ; java.util.Iterator<E>.hasNext() ; ) {\n        if (!(java.util.Set<java.lang.Object>.contains(java.util.Iterator<E>.next()))) {\n            java.util.Iterator<E>.remove();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.SetUniqueList:265","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[80,81,82],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl"},"status":-1},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94],"variableMapping":{"flag":"nextObjectSet","removed":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","position":"org.apache.commons.collections4.map.Flat3Map:878","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"lock"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":-2},{"failures":[95,96],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-1},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94],"variableMapping":{"removed":"previousObjectSet","nextCalled":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"if ((!(this.boolean)) || (this.boolean)) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:144","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[97],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-1},{"failures":[98,99,100,101,102,103,104,105,106,107],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Can\\'t do that after next or hasNext has been called.\")","position":"org.apache.commons.collections4.iterators.CollatingIterator:342","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"Trie[\").append(java.util.AbstractMap<K, V>.size()).append(\"]={\\n\")","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:67","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")","position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.add(new java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>(org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>))","position":"org.apache.commons.collections4.list.CursorableLinkedList:280","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[132,79],"binaryOperator":"((int - int) + 1)","name":"math","position":"org.apache.commons.collections4.list.GrowthList:184","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"++(int)","position":"org.apache.commons.collections4.sequence.EditScript:93","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Cannot modify a FixedOrderComparator after a comparison\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:141","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if (java.util.Iterator<?> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:956","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingIterator:106","type":"CtInvocationImpl"},"status":0},{"failures":[133,134],"variableMapping":{"map":"map"},"name":"replace","transplant":{"sourceCode":"if (java.util.Map<K, V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n} ","position":"org.apache.commons.collections4.MapUtils:1757","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-1},{"failures":[135,136,137,138],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-1},{"failures":[139],"binaryOperator":"(int <= 0)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[140,141],"variableMapping":{"added":"nextObjectSet","changed":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"tree inconsistent!\")","position":"org.apache.commons.collections4.list.TreeList:692","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Collection<?>.contains(E)) {\n    java.util.List<E>.add(E);\n} ","position":"org.apache.commons.collections4.ListUtils:322","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.MultiKeyMap:97","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll","this":"this","lock":"lock"},"name":"add","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.bag.AbstractMapBag:274","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super I, ? extends O>","position":"org.apache.commons.collections4.iterators.TransformIterator:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[95,142,143],"variableMapping":{"removed":"validForUpdate","beforeFirst":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) || (this.boolean)) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonIterator:106","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.UnmodifiableMap:106","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)","position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[83,84,85,86,87,88,89,90,91,92,93,94],"variableMapping":{"previousObjectSet":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.PassiveExpiringMap:517","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.currentEntry()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:381","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":77,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":89,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":72,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":97,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":158,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":119,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":43,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":139,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":147,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":177,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":135,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":164,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":13,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":32,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":79,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":76,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":144,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":124,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":5,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":42,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":63,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":91,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":51,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":153,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":23,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":69,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":52,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":162,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemove":143,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":167,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":80,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":141,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":64,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":126,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":20,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":46,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":138,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":96,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":123,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":175,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":165,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":83,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":25,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":16,"org.apache.commons.collections4.ListUtilsTest.testLazyList":57,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":88,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":110,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":21,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":34,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":100,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":172,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":14,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":90,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":105,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":12,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":109,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":113,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":121,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":39,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":107,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":118,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":49,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":11,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":85,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":102,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":166,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":24,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":9,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":22,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":73,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":45,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":56,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":136,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":133,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":173,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":74,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":92,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":67,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":68,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":15,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":44,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":2,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":150,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":160,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":171,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":1,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":180,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":41,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":156,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":0,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":50,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":152,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":181,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":94,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":29,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":40,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":120,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":163,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":78,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":130,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":170,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":98,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":47,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":93,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":129,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":10,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":161,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":157,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":62,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":101,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":7,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":137,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":54,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":116,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":125,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":127,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":27,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":26,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":99,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":75,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":87,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":104,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":53,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":95,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":19,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":81,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":35,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":115,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":8,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":122,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":30,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":154,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":159,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":60,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":38,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":108,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":103,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":176,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":111,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":128,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":17,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":18,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":71,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":112,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":114,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":3,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":59,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":82,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":86,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":179,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":131,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":178,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":31,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":55,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":149}}]
