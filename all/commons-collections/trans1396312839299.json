[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>> = java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.next()","position":"org.apache.commons.collections4.list.CursorableLinkedList:290","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (true) {\n    final K K = ((K)(java.io.ObjectInputStream.readObject()));\n    if (K == null) {\n        break;\n    } \n    final V V = ((V)(java.io.ObjectInputStream.readObject()));\n    org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.put(K, V);\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1038","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:156","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bag.AbstractMapBag:157","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:112","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())","position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.(getKey()) == null ? 0 : org.apache.commons.collections4.keyvalue.TiedMapEntry<K, V>.getKey().hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","name":"removeConditional","position":"org.apache.commons.collections4.keyvalue.TiedMapEntry:123","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.collection.IndexedCollection<K, C>.addToIndex(C);\n} ","position":"org.apache.commons.collections4.collection.IndexedCollection:119","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.lang.RuntimeException java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:61","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.getRightSubTree().getLeftSubTree()","position":"org.apache.commons.collections4.list.TreeList:743","type":"CtLocalVariableImpl"},"status":-2},{"failures":[12,13],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:120","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1717","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractLinkedMap:149","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"try {\n    return ((org.apache.commons.collections4.map.MultiKeyMap<K, V>)(org.apache.commons.collections4.map.AbstractMapDecorator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.clone()));\n} catch (final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException) {\n    throw new java.lang.InternalError();\n}","position":"org.apache.commons.collections4.map.MultiKeyMap:829","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.PrintStream.println((boolean ? \"} \" + (java.util.Map<?, ?>.getClass().getName()) : \"}\"))","position":"org.apache.commons.collections4.MapUtils:1029","type":"CtInvocationImpl"},"status":-2},{"failures":[14,15,16],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.push(E)","position":"org.apache.commons.collections4.iterators.PushbackIterator:88","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (K == null) {\n    return 1;\n} ","position":"org.apache.commons.collections4.trie.KeyAnalyzer:141","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[17,18],"variableMapping":{"nextPermutation":"list"},"name":"replace","transplant":{"sourceCode":"return (this.java.util.List<E>) != null","position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Inner class iterator.\n */\nstatic class SetListListIterator<E> extends org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E> {\n    private final java.util.Set<E> set;\n\n    private E last = null;\n\n    protected SetListListIterator(final java.util.ListIterator<E> it ,final java.util.Set<E> set) {\n        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.super(java.util.ListIterator<E>);\n        this.java.util.Set<E> = java.util.Set<E>;\n    }\n\n    @java.lang.Override\n    public E next() {\n        E = org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.next();\n        return E;\n    }\n\n    @java.lang.Override\n    public E previous() {\n        E = org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.previous();\n        return E;\n    }\n\n    @java.lang.Override\n    public void remove() {\n        org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.remove();\n        java.util.Set<E>.remove(E);\n        E = null;\n    }\n\n    @java.lang.Override\n    public void add(final E object) {\n        if ((java.util.Set<E>.contains(E)) == false) {\n            org.apache.commons.collections4.iterators.AbstractListIteratorDecorator<E>.add(E);\n            java.util.Set<E>.add(E);\n        } \n    }\n\n    @java.lang.Override\n    public void set(final E object) {\n        throw new java.lang.UnsupportedOperationException(\"ListIterator does not support set\");\n    }\n}","position":"org.apache.commons.collections4.list.SetUniqueList:379","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(((java.lang.Class<?>[] == null) && (java.lang.Object[] != null)) || ((java.lang.Class<?>[] != null) && (java.lang.Object[] == null)))","name":"removeConditional","position":"org.apache.commons.collections4.functors.InstantiateFactory:61","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[19,20,21,22],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.ceilingEntry(K);\n} else {\n    java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.higherEntry(K);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1886","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) == (int)) {\n    int = boolean ? int : 0;\n} else {\n    int = (int) - (int);\n}","position":"org.apache.commons.collections4.queue.CircularFifoQueue:161","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"set":"sub"},"name":"replace","transplant":{"sourceCode":"return java.util.SortedSet<E>","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.comparators.ComparatorChain:230","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"private class EntrySet extends java.util.AbstractSet<java.util.Map.Entry<K, V>> {\n    @java.lang.Override\n    public int size() {\n        return org.apache.commons.collections4.map.StaticBucketMap.this.size();\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.map.StaticBucketMap.this.clear();\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<java.util.Map.Entry<K, V>> iterator() {\n        return new org.apache.commons.collections4.map.StaticBucketMap.EntryIterator();\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object obj) {\n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.util.Map.Entry<?, ?>.getKey());\n        synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n            for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.equals(java.util.Map.Entry<?, ?>)) {\n                    return true;\n                } \n            }\n        }\n        return false;\n    }\n\n    @java.lang.Override\n    public boolean remove(final java.lang.Object obj) {\n        if ((java.lang.Object instanceof java.util.Map.Entry<?, ?>) == false) {\n            return false;\n        } \n        final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object));\n        final int int = org.apache.commons.collections4.map.StaticBucketMap<K, V>.getHash(java.util.Map.Entry<?, ?>.getKey());\n        synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n            for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n                if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.equals(java.util.Map.Entry<?, ?>)) {\n                    org.apache.commons.collections4.map.StaticBucketMap.this.remove(org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.getKey());\n                    return true;\n                } \n            }\n        }\n        return false;\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:557","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"root":"result"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:164","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.AnyPredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.AnyPredicate:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()","position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ForClosure:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)))","position":"org.apache.commons.collections4.list.AbstractLinkedList:991","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"No more elements in the iteration\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:222","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"removed":"previousObjectSet","beforeFirst":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"return (this.boolean) && (!(this.boolean))","position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.this(java.util.Comparator<? super E>, 2)","position":"org.apache.commons.collections4.iterators.CollatingIterator:118","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = 17","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:258","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.TransformedMap:183","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[36,37],"variableMapping":{"canRemove":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:76","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.CollectionUtils:1155","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"fromIndex":"index"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"status":-2},{"failures":[38,39,40,41],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.nextEntry()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Collection<?> == java.util.Collection<?>) {\n    return true;\n} ","position":"org.apache.commons.collections4.ListUtils:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) || (boolean)) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:82","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return int < 0 ? int * (-1) : int","position":"org.apache.commons.collections4.map.StaticBucketMap:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:95","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return K[][int]","position":"org.apache.commons.collections4.keyvalue.MultiKey:196","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[38,39,40,41],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.containsKey(java.lang.Object)) {\n    final V V = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.get(java.lang.Object);\n    if (V == null ? (java.util.Map.Entry<?, ?>.getValue()) == null : V.equals(java.util.Map.Entry<?, ?>.getValue())) {\n        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(java.lang.Object);\n        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<V, K>.remove(V);\n        return true;\n    } \n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:591","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.list.TreeList:646","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object);\n}","position":"org.apache.commons.collections4.bag.SynchronizedBag:107","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-2},{"failures":[38,39,40,41],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")","position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue());\n}","position":"org.apache.commons.collections4.map.PassiveExpiringMap:447","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2172","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int != org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.(size())","position":"org.apache.commons.collections4.list.SetUniqueList:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n    return T;\n} ","position":"org.apache.commons.collections4.CollectionUtils:644","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Map<K, V>.containsKey(K)) {\n    final V V = java.util.Map<K, V>.remove(K);\n    final int int = java.util.List<K>.indexOf(K);\n    java.util.List<K>.remove(int);\n    if (int < int) {\n        int--;\n    } \n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return V;\n} else {\n    java.util.List<K>.add(int, K);\n    java.util.Map<K, V>.put(K, V);\n    return null;\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:453","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.Values<V> = new org.apache.commons.collections4.map.AbstractHashedMap.Values<V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:989","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<E>","position":"org.apache.commons.collections4.iterators.PermutationIterator:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final boolean boolean = org.apache.commons.collections4.map.Flat3Map<K, V>.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.Flat3Map:764","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{"previousObjectSet":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * The sublist implementation for AbstractLinkedList.\n */\nprotected static class LinkedSubList<E> extends java.util.AbstractList<E> {\n    /** \n     * The main list\n     */\norg.apache.commons.collections4.list.AbstractLinkedList<E> parent;\n\n    /** \n     * Offset from the main list\n     */\nint offset;\n\n    /** \n     * Sublist size\n     */\nint size;\n\n    /** \n     * Sublist modCount\n     */\nint expectedModCount;\n\n    protected LinkedSubList(final org.apache.commons.collections4.list.AbstractLinkedList<E> parent ,final int fromIndex ,final int toIndex) {\n        if (int < 0) {\n            throw new java.lang.IndexOutOfBoundsException((\"fromIndex = \" + int));\n        } \n        if (int > (org.apache.commons.collections4.list.AbstractLinkedList<E>.size())) {\n            throw new java.lang.IndexOutOfBoundsException((\"toIndex = \" + int));\n        } \n        if (int > int) {\n            throw new java.lang.IllegalArgumentException(((((\"fromIndex(\" + int) + \") > toIndex(\") + int) + \")\"));\n        } \n        this.org.apache.commons.collections4.list.AbstractLinkedList<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>;\n        this.int = int;\n        this.int = int - int;\n        this.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n    }\n\n    @java.lang.Override\n    public int size() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return int;\n    }\n\n    @java.lang.Override\n    public E get(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.get((int + (int)));\n    }\n\n    @java.lang.Override\n    public void add(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.add((int + (int)), E);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)++;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n    }\n\n    @java.lang.Override\n    public E remove(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)));\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        (int)--;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return E;\n    }\n\n    @java.lang.Override\n    public boolean addAll(final java.util.Collection<? extends E> coll) {\n        return org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.addAll(int, java.util.Collection<? extends E>);\n    }\n\n    @java.lang.Override\n    public boolean addAll(final int index, final java.util.Collection<? extends E> coll) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        final int int = java.util.Collection<? extends E>.size();\n        if (int == 0) {\n            return false;\n        } \n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        org.apache.commons.collections4.list.AbstractLinkedList<E>.addAll(((int) + int), java.util.Collection<? extends E>);\n        int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int;\n        int += int;\n        (org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList.this.int)++;\n        return true;\n    }\n\n    @java.lang.Override\n    public E set(final int index, final E obj) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, int);\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E);\n    }\n\n    @java.lang.Override\n    public void clear() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.iterator();\n        while (java.util.Iterator<E>.hasNext()) {\n            java.util.Iterator<E>.next();\n            java.util.Iterator<E>.remove();\n        }\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<E> iterator() {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListIterator(this);\n    }\n\n    @java.lang.Override\n    public java.util.ListIterator<E> listIterator(final int index) {\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1));\n        org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount();\n        return org.apache.commons.collections4.list.AbstractLinkedList<E>.createSubListListIterator(this, int);\n    }\n\n    @java.lang.Override\n    public java.util.List<E> subList(final int fromIndexInclusive, final int toIndexExclusive) {\n        return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(org.apache.commons.collections4.list.AbstractLinkedList<E> , (int + (int)) , (int + (int)));\n    }\n\n    protected void rangeCheck(final int index, final int beyond) {\n        if ((int < 0) || (int >= int)) {\n            throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n        } \n    }\n\n    protected void checkModCount() {\n        if ((org.apache.commons.collections4.list.AbstractLinkedList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:938","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int))) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } \n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) || (!org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(isBitSet(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int, int)))) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:198","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NOPTransformer.org.apache.commons.collections4.functors.NOPTransformer.<T>nopTransformer()","position":"org.apache.commons.collections4.functors.ChainedTransformer:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((int < 0) || (int >= int)) {\n    throw new java.lang.IndexOutOfBoundsException(((((\"Index \\'\" + int) + \"\\' out of bounds for size \\'\") + (int)) + \"\\'\"));\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:1055","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.Flat3Map<K, V>.V","position":"org.apache.commons.collections4.map.Flat3Map:677","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))","position":"org.apache.commons.collections4.CollectionUtils:1356","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230],"variableMapping":{"obj":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final V V = V","position":"org.apache.commons.collections4.map.Flat3Map:299","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.nextEntry()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[231],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.lang.RuntimeException java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:61","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A {@link Reference} allows us to return something through a Method's\n * argument list. An alternative would be to an Array with a length of\n * one (1) but that leads to compiler warnings. Computationally and memory\n * wise there's no difference (except for the need to load the\n * {@link Reference} Class but that happens only once).\n */\nprivate static class Reference<E> {\n    private E item;\n\n    public void set(final E item) {\n        this.E = E;\n    }\n\n    public E get() {\n        return E;\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1263","type":"CtClassImpl"},"status":-2},{"failures":[232,53,54,55,233,56,234,235,236,237,238,57,239,240,241,242,243,244,245,246,247,248,249,250,251],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":148,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":133,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":161,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":70,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":57,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":197,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":180,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":182,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":34,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":132,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":21,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":165,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":47,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":84,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":175,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":228,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":26,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":19,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":85,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":109,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":186,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":204,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":229,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":119,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":45,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":199,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":249,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":83,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":100,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":0,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":121,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":5,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":172,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":75,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":247,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":189,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":105,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":237,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":188,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":93,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":88,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":212,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":61,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":79,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":118,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":250,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":150,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":243,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":2,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":129,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":214,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":201,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":124,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":128,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":62,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":134,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":108,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":30,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":176,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":39,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":125,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":198,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":49,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":22,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":115,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":171,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":223,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":87,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":147,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":144,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":187,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":1,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":137,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":53,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":92,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":101,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":216,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":131,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":69,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":194,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":206,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":94,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testDelayedPushback":15,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":48,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":230,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":167,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":244,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":67,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":181,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":193,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":106,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":54,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":234,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":111,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":170,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":97,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":136,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":18,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":89,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":4,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":33,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":141,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":76,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":154,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":135,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":81,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":110,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":59,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":221,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":162,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":213,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":112,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":64,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":51,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":184,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":38,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":208,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":35,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":123,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":44,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":103,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":183,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":163,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":164,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":225,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":63,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":12,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":27,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":143,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":72,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":156,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":207,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":13,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":74,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":205,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":215,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":20,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":203,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":116,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":145,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":246,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":127,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":55,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":185,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":158,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":114,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":155,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":99,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":227,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":169,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":152,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":177,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":37,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":232,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":239,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":168,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":238,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":192,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":222,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":174,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":159,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":65,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":251,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":138,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":210,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":29,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":126,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":217,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":68,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":149,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":98,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":153,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":209,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":95,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":66,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":73,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":242,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":139,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":173,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":218,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":58,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":236,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":24,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":43,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":25,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":17,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":50,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":130,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":235,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":78,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":90,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":56,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":71,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":122,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":245,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":146,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":86,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":196,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":82,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":140,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":41,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":211,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":157,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":248,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":166,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":80,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":113,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":117,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":241,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":104,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":226,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":96,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":190,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":36,"org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure":231,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":120,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testMultiplePushback":14,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":220,"org.apache.commons.collections4.iterators.PushbackIteratorTest.testImmediatePushback":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":77,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":160,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":240,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":179,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":142,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":178,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":200,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":46,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":202,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":151,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":224,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":28,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":102,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":219,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":42,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":91}}]
