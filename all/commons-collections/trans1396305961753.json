[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.collection.CompositeCollection:314","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next()","position":"org.apache.commons.collections4.map.MultiKeyMap:718","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-2},{"failures":[0,1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<E>.add(int, E)","position":"org.apache.commons.collections4.set.ListOrderedSet:301","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[2,3],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-1},{"failures":[4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[46,47,48,49,50,51,52,53,54,55,56],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())","position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-2},{"failures":[57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1))","position":"org.apache.commons.collections4.map.MultiKeyMap:745","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.CompositeCollection<E>.iterator() ; java.util.Iterator<E>.hasNext() ; int++) {\n    java.lang.Object[][int] = java.util.Iterator<E>.next();\n}","position":"org.apache.commons.collections4.collection.CompositeCollection:170","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[58],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"Transformer must return an instanceof Boolean, it was a null object\")","position":"org.apache.commons.collections4.functors.TransformerPredicate:75","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.higherEntry(K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1889","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[59,60,61,62,63],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Collection<?> != null) {\n    boolean boolean = false;\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    while (java.util.Iterator<?>.hasNext()) {\n        final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n        final boolean boolean = org.apache.commons.collections4.bag.AbstractBagDecorator<E>.remove(java.lang.Object, org.apache.commons.collections4.bag.AbstractBagDecorator<E>.getCount(java.lang.Object));\n        boolean = boolean || boolean;\n    }\n    return boolean;\n} else {\n    return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().removeAll(null);\n}","position":"org.apache.commons.collections4.bag.CollectionBag:125","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<java.lang.String, java.lang.Object>.put(java.lang.String, java.lang.Object)","position":"org.apache.commons.collections4.MapUtils:888","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Set<? extends E> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.Set<E> java.util.Set<E> = ((java.util.Set<E>)(java.util.Set<? extends E>));\n    return java.util.Set<E>;\n} ","position":"org.apache.commons.collections4.set.UnmodifiableSet:53","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer.int","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:47","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.TransformedSortedMap:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Trie<K, V>.size()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                return true;\n            } \n        case 2 :\n            if ((K) == null) {\n                return true;\n            } \n        case 1 :\n            if ((K) == null) {\n                return true;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = java.lang.Object.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 2 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n            case 1 :\n                if (((int) == int) && (java.lang.Object.equals(K))) {\n                    return true;\n                } \n        }\n    } \n}","position":"org.apache.commons.collections4.map.Flat3Map:201","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[64,65,66,67],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:92","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"closure":"closure"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ClosureTransformer.org.apache.commons.collections4.functors.ClosureTransformer.closureTransformer(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.TransformerUtils:150","type":"CtReturnImpl"},"status":-2},{"failures":[68,69,70,71],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (this.java.util.ListIterator<E>.hasNext()) {\n        E = this.java.util.ListIterator<E>.next();\n    }\n    this.java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"element":"obj"},"name":"add","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{"removed":"nextObjectSet","beforeFirst":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"return (this.boolean) && (!(this.boolean))","position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[72,73,74,75,76,77,78],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"LRUMap max size must be greater than 0\")","position":"org.apache.commons.collections4.map.LRUMap:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.functors.IfClosure<E>.this(org.apache.commons.collections4.Predicate<? super E>, org.apache.commons.collections4.Closure<? super E>, org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.nopClosure())","position":"org.apache.commons.collections4.functors.IfClosure:94","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\"right=\").append(\"ROOT\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1370","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-2},{"failures":[79,80,81,82],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSet:101","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[79,80],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:74","type":"CtReturnImpl"},"status":-1},{"failures":[83],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"mutation","return":"return 0","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(((\"Cannot store a duplicate key (\\\"\" + K) + \"\\\") in this Map\"))","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:504","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int == (-1)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:252","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Array.((E)(java.lang.reflect.Array.get(java.lang.Object, (int)++)))","position":"org.apache.commons.collections4.iterators.ArrayIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1))","name":"math","position":"org.apache.commons.collections4.MapUtils:1012","type":"mutation","status":-2},{"failures":[84,85,81,82,86,87],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ClosureTransformer:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    if (!org.apache.commons.collections4.collection.IndexedCollection<K, C>.(contains(java.lang.Object))) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.collection.IndexedCollection:158","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedBag<E>.getBag().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.SynchronizedBag:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getOffset(org.apache.commons.collections4.list.TreeList.AVLNode<E>)) + org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getOffset(org.apache.commons.collections4.list.TreeList.AVLNode<E>))","position":"org.apache.commons.collections4.list.TreeList:764","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (final T T : java.lang.Iterable<T>) {\n    C.execute(T);\n}","position":"org.apache.commons.collections4.CollectionUtils:665","type":"CtForEachImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((boolean) || (boolean)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:118","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>(this , int , int)","position":"org.apache.commons.collections4.list.AbstractLinkedList:200","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[88,89],"variableMapping":{"canRemove":"validForUpdate"},"name":"replace","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-1},{"failures":[90,91,92,93,94,95,96,97],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[98],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1762","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-1},{"failures":[99,100,101],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-1},{"failures":[102],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.collection.PredicatedCollection<T>(java.util.Collection<T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.collection.PredicatedCollection:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass()))","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:134","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = null","position":"org.apache.commons.collections4.map.MultiKeyMap:203","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[79,84,85,81,82,86,103,104,87],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-1},{"failures":[105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object","k":"object"},"name":"add","transplant":{"sourceCode":"if ((java.lang.Object == java.lang.Object) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n    org.apache.commons.collections4.map.StaticBucketMap.this.remove(java.lang.Object);\n    return true;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:636","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator()","position":"org.apache.commons.collections4.ListUtils:286","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * The values iterator.\n */\nstatic class ReferenceValuesIterator<V> extends org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<java.lang.Object, V> implements java.util.Iterator<V> {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    ReferenceValuesIterator(final org.apache.commons.collections4.map.AbstractReferenceMap<?, V> parent) {\n        org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<java.lang.Object, V>.super(((org.apache.commons.collections4.map.AbstractReferenceMap<java.lang.Object, V>)(org.apache.commons.collections4.map.AbstractReferenceMap<?, V>)));\n    }\n\n    public V next() {\n        return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<java.lang.Object, V>.nextEntry().getValue();\n    }\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:883","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\")","position":"org.apache.commons.collections4.collection.IndexedCollection:244","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[162,163],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterIterator:177","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object[].int) > int) {\n    java.lang.Object[][int] = null;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.E[][this.int] = E","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:182","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.OrderedMapIterator<K, V>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:62","type":"CtReturnImpl"},"status":0},{"failures":[],"binaryOperator":"((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \")","name":"removeConditional","position":"org.apache.commons.collections4.iterators.ArrayIterator:115","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.synchronizedSet(java.util.Set<E>)","position":"org.apache.commons.collections4.SetUtils:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[164,59,60,61,62,63],"variableMapping":{"key":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return 0;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:154","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[165,83,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,0,1,214,94,95,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int++;\n        java.util.Iterator<?>.next();\n    }\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int++;\n        java.util.Enumeration<?>.nextElement();\n    }\n} else {\n    try {\n        int = java.lang.reflect.Array.java.lang.reflect.Array.getLength(java.lang.Object);\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1340","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.<T>nullPredicate()","position":"org.apache.commons.collections4.functors.IdentityPredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[] = T[]","position":"org.apache.commons.collections4.set.CompositeSet:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[308],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1648","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"V V = null","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:187","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:100","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.SortedMap<K, V> java.util.SortedMap<K, V> = ((java.util.SortedMap<K, V>)(java.util.SortedMap<K, ? extends V>))","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:63","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[46,47,48,49,309,51,53,54,55,56],"binaryOperator":"(int) - 1","name":"math","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"mutation","status":-1},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":171,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":104,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":220,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":273,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":295,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":266,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":271,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":136,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":275,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":221,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":246,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":100,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":281,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":99,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":22,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":204,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":212,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":280,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":125,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":259,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":13,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":188,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":114,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":23,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":166,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":306,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":202,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":309,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":111,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":180,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":206,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":139,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":231,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":235,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":264,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":46,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":237,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":50,"org.apache.commons.collections4.map.StaticBucketMapTest.test_containsValue_nullMatchesIncorrectly":68,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":181,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":262,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":112,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":163,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":288,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":14,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":184,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":195,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":4,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":252,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testFirstKey":3,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":134,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":267,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":36,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":269,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":98,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":260,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":239,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.SingletonMapTest.testFirstKey":2,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":257,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":34,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":287,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":142,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":213,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":218,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":238,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":47,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":183,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":191,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":198,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":274,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":115,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":297,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapPut":70,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":129,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":95,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":176,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":289,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":138,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":106,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":165,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":157,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":282,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":290,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":223,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":190,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":301,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":9,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":54,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":193,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":137,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":148,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":85,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":307,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":122,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":177,"org.apache.commons.collections4.ClosureUtilsTest.testInvokeClosure":72,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":229,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":247,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":263,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":302,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":35,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":11,"org.apache.commons.collections4.map.StaticBucketMapTest.testValuesIteratorRemoveChangesMap":71,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":219,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":10,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":234,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":201,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":120,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":143,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":0,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":37,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":65,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":160,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":7,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":169,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":61,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":255,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":208,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":299,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":1,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":25,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":215,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":81,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping0":80,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":241,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":49,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":67,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":97,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":236,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":82,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":31,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":146,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":179,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":293,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":258,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":303,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":209,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":155,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":189,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":197,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":200,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":24,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":174,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":18,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":304,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":308,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":26,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":48,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":283,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":105,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":284,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":216,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":172,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":94,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":164,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoFailure":77,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":244,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":210,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":296,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":167,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":245,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":43,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":64,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":93,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":265,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":141,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":133,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":248,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":57,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":152,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":175,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":225,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":44,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":83,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":60,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":135,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":53,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":144,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":156,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":170,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":153,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":92,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":145,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":291,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":16,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":73,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":224,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":185,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":29,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoCollection":76,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":45,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":107,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":30,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":240,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":162,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":242,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":154,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":84,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":5,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":194,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":33,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":305,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":74,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":52,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":270,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":58,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":261,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":103,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":159,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":8,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":101,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":199,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":131,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":187,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":32,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":250,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":6,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoCollection":75,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":186,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":113,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":192,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":17,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":272,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":285,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":62,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":20,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":226,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":243,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":279,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":178,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":90,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":91,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":12,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":300,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":79,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":254,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":66,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":228,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":168,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":121,"org.apache.commons.collections4.CollectionUtilsTest.forAllButLastDoIterator":78,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":19,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":286,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":298,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":119,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":56,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":149,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":86,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":140,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":55,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":28,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":222,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":233,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":211,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":203,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":127,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":147,"org.apache.commons.collections4.map.StaticBucketMapTest.testMapContainsValue":69,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":214,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":118,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":117,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":292,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":40,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":88,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":110,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":217,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":278,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":128,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":173,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":150,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":102,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":87,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":158,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":232,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":249,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":27,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":108,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":109,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":230,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":123,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":277,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":124,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":21,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":151,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":207,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":276,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":196}}]
