[{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends I>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = this.java.util.Iterator<? extends I>;\n    return java.util.ListIterator<?>.hasPrevious();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends I>.hasNext()","position":"org.apache.commons.collections4.iterators.TransformIterator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int += int","position":"org.apache.commons.collections4.list.AbstractLinkedList:1014","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Collection<org.apache.commons.collections4.Closure<E>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure collection must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ChainedClosure:68","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String))","position":"org.apache.commons.collections4.PredicateUtils:213","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int ^= int >>> 10","position":"org.apache.commons.collections4.map.MultiKeyMap:234","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V)","name":"removeConditional","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.Predicate<? super O>.evaluate(O))) {\n    R.add(O);\n} ","position":"org.apache.commons.collections4.CollectionUtils:973","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<T> != null) && (C != null)) {\n    while (java.util.Iterator<T>.hasNext()) {\n        C.execute(java.util.Iterator<T>.next());\n    }\n} ","position":"org.apache.commons.collections4.CollectionUtils:685","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.getEntry(java.util.Map.Entry<?, ?>.getKey())","position":"org.apache.commons.collections4.map.AbstractHashedMap:855","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:112","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.util.Map<?, ?>)(java.lang.Object)).values().iterator()","position":"org.apache.commons.collections4.IteratorUtils:1069","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Collection<V>.size()","position":"org.apache.commons.collections4.map.MultiValueMap:367","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:863","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Iterator<?>.next()","position":"org.apache.commons.collections4.CollectionUtils:379","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.SplitMapUtils:185","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>) != null) {\n    return org.apache.commons.collections4.map.Flat3Map<K, V>.org.apache.commons.collections4.map.AbstractHashedMap<K, V>.entrySet().iterator();\n} ","position":"org.apache.commons.collections4.map.Flat3Map:771","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[9,10,11,12,13,14],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (boolean) {\n    if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n        throw new java.lang.IllegalStateException((((((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n    } \n    org.apache.commons.collections4.map.LRUMap<K, V>.reuseMapping(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>, int, int, K, V);\n} else {\n    org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.addMapping(int, int, K, V);\n}","position":"org.apache.commons.collections4.map.LRUMap:268","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Queue<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.queue.PredicatedQueue:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[15],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.selectRejected(java.util.Collection<? extends E>, org.apache.commons.collections4.Predicate<? super E>, new java.util.ArrayList<E>(java.util.Collection<? extends E>.size()))","position":"org.apache.commons.collections4.ListUtils:212","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[16],"binaryOperator":"int == 1","name":"negateConditional","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Iterator<T>.hasNext()) {\n    final T T = java.util.Iterator<T>.next();\n    if (java.util.Iterator<T>.hasNext()) {\n        C.execute(T);\n    } else {\n        return T;\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:724","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.MultiKeyMap:183","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[17,18,19],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<java.lang.Object, V>.previousEntry().getValue()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:489","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Couldn\\'t get the node: \" + \"index (\") + int)","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1748","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"MapIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractMapIteratorDecorator:44","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet.SingletonIterator(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2286","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[38,39],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.map.Flat3Map.FlatMapEntry<K, V>.getKey()","position":"org.apache.commons.collections4.map.Flat3Map:876","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"variableMapping":{"result":"result","iterator":"iterator"},"name":"add","transplant":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"lastUsedIterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":0},{"failures":[40,41,42,43],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String))","position":"org.apache.commons.collections4.PredicateUtils:213","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.SortedMap<K, V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n} ","position":"org.apache.commons.collections4.MapUtils:1773","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[44,45,46,10,47,48,11,49,50,12,14,51],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"mutation","return":"return true","status":-1},{"failures":[52,53,54,55,56,13,57,58,59,60,61,62,63,64,65,66,67,68,69],"binaryOperator":"(int) < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"mutation","status":-1},{"failures":[70,71,72,73,74,75,76,77,78],"variableMapping":{"in":"in"},"name":"add","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.DefaultedMap:193","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.doReadObject(java.io.ObjectInputStream)","position":"org.apache.commons.collections4.list.CursorableLinkedList:377","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    int ^= java.lang.Object.hashCode();\n} ","position":"org.apache.commons.collections4.map.MultiKeyMap:671","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:814","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl"},"status":-2},{"failures":[79],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")","position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\");\n} ","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:737","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated())","position":"org.apache.commons.collections4.bag.CollectionSortedBag:70","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260],"variableMapping":{"coll":"coll","this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append((K == this ? \"(this Map)\" : K)).append('=').append((V == this ? \"(this Map)\" : V))","position":"org.apache.commons.collections4.map.AbstractHashedMap:1376","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[16],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[261,262,263,264,265,266,267,268,269],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-6817674502475353160L","position":"org.apache.commons.collections4.functors.FactoryTransformer:33","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)","position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:975","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super T, ? extends T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The transformer to call must not be null\");\n} ","position":"org.apache.commons.collections4.functors.TransformedPredicate:53","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":0},{"failures":[15],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Attempt to add illegal entry unresolved by SetMutator.resolveCollision()\")","position":"org.apache.commons.collections4.set.CompositeSet:353","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    final org.apache.commons.collections4.BoundedCollection<?> org.apache.commons.collections4.BoundedCollection<?> = org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.org.apache.commons.collections4.collection.UnmodifiableBoundedCollection.unmodifiableBoundedCollection(java.util.Collection<?>);\n    return org.apache.commons.collections4.BoundedCollection<?>.isFull();\n} catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n    return false;\n}","position":"org.apache.commons.collections4.CollectionUtils:1473","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (java.util.ListIterator<E>.hasNext()) {\n        E = java.util.ListIterator<E>.next();\n    }\n    java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.Flat3Map:506","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.GrowthList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.GrowthList:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer","position":"org.apache.commons.collections4.MapUtils:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[270],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl"},"status":-1},{"failures":[271],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T","position":"org.apache.commons.collections4.functors.NOPTransformer:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"removed":"result"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:858","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"status":-2},{"failures":[272,273,274,275,276,277,271,278,279,280,281,282],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.FilterListIterator:264","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>","position":"org.apache.commons.collections4.map.AbstractHashedMap:813","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Couldn\\'t get the node: \" + \"index (\") + int)","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{"prototype":"prototype"},"name":"replace","transplant":{"sourceCode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}","position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[283],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{"curObject":"currentValue","leastObject":"currentValue"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))","position":"org.apache.commons.collections4.CollectionUtils:1196","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-2},{"failures":[15],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.map.Flat3Map:874","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(K)) {\n    return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n} else {\n    final V V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V);\n    java.util.List<K>.add(K);\n    return V;\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:219","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)","position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":162,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":271,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":101,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":8,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":163,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":157,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":170,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":257,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":16,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":65,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":139,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":230,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":29,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":156,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":173,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":283,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":212,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":227,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":239,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":56,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":48,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":124,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":45,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":167,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":247,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":272,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":248,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":277,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":182,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":158,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":238,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":12,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":23,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":147,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":82,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":206,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":24,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":205,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":146,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":108,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":231,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":234,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":243,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":114,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":116,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":151,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":208,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":105,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":274,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":154,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializeDeserializeThenCompare":77,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":87,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":218,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":215,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":98,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":240,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":267,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":67,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":96,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":246,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":268,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":143,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":186,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":207,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":237,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":253,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":191,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":280,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":159,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":13,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":66,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":2,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":126,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":130,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":250,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":273,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":178,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":94,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":183,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":259,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":235,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":52,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":141,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":219,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":49,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":128,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":39,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":168,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":216,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":152,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":217,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":3,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":161,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":210,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":269,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":276,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":153,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":18,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":4,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListCompatibility":76,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":84,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":192,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":189,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":9,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":10,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":188,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":137,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":198,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":249,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":104,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":80,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":68,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":81,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":148,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":233,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":266,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":32,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":144,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":228,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":19,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":150,"org.apache.commons.collections4.list.CursorableLinkedListTest.testFullListSerialization":74,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":38,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":264,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":138,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":201,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":63,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":92,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":27,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":17,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":47,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":118,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":103,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":132,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":245,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicate":43,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":64,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":181,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":279,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":195,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":20,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":50,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":263,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":22,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":30,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":83,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":171,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":236,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":202,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":222,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":229,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":28,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":91,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":193,"org.apache.commons.collections4.list.CursorableLinkedListTest.testLongSerialization":72,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":165,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":185,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":145,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":225,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":241,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":255,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":46,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":107,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":1,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":115,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":160,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":211,"org.apache.commons.collections4.CollectionUtilsTest.forAllDoIterator":0,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":190,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx1":40,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx2":41,"org.apache.commons.collections4.PredicateUtilsTest.testInvokerPredicateEx3":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":278,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":6,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":120,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":199,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":265,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":223,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":244,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":213,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":11,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":88,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerialization":70,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListSerialization":73,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":187,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":196,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":106,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":256,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":260,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":270,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":209,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":140,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":100,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":252,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":119,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":200,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":261,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSerializationWithOpenCursor":71,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":262,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":102,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":232,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":117,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":51,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":242,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":86,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":26,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":53,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":129,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":21,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":164,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":166,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":220,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":169,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":282,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":110,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":60,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":5,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":113,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":221,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":281,"org.apache.commons.collections4.list.CursorableLinkedListTest.testSimpleSerialization":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":134,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":224,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingBackwards":7,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":175,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":127,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":95,"org.apache.commons.collections4.list.CursorableLinkedListTest.testEmptyListCompatibility":75,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":226,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":89,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":34,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":59,"org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure":79,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":184,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":35,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":122,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":111,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":25,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":61,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":155,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":93,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":90,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":194,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":172,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":149,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":57,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":58,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":54,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":99,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":55,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":62,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":180,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":197}}]
