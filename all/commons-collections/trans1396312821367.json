[{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"variableMapping":{"coll2":"coll","coll1":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}","position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:145","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"coll"},"name":"add","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:190","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[2,3,4,5,6],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.functors.ConstantTransformer) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.functors.ConstantTransformer:111","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap.org.apache.commons.collections4.map.LazySortedMap.lazySortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.MapUtils:1624","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.AbstractLinkedList:279","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":0},{"failures":[7,8,9],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-1},{"failures":[10],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()","position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-1},{"failures":[11],"variableMapping":{"curObject":"root","leastObject":"root"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl"},"status":-1},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,6,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.Bag) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:542","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1787","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.LazyList<E>(java.util.List<E> , org.apache.commons.collections4.Factory<? extends E>)","position":"org.apache.commons.collections4.list.LazyList:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>)).purge(java.lang.ref.Reference<?>)) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        } else {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        }\n        (this.int)--;\n        return ;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:399","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().next()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"last","leastObject":"last"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:889","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"status":-2},{"failures":[181,182],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-1},{"failures":[183],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"node must not be null!\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"Comparator ordering cannot be changed after the first comparison is performed\");\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:239","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((this.org.apache.commons.collections4.map.CompositeMap.MapMutator<K, V>) == null) {\n    throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\");\n} ","position":"org.apache.commons.collections4.map.CompositeMap:137","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll"},"name":"replace","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) == 0) {\n    return false;\n} ","position":"org.apache.commons.collections4.collection.CompositeCollection:293","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-2},{"failures":[184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.HashMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:759","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    return java.lang.Object.toString();\n} ","position":"org.apache.commons.collections4.MapUtils:128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-2},{"failures":[239,240,68],"binaryOperator":"int > int","name":"removeConditional","position":"org.apache.commons.collections4.list.GrowthList:123","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:466","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null ; org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>) {\n    if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.equals(java.util.Map.Entry<?, ?>)) {\n        org.apache.commons.collections4.map.StaticBucketMap.this.remove(org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.getKey());\n        return true;\n    } \n}","position":"org.apache.commons.collections4.map.StaticBucketMap:596","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.list.SetUniqueList:406","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"map":"map"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return this.java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (boolean) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[241,242,243,244,245,11,246,247,181,248,249,182],"variableMapping":{"canRemove":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.CollectionUtils:850","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:79","type":"CtReturnImpl"},"status":-2},{"failures":[250,251],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.LinkedMap:259","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<? super I, ? extends O>.get(I)","position":"org.apache.commons.collections4.functors.MapTransformer:74","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null) {\n    return (((\"Iterator[\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey())) + \"=\") + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) + \"]\";\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1200","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null","position":"org.apache.commons.collections4.map.LRUMap:305","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.toList(new org.apache.commons.collections4.iterators.EnumerationIterator<E>(java.util.Enumeration<? extends E>))","position":"org.apache.commons.collections4.EnumerationUtils:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.CollectionUtils:828","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-2},{"failures":[252,253],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.collection.CompositeCollection:296","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<E>()","position":"org.apache.commons.collections4.iterators.PushbackIterator:43","type":"CtNewClassImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().hashIndex(int, org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>[].int)","position":"org.apache.commons.collections4.map.MultiKeyMap:632","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":0},{"failures":[],"binaryOperator":"((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    final java.util.Map<?, ?> java.util.Map<?, ?> = ((java.util.Map<?, ?>)(java.lang.Object));\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Map<?, ?>.entrySet().iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return ((java.lang.Object[])(java.lang.Object))[int];\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Iterator<?>)(java.lang.Object));\n    while (java.util.Iterator<?>.hasNext()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Iterator<?>.next();\n        } \n        java.util.Iterator<?>.next();\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object instanceof java.util.Collection<?>) {\n    final java.util.Iterator<?> java.util.Iterator<?> = ((java.util.Collection<?>)(java.lang.Object)).iterator();\n    return org.apache.commons.collections4.CollectionUtils.org.apache.commons.collections4.CollectionUtils.get(java.util.Iterator<?>, int);\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1255","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Array.((E)(java.lang.reflect.Array.get(java.lang.Object, (int)++)))","position":"org.apache.commons.collections4.iterators.ArrayIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Map is empty\")","position":"org.apache.commons.collections4.map.AbstractLinkedMap:176","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.SingletonMap:419","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[] = java.lang.reflect.Array.((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)))","position":"org.apache.commons.collections4.set.CompositeSet:186","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-2},{"failures":[254,255,256,257,258,259,260,261,262,263,264,265],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:129","type":"CtIfImpl"},"status":-1},{"failures":[266,267],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:45","type":"mutation","return":"return false","status":-1},{"failures":[268],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.util.Map<E, ? super V>.size()","position":"org.apache.commons.collections4.set.MapBackedSet:117","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"NodeList must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:783","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[269],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[270,271,272,273,274,275,276,277],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Map.Entry<?, ?> java.util.Map.Entry<?, ?> = ((java.util.Map.Entry<?, ?>)(java.lang.Object))","position":"org.apache.commons.collections4.map.StaticBucketMap:470","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-2},{"failures":[278,279,280,281],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.DefaultedMap:193","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends I> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> ? org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> : org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:546","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"V V = ((V)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2407","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[282],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Key collision adding Map to CompositeMap\")","position":"org.apache.commons.collections4.map.CompositeMap:138","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    return org.apache.commons.collections4.trie.KeyAnalyzer.int;\n} ","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:105","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.getValue()","position":"org.apache.commons.collections4.list.AbstractLinkedList:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEmpty()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:201","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final E E = org.apache.commons.collections4.list.AbstractLinkedList<E>.remove((int + (int)))","position":"org.apache.commons.collections4.list.AbstractLinkedList:991","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[283,284,285,286,287,288,0,289,290,291,292,293,294,295,296,297,298,299],"variableMapping":{"this":"this","object":"lock"},"name":"replace","transplant":{"sourceCode":"return (java.lang.Object == org.apache.commons.collections4.collection.SynchronizedCollection<E>) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.SynchronizedCollection:198","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-1},{"failures":[300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381],"variableMapping":{"this":"this","key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"set":"sub"},"name":"add","transplant":{"sourceCode":"return java.util.SortedSet<E>","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : java.util.Collection<? extends E>) {\n    boolean |= org.apache.commons.collections4.set.ListOrderedSet<E>.add(E);\n}","position":"org.apache.commons.collections4.set.ListOrderedSet:204","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += org.apache.commons.collections4.list.TreeList.AVLNode<E>.int","position":"org.apache.commons.collections4.list.TreeList:886","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl"},"status":-2},{"failures":[283,286,289,382,383,384,385,386,387,388,389,299,390,391],"variableMapping":{"this":"this","object":"lock"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[392,393,394,395,396,397,398,399,400,401,402,403],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:784","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":260,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":117,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":362,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":253,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":387,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_removeByIndex":335,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":94,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_setByIndex":334,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":45,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":341,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":272,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":204,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":21,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":271,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAddAll":4,"org.apache.commons.collections4.collection.TransformedCollectionTest.testObjectEqualsSelf":38,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":190,"org.apache.commons.collections4.list.SetUniqueListTest.testEmptyListCompatibility":46,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":77,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicate":7,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testObjectEqualsSelf":40,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":166,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":277,"org.apache.commons.collections4.list.GrowthListTest.testFullListCompatibility":76,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":254,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":275,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRetainAll":351,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":191,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":294,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":389,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":402,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetContains2":364,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":392,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":343,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":121,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":213,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":167,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":211,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":233,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":256,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":172,"org.apache.commons.collections4.set.ListOrderedSet2Test.testObjectEqualsSelf":26,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":140,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":48,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":30,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":208,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":78,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":357,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":164,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":247,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":138,"org.apache.commons.collections4.list.UnmodifiableListTest.testSerializeDeserializeThenCompare":148,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":279,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":221,"org.apache.commons.collections4.map.MultiValueMapTest.testFullMapCompatibility":379,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":280,"org.apache.commons.collections4.set.TransformedSetTest.testSerializeDeserializeThenCompare":13,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":173,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":181,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":68,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiInverse":307,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":226,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":152,"org.apache.commons.collections4.map.ListOrderedMapTest.testPut_intObjectObject":331,"org.apache.commons.collections4.collection.IndexedCollectionTest.testObjectEqualsSelf":39,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":383,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":399,"org.apache.commons.collections4.list.TransformedListTest.testEmptyListCompatibility":153,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":55,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":182,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":225,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":199,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":234,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":159,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":224,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":90,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":395,"org.apache.commons.collections4.map.ListOrderedMap2Test.testFailFastValues":354,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":344,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":290,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":329,"org.apache.commons.collections4.TransformerUtilsTest.testMapTransformer":251,"org.apache.commons.collections4.CollectionUtilsTest.filterInverse":9,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":237,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemove2":349,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":66,"org.apache.commons.collections4.MapUtilsTest.testIterableMap":301,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":80,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":42,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":118,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":257,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":323,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":403,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":371,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":287,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":377,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":111,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":245,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":137,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":212,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":130,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":216,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":298,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":91,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":347,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":235,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":92,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":220,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":321,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":252,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":293,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":127,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":98,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":119,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":276,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":355,"org.apache.commons.collections4.set.PredicatedSetTest.testObjectEqualsSelf":20,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":342,"org.apache.commons.collections4.queue.TransformedQueueTest.testObjectEqualsSelf":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":283,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":346,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":145,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":24,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiKeySetValuesOrder":308,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":162,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":151,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":261,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":101,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":325,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":396,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":210,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":65,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":278,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":394,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":370,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSerializeDeserializeThenCompare":25,"org.apache.commons.collections4.set.ListOrderedSetTest.testObjectEqualsSelf":35,"org.apache.commons.collections4.list.PredicatedListTest.testEmptyListCompatibility":110,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":400,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":128,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":168,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":386,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":10,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":297,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":368,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":267,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":388,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":70,"org.apache.commons.collections4.list.SetUniqueListTest.testObjectEqualsSelf":64,"org.apache.commons.collections4.set.UnmodifiableSetTest.testObjectEqualsSelf":17,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":158,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSerializeDeserializeThenCompare":22,"org.apache.commons.collections4.map.MultiValueMapTest.testGetCollection":378,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":115,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKeyInverse":310,"org.apache.commons.collections4.map.ListOrderedMapTest.testRemoveByIndex":337,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":60,"org.apache.commons.collections4.collection.IndexedCollectionTest.testEnsureDuplicateObjectsCauseException":2,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":197,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":96,"org.apache.commons.collections4.list.UnmodifiableListTest.testEmptyListCompatibility":136,"org.apache.commons.collections4.list.GrowthListTest.testObjectEqualsSelf":89,"org.apache.commons.collections4.list.GrowthListTest.testEmptyListCompatibility":67,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":0,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":269,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":189,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":47,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":296,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKeyInverse":314,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":222,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemoveAll":366,"org.apache.commons.collections4.list.UnmodifiableListTest.testFullListCompatibility":141,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectEqualsSelf":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":320,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":71,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":187,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":188,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":202,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":6,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":203,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":215,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":58,"org.apache.commons.collections4.set.PredicatedSetTest.testSerializeDeserializeThenCompare":19,"org.apache.commons.collections4.list.PredicatedListTest.testObjectEqualsSelf":133,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":274,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRetainAll":367,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":227,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":284,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetContains2":348,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":74,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":57,"org.apache.commons.collections4.list.UnmodifiableListTest.testObjectEqualsSelf":150,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":44,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":156,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking2":240,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":129,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":401,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSerializeDeserializeThenCompare":28,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":193,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":327,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":169,"org.apache.commons.collections4.set.TransformedSetTest.testObjectEqualsSelf":14,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":126,"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIteratorTest.testFullMapIterator":381,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":123,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":113,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":230,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":360,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testObjectEqualsSelf":36,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":154,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiHeadMapContains":302,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":195,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":259,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":147,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":295,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":15,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiSubMapContains":304,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":157,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":160,"org.apache.commons.collections4.PredicateUtilsTest.testTransformedPredicate":250,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":328,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":390,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":125,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiGetKey":309,"org.apache.commons.collections4.list.GrowthListTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":286,"org.apache.commons.collections4.map.ListOrderedMapTest.testValueList_getByIndex":333,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":363,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":194,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testObjectEqualsSelf":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":339,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":356,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":229,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":373,"org.apache.commons.collections4.list.TransformedListTest.testObjectEqualsSelf":176,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":288,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":56,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndex":332,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":53,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":263,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":397,"org.apache.commons.collections4.map.ListOrderedMapTest.testEntrySetRemoveAll":350,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":228,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":317,"org.apache.commons.collections4.set.ListOrderedSetTest.testSerializeDeserializeThenCompare":34,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":83,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":255,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":175,"org.apache.commons.collections4.set.TransformedSortedSetTest.testObjectEqualsSelf":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testGetValueByIndex":336,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":398,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":82,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testObjectEqualsSelf":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiKeySetValuesOrder":316,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":132,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":142,"org.apache.commons.collections4.map.CompositeMapTest.testAddComposited":282,"org.apache.commons.collections4.CollectionUtilsTest.emptyCollection":180,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":382,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":384,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":209,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":324,"org.apache.commons.collections4.collection.IndexedCollectionTest.testAddedObjectsCanBeRetrievedByKey":3,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":248,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":258,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":100,"org.apache.commons.collections4.MapUtilsTest.testIterableSortedMap":300,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":108,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":318,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionAdd":5,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":219,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectHashCodeEqualsContract":380,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":69,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":326,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":114,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":273,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":88,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":170,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":184,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":249,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":246,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":18,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":299,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":266,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKeyInverse":306,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":174,"org.apache.commons.collections4.map.ListOrderedMap2Test.testGetValueByIndex":352,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":41,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":102,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":232,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":134,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndexBoundsChecking":239,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":183,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEntrySetRemove2":365,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiInverse":311,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":385,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":262,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":146,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiGetKey":313,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":217,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":104,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":244,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":236,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":285,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":79,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":49,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":59,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":205,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":270,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":319,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":345,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":99,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":186,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":161,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiTailMapContains":303,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":374,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":218,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":361,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":73,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":393,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":105,"org.apache.commons.collections4.map.ListOrderedMap2Test.testRemoveByIndex":353,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":391,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":85,"org.apache.commons.collections4.map.ListOrderedMapTest.testSetValueByIndex":330,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":11,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":223,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":81,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":93,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":12,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":72,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":106,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":135,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":358,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":192,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":84,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":63,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":95,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testObjectEqualsSelf":178,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":241,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":242,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":61,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":243,"org.apache.commons.collections4.map.MultiKeyMapTest.testClone":375,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":116,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":143,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testBidiInverse":315,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":359,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":200,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":27,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":165,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":292,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":43,"org.apache.commons.collections4.queue.PredicatedQueueTest.testObjectEqualsSelf":177,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":120,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":103,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":163,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":198,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":265,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":1,"org.apache.commons.collections4.PredicateUtilsTest.testNotPredicateEx":8,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":231,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":264,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":54,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testBidiKeySetValuesOrder":312,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":206,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":238,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":196,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":369,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":340,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":124,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":86,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSerializeDeserializeThenCompare":16,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":289,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":207,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":122,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":75,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":214,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":149,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":171,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":372,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":112,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testBidiGetKey":305,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":33,"org.apache.commons.collections4.map.ListOrderedMapTest.testFailFastValues":338,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSerializeDeserializeThenCompare":31,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":376}}]
