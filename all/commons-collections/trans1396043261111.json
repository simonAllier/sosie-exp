[{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractHashedMap.EntrySetIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractHashedMap:826","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MultiMap<K, C>.remove(org.apache.commons.collections4.Transformer<C, K>.transform(C))","position":"org.apache.commons.collections4.collection.IndexedCollection:255","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.RangeEntryMap(K , K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:871","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false","position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior))","name":"math","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:242","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()","position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super K, ? extends V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer must not be null\");\n} ","position":"org.apache.commons.collections4.map.DefaultedMap:128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-1},{"failures":[11],"variableMapping":{"valid":"validForUpdate"},"name":"add","transplant":{"sourceCode":"if (!(this.boolean)) {\n    throw new java.util.ConcurrentModificationException(\"Cursor closed\");\n} ","position":"org.apache.commons.collections4.list.CursorableLinkedList:547","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The map size must be 0 or 1\")","position":"org.apache.commons.collections4.map.SingletonMap:276","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1576","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (this.java.util.ListIterator<E>.hasNext()) {\n        E = this.java.util.ListIterator<E>.next();\n    }\n    this.java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-2},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"curObject":"result","leastObject":"result"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = java.util.Map.Entry<?, ?>.getKey()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:673","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"lock"},"name":"add","transplant":{"sourceCode":"/** \n * The lock object, which also includes a count of the nodes in this lock.\n */\nprivate static final class Lock {\n    public int size;\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:486","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.KeySet.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1469","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractSortedBagDecorator<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.CollectionSortedBag:164","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[13,14,15],"variableMapping":{"maximumCacheSize":"index"},"name":"replace","transplant":{"sourceCode":"this.int = int","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:114","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.Predicate","position":"org.apache.commons.collections4.functors.NotNullPredicate:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-2},{"failures":[16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.lang.Object instanceof org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:414","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"root","leastObject":"root"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[37,38,39],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1294","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"invalid lookup: \" + K))","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1088","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size())) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:511","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[40,41,42,43,44,45,46,47,48,49,50,51,52,53],"variableMapping":{"this":"this","object":"lock"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:170","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{"canRemove":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:712","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.list.AbstractLinkedList.Node<E> org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.getNode(int, true)","position":"org.apache.commons.collections4.list.AbstractLinkedList:220","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().headMap(K)","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.StringBuilder.append(\", \")","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1393","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.Iterable<T> != null) && (C != null)) {\n    for (final T T : java.lang.Iterable<T>) {\n        C.execute(T);\n    }\n} ","position":"org.apache.commons.collections4.CollectionUtils:664","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"object"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object instanceof org.apache.commons.collections4.CollectionUtils.EquatorWrapper)) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:584","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    ((org.apache.commons.collections4.list.CursorableLinkedList<E>)(org.apache.commons.collections4.list.AbstractLinkedList<E>)).unregisterCursor(this);\n    boolean = false;\n} ","position":"org.apache.commons.collections4.list.CursorableLinkedList:561","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iPredicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<? super T>","position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,54,3,4,55,56,5,6,57,7,58,8,59,9,10],"variableMapping":{"root":"root","transformer":"transformer","this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(this.org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(this.E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:90","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.TransformedSortedMap:97","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T == null ? org.apache.commons.collections4.functors.DefaultEquator.int : T.hashCode()","position":"org.apache.commons.collections4.functors.DefaultEquator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"{}\"","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return this.java.util.ListIterator<? extends E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[60,61,62,63,64,65,66,67,68,69,70,71],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int -= int","position":"org.apache.commons.collections4.bag.AbstractMapBag:326","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.TransformedSortedMap:128","type":"CtReturnImpl"},"status":-2},{"failures":[72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"object":"lock"},"name":"replace","transplant":{"sourceCode":"if (null == java.lang.Object) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:336","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.keyvalue.MultiKey<K>.this(((K[])(new java.lang.Object[]{ K , K })), false)","position":"org.apache.commons.collections4.keyvalue.MultiKey:67","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[277,278,279,280,281,282],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[283],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:440","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)) {\n    V = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object);\n    java.util.List<K>.remove(java.lang.Object);\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:268","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<E>()","position":"org.apache.commons.collections4.iterators.PushbackIterator:43","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == null) {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue()) == null) {\n            return true;\n        } \n    }\n} else {\n    for (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> != (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) ; org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) {\n        if (org.apache.commons.collections4.map.AbstractHashedMap<K, V>.isEqualValue(java.lang.Object, org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue())) {\n            return true;\n        } \n    }\n}","position":"org.apache.commons.collections4.map.AbstractLinkedMap:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.StaticBucketMap:295","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[284],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-1},{"failures":[285],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()]))) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    } else {\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n                org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            } \n        }\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:883","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.iterators.LoopingIterator:122","type":"CtReturnImpl"},"status":-2},{"failures":[286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329],"variableMapping":{"in":"in"},"name":"add","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < int ; int++) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E E = ((E)(java.io.ObjectInputStream.readObject()));\n    final int int = java.io.ObjectInputStream.readInt();\n    java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.put(E, new org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger(int));\n    int += int;\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:520","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.comparators.NullComparator<E>.this(org.apache.commons.collections4.ComparatorUtils.java.util.Comparator, boolean)","position":"org.apache.commons.collections4.comparators.NullComparator:90","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * The inverse map implementation.\n */\nclass Inverse implements org.apache.commons.collections4.OrderedBidiMap<V, K> {\n    /** \n     * Store the keySet once created.\n     */\nprivate java.util.Set<V> inverseKeySet;\n\n    /** \n     * Store the valuesSet once created.\n     */\nprivate java.util.Set<K> inverseValuesSet;\n\n    /** \n     * Store the entrySet once created.\n     */\nprivate java.util.Set<java.util.Map.Entry<V, K>> inverseEntrySet;\n\n    public int size() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size();\n    }\n\n    public boolean isEmpty() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty();\n    }\n\n    public K get(final java.lang.Object key) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.getKey(java.lang.Object);\n    }\n\n    public V getKey(final java.lang.Object value) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object);\n    }\n\n    public boolean containsKey(final java.lang.Object key) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object);\n    }\n\n    public boolean containsValue(final java.lang.Object value) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object);\n    }\n\n    public V firstKey() {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n            throw new java.util.NoSuchElementException(\"Map is empty\");\n        } \n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.this.org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getValue();\n    }\n\n    public V lastKey() {\n        if ((org.apache.commons.collections4.bidimap.TreeBidiMap.this.int) == 0) {\n            throw new java.util.NoSuchElementException(\"Map is empty\");\n        } \n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.greatestNode(org.apache.commons.collections4.bidimap.TreeBidiMap.this.org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()], org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getValue();\n    }\n\n    public V nextKey(final V key) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(V);\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.nextGreater(org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(V, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue();\n    }\n\n    public V previousKey(final V key) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkKey(V);\n        final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.this.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(V, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == null ? null : org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue();\n    }\n\n    public K put(final V key, final K value) {\n        final K K = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse.get(V);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.this.doPut(K, V);\n        return K;\n    }\n\n    public void putAll(final java.util.Map<? extends V, ? extends K> map) {\n        for (final java.util.Map.Entry<? extends V, ? extends K> java.util.Map.Entry<? extends V, ? extends K> : java.util.Map<? extends V, ? extends K>.entrySet()) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse.put(java.util.Map.Entry<? extends V, ? extends K>.getKey(), java.util.Map.Entry<? extends V, ? extends K>.getValue());\n        }\n    }\n\n    public K remove(final java.lang.Object key) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(java.lang.Object);\n    }\n\n    public V removeValue(final java.lang.Object value) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object);\n    }\n\n    public void clear() {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear();\n    }\n\n    public java.util.Set<V> keySet() {\n        if ((java.util.Set<V>) == null) {\n            java.util.Set<V> = new org.apache.commons.collections4.bidimap.TreeBidiMap.ValueView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        return java.util.Set<V>;\n    }\n\n    public java.util.Set<K> values() {\n        if ((java.util.Set<K>) == null) {\n            java.util.Set<K> = new org.apache.commons.collections4.bidimap.TreeBidiMap.KeyView(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        return java.util.Set<K>;\n    }\n\n    public java.util.Set<java.util.Map.Entry<V, K>> entrySet() {\n        if ((java.util.Set<java.util.Map.Entry<V, K>>) == null) {\n            java.util.Set<java.util.Map.Entry<V, K>> = new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseEntryView();\n        } \n        return java.util.Set<java.util.Map.Entry<V, K>>;\n    }\n\n    public org.apache.commons.collections4.OrderedMapIterator<V, K> mapIterator() {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.Inverse.isEmpty()) {\n            return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<V,K>emptyOrderedMapIterator();\n        } \n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    public org.apache.commons.collections4.OrderedBidiMap<K, V> inverseBidiMap() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this;\n    }\n\n    @java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doEquals(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doHashCode(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap.this.doToString(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2040","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())","position":"org.apache.commons.collections4.map.AbstractHashedMap:326","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","lock":"lock"},"name":"add","transplant":{"sourceCode":"synchronized(this.java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.StaticBucketMap:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"class ValueView extends org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.View<V> {\n    /** \n     * Create a new TreeBidiMap.ValueView.\n     */\npublic ValueView(final org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement orderType) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.View<V>.super(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<V> iterator() {\n        return new org.apache.commons.collections4.bidimap.TreeBidiMap.InverseViewMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object obj) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.checkNonNullComparable(java.lang.Object, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(lookupValue(java.lang.Object)) != null;\n    }\n\n    @java.lang.Override\n    public boolean remove(final java.lang.Object o) {\n        return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(doRemoveValue(java.lang.Object)) != null;\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1496","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"o1":"element","c":"index","o2":"element"},"name":"add","transplant":{"sourceCode":"return int < 0 ? E : E","position":"org.apache.commons.collections4.ComparatorUtils:220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-2},{"failures":[372],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((int) == int) && (java.lang.Object.equals(K))) {\n    return V;\n} ","position":"org.apache.commons.collections4.map.Flat3Map:156","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Map<K, V>.keySet())","position":"org.apache.commons.collections4.map.FixedSizeSortedMap:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"V = V","position":"org.apache.commons.collections4.map.AbstractReferenceMap:825","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove()","position":"org.apache.commons.collections4.iterators.IteratorChain:224","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":125,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":66,"org.apache.commons.collections4.bag.TransformedBagTest.testSimpleSerialization":289,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":152,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":170,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":151,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":238,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":144,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":166,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":208,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":360,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":200,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":215,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":115,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":53,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":147,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":371,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":21,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":59,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":25,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":221,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":230,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":113,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":223,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":29,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":247,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":246,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":245,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":342,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":150,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":261,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":266,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":268,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":267,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":127,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":128,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":201,"org.apache.commons.collections4.bag.PredicatedBagTest.testEmptyBagCompatibility":310,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":60,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":65,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":124,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":239,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":167,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":278,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":41,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":17,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":340,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":137,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":273,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":330,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":293,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":301,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":116,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":213,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":190,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":43,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":155,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":234,"org.apache.commons.collections4.bag.TreeBagTest.testOrdering":353,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":139,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":244,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":243,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":242,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSimpleSerialization":321,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":173,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":76,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":62,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":236,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":249,"org.apache.commons.collections4.bag.PredicatedBagTest.testFullBagCompatibility":311,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":130,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":79,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":185,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":24,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":256,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":26,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":228,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":105,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":255,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testEmptyBagCompatibility":318,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":33,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":7,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":270,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":30,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":138,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":163,"org.apache.commons.collections4.bag.CollectionBagTest.testEmptyBagCompatibility":322,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":69,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":335,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":240,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":18,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":91,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":279,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":14,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":92,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":207,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":227,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":61,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":49,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":253,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":354,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":337,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testFullBagCompatibility":307,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":10,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":104,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":103,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":336,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":102,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":122,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":20,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":205,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":217,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":80,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":229,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":356,"org.apache.commons.collections4.bag.CollectionBagTest.testSimpleSerialization":325,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":333,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testFullBagCompatibility":327,"org.apache.commons.collections4.bag.HashBagTest.testSerializeDeserializeThenCompare":316,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":176,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":48,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testEmptyBagCompatibility":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":50,"org.apache.commons.collections4.bag.TreeBagTest.testFullBagCompatibility":303,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":344,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":72,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":161,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":78,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":64,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":235,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":350,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":179,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":178,"org.apache.commons.collections4.bag.TransformedBagTest.testFullBagCompatibility":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":204,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":281,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":89,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":343,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":282,"org.apache.commons.collections4.bag.TransformedBagTest.testEmptyBagCompatibility":286,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":224,"org.apache.commons.collections4.bag.TransformedBagTest.testSerializeDeserializeThenCompare":288,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":198,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":199,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":345,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":63,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":309,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":172,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":117,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":292,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":184,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":341,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":13,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testFullBagCompatibility":291,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":9,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":5,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":120,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":274,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testEmptyBagCompatibility":290,"org.apache.commons.collections4.bag.CollectionBagTest.testFullBagCompatibility":323,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":328,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":209,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":38,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":271,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":37,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":226,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":233,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":298,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":362,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":283,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":214,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":251,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":99,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":100,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":101,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":305,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":171,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":363,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":210,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":148,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":51,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":68,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":296,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":96,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFirstKey":372,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":90,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":12,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":27,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":365,"org.apache.commons.collections4.bag.TreeBagTest.testEmptyBagCompatibility":302,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":145,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":11,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":299,"org.apache.commons.collections4.bag.CollectionBagTest.testSerializeDeserializeThenCompare":324,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":133,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":108,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":114,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":156,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":34,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":348,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":19,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":47,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":94,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":218,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":259,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":304,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":258,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testEmptyBagCompatibility":294,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":220,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":257,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":272,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":219,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":364,"org.apache.commons.collections4.PredicateUtilsTest.testExceptionPredicate":284,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":110,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":164,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":349,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":111,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":154,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":153,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":174,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":16,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":189,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":241,"org.apache.commons.collections4.bag.PredicatedBagTest.testSimpleSerialization":313,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":331,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":352,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testFullBagCompatibility":295,"org.apache.commons.collections4.bag.HashBagTest.testEmptyBagCompatibility":314,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":67,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":297,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":131,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":193,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":56,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":180,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":181,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":280,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":28,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":334,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":225,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":269,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":357,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testFullBagCompatibility":319,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":351,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":277,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":232,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":332,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":165,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":82,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":84,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":366,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":83,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":196,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":197,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":300,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":369,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":212,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":248,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":162,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":169,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":192,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":36,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":119,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":338,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":191,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":134,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":52,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":142,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":129,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":143,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":141,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":265,"org.apache.commons.collections4.bag.HashBagTest.testSimpleSerialization":317,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":368,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":87,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":85,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":86,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":81,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testEmptyBagCompatibility":306,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":71,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":275,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":177,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":183,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":276,"org.apache.commons.collections4.bag.HashBagTest.testFullBagCompatibility":315,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":188,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":70,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":107,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":31,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":347,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":250,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":206,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":211,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":35,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":109,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":57,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":135,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":160,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":264,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":254,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":358,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":112,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":285,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":361,"org.apache.commons.collections4.bag.PredicatedBagTest.testSerializeDeserializeThenCompare":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":359,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":46,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":186,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":329,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":237,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":252,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":58,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":95,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":231,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":346,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":55,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testSerializeDeserializeThenCompare":320,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":168,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":370,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":202}}]
