[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return (boolean) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonIterator:75","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[0,1],"binaryOperator":"((int - int) + 1)","name":"math","position":"org.apache.commons.collections4.list.GrowthList:184","type":"mutation","status":-1},{"failures":[2,3,4,5,0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:751","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated()","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.MultiKeyMap:890","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.TransformedSortedMap:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.map.LinkedMap:254","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.Flat3Map:918","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","position":"org.apache.commons.collections4.map.AbstractReferenceMap:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:568","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if ((!boolean) && (int == (int))) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"));\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:542","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-2},{"failures":[89],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.lang.Class<T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Class to instantiate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.InstantiateFactory:58","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * A {@link Trie} is a set of {@link TrieEntry} nodes.\n */\nprotected static class TrieEntry<K, V> extends org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V> {\n    private static final long serialVersionUID = 4596023148184140013L;\n\n    /** \n     * The index this entry is comparing.\n     */\nprotected int bitIndex;\n\n    /** \n     * The parent of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> parent;\n\n    /** \n     * The left child of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> left;\n\n    /** \n     * The right child of this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> right;\n\n    /** \n     * The entry who uplinks to this entry.\n     */\nprotected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> predecessor;\n\n    public TrieEntry(final K key ,final V value ,final int bitIndex) {\n        org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.super(K, V);\n        this.int = int;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = this;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = this;\n    }\n\n    /** \n     * Whether or not the entry is storing a key.\n     * Only the root can potentially be empty, all other\n     * nodes must have a key.\n     */\npublic boolean isEmpty() {\n        return (K) == null;\n    }\n\n    /** \n     * Neither the left nor right child is a loopback.\n     */\npublic boolean isInternalNode() {\n        return ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != this) && ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != this);\n    }\n\n    /** \n     * Either the left or right child is a loopback.\n     */\npublic boolean isExternalNode() {\n        return !org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.(isInternalNode());\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        final java.lang.StringBuilder java.lang.StringBuilder = new java.lang.StringBuilder();\n        if ((int) == (-1)) {\n            java.lang.StringBuilder.append(\"RootEntry(\");\n        } else {\n            java.lang.StringBuilder.append(\"Entry(\");\n        }\n        java.lang.StringBuilder.append(\"key=\").append(org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getKey()).append(\" [\").append(int).append(\"], \");\n        java.lang.StringBuilder.append(\"value=\").append(org.apache.commons.collections4.trie.AbstractBitwiseTrie.BasicEntry<K, V>.getValue()).append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"parent=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"parent=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"parent=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"left=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"left=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"left=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"right=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"right=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } else {\n            java.lang.StringBuilder.append(\"right=\").append(\"null\");\n        }\n        java.lang.StringBuilder.append(\", \");\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n            if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n                java.lang.StringBuilder.append(\"predecessor=\").append(\"ROOT\");\n            } else {\n                java.lang.StringBuilder.append(\"predecessor=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n            }\n        } \n        java.lang.StringBuilder.append(\")\");\n        return java.lang.StringBuilder.toString();\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1279","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"object","key":"object"},"name":"add","transplant":{"sourceCode":"return (java.lang.Object == null ? 0 : java.lang.Object.hashCode()) ^ (java.lang.Object == null ? 0 : java.lang.Object.hashCode())","position":"org.apache.commons.collections4.map.AbstractReferenceMap:439","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.synchronizedSet(java.util.Set<E>)","position":"org.apache.commons.collections4.SetUtils:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"V.equals(java.util.Map.Entry<?, ?>.getValue())","position":"org.apache.commons.collections4.map.StaticBucketMap:473","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"key":"key"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PeekingIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PeekingIterator<E> org.apache.commons.collections4.iterators.PeekingIterator<E> = ((org.apache.commons.collections4.iterators.PeekingIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PeekingIterator<E>;\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:62","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.KeySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:351","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:225","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (this == java.lang.Object) {\n    return true;\n} ","position":"org.apache.commons.collections4.comparators.ComparatorChain:333","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.FalsePredicate.org.apache.commons.collections4.Predicate","position":"org.apache.commons.collections4.functors.FalsePredicate:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.FixedSizeList:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.EnumerationIterator<java.lang.Object>(((java.util.Dictionary<?, ?>)(java.lang.Object)).elements())","position":"org.apache.commons.collections4.IteratorUtils:1078","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[90,91,92,93,94,95,96,97],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((java.util.Iterator<? extends E>) != null) {\n    org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:181","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[98],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Key must not be null\")","position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.AbstractLinkedList:724","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[99,100,101,102,103,104],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"for (final java.util.Iterator<K> java.util.Iterator<K> = org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.keySet().iterator() ; java.util.Iterator<K>.hasNext() ; ) {\n    java.util.Iterator<K>.next();\n    java.util.Iterator<K>.remove();\n}","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:248","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().putAll(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:110","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return java.util.Collection<?>.containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.SetUtils:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-2},{"failures":[105,106,107,108,89,109,110,111],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.getValue()","position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:83","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.OrderedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.buildScript(org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd(), int, ((org.apache.commons.collections4.sequence.SequencesComparator.Snake.getEnd()) - (org.apache.commons.collections4.sequence.SequencesComparator.Snake.getDiag())), int, org.apache.commons.collections4.sequence.EditScript<T>)","position":"org.apache.commons.collections4.sequence.SequencesComparator:287","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"ComparatorChains must contain at least one Comparator\")","position":"org.apache.commons.collections4.comparators.ComparatorChain:252","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[112],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-1},{"failures":[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,106,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:91","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"slotFilled":"chainExhausted"},"name":"add","transplant":{"sourceCode":"if (this.boolean) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != null) {\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} else {\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:96","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (boolean) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) {\n        if (boolean) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1137","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterIterator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.Values()","position":"org.apache.commons.collections4.map.StaticBucketMap:360","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, 0)","position":"org.apache.commons.collections4.iterators.ArrayIterator:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.rangeCheck(int, ((int) + 1))","position":"org.apache.commons.collections4.list.AbstractLinkedList:979","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Map<K, V>.entrySet().iterator()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:151","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.util.Map<E, ? super V>.size()) != int","position":"org.apache.commons.collections4.set.MapBackedSet:133","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.TransformIterator<I, O>.transform(java.util.Iterator<? extends I>.next())","position":"org.apache.commons.collections4.iterators.TransformIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[185,186,187],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<K, V>.V = V","position":"org.apache.commons.collections4.map.Flat3Map:697","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int) > 1) {\n    (org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger.int)--;\n} else {\n    java.util.Iterator<java.util.Map.Entry<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>>.remove();\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:223","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \")","name":"math","position":"org.apache.commons.collections4.iterators.ArrayIterator:115","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.IteratorChain<E>","position":"org.apache.commons.collections4.collection.CompositeCollection:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:83","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[188,189],"binaryOperator":"(\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1))","name":"removeConditional","position":"org.apache.commons.collections4.MapUtils:1012","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LazyMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazyMap:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[190,191],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))","position":"org.apache.commons.collections4.functors.NonePredicate:55","type":"CtReturnImpl"},"status":-1},{"failures":[192,193,194,195,196,197,198,199,200],"variableMapping":{"canRemove":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"this.boolean = false","position":"org.apache.commons.collections4.bag.AbstractMapBag:229","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"default :\n    throw new java.lang.IllegalArgumentException();","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1861","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2002","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.PredicatedCollection<E>.validate(E)","position":"org.apache.commons.collections4.bag.PredicatedBag:93","type":"CtInvocationImpl"},"status":-2},{"failures":[185,186,187],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:881","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return 0.0F","position":"org.apache.commons.collections4.MapUtils:680","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.ListOrderedMap:601","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.map.ListOrderedMap<K, V>.(indexOf(java.util.Map.Entry<? extends K, ? extends V>.getKey())) + 1","position":"org.apache.commons.collections4.map.ListOrderedMap:260","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[192,201,193,194,195,202,196,203,197,198,199,200],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int == 1) {\n    return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>));\n} ","position":"org.apache.commons.collections4.functors.ForClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"status":-2},{"failures":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.iterator()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:377","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Byte java.lang.Byte = org.apache.commons.collections4.MapUtils.org.apache.commons.collections4.MapUtils.getByte(java.util.Map<? super K, ?>, K)","position":"org.apache.commons.collections4.MapUtils:606","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.unmodifiableSet(java.util.Set<K>)","position":"org.apache.commons.collections4.map.FixedSizeMap:153","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[259,260,261,262,263,264,265,266,267,268,269,270],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E == null) {\n    E = org.apache.commons.collections4.Factory<? extends E>.create();\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"currentValue"},"name":"add","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, ?>.java.util.Map<K, ?>.get(K)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:469","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerClosure.org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().remove()","position":"org.apache.commons.collections4.queue.PredicatedQueue:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"K = null","position":"org.apache.commons.collections4.map.Flat3Map:472","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.List<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.list.AbstractListDecorator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsValue(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2066","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[271],"binaryOperator":"int < (int)","name":"negateConditional","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[204,205,206,207,208,209,210,211,212,213,214,215,216,217,272,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,273,245,246,247,248,249,250,251,252,253,254,255,256,257,258],"binaryOperator":"int > int","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":196,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":151,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":113,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":21,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":167,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":218,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":271,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":13,"org.apache.commons.collections4.map.CompositeMapTest.testMapClear":128,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":1,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":65,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":0,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":124,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":23,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":176,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":60,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":83,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":64,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":266,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":42,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":103,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsContract":140,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":146,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":235,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":77,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":111,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":264,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":6,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":269,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":212,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":40,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":71,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":158,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":105,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":209,"org.apache.commons.collections4.set.CompositeSetTest.testObjectEqualsSelf":182,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":26,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":221,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":63,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":101,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":49,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":192,"org.apache.commons.collections4.map.CompositeMapTest.testObjectEqualsSelf":139,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":202,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":210,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":177,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":54,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":268,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":52,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":102,"org.apache.commons.collections4.map.CompositeMapTest.testObjectHashCodeEqualsSelfHashCode":141,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":244,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":162,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":242,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":181,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":224,"org.apache.commons.collections4.set.CompositeSetTest.testAddComposited":164,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":193,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":138,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":260,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":213,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":46,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":68,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":239,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":27,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":95,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":44,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":220,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":258,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":252,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":261,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":82,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":96,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":11,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":79,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":191,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":168,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":198,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":127,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":204,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":219,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":170,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":232,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":163,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":160,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":201,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":112,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":114,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":81,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":25,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":31,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":120,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":256,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":126,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":59,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":130,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":225,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":230,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":107,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":172,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":3,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":47,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":255,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":149,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":267,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":240,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":109,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":131,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":110,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":144,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":171,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":97,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":115,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":195,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":74,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":173,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":228,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":250,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":12,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":18,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":154,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":9,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":36,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":66,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":29,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":108,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":58,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":62,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":194,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":169,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":100,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":152,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":94,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":15,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":45,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":190,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":93,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":39,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":57,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":223,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":37,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":55,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":175,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":243,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":5,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":247,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":155,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking2":43,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":265,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":272,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":197,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":226,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":251,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":51,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":150,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":248,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":92,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":227,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove1":121,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove3":123,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemove2":122,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":7,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":75,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsSelfHashCode":184,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking2":73,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":85,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":145,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyIterator":161,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":236,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":56,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":69,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":205,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":50,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":249,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":22,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking2":20,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":33,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":203,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":137,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":262,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":254,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":30,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":76,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":19,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":241,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":8,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":38,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":98,"org.apache.commons.collections4.collection.CompositeCollectionTest.testIterator":148,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":78,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":263,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":133,"org.apache.commons.collections4.map.CompositeMapTest.testSerializeDeserializeThenCompare":142,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":157,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":211,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains3":118,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":147,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":32,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":88,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":104,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndexBoundsChecking":41,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":90,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":87,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":91,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains1":116,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetContains2":117,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":48,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":72,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":129,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":16,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":231,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":10,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":259,"org.apache.commons.collections4.map.CompositeMapTest.testMapGet":135,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":61,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":200,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicate":187,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":273,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":222,"org.apache.commons.collections4.MapUtilsTest.testVerbosePrintSelfReference":188,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":159,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":199,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":80,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":143,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":86,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":237,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionClear":174,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx4":185,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.PredicateUtilsTest.testAnyPredicateEx6":186,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":156,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":216,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":270,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndexBoundsChecking":70,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":119,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":215,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":165,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":166,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":106,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":35,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":208,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":179,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":153,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":238,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":67,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndexBoundsChecking":14,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":24,"org.apache.commons.collections4.MapUtilsTest.testDebugPrintSelfReference":189,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":245,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":89,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":253,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":136,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":17,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":53,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":206,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":207,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":233,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":34,"org.apache.commons.collections4.set.CompositeSetTest.testObjectHashCodeEqualsContract":183,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":234,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":180,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":246,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddReplacing":4,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":84}}]
