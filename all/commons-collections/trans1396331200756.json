[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[0],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final K K = java.util.Map.Entry<K, V> != null ? java.util.Map.Entry<K, V>.getKey() : null","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1893","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"(ancestor[\" + ((((org.apache.commons.collections4.ArrayStack<java.util.Map<?, ?>>.size()) - 1) - int) - 1))","name":"math","position":"org.apache.commons.collections4.MapUtils:1012","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator","slotFilled":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"return this.boolean ? true : this.java.util.Iterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.PeekingIterator:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"coll2":"coll","coll1":"coll"},"name":"add","transplant":{"sourceCode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}","position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.ArrayList<E>.add(E)","position":"org.apache.commons.collections4.ListUtils:131","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.keyvalue.AbstractKeyValue<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:88","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")","position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:41","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.SetUniqueList:247","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceStrength(1)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:88","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.collection.CompositeCollection:318","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (java.util.List<E>) != null","position":"org.apache.commons.collections4.iterators.PermutationIterator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(java.util.List<E>.isEmpty())","position":"org.apache.commons.collections4.iterators.LoopingListIterator:127","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:91","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final boolean boolean = org.apache.commons.collections4.bag.CollectionSortedBag<E>.add(java.util.Iterator<? extends E>.next(), 1);\n    boolean = boolean || boolean;\n}","position":"org.apache.commons.collections4.bag.CollectionSortedBag:111","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","lock":"lock","object":"lock"},"name":"add","transplant":{"sourceCode":"synchronized(this.java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") is the size of the list.\"))","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractHashedMap:1172","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((V)(java.lang.Object))","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-251737742649401930L","position":"org.apache.commons.collections4.bag.TransformedSortedBag:40","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:513","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.CompositeCollection.CollectionMutator<E>.addAll(this, java.util.List<java.util.Collection<E>>, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.CompositeCollection:280","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedBag:87","type":"CtReturnImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33,34],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1164","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:60","type":"CtReturnImpl"},"status":-1},{"failures":[35],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"key"},"name":"replace","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.MapTransformer<I, O>(java.util.Map<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.MapTransformer:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"mutation","status":-2},{"failures":[36,37,38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl"},"status":-1},{"failures":[39,40,41,42,43,44,45,46,47,48],"binaryOperator":"(int) - 1","name":"math","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"mutation","status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{"fromIndex":"index"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.TreeList.TreeListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.TreeList:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (boolean) {\n    final K K = org.apache.commons.collections4.MapIterator<K, V>.next();\n    final V V = org.apache.commons.collections4.MapIterator<K, V>.getValue();\n    java.lang.StringBuilder.append((K == this ? \"(this Map)\" : K)).append('=').append((V == this ? \"(this Map)\" : V));\n    boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext();\n    if (boolean) {\n        java.lang.StringBuilder.append(',').append(' ');\n    } \n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1373","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>) == null) {\n    org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V> = new org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>(this);\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:810","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.NullPointerException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.CollatingIterator:173","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":0},{"failures":[],"variableMapping":{"isLocked":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    this.boolean = true;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:202","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{"closure":"closure"},"name":"add","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-2},{"failures":[49,50,51,52,53,54,55,56,57,58,59,60],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:204","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"last":"entry"},"name":"replace","transplant":{"sourceCode":"return this.java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Equator must not be null\")","position":"org.apache.commons.collections4.ListUtils:552","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 1","position":"org.apache.commons.collections4.map.Flat3Map:495","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":-2},{"failures":[39,61,40,41,42,62,45,46,47,48],"variableMapping":{"flag":"previousObjectSet","removed":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Collection<?>.contains(java.lang.Object)) {\n    return true;\n} ","position":"org.apache.commons.collections4.CollectionUtils:412","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new java.util.HashSet<E>(this)","position":"org.apache.commons.collections4.set.CompositeSet:400","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.isSetValueChecking()) {\n    return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this);\n} ","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.LazyMap:169","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()))","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:59","type":"CtReturnImpl"},"status":-2},{"failures":[63],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.PredicatedCollection.org.apache.commons.collections4.collection.PredicatedCollection.predicatedCollection(java.util.Collection<C>, org.apache.commons.collections4.Predicate<? super C>)","position":"org.apache.commons.collections4.CollectionUtils:1751","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot use setValue() when the object being set is already in the map\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:671","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[32,34],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[64,65,66,67,68,69,70,71,72,73],"variableMapping":{"out":"out"},"name":"replace","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(null)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1005","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.bag.TreeBag:117","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.int = --(this.int)","position":"org.apache.commons.collections4.iterators.ArrayListIterator:119","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:842","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(org.apache.commons.collections4.map.StaticBucketMap.Lock[][int]) {\n    org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int];\n    while (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> != null) {\n        if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n            return true;\n        } \n        org.apache.commons.collections4.map.StaticBucketMap.Node<K, V> = org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>;\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:248","type":"CtSynchronizedImpl"},"status":-2},{"failures":[39,61,40,41,42,62,44,74,45,46,47,48],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-1},{"failures":[75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131],"variableMapping":{"size":"bound","index":"bound"},"name":"replace","transplant":{"sourceCode":"if (int >= int) {\n    throw new java.lang.IndexOutOfBoundsException((((\"Index \" + int) + \" is invalid for size \") + int));\n} ","position":"org.apache.commons.collections4.map.AbstractLinkedMap:232","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < 0) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"CtIfImpl"},"status":-1},{"failures":[132,133,134,135,136,137,138,139,140,141,142,143],"variableMapping":{"removed":"hasNext","nextCalled":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((!(this.boolean)) || (this.boolean)) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.iterators.SingletonListIterator:133","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E instanceof java.util.Iterator) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)));\n} else {\n    E = E;\n    boolean = true;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:163","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[144,145,146,147,148],"variableMapping":{"size":"callCounter"},"name":"replace","transplant":{"sourceCode":"if (int <= 0) {\n    throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\");\n} ","position":"org.apache.commons.collections4.ListUtils:658","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.BoundedCollection<?>)(java.util.Collection<?>)).isFull()","position":"org.apache.commons.collections4.CollectionUtils:1471","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object != null) {\n    if (java.lang.Object instanceof java.lang.Boolean) {\n        return ((java.lang.Boolean)(java.lang.Object));\n    } \n    if (java.lang.Object instanceof java.lang.String) {\n        return java.lang.Boolean.java.lang.Boolean.valueOf(((java.lang.String)(java.lang.Object)));\n    } \n    if (java.lang.Object instanceof java.lang.Number) {\n        final java.lang.Number java.lang.Number = ((java.lang.Number)(java.lang.Object));\n        return (java.lang.Number.intValue()) != 0 ? java.lang.Boolean.java.lang.Boolean : java.lang.Boolean.java.lang.Boolean;\n    } \n} ","position":"org.apache.commons.collections4.MapUtils:153","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"{}\"","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1378","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:211","type":"CtSynchronizedImpl"},"status":-2},{"failures":[149],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The method to invoke must not be null\")","position":"org.apache.commons.collections4.functors.InvokerTransformer:55","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-1},{"failures":[92,93,94,105,106,107],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"o1":"object","c":"index","o2":"object"},"name":"add","transplant":{"sourceCode":"return int < 0 ? E : E","position":"org.apache.commons.collections4.ComparatorUtils:220","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","lock":"lock"},"name":"add","transplant":{"sourceCode":"synchronized(this.java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:83","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:228","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) && org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(compareKeys(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.K))) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} else {\n    return null;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:430","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[150],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.iterators.PeekingIterator:154","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"status":-1},{"failures":[151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219],"binaryOperator":"java.util.Collection<E> == null","name":"negateConditional","position":"org.apache.commons.collections4.collection.SynchronizedCollection:72","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[156,189,211],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl"},"status":-1},{"failures":[220],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 2 :\n    if ((K) == null) {\n        return V;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:137","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterIterator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int) != (int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.subtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.int, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.PrefixRangeMap.int);\n    int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.int;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2277","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":44,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsContract":216,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testEqualsNull":213,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":25,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":157,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":184,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":0,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":203,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":22,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCanonicalFullCollectionExists":212,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":122,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":18,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":49,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":111,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":3,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":56,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":144,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":43,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":108,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":21,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":81,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":207,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":39,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":113,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":62,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":53,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":167,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":204,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":168,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":182,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSimpleSerialization":71,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":131,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSimpleSerialization":192,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":24,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":129,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":209,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":199,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":84,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":40,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":159,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":112,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":126,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":139,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":80,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":1,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":76,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":99,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":161,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":140,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSerializeDeserializeThenCompare":64,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":46,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":79,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":90,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":119,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":60,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":15,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":61,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSerializeDeserializeThenCompare":208,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":173,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":143,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":103,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":85,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":117,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":10,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":51,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":28,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":102,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":172,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":63,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":175,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":179,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalEmptyCollectionExists":193,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":148,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":11,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":164,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":16,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testEmptyMap":30,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":42,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":141,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedSortedBag":219,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":88,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyReadableMap":31,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":7,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":97,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":35,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":58,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":17,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testFullMap":27,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":41,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testSimpleSerialization":65,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSerializeDeserializeThenCompare":70,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":75,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":138,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSerializeDeserializeThenCompare":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToString":186,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":156,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToString":198,"org.apache.commons.collections4.CollectionUtilsTest.testSynchronizedCollection":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":174,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":211,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":206,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":4,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEmptyBagCompatibility":152,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":32,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":136,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":83,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":34,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":130,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCanonicalEmptyCollectionExists":214,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":94,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":171,"org.apache.commons.collections4.BagUtilsTest.testSynchronizedBag":218,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":59,"org.apache.commons.collections4.bag.TreeBagTest.testSimpleSerialization":73,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":2,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":202,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":77,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":176,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":45,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":86,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":98,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":165,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":135,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":150,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":87,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":13,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":154,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":158,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":153,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":185,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":155,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":183,"org.apache.commons.collections4.bag.TreeBagTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":104,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":57,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":96,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":210,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testSimpleSerialization":67,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsContract":190,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":137,"org.apache.commons.collections4.SplitMapUtilsTest.testAlreadyWritableMap":33,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":101,"org.apache.commons.collections4.bag.SynchronizedBagTest.testEqualsNull":188,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":54,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":128,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testConstructorEx":149,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":50,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":197,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":110,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":20,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.bag.SynchronizedBagTest.testSerializeDeserializeThenCompare":187,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":177,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":189,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":132,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCanonicalFullCollectionExists":194,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":133,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":134,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":55,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":180,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":29,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":178,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":170,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":5,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":201,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":166,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":48,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":91,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":14,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":205,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testSimpleSerialization":215,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":82,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":47,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":196,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":124,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":89,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":9,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":115,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":114,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":145,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":162,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":36,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":220,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":37,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":107,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":38,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":163,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":125,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":12,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testSimpleSerialization":69,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":169,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":92,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":147,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":100,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":195,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":105,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":106,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":120,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectHashCodeEqualsSelfHashCode":217,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":121,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectHashCodeEqualsSelfHashCode":191,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":93,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":26}}]
