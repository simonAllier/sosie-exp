[{"failures":[],"variableMapping":{"value":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ClosureTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iClosure":"closure"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.Closure<? super E>","position":"org.apache.commons.collections4.functors.ForClosure:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Closure<E>)(org.apache.commons.collections4.Closure<? super E>))","position":"org.apache.commons.collections4.functors.ForClosure:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"transformers":"collection"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>> == null) {\n    throw new java.lang.IllegalArgumentException(\"Transformer collection must not be null\");\n} ","position":"org.apache.commons.collections4.functors.ChainedTransformer:71","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The collection must not be null\")","position":"org.apache.commons.collections4.collection.UnmodifiableBoundedCollection:82","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:838","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedSet<E>)(org.apache.commons.collections4.set.AbstractSetDecorator<E>.decorated()))","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"currentValue","leastObject":"currentValue"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()","position":"org.apache.commons.collections4.map.MultiKeyMap:721","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:970","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Bag<? super O>)(java.lang.Iterable<? super O>)).getCount(O)","position":"org.apache.commons.collections4.CollectionUtils:611","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 1","position":"org.apache.commons.collections4.map.AbstractHashedMap:664","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.copy(org.apache.commons.collections4.Predicate<? super T>[]))","position":"org.apache.commons.collections4.functors.OnePredicate:60","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n        return true;\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:224","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> == null) && (int > 0)) {\n    int--;\n    org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V> = ((org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntry<K, V>)(org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]));\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:787","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:209","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} ","position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = null","position":"org.apache.commons.collections4.list.TreeList:1103","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[6],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"set":"sub"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.UnmodifiableSortedSet<E>(java.util.SortedSet<E>)","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:59","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"status":-2},{"failures":[7],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"CtForImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:281","type":"CtReturnImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-2560033712679053143L","position":"org.apache.commons.collections4.bag.CollectionSortedBag:36","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:76","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<K, V> = new java.util.LinkedHashMap<K, V>()","position":"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMap:95","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.bag.HashBag<O>.remove(O, 1))) {\n    java.util.ArrayList<O>.add(O);\n} ","position":"org.apache.commons.collections4.CollectionUtils:337","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[8],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeMap:118","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"binaryOperator":"((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\")","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:134","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.collection.IndexedCollection<K, C>.remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.IndexedCollection:217","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[9,10,11,12,13,6,14,15,16,17,18],"variableMapping":{"root":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.TransformingComparator:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((\"WrappedPut\".hashCode()) << 4) | (org.apache.commons.collections4.Put<K, V>.hashCode())","position":"org.apache.commons.collections4.SplitMapUtils:164","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Inner class ValuesIterator.\n */\nprotected static class ValuesIterator<V> extends org.apache.commons.collections4.iterators.AbstractIteratorDecorator<V> {\n    /** \n     * The parent map\n     */\nprotected final org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V> parent;\n\n    /** \n     * The last returned value\n     */\nprotected V lastValue = null;\n\n    /** \n     * Whether remove is allowed at present\n     */\nprotected boolean canRemove = false;\n\n    /** \n     * Constructor.\n     * @param iterator  the iterator to decorate\n     * @param parent  the parent map\n     */\n@java.lang.SuppressWarnings(value = \"unchecked\")\n    protected ValuesIterator(final java.util.Iterator<V> iterator ,final org.apache.commons.collections4.bidimap.AbstractDualBidiMap<?, V> parent) {\n        org.apache.commons.collections4.iterators.AbstractIteratorDecorator<V>.super(java.util.Iterator<V>);\n        this.org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V> = ((org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>)(org.apache.commons.collections4.bidimap.AbstractDualBidiMap<?, V>));\n    }\n\n    @java.lang.Override\n    public V next() {\n        V = org.apache.commons.collections4.iterators.AbstractIteratorDecorator<V>.next();\n        boolean = true;\n        return V;\n    }\n\n    @java.lang.Override\n    public void remove() {\n        if ((boolean) == false) {\n            throw new java.lang.IllegalStateException(\"Iterator remove() can only be called once after next()\");\n        } \n        org.apache.commons.collections4.iterators.AbstractIteratorDecorator<V>.remove();\n        org.apache.commons.collections4.bidimap.AbstractDualBidiMap<java.lang.Object, V>.java.util.Map<V, java.lang.Object>.remove(V);\n        V = null;\n        boolean = false;\n    }\n}","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:520","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[19],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Set<E> = new java.util.HashSet<E>(java.util.List<E>.size())","position":"org.apache.commons.collections4.list.SetUniqueList:334","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<K, V>.remove(K)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:229","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((java.util.ListIterator<E>)(org.apache.commons.collections4.iterators.EmptyListIterator.java.util.ListIterator))","position":"org.apache.commons.collections4.iterators.EmptyListIterator:67","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[20],"variableMapping":{"object":"value"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)","position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n    E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:189","type":"CtIfImpl"},"status":-2},{"failures":[21,22],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:900","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failures":[],"binaryOperator":"(((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.setValue(V)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:68","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Iterator<K> java.util.Iterator<K> = java.util.Collection<K>.iterator()","position":"org.apache.commons.collections4.map.MultiValueMap:425","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.CollectionUtils:1121","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37],"variableMapping":{"ret":"endIndex"},"name":"replace","transplant":{"sourceCode":"return int > 0","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1810","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * A list iterator over the linked list.\n */\nstatic class TreeListIterator<E> implements java.util.ListIterator<E> , org.apache.commons.collections4.OrderedIterator<E> {\n    /** \n     * The parent list\n     */\nprivate final org.apache.commons.collections4.list.TreeList<E> parent;\n\n    /** \n     * Cache of the next node that will be returned by {@link #next()}.\n     */\nprivate org.apache.commons.collections4.list.TreeList.AVLNode<E> next;\n\n    /** \n     * The index of the next node to be returned.\n     */\nprivate int nextIndex;\n\n    /** \n     * Cache of the last node that was returned by {@link #next()}\n     * or {@link #previous()}.\n     */\nprivate org.apache.commons.collections4.list.TreeList.AVLNode<E> current;\n\n    /** \n     * The index of the last node that was returned.\n     */\nprivate int currentIndex;\n\n    /** \n     * The modification count that the list is expected to have. If the list\n     * doesn't have this count, then a\n     * {@link java.util.ConcurrentModificationException} may be thrown by\n     * the operations.\n     */\nprivate int expectedModCount;\n\n    /** \n     * Create a ListIterator for a list.\n     * \n     * @param parent  the parent list\n     * @param fromIndex  the index to start at\n     */\nprotected TreeListIterator(final org.apache.commons.collections4.list.TreeList<E> parent ,final int fromIndex) throws java.lang.IndexOutOfBoundsException {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.list.TreeList<E> = org.apache.commons.collections4.list.TreeList<E>;\n        this.int = org.apache.commons.collections4.list.TreeList<E>.int;\n        this.org.apache.commons.collections4.list.TreeList.AVLNode<E> = (org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null ? null : org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(int);\n        this.int = int;\n        this.int = -1;\n    }\n\n    /** \n     * Checks the modification count of the list is the value that this\n     * object expects.\n     * \n     * @throws ConcurrentModificationException If the list's modification\n     * count isn't the value that was expected.\n     */\nprotected void checkModCount() {\n        if ((org.apache.commons.collections4.list.TreeList<E>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n    }\n\n    public boolean hasNext() {\n        return (int) < (org.apache.commons.collections4.list.TreeList<E>.size());\n    }\n\n    public E next() {\n        org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount();\n        if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasNext())) {\n            throw new java.util.NoSuchElementException(((\"No element at index \" + (int)) + \".\"));\n        } \n        if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(int);\n        } \n        final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.getValue();\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        int = (int)++;\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.next();\n        return E;\n    }\n\n    public boolean hasPrevious() {\n        return (int) > 0;\n    }\n\n    public E previous() {\n        org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount();\n        if (!org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(hasPrevious())) {\n            throw new java.util.NoSuchElementException(\"Already at start of list.\");\n        } \n        if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>.get(((int) - 1));\n        } else {\n            org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.previous();\n        }\n        final E E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.getValue();\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        int = --(int);\n        return E;\n    }\n\n    public int nextIndex() {\n        return int;\n    }\n\n    public int previousIndex() {\n        return org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.(nextIndex()) - 1;\n    }\n\n    public void remove() {\n        org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount();\n        if ((int) == (-1)) {\n            throw new java.lang.IllegalStateException();\n        } \n        org.apache.commons.collections4.list.TreeList<E>.remove(int);\n        if ((int) != (int)) {\n            (int)--;\n        } \n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = null;\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = null;\n        int = -1;\n        (int)++;\n    }\n\n    public void set(final E obj) {\n        org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount();\n        if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n            throw new java.lang.IllegalStateException();\n        } \n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.setValue(E);\n    }\n\n    public void add(final E obj) {\n        org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount();\n        org.apache.commons.collections4.list.TreeList<E>.add(int, E);\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = null;\n        int = -1;\n        (int)++;\n        (int)++;\n    }\n}","position":"org.apache.commons.collections4.list.TreeList:988","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().last()","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:95","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.comparators.ComparatorChain:269","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl"},"status":-2},{"failures":[9,39,10,11,12,13,6,14,15,16,17,18],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":-2},{"failures":[40,41],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-1},{"failures":[23,24,25,26,42,27,28,43,29,30,31,44,32,33,34,35,36,45,37],"binaryOperator":"(int) < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated())","position":"org.apache.commons.collections4.list.AbstractSerializableListDecorator:56","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"closure":"closure"},"name":"replace","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Closure<T>)(org.apache.commons.collections4.Closure<? super T>))","position":"org.apache.commons.collections4.functors.FunctorUtils:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.CollectionUtils:1125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Invalid index:\" + int) + \", size=\") + org.apache.commons.collections4.list.TreeList<E>.(size())))","position":"org.apache.commons.collections4.list.TreeList:288","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"nextObject","leastObject":"nextObject"},"name":"add","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.isExpired(long, java.lang.Long)) {\n    org.apache.commons.collections4.map.PassiveExpiringMap<K, V>.remove(java.lang.Object);\n} ","position":"org.apache.commons.collections4.map.PassiveExpiringMap:490","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return \"MapIterator[]\"","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().toString()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[46,47,48,49,50],"binaryOperator":"((java.util.Iterator<? extends E>.hasNext()) == false)","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final V V = org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(K)","position":"org.apache.commons.collections4.map.LazyMap:165","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate1":"predicate","predicate2":"predicate"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsFalsePredicate.org.apache.commons.collections4.functors.NullIsFalsePredicate.nullIsFalsePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:503","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object.getClass().equals(java.lang.Object.getClass())) {\n    final org.apache.commons.collections4.comparators.TransformingComparator<?, ?> org.apache.commons.collections4.comparators.TransformingComparator<?, ?> = ((org.apache.commons.collections4.comparators.TransformingComparator<?, ?>)(java.lang.Object));\n    return null == (java.util.Comparator<O>) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>) : (java.util.Comparator<O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.java.util.Comparator<?>)) && (null == (org.apache.commons.collections4.Transformer<? super I, ? extends O>)) ? null == (org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>) : org.apache.commons.collections4.Transformer<? super I, ? extends O>.equals(org.apache.commons.collections4.comparators.TransformingComparator<?, ?>.org.apache.commons.collections4.Transformer<? super ?, ? extends ?>);\n} ","position":"org.apache.commons.collections4.comparators.TransformingComparator:121","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    boolean = true;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2388","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doReadObject(new java.util.TreeMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>(java.util.Comparator<? super E>), java.io.ObjectInputStream)","position":"org.apache.commons.collections4.bag.TreeBag:129","type":"CtInvocationImpl"},"status":-2},{"failures":[51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-1},{"failures":[201],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Already at start of list.\")","position":"org.apache.commons.collections4.list.AbstractLinkedList:842","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().headMap(K)","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:148","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerPredicate<T>(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.functors.TransformerPredicate:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.ForClosure:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"input":"input","this":"this"},"name":"add","transplant":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.size()","position":"org.apache.commons.collections4.functors.SwitchTransformer:103","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.MapUtils:1174","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Comparator<? super E>","position":"org.apache.commons.collections4.iterators.CollatingIterator:211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[202,203],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<java.util.Map.Entry<K, V>> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<java.util.Map.Entry<K, V>>(this.java.util.Iterator<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:145","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>> = java.util.Set<java.util.Map.Entry<K, V>>.iterator()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:92","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.EntrySet<K, V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:733","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().keySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.hasNext()) {\n    final org.apache.commons.collections4.keyvalue.MultiKey<? extends K> org.apache.commons.collections4.keyvalue.MultiKey<? extends K> = org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.next();\n    if ((((org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.size()) >= 2) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(0)))) && (java.lang.Object == null ? (org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)) == null : java.lang.Object.equals(org.apache.commons.collections4.keyvalue.MultiKey<? extends K>.getKey(1)))) {\n        org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove();\n        boolean = true;\n    } \n}","position":"org.apache.commons.collections4.map.MultiKeyMap:741","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.this.nextSmaller(org.apache.commons.collections4.bidimap.TreeBidiMap.this.<V>lookup(V, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2095","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":165,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":88,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":51,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":107,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":168,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":7,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":31,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":183,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":97,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":54,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":110,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":3,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":95,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":63,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":37,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":149,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":174,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":178,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":184,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":46,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":155,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":86,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":169,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":9,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":100,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":13,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":173,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":80,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testLastKey":22,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":144,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":193,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":112,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":161,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":73,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":153,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":10,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":56,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":171,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":89,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":129,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":127,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":148,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":59,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":108,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":5,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":200,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":82,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":83,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":158,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":57,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":32,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":199,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":163,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":24,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":177,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":190,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":72,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":134,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":104,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":138,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":16,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":0,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":33,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":44,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":186,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":141,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":39,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":101,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":197,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":64,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":167,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":78,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":2,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":34,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":130,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":202,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":19,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":113,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":50,"org.apache.commons.collections4.TransformerUtilsTest.testCloneTransformer":41,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":128,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":123,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":12,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":117,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":20,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":201,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":170,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":136,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":60,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":48,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":11,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":122,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":23,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":175,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":164,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":146,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":76,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":139,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":151,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":191,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":140,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":203,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":147,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":142,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":27,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":116,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":162,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":55,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":30,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":15,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":120,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":179,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":52,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":8,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":81,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":79,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":68,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":91,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":96,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":111,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":1,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":176,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":118,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":114,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":4,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":115,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":133,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":192,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":185,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":105,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":159,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":87,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":124,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":137,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":14,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":181,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":66,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":182,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":125,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":154,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":189,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":84,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testLastKey":21,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":121,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":135,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":166,"org.apache.commons.collections4.FactoryUtilsTest.testPrototypeFactoryPublicCopyConstructor":40,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":106,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":172,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":62,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":103,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":156,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":67,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":75,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":160,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":69,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":85,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":35,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":188,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":180,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":131,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":38,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":18,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":25,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":17,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":90,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":145,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":92,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":58,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":102,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":109,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":198,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":47,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":29,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":26,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":49,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":150,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":152,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":196,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":143,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":119,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":53,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":28,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":43,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":36,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":45,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":42}}]
