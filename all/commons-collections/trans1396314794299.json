[{"failures":[0,1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())","position":"org.apache.commons.collections4.iterators.FilterIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.ArrayList<E> = new java.util.ArrayList<E>(java.util.ArrayList<java.util.Iterator<? extends E>>.size())","position":"org.apache.commons.collections4.iterators.CollatingIterator:296","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InvokerTransformer<I, O>(java.lang.String)","position":"org.apache.commons.collections4.functors.InvokerTransformer:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:88","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.int) != (int)) {\n    throw new java.util.ConcurrentModificationException();\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:808","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.ForClosure:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"last":"key"},"name":"add","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.map.ListOrderedMap:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[2,3],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= int) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.Reference<java.util.Map.Entry<K, V>>.set(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        return false;\n    } \n    return true;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:354","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Iterator<K>.next()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:111","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.List<java.util.Collection<E>>.add(java.util.Collection<E>)","position":"org.apache.commons.collections4.collection.CompositeCollection:361","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>[][int] = java.util.Map.Entry<? extends E, org.apache.commons.collections4.Closure<E>>.getValue()","position":"org.apache.commons.collections4.ClosureUtils:365","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[4],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Transformer<? super E, ?> == null) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.TransformerClosure:49","type":"CtIfImpl"},"status":-1},{"failures":[5,6,7,8,9,10,11,12],"variableMapping":{"iterator":"iterator","list":"list"},"name":"replace","transplant":{"sourceCode":"this.java.util.ListIterator<E> = this.java.util.List<E>.listIterator(this.java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSet.org.apache.commons.collections4.set.PredicatedSet.predicatedSet(java.util.Set<E>, org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.SetUtils:211","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"/** \n * A range view of the {@link Trie}.\n */\nprivate abstract class RangeMap extends java.util.AbstractMap<K, V> implements java.util.SortedMap<K, V> {\n    /** \n     * The {@link #entrySet()} view.\n     */\nprivate transient volatile java.util.Set<java.util.Map.Entry<K, V>> entrySet;\n\n    /** \n     * Creates and returns an {@link #entrySet()} view of the {@link RangeMap}.\n     */\nprotected abstract java.util.Set<java.util.Map.Entry<K, V>> createEntrySet();\n\n    /** \n     * Returns the FROM Key.\n     */\nprotected abstract K getFromKey();\n\n    /** \n     * Whether or not the {@link #getFromKey()} is in the range.\n     */\nprotected abstract boolean isFromInclusive();\n\n    /** \n     * Returns the TO Key.\n     */\nprotected abstract K getToKey();\n\n    /** \n     * Whether or not the {@link #getToKey()} is in the range.\n     */\nprotected abstract boolean isToInclusive();\n\n    public java.util.Comparator<? super K> comparator() {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator();\n    }\n\n    @java.lang.Override\n    public boolean containsKey(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return false;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.containsKey(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V remove(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.remove(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V get(final java.lang.Object key) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.castKey(java.lang.Object)))) {\n            return null;\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public V put(final K key, final V value) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange(K))) {\n            throw new java.lang.IllegalArgumentException((\"Key is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.put(K, V);\n    }\n\n    @java.lang.Override\n    public java.util.Set<java.util.Map.Entry<K, V>> entrySet() {\n        if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n            java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createEntrySet();\n        } \n        return java.util.Set<java.util.Map.Entry<K, V>>;\n    }\n\n    public java.util.SortedMap<K, V> subMap(final K fromKey, final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> headMap(final K toKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"ToKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    public java.util.SortedMap<K, V> tailMap(final K fromKey) {\n        if (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inRange2(K))) {\n            throw new java.lang.IllegalArgumentException((\"FromKey is out of range: \" + K));\n        } \n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.createRangeMap(K, org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey(), org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive());\n    }\n\n    /** \n     * Returns true if the provided key is greater than TO and less than FROM.\n     */\nprotected boolean inRange(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, false)));\n    }\n\n    /** \n     * This form allows the high endpoint (as well as all legit keys).\n     */\nprotected boolean inRange2(final K key) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        return ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))) && ((K == null) || org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inToRange(K, true)));\n    }\n\n    /** \n     * Returns true if the provided key is in the FROM range of the {@link RangeMap}.\n     */\nprotected boolean inFromRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isFromInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int >= 0;\n        } else {\n            return int > 0;\n        }\n    }\n\n    /** \n     * Returns true if the provided key is in the TO range of the {@link RangeMap}.\n     */\nprotected boolean inToRange(final K key, final boolean forceInclusive) {\n        final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getToKey();\n        final boolean boolean = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.isToInclusive();\n        final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K);\n        if (boolean || boolean) {\n            return int <= 0;\n        } else {\n            return int < 0;\n        }\n    }\n\n    /** \n     * Creates and returns a sub-range view of the current {@link RangeMap}.\n     */\nprotected abstract java.util.SortedMap<K, V> createRangeMap(K fromKey, boolean fromInclusive, K toKey, boolean toInclusive);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1675","type":"CtClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bag.CollectionBag:165","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Already at start of list.\")","position":"org.apache.commons.collections4.list.AbstractLinkedList:842","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.bag.AbstractMapBag:434","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.SwitchTransformer<I, O>(false , org.apache.commons.collections4.Predicate<? super I>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>[] , org.apache.commons.collections4.Transformer<? super I, ? extends O>)","position":"org.apache.commons.collections4.functors.SwitchTransformer:117","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:98","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"nextObject"},"name":"replace","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The predicate and transformer map must not be null\")","position":"org.apache.commons.collections4.functors.SwitchTransformer:96","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.OrderedMap<K, V> org.apache.commons.collections4.OrderedMap<K, V> = ((org.apache.commons.collections4.OrderedMap<K, V>)(org.apache.commons.collections4.OrderedMap<? extends K, ? extends V>))","position":"org.apache.commons.collections4.map.UnmodifiableOrderedMap:63","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>[][int] = null","position":"org.apache.commons.collections4.map.StaticBucketMap:392","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n        java.lang.StringBuilder.append(\"parent=\").append(\"ROOT\");\n    } else {\n        java.lang.StringBuilder.append(\"parent=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n    }\n} else {\n    java.lang.StringBuilder.append(\"parent=\").append(\"null\");\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1346","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())))","position":"org.apache.commons.collections4.CollectionUtils:1291","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TransformedSortedBag<E>.getSortedBag().last()","position":"org.apache.commons.collections4.bag.TransformedSortedBag:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.collection.CompositeCollection<V> org.apache.commons.collections4.collection.CompositeCollection<V> = new org.apache.commons.collections4.collection.CompositeCollection<V>()","position":"org.apache.commons.collections4.map.CompositeMap:451","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.UnmodifiableList:119","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.map.AbstractHashedMap:230","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":-2},{"failures":[13],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"null nonNullComparator\")","position":"org.apache.commons.collections4.comparators.NullComparator:117","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:114","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<K>.add(K)","position":"org.apache.commons.collections4.map.ListOrderedMap:225","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.list.AbstractLinkedList:1008","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.Flat3Map.Values<V>(this)","position":"org.apache.commons.collections4.map.Flat3Map:1026","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:231","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.list.FixedSizeList:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.UnmodifiableMapIterator<K, V>(org.apache.commons.collections4.MapIterator<? extends K, ? extends V>)","position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:55","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.<T>constantFactory(null)","position":"org.apache.commons.collections4.FactoryUtils:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")","position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s before the start of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:120","type":"CtThrowImpl"},"status":-2},{"failures":[482,483,345,346,484,485,486,487,488,347,348,349,350,351,352,353,489,490,491,375,492,493,494,495,496,497,376,498,499,377,500,501,502,503,504,505,506,507,378,379,380,381,382,383,384,508,385,386,509,510,511,512,387,513,514,388,515,516,517,518,519,520,521,522,523,524,525,389,390,391,392,393,394,526,396,527,397,398,528,529],"variableMapping":{"this":"this","index":"index"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[422,530,531,424,425,426,427,428,429,430,431,432],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().first()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal E[] E[] = ((E[])(java.util.SortedSet<E>.toArray()))","position":"org.apache.commons.collections4.set.TransformedSortedSet:82","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"curObject":"previousObject","leastObject":"previousObject"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractLinkedMap:571","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Node must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:807","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.collection.SynchronizedCollection<T>(java.util.Collection<T>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:109","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractLinkedList<E>.set((int + (int)), E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:1023","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"private class KeyIterator extends org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator implements java.util.Iterator<K> {\n    public K next() {\n        return org.apache.commons.collections4.map.StaticBucketMap<K, V>.BaseIterator.nextEntry().getKey();\n    }\n}","position":"org.apache.commons.collections4.map.StaticBucketMap:549","type":"CtClassImpl"},"status":-2},{"failures":[532,533,534,535,536,537,538,0,539,540,1],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-1},{"failures":[541,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) && (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>))) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n    boolean = true;\n} else if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E>;\n    boolean = false;\n} else if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n    boolean = true;\n    (int)--;\n} else {\n    boolean = false;\n    boolean = false;\n}","position":"org.apache.commons.collections4.list.CursorableLinkedList:505","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.list.AbstractLinkedList:1016","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false","position":"org.apache.commons.collections4.CollectionUtils:1392","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"pos":"size","index":"index"},"name":"replace","transplant":{"sourceCode":"if (int < int) {\n    int--;\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:457","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"status":-2},{"failures":[559],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:162","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-1},{"failures":[560,561,562,563,564,565,566,567],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int) == 0) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if ((java.util.Iterator<? extends E>) == null) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n        boolean = true;\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:83","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[568,569,570,571,572,573,574,575],"variableMapping":{"isLocked":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == true) {\n    throw new java.lang.UnsupportedOperationException(\"IteratorChain cannot be changed after the first use of a method from the Iterator interface\");\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:191","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"ret":"index"},"name":"add","transplant":{"sourceCode":"return int >= 0","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1808","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ArrayIterator<E>.this(java.lang.Object, 0)","position":"org.apache.commons.collections4.iterators.ArrayIterator:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Iterator<?> java.util.Iterator<?> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeEntrySet.iterator() ; java.util.Iterator<?>.hasNext() ; java.util.Iterator<?>.next()) {\n    ++(int);\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1998","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, V>, java.util.Map.Entry<K, V>>.getIterator().next()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:181","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:482","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:153","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"set2":"coll","set1":"coll"},"name":"add","transplant":{"sourceCode":"return java.util.Collection<?>.containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.SetUtils:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-1},{"failures":[568,569,570,571,600,601,572,573,574,575],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Size must be greater than 0\")","position":"org.apache.commons.collections4.ListUtils:659","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bag.UnmodifiableSortedBag:141","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[509,602],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[] = java.lang.reflect.Array.((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), int)))","position":"org.apache.commons.collections4.set.CompositeSet:186","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int += (int) ^ ((V) == null ? 0 : V.hashCode())","position":"org.apache.commons.collections4.map.Flat3Map:1199","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":24,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRetainAll":294,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":601,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":75,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":104,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":186,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":148,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":521,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":129,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":47,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":103,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":189,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":559,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":376,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":179,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionClear":282,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":228,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":428,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":485,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIsEmpty":217,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":202,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":426,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":567,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueRemove":208,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAdd":510,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":170,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueRemove":194,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":444,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":464,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionClear":20,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":479,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":501,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testDecorateFactory":576,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":600,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":389,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":402,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":359,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":409,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":349,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":440,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":568,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":141,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIsEmpty":55,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":458,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":121,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray2":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":67,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":412,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRetainAll":21,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":304,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":38,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":137,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":430,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContainsAll":14,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":94,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":264,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionClear":266,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray2":199,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":221,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":336,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":117,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":167,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":360,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":406,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedAdd":46,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":270,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":110,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":98,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":138,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":470,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedAdd":229,"org.apache.commons.collections4.CollectionUtilsTest.emptyIfNull":399,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":181,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":417,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":569,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":405,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":460,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":192,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIsEmpty":269,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionClear":323,"org.apache.commons.collections4.bag.HashBagTest.testCollectionClear":246,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":488,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":377,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":411,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":164,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":390,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":357,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":538,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":486,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":531,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":477,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":0,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIteratorRemove":214,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":364,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":248,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":514,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":158,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":276,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":120,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextNextRemoveIndex1ByList":548,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":354,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":171,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIsEmpty":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":301,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":212,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":380,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":525,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":118,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":88,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":307,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":415,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRetainAll":283,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":297,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":253,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIteratorRemove":251,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":272,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testUnsupportedRemove":49,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":324,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":333,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":99,"org.apache.commons.collections4.BagUtilsTest.testTransformedSortedBag":589,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":184,"org.apache.commons.collections4.list.UnmodifiableListTest.testDecorateFactory":593,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":8,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIsEmpty":232,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":292,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":9,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":441,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":472,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":330,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedRemove":227,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemoveAll":215,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray2":35,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":449,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":420,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":160,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testDecorateFactory":592,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":387,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection":594,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":71,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":244,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableBag":584,"org.apache.commons.collections4.BagUtilsTest.testUnmodifiableSortedBag":587,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":392,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":492,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":325,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":570,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRetainAll":243,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":252,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIsEmpty":281,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":305,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":96,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":116,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":233,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":487,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":245,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":92,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":468,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":97,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextSetByIterator":556,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":313,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":536,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":346,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":490,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":3,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":72,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":133,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":343,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddRemove":528,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":366,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextAddIndex1ByList":552,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":112,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemove":42,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRetainAll":314,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":469,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":66,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":280,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":427,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":273,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":438,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemove":32,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedRemove":56,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":172,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionToArray2":15,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":454,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedAdd":316,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":437,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray2":234,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":187,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":13,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":119,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":265,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIteratorRemove":328,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":491,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousSetByIterator":555,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":157,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRemoveAll":37,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":85,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":165,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":350,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionClear":30,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":452,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIteratorRemove":16,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRetainAll":31,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":109,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":105,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":178,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePeek":195,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":162,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":370,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testDecorateFactory":590,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":131,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":124,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":298,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":505,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":180,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":408,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":461,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":512,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":308,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray2":237,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRetainAll":331,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":153,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorRemove":541,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":147,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIteratorRemove":291,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByIterator":550,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":317,"org.apache.commons.collections4.map.ListOrderedMapTest.testPutAllWithIndexBug441":482,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":263,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":69,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":139,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":259,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":74,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":231,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":115,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":302,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray2":25,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":111,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":250,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":262,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":342,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":268,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":434,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":135,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":260,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":361,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":210,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionClear":242,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":517,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":89,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIsEmpty":249,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":44,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIteratorRemove":26,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":82,"org.apache.commons.collections4.CollectionUtilsTest.testUnmodifiableCollection":596,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":68,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":125,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":508,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":432,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":561,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":312,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":414,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRemove":220,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":499,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":478,"org.apache.commons.collections4.set.ListOrderedSetTest.testDecorator":597,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":267,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":447,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":151,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":462,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":518,"org.apache.commons.collections4.BagUtilsTest.testTransformedBag":586,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":527,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testDecorateFactory":582,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":173,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":383,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":456,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":11,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":51,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexFirst":544,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":410,"org.apache.commons.collections4.SetUtilsTest.testpredicatedSet":581,"org.apache.commons.collections4.QueueUtilsTest.testPredicatedQueue":579,"org.apache.commons.collections4.QueueUtilsTest.testEmptyQueue":193,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIteratorRemove":311,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":515,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":475,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":602,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":403,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":509,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":322,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":523,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":225,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":382,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":497,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":163,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIteratorRemove":200,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":506,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":431,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":303,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIsEmpty":19,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIsEmpty":241,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":84,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray2":213,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":484,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":293,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":362,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":560,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":50,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray2":275,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":341,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":140,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":338,"org.apache.commons.collections4.list.SetUniqueListTest.testSetCollections444":496,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray2":223,"org.apache.commons.collections4.set.UnmodifiableSetTest.testDecorateFactory":599,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveIndex1ByList":545,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":175,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":106,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListIteratorRemove":557,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":95,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":489,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":239,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":352,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemove":22,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":463,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":130,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionRetainAll":219,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":287,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":70,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":108,"org.apache.commons.collections4.BagUtilsTest.testPredicatedBag":585,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":453,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextRemoveIndex1ByList":546,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":340,"org.apache.commons.collections4.QueueUtilsTest.testUnmodifiableQueue":578,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemove":206,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray2":255,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":101,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":466,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":530,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionClear":306,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":182,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":446,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":64,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionRemoveAll":17,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":355,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":169,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":381,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":91,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":378,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorPreviousRemoveNext":558,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIteratorRemove":271,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":299,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":573,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRemoveAll":201,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":459,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":7,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":451,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":86,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":279,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":143,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":395,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":418,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":445,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":176,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":365,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":450,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":300,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":394,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":33,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":54,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":73,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":493,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":562,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":247,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":344,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddRemove":529,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIsEmpty":289,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.QueueUtilsTest.testTransformedQueue":580,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionClear":40,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":429,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":183,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":257,"org.apache.commons.collections4.CollectionUtilsTest.predicatedCollection":595,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":261,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":565,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":566,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":34,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":288,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":177,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":539,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":571,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testUnsupportedAdd":53,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":100,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":503,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":369,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveIndex1ByList":547,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":149,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":413,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":161,"org.apache.commons.collections4.BagUtilsTest.testPredicatedSortedBag":588,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionClear":218,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":388,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionIterator":23,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":519,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":318,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousAddIndex1ByList":551,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":398,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":63,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":443,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionClear":204,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":423,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":498,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":563,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":142,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":495,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":407,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":216,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":540,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIteratorRemove":36,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":537,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":65,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionClear":286,"org.apache.commons.collections4.list.GrowthListTest.testListListIterator":516,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":128,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":256,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":400,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":465,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":375,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":371,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":483,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":473,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":58,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":421,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextPreviousRemoveByIterator":549,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testDecorateFactory":598,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":476,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":190,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":455,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIsEmpty":203,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":258,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":174,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":572,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":351,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":373,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":535,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":416,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":240,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":391,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":511,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":504,"org.apache.commons.collections4.ClosureUtilsTest.testTransformerClosure":4,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePeek":209,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray2":52,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":134,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":435,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":384,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":401,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":150,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":500,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":368,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":93,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray2":315,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":480,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIteratorRemove":278,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":126,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":329,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testDecorate":591,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":81,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":6,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRetainAll":274,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":522,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray2":277,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionRetainAll":205,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray2":332,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextRemoveByListSetByIterator":554,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":396,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":457,"org.apache.commons.collections4.ListUtilsTest.testPredicatedList":583,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":424,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":393,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":367,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":168,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":471,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":481,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":520,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorNextIndexMid":543,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":236,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":90,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":419,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":374,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":345,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueElement":197,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":425,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":507,"org.apache.commons.collections4.collection.IndexedCollectionTest.testCollectionContains":18,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIsEmpty":226,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":159,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":80,"org.apache.commons.collections4.list.CursorableLinkedListTest.testInternalState_CursorNextNextAddIndex1ByList":553,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":235,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIteratorRemove":238,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":198,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":526,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":146,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":386,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":320,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":145,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":113,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":132,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":532,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":533,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":385,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":534,"org.apache.commons.collections4.list.CursorableLinkedListTest.testCursorConcurrentModification":542,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":439,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":467,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":76,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":5,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":348,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":502,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":166,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":290,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":513,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":422,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIsEmpty":319,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":358,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":57,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRetainAll":254,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":494,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":185,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":335,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":436,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueElement":211,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":356,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":372,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":575,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionRetainAll":41,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":10,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testUnsupportedAdd":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":122,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":442,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":574,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":327,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":379,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":222,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIsEmpty":39,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray2":295,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testDecorateFactory":577,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":144,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":191,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":87,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIsEmpty":309,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":127,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":339,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":310,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":397,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":156,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":114,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":337,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":524,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":564,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":12,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":285,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":102,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":404,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":59,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":474,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":207,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":28,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":188,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIsEmpty":326,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":353,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":363,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionRemoveAll":27,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueuePoll":196,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionClear":296,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":334,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":448,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":230,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray2":321,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":433,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":154}}]
