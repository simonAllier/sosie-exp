[{"failures":[],"variableMapping":{"this":"this","index":"index","object":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (E == null) {\n    E = org.apache.commons.collections4.Factory<? extends E>.create();\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:116","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = java.lang.Math.java.lang.Math.max(int, int)","position":"org.apache.commons.collections4.trie.analyzer.StringKeyAnalyzer:72","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1980","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.FilterIterator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() is not supported on CompositeSet without a SetMutator strategy\")","position":"org.apache.commons.collections4.set.CompositeSet:214","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRemoveValue(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:301","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    } else {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:979","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (this == java.lang.Object) || ((java.lang.Object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(java.lang.Object)).boolean)))","position":"org.apache.commons.collections4.comparators.BooleanComparator:171","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.RuntimeException(\"Internal Error\")","position":"org.apache.commons.collections4.sequence.SequencesComparator:239","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"collection":"collection"},"name":"add","transplant":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.TransformedCollection.org.apache.commons.collections4.collection.TransformedCollection.transformingCollection(java.util.Collection<E>, org.apache.commons.collections4.Transformer<? super E, ? extends E>)","position":"org.apache.commons.collections4.CollectionUtils:1772","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.w3c.dom.Node == null) {\n    throw new java.lang.NullPointerException(\"Node must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:806","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Iterator<E> java.util.Iterator<E> = org.apache.commons.collections4.list.AbstractLinkedList<E>.iterator()","position":"org.apache.commons.collections4.list.AbstractLinkedList:280","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Factory<? extends O>.create()","position":"org.apache.commons.collections4.functors.FactoryTransformer:73","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,4,5,6],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"flag":"previousObjectSet","removed":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<V>.remove()","position":"org.apache.commons.collections4.map.MultiValueMap:521","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>","position":"org.apache.commons.collections4.list.TreeList:1057","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"o1":"object","o2":"object"},"name":"add","transplant":{"sourceCode":"if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":0},{"failures":[7,8,9,10,11,12,13,14,15,16,17,18,19],"variableMapping":{"canRemove":"hasNext"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.bag.AbstractMapBag:219","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.OrderedMapIterator<? extends K, ? extends V>.hasNext()","position":"org.apache.commons.collections4.iterators.UnmodifiableOrderedMapIterator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.NodeCachingLinkedList<E>.isCacheFull()) {\n    return ;\n} ","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:163","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[20,21,22,23,24],"variableMapping":{"nextObjectSet":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().addMapping(int, int, new org.apache.commons.collections4.keyvalue.MultiKey<K>(K , K , K , K , K), V)","position":"org.apache.commons.collections4.map.MultiKeyMap:614","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iArgs":"iArgs","iConstructor":"iConstructor"},"name":"add","transplant":{"sourceCode":"return this.java.lang.reflect.Constructor<T>.newInstance(this.java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[1,2,3,4,5,6],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.iterators.ArrayIterator<E>.(hasNext()) == false) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:147","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>(8)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:80","type":"CtNewClassImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.CursorableLinkedList<E>.broadcastNodeChanged(org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)","position":"org.apache.commons.collections4.list.CursorableLinkedList:222","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.GrowthList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.GrowthList:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.map.AbstractReferenceMap<K, V>.mapIterator() ; org.apache.commons.collections4.MapIterator<K, V>.hasNext() ; ) {\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.next());\n    java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.MapIterator<K, V>.getValue());\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1001","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:596","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.map.LRUMap<K, V>)(org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.clone()))","position":"org.apache.commons.collections4.map.LRUMap:408","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = java.lang.Iterable<? extends E>.iterator()","position":"org.apache.commons.collections4.MapUtils:1740","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1024","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtIfImpl"},"status":-2},{"failures":[25,26],"variableMapping":{"predicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-1},{"failures":[7,8,9,10,13,15,16],"variableMapping":{"this":"this","currentIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(this.java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.AbstractLinkedList:848","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.TransformIterator<I, O>.transform(java.util.Iterator<? extends I>.next())","position":"org.apache.commons.collections4.iterators.TransformIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"lock"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object instanceof java.util.Map.Entry)) {\n    return false;\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2016","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[27,28,29,30,31,32,33,34,35,36,37,38,39,40],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:125","type":"CtReturnImpl"},"status":-1},{"failures":[13],"variableMapping":{"element":"root"},"name":"replace","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:145","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"relativePosition":"index"},"name":"replace","transplant":{"sourceCode":"if (int < 0) {\n    int--;\n} ","position":"org.apache.commons.collections4.list.TreeList:523","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.GrowthList:126","type":"CtInvocationImpl"},"status":-2},{"failures":[41,42],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-1},{"failures":[43],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.ArrayList<java.util.Iterator<? extends E>>.get(int).remove()","position":"org.apache.commons.collections4.iterators.CollatingIterator:272","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(heightRightMinusLeft()) > 0) {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.min();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMin();\n    if ((int) < 0) {\n        (int)++;\n    } \n} else {\n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.max();\n    E = org.apache.commons.collections4.list.TreeList.AVLNode<E>.E;\n    if (boolean) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    } \n    final org.apache.commons.collections4.list.TreeList.AVLNode<E> org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n    org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeMax();\n    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>) == null) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E> = org.apache.commons.collections4.list.TreeList.AVLNode<E>;\n        boolean = true;\n    } \n    if ((int) > 0) {\n        (int)--;\n    } \n}","position":"org.apache.commons.collections4.list.TreeList:637","type":"CtIfImpl"},"status":-2},{"failures":[44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,14,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"));\n} ","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"CtIfImpl"},"status":-2},{"failures":[7,8,9,191,11,13,149,14,43,17,19,192],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if ((E) == null) {\n    } else {\n        if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n        } else {\n            org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n        }\n        E = null;\n    }\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:140","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:965","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getRightSubTree()) == null) {\n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.removeSelf();\n} ","position":"org.apache.commons.collections4.list.TreeList:592","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.PredicatedBag<E>(org.apache.commons.collections4.Bag<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.bag.PredicatedBag:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.UnmodifiableCollection.org.apache.commons.collections4.collection.UnmodifiableCollection.unmodifiableCollection(java.util.Collection<V>)","position":"org.apache.commons.collections4.map.FixedSizeMap:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.GrowthList:155","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (this == java.lang.Object) || ((java.lang.Object instanceof org.apache.commons.collections4.comparators.BooleanComparator) && ((this.boolean) == (((org.apache.commons.collections4.comparators.BooleanComparator)(java.lang.Object)).boolean)))","position":"org.apache.commons.collections4.comparators.BooleanComparator:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ReverseListIterator:109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"((((int + \" + \") + int) + \" > \") + org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.(lengthInBits(K)))","name":"math","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:855","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.ListIterator<E>","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:55","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.sequence.EditCommand:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"c":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[193,194,195],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:132","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.PredicatedList:134","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.CollectionBag<E>.add(E, 1)","position":"org.apache.commons.collections4.bag.CollectionBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * The keySet iterator.\n */\nstatic class ReferenceKeySetIterator<K> extends org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, java.lang.Object> implements java.util.Iterator<K> {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    ReferenceKeySetIterator(final org.apache.commons.collections4.map.AbstractReferenceMap<K, ?> parent) {\n        org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, java.lang.Object>.super(((org.apache.commons.collections4.map.AbstractReferenceMap<K, java.lang.Object>)(org.apache.commons.collections4.map.AbstractReferenceMap<K, ?>)));\n    }\n\n    public K next() {\n        return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, java.lang.Object>.nextEntry().getKey();\n    }\n}","position":"org.apache.commons.collections4.map.AbstractReferenceMap:868","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,1,2,3,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,4,5,6,238,239,240,241,242,243,244,245,246],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{"fromIndex":"index"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>(this , int)","position":"org.apache.commons.collections4.list.AbstractLinkedList:127","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.list.TreeList:1094","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"status":-2},{"failures":[247,248,249,250,251,252,253,254,255,256,257,258,259],"variableMapping":{"it2":"iterator","it1":"iterator"},"name":"replace","transplant":{"sourceCode":"while ((java.util.ListIterator<?>.hasNext()) && (java.util.ListIterator<?>.hasNext())) {\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    final java.lang.Object java.lang.Object = java.util.ListIterator<?>.next();\n    if (!(java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object))) {\n        return false;\n    } \n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:364","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.values()","position":"org.apache.commons.collections4.map.Flat3Map:1024","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = ((java.util.Iterator<? extends E>)(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:109","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.LazySortedMap:143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingListIterator<E>._reset()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:238","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[43,192],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:161","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl"},"status":-2},{"failures":[260,261],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"for (int int = int ; int < int ; int++) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null);\n}","position":"org.apache.commons.collections4.list.LazyList:126","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"object":"object"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)","position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"hasNext","changed":"hasNext"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[262],"variableMapping":{"map":"map"},"name":"replace","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.DefaultedMap<K, V>(java.util.Map<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.DefaultedMap:131","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Predicate<? super I>[][int] = java.util.Map.Entry<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.getKey()","position":"org.apache.commons.collections4.functors.SwitchTransformer:113","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Iterator<? extends E>.hasNext()","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())","position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.this(new org.apache.commons.collections4.map.HashedMap<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>())","position":"org.apache.commons.collections4.map.MultiKeyMap:110","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:90","type":"CtReturnImpl"},"status":-2},{"failures":[196,197,198,200,212,2,226,5],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:99","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:170","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":-2},{"failures":[263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.SetUniqueList<E>.addAll(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size(), java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.SetUniqueList:171","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MultiMap<K, V>.put(org.apache.commons.collections4.Transformer<E, K>.transform(E), org.apache.commons.collections4.Transformer<E, V>.transform(E))","position":"org.apache.commons.collections4.MapUtils:1743","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"iPredicate":"predicate"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<? super T>","position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsTruePredicate.org.apache.commons.collections4.functors.NullIsTruePredicate.nullIsTruePredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:518","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"coll":"coll","this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.addAll(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.size(), java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.SetUniqueList:171","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:144","type":"CtReturnImpl"},"status":-2},{"failures":[247,248,249,250,251,253,254,255,256,257,258,259],"variableMapping":{"modified":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:355","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.remove(java.lang.Object)","position":"org.apache.commons.collections4.map.PassiveExpiringMap:460","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":254,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":46,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":75,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":125,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":148,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":118,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":123,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":199,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":127,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":40,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":58,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":133,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":261,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":273,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":260,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":181,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":189,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":18,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking":193,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":268,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":288,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":272,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":130,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":227,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":281,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":10,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":111,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":252,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":165,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":241,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":53,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":94,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":277,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":24,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":179,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":238,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":157,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":183,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":202,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":98,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":102,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":116,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":247,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":104,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":243,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":158,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":253,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":20,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":141,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":239,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":28,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":172,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndexBoundsChecking2":195,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":64,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":119,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":121,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":112,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":107,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":234,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":30,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":69,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":140,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":190,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":205,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":105,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":249,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":32,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":126,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":175,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":85,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":242,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":275,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":231,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":14,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":142,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":153,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":201,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":51,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":197,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":135,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":217,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":287,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":43,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":285,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":143,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":283,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicate":25,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":78,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":89,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":167,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":257,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":170,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":200,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":211,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":95,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":154,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":224,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":23,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":59,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":96,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":248,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":90,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":115,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":262,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":36,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":74,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":192,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":286,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":101,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":178,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":206,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":222,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":278,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":150,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":267,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":220,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":44,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":35,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":37,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":68,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":232,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":87,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":185,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":70,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":151,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":106,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":103,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":147,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":156,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":110,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":91,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":80,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":186,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":215,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":166,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":174,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":49,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":92,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":145,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":136,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":137,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":19,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":71,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":47,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":149,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":56,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":187,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":84,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":29,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":54,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":57,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":11,"org.apache.commons.collections4.PredicateUtilsTest.testNullIsTruePredicateEx1":26,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":117,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":265,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":204,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":263,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":235,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":65,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":60,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":3,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":50,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":22,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":81,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":52,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":38,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":198,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":256,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":207,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":216,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":45,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":213,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":191,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":63,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":264,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":144,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":0,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":279,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":79,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":162,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":269,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":228,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":289,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":34,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":276,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":237,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":108,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":109,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":214,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":171,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":93,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":31,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":271,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":122,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":255,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":113,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":13,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":219,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":280,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":176,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":233,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":164,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":62,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":282,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":163,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":169,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":240,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":124,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":138,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":292,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":132,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":7,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":8,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":9,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":290,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":88,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":21,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":67,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":83,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":39,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":27,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":55,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":223,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":139,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":270,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":86,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":246,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":259,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":194,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":212,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":203,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":182,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":258,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":77,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":100,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":188,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":180,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":229,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":15,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":42,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":152,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":245,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":244,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":146,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":6,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":33,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":66,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":72,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":131,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":48,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":230,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":274,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":1,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":218,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":291,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":99,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":61,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":159,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":16,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":4,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":5,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":12,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":97,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":225,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":129,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":226,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":2,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":184,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":128,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":173}}]
