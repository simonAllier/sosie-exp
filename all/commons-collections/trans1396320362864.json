[{"failures":[],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:158","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.StaticBucketMap.EntrySet()","position":"org.apache.commons.collections4.map.StaticBucketMap:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.ListOrderedMap.ValuesView<V>(this)","position":"org.apache.commons.collections4.map.ListOrderedMap:336","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this","position":"org.apache.commons.collections4.list.TreeList:417","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:143","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?> == null) || (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<?, ?>.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:746","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:109","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":0},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"object"},"name":"add","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.list.AbstractLinkedList:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean |= java.util.Collection<E>.retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.CompositeCollection:316","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The array of keys must not be null\")","position":"org.apache.commons.collections4.keyvalue.MultiKey:160","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:141","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.List<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>> = new java.util.ArrayList<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>()","position":"org.apache.commons.collections4.list.CursorableLinkedList:91","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1873799975157099624L","position":"org.apache.commons.collections4.bag.UnmodifiableBag:45","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:271","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) && org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } else {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getRightChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } \n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.copyColor(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()];\n    }\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1019","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) > 0","position":"org.apache.commons.collections4.list.TreeList:1064","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NullIsExceptionPredicate.org.apache.commons.collections4.functors.NullIsExceptionPredicate.nullIsExceptionPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:488","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (K == null) {\n    switch (int) {\n        case 3 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 2 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n        case 1 :\n            if ((K) == null) {\n                final V V = V;\n                V = V;\n                return V;\n            } \n    }\n} else {\n    if ((int) > 0) {\n        final int int = K.hashCode();\n        switch (int) {\n            case 3 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 2 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n            case 1 :\n                if (((int) == int) && (K.equals(K))) {\n                    final V V = V;\n                    V = V;\n                    return V;\n                } \n        }\n    } \n}","position":"org.apache.commons.collections4.map.Flat3Map:295","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18],"variableMapping":{"object":"lock"},"name":"replace","transplant":{"sourceCode":"return ((java.util.Collection<?>)(java.lang.Object)).isEmpty()","position":"org.apache.commons.collections4.CollectionUtils:1386","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().add(E);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:106","type":"CtSynchronizedImpl"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.ListIterator<E>.hasPrevious()) == false) {\n    E E = null;\n    while (this.java.util.ListIterator<E>.hasNext()) {\n        E = this.java.util.ListIterator<E>.next();\n    }\n    this.java.util.ListIterator<E>.previous();\n    return E;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:144","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:67","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iPredicate":"predicate"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.Predicate<? super T>","position":"org.apache.commons.collections4.functors.PredicateTransformer:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[123],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.AndPredicate<T>(org.apache.commons.collections4.Predicate<? super T> , org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.AndPredicate:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (java.util.Iterator<E>.hasNext()) {\n    final E E = java.util.Iterator<E>.next();\n    for (int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(E) ; int > 0 ; int--) {\n        java.lang.Object[][int++] = E;\n    }\n}","position":"org.apache.commons.collections4.bag.AbstractMapBag:436","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"while (java.util.Iterator<E>.hasNext()) {\n    java.util.Iterator<E>.next();\n    java.util.Iterator<E>.remove();\n}","position":"org.apache.commons.collections4.list.AbstractLinkedList:1030","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerClosure.org.apache.commons.collections4.functors.TransformerClosure.transformerClosure(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.ClosureUtils:98","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:156","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Set<java.util.Map.Entry<K, V>> instanceof org.apache.commons.collections4.Unmodifiable) {\n    return java.util.Set<java.util.Map.Entry<K, V>>;\n} ","position":"org.apache.commons.collections4.map.UnmodifiableEntrySet:55","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:67","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1659","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.Flat3Map.EntryIterator<K, V>.nextEntry()","position":"org.apache.commons.collections4.map.Flat3Map:937","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[124,125,126,127,128,129,130,131,132],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingListIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"CtIfImpl"},"status":-1},{"failures":[133,134],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-1},{"failures":[135,136,137,138,139],"variableMapping":{"prototype":"constantToReturn"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T })","position":"org.apache.commons.collections4.functors.PrototypeFactory:69","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.org.apache.commons.collections4.iterators.EmptyOrderedMapIterator.<K,V>emptyOrderedMapIterator()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:341","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.System.java.lang.System.arraycopy(this.java.util.Map<K, V>[], 0, java.util.Map<K, V>[], 0, int)","position":"org.apache.commons.collections4.map.CompositeMap:161","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:89","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:182","type":"CtLocalVariableImpl"},"status":-2},{"failures":[38],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"try {\n    java.util.Set<E> = java.util.Set<E>.getClass().newInstance();\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    java.util.Set<E> = new java.util.HashSet<E>();\n}","position":"org.apache.commons.collections4.list.SetUniqueList:336","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-1},{"failures":[160,161,162,163,164,165,166,167,168,169,170,171],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList<E>.removeAllNodes()","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:224","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return !(org.apache.commons.collections4.ArrayStack<E>.isEmpty()) ? org.apache.commons.collections4.ArrayStack<E>.pop() : java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[125,126,127,128,129,130,132],"binaryOperator":"(java.util.ListIterator<E>.hasNext()) == false","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LoopingListIterator:90","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"V = null","position":"org.apache.commons.collections4.map.AbstractReferenceMap:844","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"array":"object"},"name":"add","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.list.AbstractLinkedList:189","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[172,173,174,146,147,175,168,169,176,177,178,179,180,181,182,183,184,185,186,187],"variableMapping":{"obj":"object","value":"count"},"name":"replace","transplant":{"sourceCode":"return int == int","position":"org.apache.commons.collections4.bag.AbstractMapBag:417","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException(((((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") greater than the size of the \") + \"list (\") + (int)) + \").\"))","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"CtThrowImpl"},"status":-2},{"failures":[188,189,190,191,192,193,194,195,196,197],"variableMapping":{"stack":"stack","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.NullPredicate.org.apache.commons.collections4.functors.NullPredicate.nullPredicate()","position":"org.apache.commons.collections4.functors.EqualPredicate:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TransformedBag<E>","position":"org.apache.commons.collections4.bag.TransformedBag:86","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-2},{"failures":[198,199,200,201,202],"variableMapping":{"list":"list"},"name":"add","transplant":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E> == null) {\n    throw new java.lang.IllegalArgumentException(\"List must not be null\");\n} ","position":"org.apache.commons.collections4.list.SetUniqueList:72","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"~(int << 11)","position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:136","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:236","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Map.Entry<K, V> == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.map.AbstractReferenceMap:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":0},{"failures":[203,204,205,206,207,208,209],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size singleton\")","position":"org.apache.commons.collections4.map.SingletonMap:251","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.ListIterator<?> java.util.ListIterator<?> = ((java.util.ListIterator<?>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:162","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(((java.util.Iterator<? extends E>)(E)))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:165","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:198","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigateNext().getKey()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1725","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 0 :\n    return ;","position":"org.apache.commons.collections4.map.SingletonMap:267","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSet:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.InternalError()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1298","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>.add(E)","position":"org.apache.commons.collections4.list.CursorableLinkedList:607","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[210],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1191","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.ClosureTransformer:49","type":"CtThrowImpl"},"status":-1},{"failures":[211,212,213,214,215,216,217,218,219,220,221,222,141,142,144,223,224,225,226,227,228,229,230,161,162,163,164,166,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,32,406,36,407,64,86,88,90,408,93,409,410,411,412,413,414,415,416,417,115,117,119,418,122],"variableMapping":{"this":"this","object":"object"},"name":"replace","transplant":{"sourceCode":"return (java.lang.Object == org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().contains(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:108","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1172","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:150","type":"CtLocalVariableImpl"},"status":-2},{"failures":[0],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.list.AbstractLinkedList:368","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[4,7,8,9,12,13,16,419,221,222,141,142,143,144,145,146,147,148,420,223,149,150,151,421,152,153,154,155,156,422,157,18,158,423,159],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:187","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.PassiveExpiringMap:379","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[1],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:124","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-1},{"failures":[424,425,426,427],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"underlying nodeList has no more elements\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:76","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.queue.CircularFifoQueue:344","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"ListIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:44","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:73","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"-3319417438027438040L","position":"org.apache.commons.collections4.functors.UniquePredicate:35","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-2},{"failures":[26],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final T T : java.lang.Iterable<T>) {\n    if (org.apache.commons.collections4.Predicate<? super T>.evaluate(T)) {\n        return T;\n    } \n}","position":"org.apache.commons.collections4.CollectionUtils:643","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:71","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) != null) {\n    if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) == (-1)) {\n        java.lang.StringBuilder.append(\"predecessor=\").append(\"ROOT\");\n    } else {\n        java.lang.StringBuilder.append(\"predecessor=\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.getKey()).append(\" [\").append(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int).append(\"]\");\n    }\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1379","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().last()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:253","type":"CtInvocationImpl"},"status":-2},{"failures":[203,204,205,428,206,207,208,209,429],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.AbstractLinkedList:279","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().next()","position":"org.apache.commons.collections4.iterators.AbstractIteratorDecorator:44","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":347,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":348,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":107,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray":329,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray":342,"org.apache.commons.collections4.PredicateUtilsTest.testAndPredicateEx":123,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":223,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContains":396,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":24,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":41,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionIterator":381,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray":313,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":22,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray":346,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContains":374,"org.apache.commons.collections4.bag.TransformedBagTest.testBagIterator":246,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":46,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIterator":427,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionToArray":280,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionToArray":214,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":71,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":85,"org.apache.commons.collections4.bag.TransformedBagTest.testBagAdd":244,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":100,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testValuesRemoveChangesMap":284,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArray":14,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":422,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":170,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContains":388,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":160,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":148,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionIterator":387,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":112,"org.apache.commons.collections4.map.LazySortedMapTest.initializationError":135,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAddAll":254,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":86,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionIterator":240,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAdd":279,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet":331,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":298,"org.apache.commons.collections4.map.LazyMapTest.initializationError":136,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":90,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":310,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray":309,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":44,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagIterator":269,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":83,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":194,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":296,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAddAll":375,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":306,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":91,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":195,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionToArray":397,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContainsAll":218,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContainsAll":276,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":208,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":328,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":66,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionToArray":386,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":222,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionAdd":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":167,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":56,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":312,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContains":255,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testValuesRemoveChangesMap":354,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":153,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":201,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":19,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":163,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionToArray":380,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemoveAll":174,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemove":176,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContains":272,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testValuesRemoveChangesMap":369,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFail":10,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":95,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionToArray":258,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping1":127,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemove":178,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testLooping2":128,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemoveAll":185,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray":322,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":289,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":316,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":205,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemove":183,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":38,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionContainsAll":273,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":108,"org.apache.commons.collections4.bag.HashBagTest.testCollectionRemove":173,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagIterator":230,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":171,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testValuesRemoveChangesMap":304,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionIterator":213,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContainsAll":6,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionIterator":264,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueueOffer":382,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":345,"org.apache.commons.collections4.list.PredicatedListTest.testLegalAddAll":417,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemoveAll":181,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContains":229,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":97,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":192,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet_decorateTransform":324,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagAdd":233,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray":337,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagIterator":235,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":120,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionToArray":404,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagHashCode":1,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":355,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":20,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":356,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAddAll":402,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":428,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionContains":277,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":308,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionRemoveAll":177,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAddAll":384,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":81,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":339,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionToArray":275,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorRemoveProtectsInvariants":13,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":117,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":28,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":70,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":109,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":419,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":149,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagAdd":2,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":291,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionToArray":391,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":292,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":414,"org.apache.commons.collections4.queue.TransformedQueueTest.testQueueOffer":373,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":80,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":65,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains1":352,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":31,"org.apache.commons.collections4.map.FixedSizeMapTest.testEntrySetContains2":353,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingOverBoundary":130,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList_decorateTransform":407,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":50,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":164,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionContainsAll":256,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":52,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":162,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContains":234,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":421,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":320,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue_decorateTransform":372,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":105,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContains":224,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testPreviousKey":133,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":293,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":147,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":294,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":143,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContainsAll":212,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":168,"org.apache.commons.collections4.bag.HashBagTest.testCollectionIterator":219,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":146,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":118,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContainsAll":239,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":87,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":144,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":363,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsHashBag":17,"org.apache.commons.collections4.bag.PredicatedBagTest.testlegalAddRemove":232,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testValuesRemoveChangesMap":287,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":154,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":362,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":75,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAdd":247,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":321,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":104,"org.apache.commons.collections4.list.TransformedListTest.testTransformedList":64,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull":138,"org.apache.commons.collections4.set.ListOrderedSetTest.testListAddIndexed":338,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains2":350,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":60,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEntrySetContains1":349,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":26,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionRemove":180,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAddAll":389,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRetainAll":8,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":43,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEquals":16,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":76,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray":412,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionContains":238,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":110,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":150,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":323,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionToArray":377,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection":399,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionToArray":263,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":411,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":358,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":357,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":131,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":139,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":67,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":314,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":99,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray":231,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemove":3,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testUnsupportedRemove":175,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionClear":156,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContains":379,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":58,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":40,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":72,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAddAll":216,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":119,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContains":245,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":51,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":169,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAdd":270,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionAdd":385,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":285,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionAdd":403,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionRemoveAll":179,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":286,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray":418,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionIterator":398,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":114,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":101,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":158,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAddAll":261,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":68,"org.apache.commons.collections4.queue.TransformedQueueTest.testTransformedQueue":371,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":236,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":207,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":198,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagToArrayPopulate":15,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionRemoveAll":182,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag_decorateTransform":266,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testFullIteratorWithNodeConstructor":425,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContains":249,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":73,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":78,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionToArray":227,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":423,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":121,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":116,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":152,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagContains":5,"org.apache.commons.collections4.collection.TransformedCollectionTest.testTransformedCollection_decorateTransform":400,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":305,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagAdd":228,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":315,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":69,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":74,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContains":268,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagSize":7,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":57,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":54,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":27,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testEmptyIterator":426,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":165,"org.apache.commons.collections4.CollectionUtilsTest.testTransformedCollection_2":370,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray":415,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionAddAll":248,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":367,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testSet":126,"org.apache.commons.collections4.set.TransformedSetTest.testTransformedSet":325,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":368,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":295,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemoveAll":186,"org.apache.commons.collections4.set.ListOrderedSet2Test.testListAddIndexed":318,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":288,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionAdd":262,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":93,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":166,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":103,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContains":393,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionIterator":405,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListDoubleInsert":202,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":290,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":297,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":122,"org.apache.commons.collections4.bag.HashBagTest.testCollectionContains":217,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testPreviousKey":134,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionIterator":392,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagAdd":267,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections307":200,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAdd":221,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":141,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":199,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray":317,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":137,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionContainsAll":250,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":196,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":48,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":30,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":94,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":301,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":237,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":300,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":335,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":204,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":210,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag":242,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":102,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionAddAll":271,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":96,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionContainsAll":225,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":23,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":413,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":343,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":42,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":88,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":359,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":360,"org.apache.commons.collections4.bag.HashBagTest.testCollectionToArray":220,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContains":383,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray":406,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":197,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":193,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionClear":140,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":344,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAdd":18,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":92,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":37,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":32,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray":408,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":155,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":326,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":142,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailNoMore":11,"org.apache.commons.collections4.iterators.NodeListIteratorTest.testEmptyIteratorWithNodeConstructor":424,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":34,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":191,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":336,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":4,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContains":260,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":49,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testValuesRemoveChangesMap":364,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":333,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionAdd":376,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":59,"org.apache.commons.collections4.map.UnmodifiableMapTest.testValuesRemoveChangesMap":361,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionAdd":390,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":45,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":420,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":283,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":282,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionRemove":184,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":79,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":340,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":203,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionToArray":394,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":125,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":161,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":35,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":159,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":319,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":307,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":209,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":409,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":21,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":330,"org.apache.commons.collections4.bag.CollectionSortedBagTest.testCollectionContainsAll":259,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":334,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":36,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":53,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":206,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":62,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testUnsupportedRemove":172,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":365,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":410,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":366,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":63,"org.apache.commons.collections4.bag.UnmodifiableSortedBagTest.testCollectionIterator":226,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":25,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":188,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":189,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":61,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":190,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":106,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testRemovingElementsAndIteratingForward":124,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":311,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":429,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":47,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionIterator":251,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":327,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":84,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIteratorFailDoubleRemove":12,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionIterator":395,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":39,"org.apache.commons.collections4.bag.TransformedBagTest.testTransformedBag_decorateTransform":243,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":111,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":33,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":82,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":302,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":303,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testReset":129,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":157,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testValuesRemoveChangesMap":351,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":55,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionToArray":241,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testCollectionIterator":274,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionAddAll":278,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":151,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testTransformedBag":265,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":115,"org.apache.commons.collections4.bag.TreeBagTest.testCollectionIterator":257,"org.apache.commons.collections4.functors.CatchAndRethrowClosureTest.testThrowingClosure":0,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagIterator":9,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":113,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testJoggingNotOverBoundary":132,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionIterator":281,"org.apache.commons.collections4.bag.CollectionBagTest.testCollectionRemove":187,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":341,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionIterator":378,"org.apache.commons.collections4.bag.HashBagTest.testCollectionAdd":215,"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContains":401,"org.apache.commons.collections4.set.TransformedSortedSetTest.testTransformedSet_decorateTransform":332,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":416,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":89,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":98,"org.apache.commons.collections4.bag.UnmodifiableBagTest.testCollectionContains":211,"org.apache.commons.collections4.bag.TransformedBagTest.testCollectionToArray":252}}]
