[{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.followRight(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1228","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.ArrayIndexOutOfBoundsException(((\"Attempt to make an ArrayIterator that \" + java.lang.String) + \"s beyond the end of the array. \"))","position":"org.apache.commons.collections4.iterators.ArrayIterator:114","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return (org.apache.commons.collections4.Predicate<? super V>) != null","position":"org.apache.commons.collections4.map.PredicatedMap:174","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:233","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.SortedMap<K, V>.isEmpty()) {\n    return null;\n} ","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().lastKey()","position":"org.apache.commons.collections4.bag.TreeBag:100","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().first();\n}","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:88","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.CollectionUtils:393","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>.remove(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractMapBag:329","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int) == int) && org.apache.commons.collections4.map.AbstractHashedMap<K, V>.(isEqualKey(java.lang.Object, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.java.lang.Object))) {\n    final V V = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue();\n    org.apache.commons.collections4.map.AbstractHashedMap<K, V>.removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>);\n    return V;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:344","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (((java.lang.Object[])(java.lang.Object)).int) == 0","position":"org.apache.commons.collections4.CollectionUtils:1390","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:115","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The comparator must not be null\")","position":"org.apache.commons.collections4.CollectionUtils:1595","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:93","type":"CtThrowImpl"},"status":-1},{"failures":[1,2,3,4,5,6,7,8],"variableMapping":{"this":"this","currentIterator":"currentIterator","callCounter":"callCounter"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:824","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:118","type":"CtSynchronizedImpl"},"status":-2},{"failures":[9,10,11,12,13,14,15,16,17,18],"variableMapping":{"stack":"stack","currentIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(this.java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:182","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[19,20,21],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException(\"Cursor closed\")","position":"org.apache.commons.collections4.list.CursorableLinkedList:548","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:49","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E>.(getLeftSubTree()) != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.toArray(java.lang.Object[], (int + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)));\n} ","position":"org.apache.commons.collections4.list.TreeList:454","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()))","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:63","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-2},{"failures":[1,2,4,6,8],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:99","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int]","position":"org.apache.commons.collections4.map.AbstractHashedMap:278","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:113","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.MapUtils:237","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformerPredicate.org.apache.commons.collections4.functors.TransformerPredicate.transformerPredicate(org.apache.commons.collections4.Transformer<? super T, java.lang.Boolean>)","position":"org.apache.commons.collections4.PredicateUtils:470","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.PeekingIterator.org.apache.commons.collections4.iterators.PeekingIterator.peekingIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.IteratorUtils:825","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()","position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Trie<K, V>.size()","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,3,7,178,14,15,179,180,181,182,183,184,185,186,187,19,20,21],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"binaryOperator":"((\"Couldn\\'t get the node: \" + \"index (\") + int)","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = null;\n    boolean = true;\n    (int)--;\n} else {\n    boolean = false;\n    boolean = false;\n}","position":"org.apache.commons.collections4.list.CursorableLinkedList:515","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[188,189],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:239","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Transformer must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:676","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ForClosure:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitInsertCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.InsertCommand:54","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.SingletonMap<K, V>.getKey().hashCode()","position":"org.apache.commons.collections4.map.SingletonMap:556","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{"iArgs":"iArgs","iConstructor":"iConstructor"},"name":"replace","transplant":{"sourceCode":"return this.java.lang.reflect.Constructor<T>.newInstance(this.java.lang.Object[])","position":"org.apache.commons.collections4.functors.InstantiateFactory:126","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractHashedMap<K, V>.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.Flat3Map:199","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.set.CompositeSet:430","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.nextIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:115","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.collections4.bag.AbstractMapBag:289","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.Node<E>.org.apache.commons.collections4.list.AbstractLinkedList.Node<E> = org.apache.commons.collections4.list.AbstractLinkedList.Node<E>","position":"org.apache.commons.collections4.list.NodeCachingLinkedList:170","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Implementation of a map entry that checks additions via setValue.\n */\nprivate class MapEntry extends org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V> {\n    /** \n     * The parent map\n     */\nprivate final org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> parent;\n\n    protected MapEntry(final java.util.Map.Entry<K, V> entry ,final org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> parent) {\n        org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.super(java.util.Map.Entry<K, V>);\n        this.org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V> = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>;\n    }\n\n    @java.lang.Override\n    public V setValue(V value) {\n        V = org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator<K, V>.checkSetValue(V);\n        return org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.getMapEntry().setValue(V);\n    }\n}","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:189","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"~(int << 9)","position":"org.apache.commons.collections4.map.AbstractHashedMap:396","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:152","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:113","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.ReferenceMap:180","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractLinkedMap:144","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.LazySortedMap:143","type":"CtLocalVariableImpl"},"status":-2},{"failures":[190,191],"binaryOperator":"(java.util.Collection<? extends E>.size()) > 0","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.OnePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.OnePredicate:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"tmpMap":"map"},"name":"add","transplant":{"sourceCode":"return java.util.SortedMap<K, V>","position":"org.apache.commons.collections4.map.UnmodifiableSortedMap:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:151","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.TreeBag<E>.getMap()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtInvocationImpl"},"status":-2},{"failures":[192],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[192],"name":"inlineConstant","inlineConstant":"int int = 0","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.NodeListIterator(((org.w3c.dom.Node)(java.lang.Object)))","position":"org.apache.commons.collections4.IteratorUtils:1075","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[0],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.util.EmptyStackException()","position":"org.apache.commons.collections4.ArrayStack:90","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-1},{"failures":[193,194],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() is not supported\")","position":"org.apache.commons.collections4.iterators.PermutationIterator:153","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object[] = java.lang.reflect.Array.((java.lang.Object[])(java.lang.reflect.Array.newInstance(T[].getClass().getComponentType(), 0)))","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:144","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"in":"in"},"name":"add","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final V V = ((V)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.AbstractHashedMap:1268","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.TreeList.AVLNode<E> != null) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.min().setLeft(null, org.apache.commons.collections4.list.TreeList.AVLNode<E>);\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.int = (int - int) + 1;\n} ","position":"org.apache.commons.collections4.list.TreeList:853","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(null)","position":"org.apache.commons.collections4.list.LazyList:127","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.lang.CharSequence == null) || (java.lang.CharSequence == null)) {\n    throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\");\n} ","position":"org.apache.commons.collections4.ListUtils:575","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (boolean) {\n    java.lang.StringBuilder.append(\", \");\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1392","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} else {\n    return null;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1078","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:265","type":"CtIfImpl"},"status":-2},{"failures":[195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{"input":"input"},"name":"add","transplant":{"sourceCode":"if (T == null) {\n    return null;\n} ","position":"org.apache.commons.collections4.functors.CloneTransformer:66","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return T","position":"org.apache.commons.collections4.functors.ClosureTransformer:73","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.list.AbstractLinkedList:869","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.addEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, int)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:910","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().subMap(K, K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:145","type":"CtLocalVariableImpl"},"status":-2},{"failures":[252,253,254],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionFactory.org.apache.commons.collections4.functors.ExceptionFactory.<T>exceptionFactory()","position":"org.apache.commons.collections4.FactoryUtils:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.collections4.iterators.PermutationIterator<E>.(hasNext())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.PermutationIterator:108","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>>.remove()","position":"org.apache.commons.collections4.list.CursorableLinkedList:318","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T>[].int) == 1) {\n    return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.Predicate<? super T>[][0]));\n} ","position":"org.apache.commons.collections4.functors.OnePredicate:57","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object[] = T[]","position":"org.apache.commons.collections4.set.CompositeSet:184","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:122","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"factory":"factory"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = org.apache.commons.collections4.Factory<? extends E>.create()","position":"org.apache.commons.collections4.list.LazyList:118","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.bag.AbstractMapBag:439","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = (int * 37) + ((org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior) == null ? 0 : org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior.hashCode())","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:260","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.ReferenceIdentityMap:236","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    java.lang.reflect.Constructor<T> = java.lang.Class<T>.getConstructor(java.lang.Class<?>[]);\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    throw new java.lang.IllegalArgumentException(\"InstantiateFactory: The constructor must exist and be public \");\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:107","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"MapIterator[]\"","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:166","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.IfClosure:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"added":"previousObjectSet","changed":"previousObjectSet"},"name":"add","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.collection.UnmodifiableCollection:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.EqualPredicate<T>(T)","position":"org.apache.commons.collections4.functors.EqualPredicate:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.UnmodifiableEntrySet.org.apache.commons.collections4.map.UnmodifiableEntrySet.unmodifiableEntrySet(java.util.Set<java.util.Map.Entry<K, V>>)","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.incrementModCount();\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.setKeyValue(K, V);\n    } \n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:177","type":"CtIfImpl"},"status":-2},{"failures":[9,10,11,12,13,255,14,15,16,17],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":-1},{"failureDictionary":{"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":181,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryConstant":254,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":52,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":66,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":88,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":64,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":112,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":192,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":211,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":68,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray":33,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":53,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":91,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":74,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":168,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":176,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":73,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":200,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":8,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":105,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":152,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":244,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":187,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":124,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":1,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":166,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":241,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":144,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":170,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemove":44,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":214,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":128,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":110,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":132,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":134,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":246,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":108,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":145,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":81,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":242,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionAddAll":42,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":148,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":159,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":97,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRetainAll":31,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":209,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":113,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":62,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":106,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":136,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":207,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray":45,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":102,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":80,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIteratorRemove":38,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":177,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":217,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":50,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":135,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":147,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":67,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":155,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":162,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":115,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":245,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":204,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":15,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":82,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":140,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":213,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":186,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":251,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":232,"org.apache.commons.collections4.map.DefaultedMapTest.testSimpleSerialization":193,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":16,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":83,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":55,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":119,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":154,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":157,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":212,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":223,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":125,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":141,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":197,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":92,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":126,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":188,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":109,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":120,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionAddAll":23,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":51,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":131,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":236,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":165,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":195,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":218,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":3,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":39,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":235,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":179,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContains":24,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIteratorRemove":28,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":100,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":205,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":6,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":117,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":172,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":7,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":47,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":138,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":17,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":133,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":86,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":143,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":221,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":121,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":59,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":173,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":230,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":153,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":161,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":164,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":184,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":87,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":122,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":4,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":76,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":250,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":18,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":48,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":182,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":89,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":174,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":114,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":20,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":194,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":90,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":13,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":111,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":216,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":208,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":98,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":93,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":227,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":185,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":57,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":19,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIsEmpty":41,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionContainsAll":25,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":210,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":219,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":231,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":252,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":180,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":228,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":0,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":12,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":220,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":96,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":84,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":61,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":56,"org.apache.commons.collections4.bag.SynchronizedBagTest.testFullBagCompatibility":22,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":149,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":201,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionToArray2":34,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionSize":32,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":237,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":137,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":139,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":229,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":158,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":123,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionIterator":46,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":63,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":189,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":107,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":191,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":255,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":234,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":163,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":206,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":95,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionSize":37,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":150,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":156,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":243,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":65,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":78,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemoveAll":30,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIsEmpty":26,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":58,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":72,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":103,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":142,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":9,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":10,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":11,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":118,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionRemove":29,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":99,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":60,"org.apache.commons.collections4.bag.SynchronizedBagTest.testCollectionIterator":27,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":21,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContains":40,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":196,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":116,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":249,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":224,"org.apache.commons.collections4.FactoryUtilsTest.testConstantFactoryNull":253,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRetainAll":43,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":215,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":169,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":54,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":130,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":175,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":167,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionToArray2":36,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":202,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":222,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":178,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":248,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":247,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":85,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":2,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":190,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":240,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":101,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":71,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":183,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":203,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":225,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":5,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":233,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":129,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionContainsAll":35,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":94,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":146,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":238,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":127,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":239,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":198,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":70,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":199,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":171,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":226,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":69,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":160}}]
