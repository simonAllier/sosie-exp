[{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"new org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior()","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:59","type":"CtNewClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.entrySet())","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.InverseViewMapEntryIterator.createEntry(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.ViewIterator.navigatePrevious())","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1812","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.DefaultedMap:193","type":"CtInvocationImpl"},"status":-2},{"failures":[0,1],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"(((((((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","key":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[2],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractHashedMap:349","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:74","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int += int << 4","position":"org.apache.commons.collections4.map.MultiKeyMap:676","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:855","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final C C : C[]) {\n    boolean |= java.util.Collection<C>.add(C);\n}","position":"org.apache.commons.collections4.CollectionUtils:1156","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.queue.CircularFifoQueue.this.remove()","position":"org.apache.commons.collections4.queue.CircularFifoQueue:381","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.ArrayStack<E>.pop()","position":"org.apache.commons.collections4.iterators.PushbackIterator:96","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.collection.CompositeCollection:197","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)--","position":"org.apache.commons.collections4.iterators.FilterListIterator:150","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[2],"binaryOperator":"int >= int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.GrowthList:183","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) > 0) {\n    (int)--;\n} ","position":"org.apache.commons.collections4.list.TreeList:663","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[3,4,5,6,7,8,9],"variableMapping":{"hasNext":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"return (this.boolean) == false","position":"org.apache.commons.collections4.map.SingletonMap:427","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[10,11,12,13,14,15,16,17,18,19],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.shrink()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1003","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.LazyList<E>(java.util.List<E> , org.apache.commons.collections4.Factory<? extends E>)","position":"org.apache.commons.collections4.list.LazyList:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"The list of items must not be null\")","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:95","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[20],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:89","type":"CtReturnImpl"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:69","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().isEmpty()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:510","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * An {@link Iterator} that holds a single {@link TrieEntry}.\n */\nprivate final class SingletonIterator implements java.util.Iterator<java.util.Map.Entry<K, V>> {\n    private final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry;\n\n    private int hit = 0;\n\n    public SingletonIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> entry) {\n        this.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    public boolean hasNext() {\n        return (int) == 0;\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        if ((int) != 0) {\n            throw new java.util.NoSuchElementException();\n        } \n        ++(int);\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n    }\n\n    public void remove() {\n        if ((int) != 1) {\n            throw new java.lang.IllegalStateException();\n        } \n        ++(int);\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.removeEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2295","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"(this.int)--","position":"org.apache.commons.collections4.map.AbstractReferenceMap:406","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ClosureTransformer<T>(org.apache.commons.collections4.Closure<? super T>)","position":"org.apache.commons.collections4.functors.ClosureTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[30,31],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitDeleteCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.DeleteCommand:53","type":"CtInvocationImpl"},"status":-1},{"failures":[32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373,374,375,376,377,378,379,380,381,382,383,384,385,386,387,388,389,390,391,392,393,394,395,396,397,398,399,400,401,402,403,404,405,406,407],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.list.AbstractLinkedList:140","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>","position":"org.apache.commons.collections4.map.AbstractLinkedMap:128","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"CtReturnImpl"},"status":-2},{"failures":[408,409,410,411],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:93","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<? extends E>.previous()","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:86","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.functors.TruePredicate.truePredicate()","position":"org.apache.commons.collections4.PredicateUtils:102","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:51","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[412],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-1},{"failures":[413],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.SortedMap<K, V>.size()) > 0) {\n    final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>);\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.clear();\n    org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>);\n} ","position":"org.apache.commons.collections4.map.TransformedSortedMap:95","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate","falseClosure":"closure","trueClosure":"closure"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.IfClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.IfClosure:79","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.WhileClosure<E>(org.apache.commons.collections4.Predicate<? super E> , org.apache.commons.collections4.Closure<? super E> , boolean)","position":"org.apache.commons.collections4.functors.WhileClosure:61","type":"CtReturnImpl"},"status":-2},{"failures":[4,414,415,416,417,6,7,8,418],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Integer.intValue()","position":"org.apache.commons.collections4.MapUtils:646","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OnePredicate.org.apache.commons.collections4.functors.OnePredicate.onePredicate(java.util.Collection<org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:388","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.recalcHeight()","position":"org.apache.commons.collections4.list.TreeList:527","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.SingletonMap<K, V>.getKey()","position":"org.apache.commons.collections4.map.SingletonMap:346","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().headMap(K)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[419,420,421],"name":"returnValue","position":"org.apache.commons.collections4.collection.SynchronizedCollection:196","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.MultiKeyMap<K, V>.mapIterator()","position":"org.apache.commons.collections4.map.MultiKeyMap:740","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:65","type":"CtThrowImpl"},"status":-2},{"failures":[422,423,388,389,424,425,426,390,427,428,391,392,393,394,429,430,431,395,396,397,432,398,399,433,400,401,402,404,406,434,407],"variableMapping":{"collection":"coll"},"name":"replace","transplant":{"sourceCode":"return (java.util.Collection<? extends E>.size()) > 0","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    final java.util.ListIterator<?> java.util.ListIterator<?> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<?>.hasPrevious();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:124","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    final E E = java.util.Iterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterIterator:174","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.list.FixedSizeList:175","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.collection.SynchronizedCollection<T>(java.util.Collection<T>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().headSet(E)","position":"org.apache.commons.collections4.set.TransformedSortedSet:135","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.bag.TreeBag:126","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (!(boolean)) && (!(boolean))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.AbstractMapBag<E>.doReadObject(new java.util.TreeMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>(java.util.Comparator<? super E>), java.io.ObjectInputStream)","position":"org.apache.commons.collections4.bag.TreeBag:129","type":"CtInvocationImpl"},"status":-2},{"failures":[435],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:88","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:84","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.clear()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:389","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.EnumerationIterator:93","type":"CtReturnImpl"},"status":-2},{"failures":[436],"binaryOperator":"(int <= 0)","name":"removeConditional","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"mutation","status":-1},{"failures":[437,438],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.decorated().comparator()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.bag.SynchronizedSortedBag<E>.getSortedBag().comparator();\n}","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:100","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Collection<? extends E>.size()) == 0) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.leastNode(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n    while ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getRight(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)))) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    }\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>;\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:601","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":0},{"failures":[439,440,441],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:190","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.TreeListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.TreeList:1049","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final K K = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.getFromKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1793","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bag.TreeBag<E>.getMap()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtInvocationImpl"},"status":-2},{"failures":[442,443],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"CharSequence must not be null\")","position":"org.apache.commons.collections4.ListUtils:576","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Double","position":"org.apache.commons.collections4.MapUtils:551","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray(T[])","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.MapIterator<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.remove()","position":"org.apache.commons.collections4.map.MultiKeyMap:721","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[3,4,415,416,444,417,5,445,6,8,418,9],"variableMapping":{"foundCurrentElement":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"if (boolean) {\n    continue;\n} else {\n    return false;\n}","position":"org.apache.commons.collections4.CollectionUtils:387","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.keyvalue.DefaultMapEntry<K, V>(this)","position":"org.apache.commons.collections4.keyvalue.DefaultKeyValue:112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) > 0) {\n    org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft(), null);\n} ","position":"org.apache.commons.collections4.list.TreeList:682","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:824","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.util.NoSuchElementException(\"No more elements in the iteration\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == true) {\n    throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.SingletonMap:431","type":"CtIfImpl"},"status":0},{"failures":[446],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Get must not be null\")","position":"org.apache.commons.collections4.SplitMapUtils:212","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The collection must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:56","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    final java.util.Enumeration<?> java.util.Enumeration<?> = ((java.util.Enumeration<?>)(java.lang.Object));\n    while (java.util.Enumeration<?>.hasMoreElements()) {\n        int--;\n        if (int == (-1)) {\n            return java.util.Enumeration<?>.nextElement();\n        } else {\n            java.util.Enumeration<?>.nextElement();\n        }\n    }\n    throw new java.lang.IndexOutOfBoundsException((\"Entry does not exist: \" + int));\n} else if (java.lang.Object == null) {\n    throw new java.lang.IllegalArgumentException(\"Unsupported object type: null\");\n} else {\n    try {\n        return java.lang.reflect.Array.java.lang.reflect.Array.get(java.lang.Object, int);\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1274","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.LoopingListIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nextIndex":"nextIndex"},"name":"add","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.iterators.FilterListIterator:141","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1059","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"switch (int) {\n    case 3 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 2;\n            return V;\n        } \n        return null;\n    case 2 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = int;\n            K = K;\n            V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 1;\n            return V;\n        } \n        return null;\n    case 1 :\n        if (((int) == int) && (java.lang.Object.equals(K))) {\n            final V V = V;\n            int = 0;\n            K = null;\n            V = null;\n            int = 0;\n            return V;\n        } \n}","position":"org.apache.commons.collections4.map.Flat3Map:512","type":"CtSwitchImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"value"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.StaticBucketMap:627","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.NullPointerException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.IteratorUtils:724","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.LazyList:115","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (int > 0) {\n    int = -1;\n} else {\n    int = 1;\n}","position":"org.apache.commons.collections4.comparators.ComparatorChain:281","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().comparator()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"lastUsedIterator":"lastUsedIterator","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:126","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.map.MultiValueMap:395","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[447,448,449],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.DefaultedMap:194","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.getEntry(int).getValue()","position":"org.apache.commons.collections4.map.LinkedMap:155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.KeySet.KeyIterator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1454","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"static class EntrySetView<K, V> extends java.util.AbstractSet<java.util.Map.Entry<K, V>> {\n    private final org.apache.commons.collections4.map.ListOrderedMap<K, V> parent;\n\n    private final java.util.List<K> insertOrder;\n\n    private java.util.Set<java.util.Map.Entry<K, V>> entrySet;\n\n    public EntrySetView(final org.apache.commons.collections4.map.ListOrderedMap<K, V> parent ,final java.util.List<K> insertOrder) {\n        java.util.AbstractSet<java.util.Map.Entry<K, V>>.super();\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, V> = org.apache.commons.collections4.map.ListOrderedMap<K, V>;\n        this.java.util.List<K> = java.util.List<K>;\n    }\n\n    private java.util.Set<java.util.Map.Entry<K, V>> getEntrySet() {\n        if ((java.util.Set<java.util.Map.Entry<K, V>>) == null) {\n            java.util.Set<java.util.Map.Entry<K, V>> = org.apache.commons.collections4.map.ListOrderedMap<K, V>.decorated().entrySet();\n        } \n        return java.util.Set<java.util.Map.Entry<K, V>>;\n    }\n\n    @java.lang.Override\n    public int size() {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.size();\n    }\n\n    @java.lang.Override\n    public boolean isEmpty() {\n        return this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.isEmpty();\n    }\n\n    @java.lang.Override\n    public boolean contains(final java.lang.Object obj) {\n        return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().contains(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public boolean containsAll(final java.util.Collection<?> coll) {\n        return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().containsAll(java.util.Collection<?>);\n    }\n\n    @java.lang.Override\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    public boolean remove(final java.lang.Object obj) {\n        if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n            return false;\n        } \n        if (org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().contains(java.lang.Object)) {\n            final java.lang.Object java.lang.Object = ((java.util.Map.Entry<K, V>)(java.lang.Object)).getKey();\n            org.apache.commons.collections4.map.ListOrderedMap<K, V>.remove(java.lang.Object);\n            return true;\n        } \n        return false;\n    }\n\n    @java.lang.Override\n    public void clear() {\n        this.org.apache.commons.collections4.map.ListOrderedMap<K, V>.clear();\n    }\n\n    @java.lang.Override\n    public boolean equals(final java.lang.Object obj) {\n        if (java.lang.Object == this) {\n            return true;\n        } \n        return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().equals(java.lang.Object);\n    }\n\n    @java.lang.Override\n    public int hashCode() {\n        return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().hashCode();\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        return org.apache.commons.collections4.map.ListOrderedMap.EntrySetView<K, V>.getEntrySet().toString();\n    }\n\n    @java.lang.Override\n    public java.util.Iterator<java.util.Map.Entry<K, V>> iterator() {\n        return new org.apache.commons.collections4.map.ListOrderedMap.ListOrderedIterator<K, V>(org.apache.commons.collections4.map.ListOrderedMap<K, V> , java.util.List<K>);\n    }\n}","position":"org.apache.commons.collections4.map.ListOrderedMap:588","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.defaultWriteObject()","position":"org.apache.commons.collections4.map.DefaultedMap:180","type":"CtInvocationImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Couldn\\'t get the node: \" + \"index (\") + int)","name":"removeConditional","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<java.util.Map.Entry<K, V>, java.util.Map.Entry<K, V>>.getIterator().next()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:181","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) >= (int)","position":"org.apache.commons.collections4.map.LRUMap:377","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (int < 0) {\n    throw new java.lang.IllegalArgumentException((\"negative size: \" + int));\n} ","position":"org.apache.commons.collections4.ListUtils:680","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-2},{"failures":[450,451,452,453,425,454,455,456,457],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.LazyList:123","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.AbstractListDecorator:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:99","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"value":"key"},"name":"add","transplant":{"sourceCode":"return java.lang.Object","position":"org.apache.commons.collections4.map.AbstractHashedMap:1092","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":46,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":338,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":40,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":277,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":217,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":65,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testShadok":31,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":275,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":39,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":280,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":355,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":392,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":220,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndex":425,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIteratorRemove":146,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIterator":411,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIsEmpty":144,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":444,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":15,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":229,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetEquals":106,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedAdd":116,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":26,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRetainAll":133,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":430,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":9,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":318,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionToArray2":154,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":379,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemove":163,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionClear":201,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedAdd":303,"org.apache.commons.collections4.iterators.UnmodifiableListIteratorTest.testWalkForwardAndBack":408,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":208,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIsEmpty":186,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":41,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":242,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":59,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionClear":169,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking":456,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":10,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemoveAll":148,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":53,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":341,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":238,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIsEmpty":158,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":262,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":380,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":17,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":87,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":34,"org.apache.commons.collections4.set.UnmodifiableSetTest.testUnsupportedRemove":122,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":293,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":18,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":50,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIteratorRemove":174,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":222,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContains":157,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRetainAll":189,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":385,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":283,"org.apache.commons.collections4.list.UnmodifiableListTest.testListLastIndexOf":300,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":394,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetEquals":166,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":259,"org.apache.commons.collections4.list.GrowthListTest.testCollectionToArray2":319,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":377,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedSet":298,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":448,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAddAll":140,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIsEmpty":130,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":386,"org.apache.commons.collections4.list.GrowthListTest.testListAddByIndex":310,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":252,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":241,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":7,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAdd":134,"org.apache.commons.collections4.list.SetUniqueListTest.testSetDownwardsInList":451,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":367,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":3,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":230,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":70,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAdd":162,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":400,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":239,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListSerialization":431,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":227,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":80,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIsEmpty":172,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":373,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorSet":424,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":352,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":331,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":35,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":225,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":92,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRetainAll":203,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":125,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIterator":111,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRetainAll":177,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":415,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":254,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":19,"org.apache.commons.collections4.list.GrowthListTest.testListHashCode":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":63,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemoveAll":321,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":438,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":389,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":249,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":339,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagHashCode":103,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":100,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":237,"org.apache.commons.collections4.list.UnmodifiableListTest.testListIndexOf":299,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":96,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testObjectEqualsSelf":421,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIterator":120,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":33,"org.apache.commons.collections4.map.DefaultedMapTest.testSerializeDeserializeThenCompare":449,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":332,"org.apache.commons.collections4.list.UnmodifiableListTest.testListEquals":297,"org.apache.commons.collections4.list.SetUniqueListTest.testFactory":422,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":64,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":286,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":350,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":353,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":416,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":89,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionToArray2":121,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":58,"org.apache.commons.collections4.set.TransformedSetTest.testSetHashCode":124,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionIterator":145,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":437,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":246,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContains":199,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":231,"org.apache.commons.collections4.sequence.SequencesComparatorTest.testExecution":30,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionToArray2":182,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":347,"org.apache.commons.collections4.set.PredicatedSetTest.testSetHashCode":152,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemoveAll":198,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":278,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":20,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.list.SetUniqueListTest.testSubListIsUnmodifiable":426,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":267,"org.apache.commons.collections4.list.SetUniqueListTest.testSet":452,"org.apache.commons.collections4.list.SetUniqueListTest.testSetUpwardsInList":454,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":251,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":77,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":260,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContains":304,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetEquals":179,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":86,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":43,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":219,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":256,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":366,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":361,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":91,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":284,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":268,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":396,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRetainAll":161,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":221,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemove":191,"org.apache.commons.collections4.list.GrowthListTest.testListGetByIndex":308,"org.apache.commons.collections4.bag.TreeBagTest.testCollections265":412,"org.apache.commons.collections4.map.DefaultedMapTest.testEmptyMapCompatibility":447,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":12,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":432,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":247,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAddAll":188,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":216,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":61,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":294,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":45,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":236,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":88,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":348,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":195,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":288,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":381,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":29,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":312,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":81,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":372,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionAdd":190,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":55,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":336,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":13,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":60,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":11,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":269,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":405,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":24,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionToArray2":150,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":357,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":171,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":442,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testFirstKey":435,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":393,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionClear":131,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":1,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray":434,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":109,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIterator":192,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":245,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":313,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":32,"org.apache.commons.collections4.set.ListOrderedSet2Test.testSetHashCode":180,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAdd":327,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":232,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionClear":403,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionRemoveAll":184,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIterator":164,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":75,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":436,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemoveAll":128,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":2,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionIteratorRemove":155,"org.apache.commons.collections4.list.GrowthListTest.testListIndexOf":316,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":402,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":391,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":370,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":258,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":272,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":349,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":397,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRetainAll":149,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetHashCode":194,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":76,"org.apache.commons.collections4.list.UnmodifiableListTest.testListListIteratorByIndex":410,"org.apache.commons.collections4.list.TransformedListTest.testCollectionClear":382,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagHashCode":104,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionClear":346,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":207,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":343,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":334,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":368,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":21,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":234,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":83,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":289,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":6,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":99,"org.apache.commons.collections4.list.SetUniqueListTest.testUniqueListReInsert":450,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":290,"org.apache.commons.collections4.list.UnmodifiableListTest.testUnsupportedRemove":306,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetEquals":115,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":276,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":371,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":374,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":62,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":85,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":181,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":345,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":37,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":118,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionAdd":139,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":226,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContains":108,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":223,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":74,"org.apache.commons.collections4.list.SetUniqueListTest.testSetInBiggerList":455,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":369,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":72,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":265,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":25,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":401,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionSize":433,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":95,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":398,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":358,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":213,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":257,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":42,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionClear":187,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetHashCode":137,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedRemove":113,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":78,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":56,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testUnsupportedAdd":107,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemove":175,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":210,"org.apache.commons.collections4.list.GrowthListTest.testCollectionClear":324,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionToArray2":112,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":235,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":387,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIsEmpty":323,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":67,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":23,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":5,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":351,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":301,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionRemove":147,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":224,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":54,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testSetHashCode":105,"org.apache.commons.collections4.list.SetUniqueListTest.testCollections304":453,"org.apache.commons.collections4.set.UnmodifiableSetTest.testSetHashCode":114,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":14,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":218,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":36,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":0,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagHashCode":102,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":360,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":243,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":330,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContains":170,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":255,"org.apache.commons.collections4.list.GrowthListTest.testListEquals":311,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":414,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":22,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":335,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIterator":329,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":73,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIterator":206,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionClear":141,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":383,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":209,"org.apache.commons.collections4.list.SetUniqueListTest.testIntCollectionAddAll":427,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":49,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionClear":159,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":57,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":273,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagEqualsSelf":419,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContains":117,"org.apache.commons.collections4.set.PredicatedSetTest.testSetEquals":151,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":28,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":388,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":362,"org.apache.commons.collections4.list.SetUniqueListTest.testListSetByIndexBoundsChecking2":457,"org.apache.commons.collections4.list.UnmodifiableListTest.testListGetByIndex":295,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionToArray2":126,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":68,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionToArray2":178,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFactory_decorateTransform":413,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":48,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":27,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":264,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContains":129,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionIteratorRemove":183,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":233,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIsEmpty":305,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":445,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":364,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":423,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionIterator":173,"org.apache.commons.collections4.list.GrowthListTest.testCollectionIteratorRemove":320,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":395,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAdd":167,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":287,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionToArray2":196,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":274,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":404,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":153,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":244,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":429,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":359,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":97,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionRemove":135,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":270,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":215,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":375,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAddAll":202,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":4,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":52,"org.apache.commons.collections4.list.GrowthListTest.testListRemoveByIndex":315,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRetainAll":326,"org.apache.commons.collections4.list.SetUniqueListTest.testAddAll":428,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContains":185,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":443,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContains":142,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":8,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContains":322,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":354,"org.apache.commons.collections4.set.TransformedSetTest.testSetEquals":123,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIterator":136,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":263,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":314,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionAddAll":168,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionRemoveAll":176,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":365,"org.apache.commons.collections4.list.UnmodifiableListTest.testListHashCode":296,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":143,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":417,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":253,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":51,"org.apache.commons.collections4.list.GrowthListTest.testCollectionAddAll":325,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":214,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":407,"org.apache.commons.collections4.bag.SynchronizedBagTest.testObjectEqualsSelf":420,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":66,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":356,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":212,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":90,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":285,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":439,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":440,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":406,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":441,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionIsEmpty":119,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIsEmpty":200,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":47,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":337,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionToArray2":302,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionAddAll":160,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":418,"org.apache.commons.collections4.set.TransformedSortedSetTest.testSetHashCode":165,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":261,"org.apache.commons.collections4.IteratorUtilsTest.testUnmodifiableListIteratorIteration":409,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionAddAll":132,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testSetEquals":138,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":378,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":390,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionIteratorRemove":197,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":228,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":340,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":363,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":376,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testConstructorEx":446,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionRemove":205,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":266,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":399,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":211,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":282,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":79,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":16,"org.apache.commons.collections4.bag.TransformedBagTest.testBagHashCode":101,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":271,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":344,"org.apache.commons.collections4.list.GrowthListTest.testCollectionRemove":328,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":250,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":93,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":82,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":342,"org.apache.commons.collections4.list.GrowthListTest.testListLastIndexOf":317,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":38,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionRemoveAll":156,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":69,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionAdd":204,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionIteratorRemove":127,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":279,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionIterator":307,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":384,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":44,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":333,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionIsEmpty":110,"org.apache.commons.collections4.set.ListOrderedSetTest.testSetEquals":193,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":248}}]
