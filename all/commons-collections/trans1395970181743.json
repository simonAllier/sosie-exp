[{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()","position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getValue()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1860","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = ((org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>))","position":"org.apache.commons.collections4.map.AbstractLinkedMap:263","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:169","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<?, V>.org.apache.commons.collections4.map.AbstractHashedMap<?, V>.values()","position":"org.apache.commons.collections4.map.Flat3Map:1058","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-2},{"failures":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215],"variableMapping":{"lastValue":"value"},"name":"replace","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:546","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().put(K, V)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:106","type":"CtReturnImpl"},"status":-1},{"failures":[216,217],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:221","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:543","type":"mutation","status":-2},{"failures":[218,219,220,221,222,223,224,225,226,227,228,229],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case 2 :\n    if (((int) == int) && (java.lang.Object.equals(K))) {\n        return V;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:155","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.lastEntry()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1903","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Factory<? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:77","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:543","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[230],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotNullPredicate.org.apache.commons.collections4.functors.NotNullPredicate.<T>notNullPredicate()","position":"org.apache.commons.collections4.PredicateUtils:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"key"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.get(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2062","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().size()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:118","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (int >= 0) {\n    final java.lang.Object java.lang.Object = java.util.ArrayList<E>.get(int);\n    if (((java.lang.Object == null) && (java.lang.Object == null)) || ((java.lang.Object != null) && (java.lang.Object.equals(java.lang.Object)))) {\n        return int;\n    } \n    int--;\n    int++;\n}","position":"org.apache.commons.collections4.ArrayStack:155","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (((\"Iterator[\" + org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.(getKey())) + \"=\") + org.apache.commons.collections4.map.Flat3Map.FlatMapIterator<K, V>.(getValue())) + \"]\"","position":"org.apache.commons.collections4.map.Flat3Map:713","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super I, ? extends O> == null) {\n    return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer();\n} ","position":"org.apache.commons.collections4.functors.MapTransformer:50","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.util.Set<K> java.util.Set<K> = java.util.Map<K, V>.keySet()","position":"org.apache.commons.collections4.map.FixedSizeMap:152","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.ForClosure<E>(int , org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.functors.ForClosure:58","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.SingletonMap.SingletonValues<V>(this)","position":"org.apache.commons.collections4.map.SingletonMap:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Synchronized Set for the Bag class.\n */\nclass SynchronizedBagSet extends org.apache.commons.collections4.collection.SynchronizedCollection<E> implements java.util.Set<E> {\n    /** \n     * Serialization version\n     */\nprivate static final long serialVersionUID = 2990565892366827855L;\n\n    /** \n     * Constructor.\n     * @param set  the set to decorate\n     * @param lock  the lock to use, shared with the bag\n     */\nSynchronizedBagSet(final java.util.Set<E> set ,final java.lang.Object lock) {\n        org.apache.commons.collections4.collection.SynchronizedCollection<E>.super(java.util.Set<E>, java.lang.Object);\n    }\n}","position":"org.apache.commons.collections4.bag.SynchronizedBag:116","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"set() is not supported\")","position":"org.apache.commons.collections4.iterators.UnmodifiableListIterator:98","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.DefaultedMap<K, V>.this(org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.constantTransformer(V))","position":"org.apache.commons.collections4.map.DefaultedMap:145","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Iterator<? extends E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Iterator must not be null\");\n} ","position":"org.apache.commons.collections4.iterators.PeekingIterator:59","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>.hasNext()) == false) {\n    org.apache.commons.collections4.iterators.LoopingIterator<E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.LoopingIterator:87","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator<K, V>.getMapEntry().setValue(V)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:202","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.queue.PredicatedQueue<E>(java.util.Queue<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.queue.PredicatedQueue:58","type":"CtReturnImpl"},"status":-2},{"failures":[231,232,233,234,235,236,237,238,239,240,241,242,243],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.list.SetUniqueList:372","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final java.util.Iterator<? extends E> java.util.Iterator<? extends E> : java.util.Collection<java.util.Iterator<? extends E>>) {\n    org.apache.commons.collections4.iterators.CollatingIterator<E>.addIterator(java.util.Iterator<? extends E>);\n}","position":"org.apache.commons.collections4.iterators.CollatingIterator:157","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.list.AbstractLinkedList.Node<E> == (org.apache.commons.collections4.list.AbstractLinkedList.Node<E>)) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.list.AbstractLinkedList:341","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":-2},{"failures":[244],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.Long.java.lang.Long.valueOf(java.lang.Number.longValue())","position":"org.apache.commons.collections4.MapUtils:284","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.CollatingIterator<E>.addIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.CollatingIterator:119","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.collection.SynchronizedCollection:195","type":"CtIfImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[245],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:204","type":"CtSynchronizedImpl"},"status":-2},{"failures":[246,247,248,249],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Key must not be null\")","position":"org.apache.commons.collections4.map.MultiKeyMap:817","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method is not supported\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:159","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = int - (int)","position":"org.apache.commons.collections4.list.TreeList:494","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-2},{"failures":[250],"binaryOperator":"int < int","name":"conditionalBoundary","position":"org.apache.commons.collections4.list.LazyList:126","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap<K, V>.java.util.Map<K, V>.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:594","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.Enumeration<? extends E>.nextElement()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:92","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.TransformedMap:153","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().equals(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:130","type":"CtReturnImpl"},"status":-2},{"failures":[251,252],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.ReverseListIterator:145","type":"CtInvocationImpl"},"status":-1},{"failures":[253],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"status":-2},{"failures":[254,255],"variableMapping":{"added":"nextObjectSet","changed":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:103","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"PrototypeCloneFactory: Clone method must be public\" , java.lang.IllegalAccessException)","position":"org.apache.commons.collections4.functors.PrototypeFactory:139","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object instanceof java.util.Map<?, ?>) {\n    return ((java.util.Map<?, ?>)(java.lang.Object)).isEmpty();\n} else if (java.lang.Object instanceof java.lang.Object[]) {\n    return (((java.lang.Object[])(java.lang.Object)).int) == 0;\n} else if (java.lang.Object instanceof java.util.Iterator<?>) {\n    return (((java.util.Iterator<?>)(java.lang.Object)).hasNext()) == false;\n} else if (java.lang.Object instanceof java.util.Enumeration<?>) {\n    return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false;\n} else {\n    try {\n        return java.lang.reflect.Array.(java.lang.reflect.Array.getLength(java.lang.Object)) == 0;\n    } catch (final java.lang.IllegalArgumentException java.lang.IllegalArgumentException) {\n        throw new java.lang.IllegalArgumentException((\"Unsupported object type: \" + (java.lang.Object.getClass().getName())));\n    }\n}","position":"org.apache.commons.collections4.CollectionUtils:1387","type":"CtIfImpl"},"status":-2},{"failures":[256],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n    throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\");\n} else if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isExternalNode())) {\n    throw new java.lang.IllegalArgumentException((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> + \" is not an external Entry!\"));\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:500","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ForClosure:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{"c":"coll"},"name":"replace","transplant":{"sourceCode":"if (java.util.Collection<? extends E>.isEmpty()) {\n    return false;\n} ","position":"org.apache.commons.collections4.list.TreeList:224","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:176","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:830","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(doRemoveValue(java.lang.Object)) != null","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1518","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.lang.Object == this) || (org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().equals(java.lang.Object))","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:75","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":-2},{"failures":[231,232,233],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionTransformer invoked\")","position":"org.apache.commons.collections4.functors.ExceptionTransformer:67","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E))","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:147","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.list.TreeList:701","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.PredicatedBag:106","type":"CtReturnImpl"},"status":-2},{"failures":[257],"binaryOperator":"int < (int)","name":"conditionalBoundary","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"/** \n * Internal iterator handle remove.\n */\nstatic class OrderedSetIterator<E> extends org.apache.commons.collections4.iterators.AbstractIteratorDecorator<E> implements org.apache.commons.collections4.OrderedIterator<E> {\n    /** \n     * Object we iterate on\n     */\nprivate final java.util.Collection<E> set;\n\n    /** \n     * Last object retrieved\n     */\nprivate E last;\n\n    private OrderedSetIterator(final java.util.ListIterator<E> iterator ,final java.util.Collection<E> set) {\n        org.apache.commons.collections4.iterators.AbstractIteratorDecorator<E>.super(java.util.ListIterator<E>);\n        this.java.util.Collection<E> = java.util.Collection<E>;\n    }\n\n    @java.lang.Override\n    public E next() {\n        E = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().next();\n        return E;\n    }\n\n    @java.lang.Override\n    public void remove() {\n        java.util.Collection<E>.remove(E);\n        org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.getIterator().remove();\n        E = null;\n    }\n\n    public boolean hasPrevious() {\n        return org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.((java.util.ListIterator<E>)(getIterator())).hasPrevious();\n    }\n\n    public E previous() {\n        E = org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator<E, E>.((java.util.ListIterator<E>)(getIterator())).previous();\n        return E;\n    }\n}","position":"org.apache.commons.collections4.set.ListOrderedSet:367","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.IteratorUtils:942","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().values()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:122","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.Equator<O>.equate(O, org.apache.commons.collections4.CollectionUtils.EquatorWrapper<O>.getObject())","position":"org.apache.commons.collections4.CollectionUtils:589","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:257","type":"CtInvocationImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[258,259],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:344","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:80","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.ListOrderedMap<K, V>.java.util.Map<K, V>.remove(K)","position":"org.apache.commons.collections4.map.ListOrderedMap:748","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.SynchronizedSortedBag<E>(org.apache.commons.collections4.SortedBag<E>)","position":"org.apache.commons.collections4.bag.SynchronizedSortedBag:51","type":"CtReturnImpl"},"status":-2},{"failures":[260,261],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:95","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"relativePosition":"size"},"name":"replace","transplant":{"sourceCode":"if (int >= 0) {\n    int++;\n} ","position":"org.apache.commons.collections4.list.TreeList:509","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int >= int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null));\n} ","position":"org.apache.commons.collections4.list.GrowthList:183","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.(containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Cannot put new key/value pair - Map is fixed size\");\n} ","position":"org.apache.commons.collections4.map.FixedSizeMap:126","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-2},{"failures":[231,232,233,253],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((E) == null) {\n} else {\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n    } else {\n        org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n    E = null;\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:141","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1642","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (org.apache.commons.collections4.Bag<E> != null)) && ((org.apache.commons.collections4.Bag<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(org.apache.commons.collections4.Bag<E>.toArray()));\n    org.apache.commons.collections4.Bag<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.bag.TransformedBag<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} ","position":"org.apache.commons.collections4.bag.TransformedBag:78","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.removeValue(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2112","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (((\"Iterator[\" + org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>.(getKey())) + \"=\") + org.apache.commons.collections4.map.ListOrderedMap.ListOrderedMapIterator<K, V>.(getValue())) + \"]\"","position":"org.apache.commons.collections4.map.ListOrderedMap:782","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1225","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * Base Iterator\n */\nprotected abstract static class HashIterator<K, V> {\n    /** \n     * The parent map\n     */\nprivate final org.apache.commons.collections4.map.AbstractHashedMap<K, V> parent;\n\n    /** \n     * The current index into the array of buckets\n     */\nprivate int hashIndex;\n\n    /** \n     * The last returned entry\n     */\nprivate org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> last;\n\n    /** \n     * The next entry\n     */\nprivate org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> next;\n\n    /** \n     * The modification count expected\n     */\nprivate int expectedModCount;\n\n    protected HashIterator(final org.apache.commons.collections4.map.AbstractHashedMap<K, V> parent) {\n        java.lang.Object.super();\n        this.org.apache.commons.collections4.map.AbstractHashedMap<K, V> = org.apache.commons.collections4.map.AbstractHashedMap<K, V>;\n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n        int int = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n        while ((int > 0) && (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null)) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int];\n        }\n        this.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        this.int = int;\n        this.int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int;\n    }\n\n    public boolean hasNext() {\n        return (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null;\n    }\n\n    protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> nextEntry() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) {\n            throw new java.util.NoSuchElementException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n        int int = int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        while ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> == null) && (int > 0)) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int];\n        }\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        int = int;\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n\n    protected org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> currentEntry() {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n    }\n\n    public void remove() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) == null) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        if ((org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int) != (int)) {\n            throw new java.util.ConcurrentModificationException();\n        } \n        org.apache.commons.collections4.map.AbstractHashedMap<K, V>.remove(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey());\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null;\n        int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.int;\n    }\n\n    @java.lang.Override\n    public java.lang.String toString() {\n        if ((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) != null) {\n            return (((\"Iterator[\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getKey())) + \"=\") + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.getValue())) + \"]\";\n        } \n        return \"Iterator[]\";\n    }\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:1131","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    return java.lang.reflect.Constructor<T>.newInstance(java.lang.Object[]);\n} catch (final java.lang.InstantiationException java.lang.InstantiationException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: InstantiationException\" , java.lang.InstantiationException);\n} catch (final java.lang.IllegalAccessException java.lang.IllegalAccessException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor must be public\" , java.lang.IllegalAccessException);\n} catch (final java.lang.reflect.InvocationTargetException java.lang.reflect.InvocationTargetException) {\n    throw new org.apache.commons.collections4.FunctorException(\"InstantiateFactory: Constructor threw an exception\" , java.lang.reflect.InvocationTargetException);\n}","position":"org.apache.commons.collections4.functors.InstantiateFactory:125","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.bag.AbstractMapBag<E>.getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractMapBag:592","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.decorated().putAll(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:98","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:463","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator<K, V>.decorated().valueComparator()","position":"org.apache.commons.collections4.bidimap.AbstractSortedBidiMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.functors.SwitchClosure.org.apache.commons.collections4.functors.SwitchClosure.<E>switchClosure(org.apache.commons.collections4.Predicate<? super E>[], org.apache.commons.collections4.Closure<? super E>[], org.apache.commons.collections4.Closure<? super E>)","position":"org.apache.commons.collections4.ClosureUtils:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.TransformIterator<I, O>.transform(java.util.Iterator<? extends I>.next())","position":"org.apache.commons.collections4.iterators.TransformIterator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> != null) && (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getKey().equals(java.lang.Object))","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1581","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:587","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.SetUniqueList:365","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"case -2 :\n    if ((org.apache.commons.collections4.list.TreeList.AVLNode<E>.heightRightMinusLeft()) > 0) {\n        org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateLeft(), null);\n    } \n    return org.apache.commons.collections4.list.TreeList.AVLNode<E>.rotateRight();","position":"org.apache.commons.collections4.list.TreeList:681","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"hash":"startIndex"},"name":"replace","transplant":{"sourceCode":"int += ~(int << 11)","position":"org.apache.commons.collections4.map.StaticBucketMap:162","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.int = this.int","position":"org.apache.commons.collections4.iterators.ArrayIterator:197","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[262],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"Iterator contains no elements\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:49","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index\")","position":"org.apache.commons.collections4.iterators.ObjectArrayIterator:94","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"boolean = boolean || boolean","position":"org.apache.commons.collections4.bag.AbstractMapBag:277","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:212","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (int) == 0","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:168","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator getValue() can only be called after next() and before remove()\")","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:738","type":"CtThrowImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:78","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:366","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyContainsKey":84,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetClearChangesMap":110,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":244,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":27,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRetainAll":171,"org.apache.commons.collections4.ClosureUtilsTest.testWhileClosure":245,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":34,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":257,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorByIndex":261,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":96,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet":3,"org.apache.commons.collections4.map.LazyMapTest.testKeySetClearChangesMap":56,"org.apache.commons.collections4.map.LazySortedMapTest.testFullMapCompatibility":203,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":241,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":211,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":148,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":66,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":256,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":178,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":141,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastValues":6,"org.apache.commons.collections4.map.LazyMapTest.testValuesIteratorRemoveChangesMap":49,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove1":187,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":146,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove2":188,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemove3":189,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveChangesMap":118,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetIteratorRemoveChangesMap":172,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":254,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastEntrySet":4,"org.apache.commons.collections4.map.LazySortedMapTest.testMakeMap":199,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":248,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":247,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":78,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesIteratorRemoveChangesMap":121,"org.apache.commons.collections4.map.MultiKeyMapTest.testMakeMap":93,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesClearChangesMap":156,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":36,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetClearChangesMap":111,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetIteratorRemoveChangesMap":125,"org.apache.commons.collections4.ListUtilsTest.testLazyList":250,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetIteratorRemoveChangesMap":20,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRetainAll":214,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":217,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testIsEmpty":136,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":102,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetIteratorRemoveChangesMap":210,"org.apache.commons.collections4.map.LazyMapTest.testValuesRetainAll":51,"org.apache.commons.collections4.map.MultiKeyMapTest.testNullHandling":82,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapClear":143,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveAll":170,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetIteratorRemoveChangesMap":37,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveAll":58,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetIteratorRemoveChangesMap":193,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":75,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRetainAll":185,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveChangesMap":57,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":39,"org.apache.commons.collections4.map.LazyMapTest.testFailFastKeySet":44,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyGet":83,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":52,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetClearChangesMap":60,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveChangesMap":18,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetIteratorRemoveChangesMap":59,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":63,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesClearChangesMap":109,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":204,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":197,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":238,"org.apache.commons.collections4.map.DefaultedMapTest.testFullMapCompatibility":30,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveAll":166,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":145,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":239,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetClearChangesMap":158,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetClearChangesMap":17,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastEntrySet":90,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":186,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveChangesMap":191,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullValue":61,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":255,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetClearChangesMap":21,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRetainAll":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":97,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":216,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet3":1,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet4":2,"org.apache.commons.collections4.map.DefaultedMapTest.testMapGet2":0,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":212,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":32,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":243,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":207,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove3":164,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove2":163,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRemoveChangesMap":165,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemove1":162,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySet":130,"org.apache.commons.collections4.map.LazyMapTest.testFullMapCompatibility":69,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastValues":92,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove3":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetIteratorRemoveChangesMap":129,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove1":53,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemove2":54,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":240,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testFullMapCompatibility":150,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetClearChangesMap":190,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullValue":106,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":222,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":38,"org.apache.commons.collections4.map.MultiKeyMapTest.testFullMapCompatibility":103,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesRemoveAll":208,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRemoveChangesMap":50,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains1":159,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains2":160,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetContains3":161,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":205,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesRetainAll":167,"org.apache.commons.collections4.map.LazyMapTest.testValuesRemoveAll":74,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutNullKey":105,"org.apache.commons.collections4.map.LazySortedMapTest.testFirstKey":179,"org.apache.commons.collections4.map.LazyMapTest.testValuesClearChangesMap":81,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetRemoveChangesMap":169,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullValue":22,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":142,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetRetainAll":72,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll1":86,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":24,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":242,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":107,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveAll":174,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":237,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":71,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRetainAll":120,"org.apache.commons.collections4.map.LazyMapTest.testMapPutNullKey":67,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll4":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRetainAll":128,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll3":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemoveAll2":87,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":95,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":235,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":259,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRemoveAll":35,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":224,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains1":180,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains2":181,"org.apache.commons.collections4.map.DefaultedMapTest.testFailFastKeySet":5,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":108,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":98,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testSet":251,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains1":7,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains2":8,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetContains3":182,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":218,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetContains3":9,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullKey":152,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRemoveChangesMap":173,"org.apache.commons.collections4.map.MultiKeyMapTest.testValuesRemoveAll":119,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRetainAll":206,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesRetainAll":12,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesClearChangesMap":42,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveChangesMap":126,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutNullValue":153,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetIteratorRemoveChangesMap":176,"org.apache.commons.collections4.map.LazyMapTest.testFailFastEntrySet":43,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveChangesMap":196,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMakeMap":140,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":177,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":213,"org.apache.commons.collections4.list.FixedSizeListTest.testEmptyListCompatibility":219,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullValue":195,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":149,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":249,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":226,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":234,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":101,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove3":117,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove2":116,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemove1":115,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains1":112,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains2":113,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":246,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetContains3":114,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":144,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":260,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testExpiration":138,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":221,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutNullKey":28,"org.apache.commons.collections4.map.LazySortedMapTest.testMapClear":202,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsValue":133,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRetainAll":33,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveAll":192,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveChangesMap":11,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testAdd":262,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetClearChangesMap":194,"org.apache.commons.collections4.map.LazyMapTest.testFailFastValues":45,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":227,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove3":16,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove2":15,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemove1":14,"org.apache.commons.collections4.map.MultiKeyMapTest.testFailFastKeySet":91,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":223,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":154,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRetainAll":124,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":155,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":253,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveChangesMap":122,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":220,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":77,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValuesIteratorRemoveChangesMap":168,"org.apache.commons.collections4.map.DefaultedMapTest.testMakeMap":26,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":228,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":100,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testDecoratedMap":135,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":31,"org.apache.commons.collections4.map.LazySortedMapTest.testEntrySetRemoveChangesMap":184,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":13,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":40,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveChangesMap":62,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testContainsKey":134,"org.apache.commons.collections4.PredicateUtilsTest.testIsNotNullPredicate":230,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testSize":131,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testRemoveThenSet":252,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRemoveAll":64,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":209,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":79,"org.apache.commons.collections4.map.DefaultedMapTest.testMapClear":29,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testGet":139,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesClearChangesMap":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":231,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":232,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":233,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testTransformedMap":258,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":151,"org.apache.commons.collections4.map.MultiKeyMapTest.testMultiKeyRemove":85,"org.apache.commons.collections4.map.DefaultedMapTest.testValuesIteratorRemoveChangesMap":10,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveAll":25,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":225,"org.apache.commons.collections4.map.DefaultedMapTest.testKeySetRemoveChangesMap":23,"org.apache.commons.collections4.map.LazyMapTest.testKeySetRetainAll":80,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":104,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains3":48,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains2":47,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySet":137,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":200,"org.apache.commons.collections4.map.LazyMapTest.testEntrySetContains1":46,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testValues":132,"org.apache.commons.collections4.list.FixedSizeListTest.testObjectHashCodeEqualsContract":229,"org.apache.commons.collections4.map.DefaultedMapTest.testEntrySetRemoveAll":19,"org.apache.commons.collections4.map.LazySortedMapTest.testValuesIteratorRemoveChangesMap":183,"org.apache.commons.collections4.map.LazyMapTest.testMakeMap":65,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapGet":147,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":70,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":73,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":99,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEntrySetRetainAll":175,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":236,"org.apache.commons.collections4.map.LazyMapTest.testMapClear":68,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testKeySetClearChangesMap":157,"org.apache.commons.collections4.map.MultiKeyMapTest.testKeySetRemoveAll":123,"org.apache.commons.collections4.map.LazySortedMapTest.testKeySetRemoveAll":198,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutNullKey":201,"org.apache.commons.collections4.map.LazyMapTest.testKeySetIteratorRemoveChangesMap":76,"org.apache.commons.collections4.map.MultiKeyMapTest.testEntrySetRemoveAll":127}}]
