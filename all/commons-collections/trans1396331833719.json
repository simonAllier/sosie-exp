[{"failures":[0,1,2,3,4,5,6,7,8,9],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:197","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n    throw new java.lang.IllegalStateException((((((((((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int)) + \" maxSize=\") + (int)) + \" Please check that your keys are immutable, and that you have used synchronization properly.\") + \" If so, then please report this to dev@commons.apache.org as a bug.\"));\n} ","position":"org.apache.commons.collections4.map.LRUMap:257","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator.EntrySet(java.util.Map<K, V>.entrySet() , this)","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int ^= java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:660","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().iterator())","position":"org.apache.commons.collections4.list.FixedSizeList:108","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySetIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:482","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot add key - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:143","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.NullPointerException(\"The list must not be null\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{"nextObject":"object"},"name":"replace","transplant":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:143","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:266","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().comparator()","position":"org.apache.commons.collections4.set.TransformedSortedSet:125","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:149","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.NullPointerException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.IteratorUtils:701","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"binaryOperator":"((\"Objects of type \" + (E.getClass())) + \" cannot be added to \")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.TransformedSortedSet<E>.getSortedSet().subSet(E, E)","position":"org.apache.commons.collections4.set.TransformedSortedSet:130","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : java.util.Collection<? extends E>) {\n    if (java.util.Set<E>.add(E)) {\n        java.util.List<E>.add(E);\n    } \n}","position":"org.apache.commons.collections4.list.SetUniqueList:192","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:248","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.util.Map.Entry<? extends K, ? extends V> java.util.Map.Entry<? extends K, ? extends V> : java.util.Map<? extends K, ? extends V>.entrySet()) {\n    java.util.Map<K, V>.put(org.apache.commons.collections4.map.TransformedMap<K, V>.transformKey(java.util.Map.Entry<? extends K, ? extends V>.getKey()), org.apache.commons.collections4.map.TransformedMap<K, V>.transformValue(java.util.Map.Entry<? extends K, ? extends V>.getValue()));\n}","position":"org.apache.commons.collections4.map.TransformedMap:203","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:140","type":"CtIfImpl"},"status":-2},{"failures":[10,11,12,13,14,15],"variableMapping":{"endIndex":"count","index":"count"},"name":"replace","transplant":{"sourceCode":"return int < int","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().add(E, int)","position":"org.apache.commons.collections4.bag.PredicatedBag:94","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot add value - Predicate rejected it\")","position":"org.apache.commons.collections4.map.PredicatedMap:146","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\")","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:246","type":"CtThrowImpl"},"status":-2},{"failures":[16,17],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return true","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:110","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = 0","position":"org.apache.commons.collections4.map.AbstractHashedMap:366","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.set.UnmodifiableSortedSet:116","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":-2},{"failures":[18],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.queue.CircularFifoQueue:282","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtInvocationImpl"},"status":-1},{"failures":[19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:60","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<O>.evaluate(O)) {\n    org.apache.commons.collections4.bag.HashBag<O>.add(O);\n} ","position":"org.apache.commons.collections4.CollectionUtils:332","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.ForClosure:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"list1":"coll","list2":"coll"},"name":"replace","transplant":{"sourceCode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"int int = (\"ConstantTransformer\".hashCode()) << 2","position":"org.apache.commons.collections4.functors.ConstantTransformer:123","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().size()","position":"org.apache.commons.collections4.list.GrowthList:151","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.PredicatedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.PredicatedSortedMap:97","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"nextObjectSet":"nextObjectSet","this":"this"},"name":"add","transplant":{"sourceCode":"return (this.boolean) || (org.apache.commons.collections4.iterators.FilterListIterator<E>.setNextObject())","position":"org.apache.commons.collections4.iterators.FilterListIterator:121","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:252","type":"CtIfImpl"},"status":-2},{"failures":[224,225,226,227,228,229,230,231,232,233],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalStateException((\"Entry.before is null.\" + (\" Please check that your keys are immutable, and that you have used synchronization properly.\" + \" If so, then please report this to dev@commons.apache.org as a bug.\")))","position":"org.apache.commons.collections4.map.LRUMap:197","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Map must not be null\")","position":"org.apache.commons.collections4.map.AbstractMapDecorator:62","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Iterator<E>","position":"org.apache.commons.collections4.iterators.IteratorIterable:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[234,235],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().poll()","position":"org.apache.commons.collections4.queue.PredicatedQueue:103","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = null","position":"org.apache.commons.collections4.map.AbstractReferenceMap:397","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof java.util.ListIterator) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final java.util.ListIterator<E> java.util.ListIterator<E> = this.java.util.Iterator<? extends E>;\n    return java.util.ListIterator<E>.previous();\n} ","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:175","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.LoopingIterator:90","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getNearestEntryForKey(K, int)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:147","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.bag.AbstractMapBag:415","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int) <= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n    org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:216","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.LoopingListIterator:150","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return -1","position":"org.apache.commons.collections4.map.LinkedMap:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:117","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.AbstractListDecorator:87","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.PredicatedList<E>.decorated().indexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.PredicatedList:99","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.AbstractHashedMap:1085","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"status":-2},{"failures":[339,340,341,342,343,344,345],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = new org.apache.commons.collections4.iterators.ListIteratorWrapper<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.IteratorIterable:112","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Collection<? extends E>.iterator()","position":"org.apache.commons.collections4.iterators.LoopingIterator:113","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingIterator:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:83","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.equals(java.util.Map.Entry<?, ?>)) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:580","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[16,346],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = ((java.util.ListIterator<java.util.Map.Entry<K, V>>)(java.util.Iterator<java.util.Map.Entry<K, V>>)).previous()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:159","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.io.ObjectInputStream.defaultReadObject()","position":"org.apache.commons.collections4.map.PassiveExpiringMap:516","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.asPredicate(org.apache.commons.collections4.functors.InvokerTransformer.org.apache.commons.collections4.functors.InvokerTransformer.<java.lang.Object,java.lang.Boolean>invokerTransformer(java.lang.String, java.lang.Class<?>[], java.lang.Object[]))","position":"org.apache.commons.collections4.PredicateUtils:239","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:157","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super C> == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.CollectionUtils:872","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:225","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.LRUMap<K, V>.moveToMRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)","position":"org.apache.commons.collections4.map.LRUMap:180","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated()","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.Flat3Map.EntryIterator<K, java.lang.Object>.nextEntry().getKey()","position":"org.apache.commons.collections4.map.Flat3Map:1011","type":"CtReturnImpl"},"status":-2},{"failures":[347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,362,363,364,365,366,367],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Collection must not be null\")","position":"org.apache.commons.collections4.collection.SynchronizedCollection:73","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((((\"Couldn\\'t get the node: \" + \"index (\") + int) + \") less than zero.\"))","position":"org.apache.commons.collections4.list.AbstractLinkedList:539","type":"CtThrowImpl"},"status":-1},{"failures":[0,1,2,3,4,368,5,6,7,8,369,9],"variableMapping":{"validForUpdate":"hasNext"},"name":"add","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((!(boolean)) && (!(org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.isEmpty()))) {\n    java.util.Iterator<? extends E> = org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.pop();\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>);\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:195","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:154","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.OrderedMapIterator<K, V> org.apache.commons.collections4.OrderedMapIterator<K, V> = org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().mapIterator()","position":"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMap:130","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractSortedMapDecorator<K, V>.tailMap(K)","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:109","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (java.lang.Object instanceof org.apache.commons.collections4.SplitMapUtils.WrappedPut) && (((org.apache.commons.collections4.SplitMapUtils.WrappedPut<?, ?>)(java.lang.Object)).org.apache.commons.collections4.Put<?, ?>.equals(this.org.apache.commons.collections4.Put<K, V>))","position":"org.apache.commons.collections4.SplitMapUtils:155","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:78","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.MultiKeyMap:484","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().remove(java.lang.Object, int)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:77","type":"CtReturnImpl"},"status":-2},{"failures":[370],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Initial capacity must be a non negative number\")","position":"org.apache.commons.collections4.map.AbstractHashedMap:142","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"add() not supported for empty Iterator\")","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:61","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{"it2":"iterator","it1":"iterator"},"name":"replace","transplant":{"sourceCode":"return !((java.util.ListIterator<?>.hasNext()) || (java.util.ListIterator<?>.hasNext()))","position":"org.apache.commons.collections4.list.AbstractLinkedList:371","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((org.apache.commons.collections4.Predicate<? super T> == null) || (org.apache.commons.collections4.Predicate<? super T> == null)) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.AndPredicate:50","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.WhileClosure:88","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.checkModCount()","position":"org.apache.commons.collections4.list.AbstractLinkedList:990","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.map.LRUMap<K, V>.removeLRU(org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) {\n    boolean = true;\n    break;\n} ","position":"org.apache.commons.collections4.map.LRUMap:251","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl"},"status":-2},{"failures":[7,371],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:224","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"curObject":"previousObject","leastObject":"previousObject"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.CollatingIterator:369","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterListIterator:243","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<V, K>.clear()","position":"org.apache.commons.collections4.bidimap.AbstractDualBidiMap:197","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.functors.FunctorUtils.org.apache.commons.collections4.functors.FunctorUtils.validate(org.apache.commons.collections4.Transformer<? super T, ? extends T>[])","position":"org.apache.commons.collections4.functors.ChainedTransformer:51","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((org.apache.commons.collections4.Bag<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.bag.PredicatedBag:87","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Transformer<? super I, ? extends O> org.apache.commons.collections4.Transformer<? super I, ? extends O> = java.util.Map<? extends org.apache.commons.collections4.Predicate<? super I>, ? extends org.apache.commons.collections4.Transformer<? super I, ? extends O>>.remove(null)","position":"org.apache.commons.collections4.functors.SwitchTransformer:102","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[372,373,374,375,376,377,378,379],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (((java.util.Iterator<? extends E>.hasNext()) == false) && (!(boolean))) {\n    final java.util.Iterator<? extends E> java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int));\n    if (java.util.Iterator<? extends E> != null) {\n        java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n    } else {\n        boolean = true;\n    }\n}","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:94","type":"CtWhileImpl"},"status":-1},{"failures":[380],"binaryOperator":"(T) == T","name":"negateConditional","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}","position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.sequence.CommandVisitor<T>.visitKeepCommand(org.apache.commons.collections4.sequence.EditCommand<T>.getObject())","position":"org.apache.commons.collections4.sequence.KeepCommand:55","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{"canRemove":"hasNext"},"name":"add","transplant":{"sourceCode":"this.boolean = true","position":"org.apache.commons.collections4.bag.AbstractMapBag:209","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:227","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.ref.WeakReference<org.apache.commons.collections4.list.CursorableLinkedList.Cursor<E>>.clear()","position":"org.apache.commons.collections4.list.CursorableLinkedList:298","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"obj":"key"},"name":"replace","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.map.AbstractHashedMap:1313","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, java.lang.Object>.decorated()","position":"org.apache.commons.collections4.map.MultiValueMap:353","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return boolean","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:210","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"OrderedMapIterator must not be null\")","position":"org.apache.commons.collections4.iterators.AbstractOrderedMapIteratorDecorator:44","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().comparator()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:92","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.IfClosure:122","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:226","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.map.StaticBucketMap.this.size()","position":"org.apache.commons.collections4.map.StaticBucketMap:561","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) instanceof org.apache.commons.collections4.ResettableIterator) {\n    this.java.util.Iterator<? extends E>.reset();\n} ","position":"org.apache.commons.collections4.iterators.IteratorIterable:125","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E>.remove()","position":"org.apache.commons.collections4.iterators.FilterIterator:122","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.size()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1429","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.previousIndex()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:174","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 3 :\n    if (((int) == int) && (K.equals(K))) {\n        final V V = V;\n        V = V;\n        return V;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:320","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"new org.apache.commons.collections4.ArrayStack<E>()","position":"org.apache.commons.collections4.iterators.PushbackIterator:43","type":"CtNewClassImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1931","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.Flat3Map:807","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-2},{"failures":[381,382,383,384,385,386,387,388,389,390,391,392],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.ListOrderedMap.KeySetView<K>(this)","position":"org.apache.commons.collections4.map.ListOrderedMap:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedBag<E>.decorated().uniqueSet()","position":"org.apache.commons.collections4.bag.PredicatedBag:102","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedSubList<E>.int = org.apache.commons.collections4.list.AbstractLinkedList<E>.int","position":"org.apache.commons.collections4.list.AbstractLinkedList:929","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.LazySortedMap:153","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.getKeyAnalyzer().compare(K, K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1806","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"FilterListIterator.remove() is not supported.\")","position":"org.apache.commons.collections4.iterators.FilterListIterator:162","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:646","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.Set<E>)(org.apache.commons.collections4.collection.PredicatedCollection<E>.decorated()))","position":"org.apache.commons.collections4.set.PredicatedSet:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (V != null) {\n    return V;\n} ","position":"org.apache.commons.collections4.MapUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().setValue(V)","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.isEmpty()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2054","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * An {@link Iterator} for iterating over a prefix search.\n */\nprivate final class EntryIterator extends org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>> {\n    private final K prefix;\n\n    private final int offset;\n\n    private final int lengthInBits;\n\n    private boolean lastOne;\n\n    private org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> subtree;\n\n    /** \n     * Starts iteration at the given entry & search only\n     * within the given subtree.\n     */\nEntryIterator(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> startScan ,final K prefix ,final int offset ,final int lengthInBits) {\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n        org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.followLeft(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n        this.K = K;\n        this.int = int;\n        this.int = int;\n    }\n\n    public java.util.Map.Entry<K, V> next() {\n        final java.util.Map.Entry<K, V> java.util.Map.Entry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.nextEntry();\n        if (boolean) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = null;\n        } \n        return java.util.Map.Entry<K, V>;\n    }\n\n    @java.lang.Override\n    protected org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> findNext(final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> prior) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.nextEntryInSubtree(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>, org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n    }\n\n    @java.lang.Override\n    public void remove() {\n        boolean boolean = false;\n        final int int = org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int;\n        if ((org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>) == (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>)) {\n            boolean = true;\n        } \n        org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.TrieIterator<java.util.Map.Entry<K, V>>.remove();\n        if ((int != (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) || boolean) {\n            org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.subtree(K, int, int);\n        } \n        if ((int) >= (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.int)) {\n            boolean = true;\n        } \n    }\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2331","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:267","type":"CtAssignmentImpl"},"status":-2},{"failures":[393,394,395,396,397,398,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,435,436,437,438,439,440,441,442,443,444,379],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    if (java.util.Queue<java.util.Iterator<? extends E>>.isEmpty()) {\n        java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator();\n    } else {\n        java.util.Iterator<? extends E> = java.util.Queue<java.util.Iterator<? extends E>>.remove();\n    }\n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.IteratorChain:212","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains1":208,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetContains2":209,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":387,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":70,"org.apache.commons.collections4.list.PredicatedListTest.testListIndexOf":323,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastEntrySet":425,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":30,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":132,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testFailFastEntrySet":48,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":199,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking2":352,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":55,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemoveAll":117,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":154,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking":359,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":135,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":241,"org.apache.commons.collections4.list.SetUniqueListTest.testListHashCode":287,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking":355,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":239,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedRemove":394,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":377,"org.apache.commons.collections4.map.UnmodifiableMapTest.testDecorateFactory":231,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":292,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":421,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove1":210,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemove2":211,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":260,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemoveAll":274,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":381,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":316,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":191,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":31,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":207,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAdd":414,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testDecorateFactory":226,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":98,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":75,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionToArray2":328,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":204,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContains":275,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testConstructors":232,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":107,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":26,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":222,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains3":36,"org.apache.commons.collections4.map.LazySortedMapTest.testTransformerDecorate":233,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains2":35,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIterator":418,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetContains1":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":73,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":160,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListRemoveByIndexBoundsChecking2":356,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":383,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAdd":279,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":137,"org.apache.commons.collections4.list.SetUniqueListTest.testListEquals":290,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":6,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByTailMapEntrySet":20,"org.apache.commons.collections4.list.TransformedListTest.testCollectionToArray2":272,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":7,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRemove":280,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":221,"org.apache.commons.collections4.map.CompositeMapTest.testMapSize":433,"org.apache.commons.collections4.list.TransformedListTest.testListHashCode":255,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":419,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":122,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastKeySet":426,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemoveAll":302,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":371,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":205,"org.apache.commons.collections4.map.CompositeMapTest.testMapHashCode":429,"org.apache.commons.collections4.map.CompositeMapTest.testMapEquals":435,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":164,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagRemoveAll":13,"org.apache.commons.collections4.list.TransformedListTest.testListRemoveByIndex":266,"org.apache.commons.collections4.list.FixedSizeListTest.testListGetByIndex":236,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":396,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking2":350,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRetainAll":436,"org.apache.commons.collections4.list.PredicatedListTest.testListHashCode":311,"org.apache.commons.collections4.map.CompositeMapTest.testKeySetIteratorRemoveChangesMap":439,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRetainAll":194,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":162,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking":363,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemoveAll":409,"org.apache.commons.collections4.map.CompositeMapTest.testFailFastValues":427,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":111,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIsEmpty":411,"org.apache.commons.collections4.PredicateUtilsTest.testIdentityPredicate":380,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByTailMapEntrySet":44,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":401,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemoveAll":64,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testDecorateFactory":229,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking2":362,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove1":115,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRemove2":116,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":284,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":182,"org.apache.commons.collections4.list.PredicatedListTest.testListLastIndexOf":324,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":384,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":99,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":203,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":96,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":25,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":4,"org.apache.commons.collections4.list.PredicatedListTest.testListAddByIndex":313,"org.apache.commons.collections4.SplitMapUtilsTest.testWritableMap":17,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionAddAll":412,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":54,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemove":336,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains1":138,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":402,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains2":139,"org.apache.commons.collections4.list.FixedSizeListTest.testListHashCode":237,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetContains3":140,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":50,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":180,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemoveNext":270,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":397,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":174,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListSetByIndexBoundsChecking2":364,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAddAll":333,"org.apache.commons.collections4.list.FixedSizeListTest.testFullListCompatibility":245,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":133,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":259,"org.apache.commons.collections4.list.PredicatedListTest.testFullListCompatibility":325,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":206,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":147,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRemove":415,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains1":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains3":60,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetContains2":59,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":87,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove2":187,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemove1":186,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":106,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":33,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":158,"org.apache.commons.collections4.list.TransformedListTest.testFullListCompatibility":269,"org.apache.commons.collections4.list.TransformedListTest.testListGetByIndex":254,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":388,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedAdd":248,"org.apache.commons.collections4.map.CompositeMapTest.testMapRemove":441,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":110,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":214,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemoveAll":172,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove1":80,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemove2":81,"org.apache.commons.collections4.list.SetUniqueListTest.testListIndexOf":296,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":159,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testDecorateFactory":225,"org.apache.commons.collections4.map.CompositeMapTest.testMapPutAll":438,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":12,"org.apache.commons.collections4.list.SetUniqueListTest.testFullListCompatibility":298,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":181,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemovePrevious":321,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":198,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGetNode":348,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains1":113,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetContains2":114,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":52,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":223,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemoveAll":40,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":69,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":202,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":108,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRetainAll":334,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":217,"org.apache.commons.collections4.map.CompositeMapTest.testMapToString":434,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains2":130,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIsEmpty":276,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains3":131,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRemoveAll":212,"org.apache.commons.collections4.queue.PredicatedQueueTest.testQueuePoll":235,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEntrySetContains1":129,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":90,"org.apache.commons.collections4.list.TransformedListTest.testListSetByIndex":264,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove3":171,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove1":169,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRemove2":170,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":77,"org.apache.commons.collections4.list.PredicatedListTest.testListSetByIndex":320,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListAddByIndexBoundsChecking2":360,"org.apache.commons.collections4.MapUtilsTest.testPredicatedMap":227,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":105,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaIterator":443,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":42,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiModifyEntrySet":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":51,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testDecorateFactory":224,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":148,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAdd":306,"org.apache.commons.collections4.list.FixedSizeListTest.testListIndexOf":243,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":379,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping0":339,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":340,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":341,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":342,"org.apache.commons.collections4.set.CompositeSetTest.testSerializeDeserializeThenCompare":416,"org.apache.commons.collections4.list.SetUniqueListTest.testListAddByIndex":289,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorNextRemovePrevious":265,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorNextRemoveNext":326,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":23,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":368,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray":417,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListGetByIndexBoundsChecking":351,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":119,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains2":185,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":398,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetContains1":184,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":256,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":315,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContainsAll":405,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":85,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetRemoveAll":430,"org.apache.commons.collections4.map.CompositeMapTest.testMapIsEmpty":437,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListListIteratorByIndex":357,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionRetainAll":413,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIsEmpty":304,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":369,"org.apache.commons.collections4.list.SetUniqueListTest.testListGetByIndex":286,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiModifyEntrySet":22,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove1":61,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorAdd":261,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove2":62,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":152,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRemove3":63,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionAdd":335,"org.apache.commons.collections4.list.SetUniqueListTest.testListLastIndexOf":297,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListGetByIndexBoundsChecking":361,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove3":39,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove2":38,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRemove1":37,"org.apache.commons.collections4.queue.PredicatedQueueTest.testRemove":234,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":86,"org.apache.commons.collections4.map.TransformedMapTest.testTransformedMap":183,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains1":91,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains3":93,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEntrySetContains2":92,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":378,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":190,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionRemoveAll":330,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorAdd":317,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking2":354,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetRetainAll":118,"org.apache.commons.collections4.list.TransformedListTest.testListAddByIndex":257,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":386,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":104,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":219,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAdd":14,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiModifyEntrySet":67,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRemoveAll":82,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":220,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":155,"org.apache.commons.collections4.list.TransformedListTest.testListIteratorSet":262,"org.apache.commons.collections4.list.TransformedListTest.testListIndexOf":267,"org.apache.commons.collections4.iterators.IteratorChainTest.testFullIterator":424,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListSetByIndexBoundsChecking":353,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":53,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetRemoveAll":188,"org.apache.commons.collections4.map.CompositeMapTest.testEntrySetIteratorRemoveChangesMap":431,"org.apache.commons.collections4.list.PredicatedListTest.testSerializeDeserializeThenCompare":337,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIsEmpty":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":28,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetRetainAll":41,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":213,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsValue":442,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":163,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiModifyEntrySet":102,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":161,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":125,"org.apache.commons.collections4.list.TransformedListTest.testListEquals":258,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemoveNext":263,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":124,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemoveAll":144,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContains":303,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":95,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionContainsAll":300,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":244,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":196,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":390,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToArray2":406,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":32,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains1":175,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionIteratorRemove":408,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEntrySetContains2":176,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":88,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveByHeadMapEntrySet":19,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":47,"org.apache.commons.collections4.iterators.IteratorChainTest.testIterator":423,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking2":366,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":192,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":382,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveByHeadMapEntrySet":43,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIterator":282,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove3":143,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove2":142,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRemove1":141,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemoveNext":319,"org.apache.commons.collections4.map.CompositeMapTest.testMapContainsKey":432,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiRemoveBySubMapEntrySet":45,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":57,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":372,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionContains":410,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiRemoveBySubMapEntrySet":21,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIterator":338,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":346,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":344,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":76,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":375,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":376,"org.apache.commons.collections4.map.MultiValueMapTest.testValues":444,"org.apache.commons.collections4.map.TransformedSortedMapTest.testTransformedMap":156,"org.apache.commons.collections4.MapUtilsTest.testLazyMapFactory":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":157,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":8,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":385,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":27,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":294,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionToArray2":247,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains2":79,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":177,"org.apache.commons.collections4.list.PredicatedListTest.testListGetByIndex":310,"org.apache.commons.collections4.bag.PredicatedBagTest.testCollectionAddAll":15,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetContains1":78,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetRetainAll":173,"org.apache.commons.collections4.list.PredicatedListTest.testListIteratorSet":318,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":312,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":240,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":288,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":373,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":343,"org.apache.commons.collections4.list.TransformedListTest.testCollectionAddAll":277,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":72,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains1":200,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEntrySetContains2":201,"org.apache.commons.collections4.set.CompositeSetTest.testCollectionToString":407,"org.apache.commons.collections4.list.CursorableLinkedListTest.testListAddByIndexBoundsChecking":349,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":9,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":399,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":5,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":49,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListListIteratorByIndex":367,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":66,"org.apache.commons.collections4.list.TransformedListTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":16,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":283,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContains":249,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":120,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":71,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":370,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":136,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":389,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":3,"org.apache.commons.collections4.map.TransformedSortedMapTest.testFirstKey":18,"org.apache.commons.collections4.list.FixedSizeListTest.testUnsupportedRemove":251,"org.apache.commons.collections4.list.SetUniqueListTest.testListRemoveByIndex":295,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":216,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":153,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":189,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":305,"org.apache.commons.collections4.collection.CompositeCollectionTest.testAddAllToCollection":393,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":178,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":291,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains3":128,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains2":127,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":246,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":97,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEntrySetContains1":126,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":149,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":197,"org.apache.commons.collections4.list.TransformedListTest.testListLastIndexOf":268,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetRetainAll":150,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":74,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":11,"org.apache.commons.collections4.list.FixedSizeListTest.testSerializeDeserializeThenCompare":252,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":345,"org.apache.commons.collections4.list.CursorableLinkedListTest.testGet":347,"org.apache.commons.collections4.list.FixedSizeListTest.testListEquals":238,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetRetainAll":65,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":94,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIterator":253,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagRemoveAll":10,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":299,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testFailFastEntrySet":24,"org.apache.commons.collections4.iterators.IteratorChainTest.testFirstIteratorIsEmptyBug":420,"org.apache.commons.collections4.collection.CompositeCollectionTest.testToCollection":395,"org.apache.commons.collections4.list.SetUniqueListTest.testSerializeDeserializeThenCompare":308,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains1":166,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains3":168,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetContains2":167,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIterator":309,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":56,"org.apache.commons.collections4.list.FixedSizeListTest.testListSetByIndex":242,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":195,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":109,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":0,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":215,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":1,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":2,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRemove":307,"org.apache.commons.collections4.list.PredicatedListTest.testListRemoveByIndex":322,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":293,"org.apache.commons.collections4.list.TransformedListTest.testCollectionIteratorRemove":273,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionAddAll":285,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":165,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":327,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionIsEmpty":250,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":271,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains1":100,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":392,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetRetainAll":83,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEntrySetContains2":101,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testListRemoveByIndexBoundsChecking":365,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":391,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemove":422,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionToArray2":301,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":193,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetRetainAll":218,"org.apache.commons.collections4.map.CompositeMapTest.testValuesIteratorRemoveChangesMap":428,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":89,"org.apache.commons.collections4.set.CompositeSetTest.testSetEquals":403,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":123,"org.apache.commons.collections4.set.CompositeSetTest.testSetHashCode":404,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testDecorateFactory":230,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":151,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContains":331,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":112,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":103,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":400,"org.apache.commons.collections4.list.NodeCachingLinkedListTest.testGetNode":358,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionIteratorRemove":329,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":374,"org.apache.commons.collections4.map.CompositeMapTest.testMapPut":440,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":29,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":121,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":134,"org.apache.commons.collections4.list.TransformedListTest.testCollectionRetainAll":278,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":68,"org.apache.commons.collections4.list.PredicatedListTest.testListEquals":314}}]
