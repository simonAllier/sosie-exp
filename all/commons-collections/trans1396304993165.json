[{"failures":[0,1,2,3,4,5,6,7,8,9,10,11],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterIterator:179","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(org.apache.commons.collections4.iterators.ListIteratorWrapper.java.lang.String)","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:103","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:228","type":"CtReturnImpl"},"status":-2},{"failures":[12],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null))","position":"org.apache.commons.collections4.list.GrowthList:154","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((int) == 0) {\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n} else {\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n    final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = new org.apache.commons.collections4.map.AbstractHashedMap.HashEntry[int];\n    (int)++;\n    for (int int = int - 1 ; int >= 0 ; int--) {\n        org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n        if (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null) {\n            org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = null;\n            do {\n                final org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                final int int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.hashIndex(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.int, int);\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int];\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n                org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>;\n            } while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> != null );\n        } \n    }\n    int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(int, float);\n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[] = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[];\n}","position":"org.apache.commons.collections4.map.AbstractHashedMap:630","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:156","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((\"InvokerTransformer: The method \\'\" + (java.lang.String)) + \"\\' on \\'\") + (java.lang.Object.getClass())) + \"\\' cannot be accessed\")","name":"math","position":"org.apache.commons.collections4.functors.InvokerTransformer:134","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) && (org.apache.commons.collections4.MultiMap<K, C>.containsKey(K))) {\n    throw new java.lang.IllegalArgumentException(\"Duplicate key in uniquely indexed collection.\");\n} ","position":"org.apache.commons.collections4.collection.IndexedCollection:243","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.list.TreeList:661","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Closure<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Closure must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:58","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int = org.apache.commons.collections4.map.AbstractHashedMap<K, V>.calculateThreshold(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[].int, float)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:1046","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:111","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.LinkedMap.LinkedMapList<K>(this)","position":"org.apache.commons.collections4.map.LinkedMap:203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().subList(int, int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.TreeList:264","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().contains(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:124","type":"CtSynchronizedImpl"},"status":-2},{"failures":[13,14,15,16,17,18],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.LazyIteratorChain<E>.nextIterator(++(int))","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:84","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.bag.AbstractMapBag:203","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int < int) {\n    E E = org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int);\n    if (E == null) {\n        E = org.apache.commons.collections4.Factory<? extends E>.create();\n        org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E);\n        return E;\n    } \n    return E;\n} ","position":"org.apache.commons.collections4.list.LazyList:113","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException()","position":"org.apache.commons.collections4.iterators.PushbackIterator:105","type":"CtThrowImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n    boolean |= org.apache.commons.collections4.list.SetUniqueList<E>.remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.list.SetUniqueList:248","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toArray(T[]);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:163","type":"CtSynchronizedImpl"},"status":-2},{"failures":[19],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super E>.execute(E)","position":"org.apache.commons.collections4.functors.WhileClosure:86","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"list1":"coll","list2":"coll"},"name":"add","transplant":{"sourceCode":"if (((java.util.Collection<?> == null) || (java.util.Collection<?> == null)) || ((java.util.Collection<?>.size()) != (java.util.Collection<?>.size()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.ListUtils:248","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1055","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.map.LinkedMap:169","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:159","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object.hashCode()","position":"org.apache.commons.collections4.map.MultiKeyMap:666","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:68","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:137","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.TransformedSortedMap:133","type":"CtReturnImpl"},"status":-2},{"failures":[20],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.util.ConcurrentModificationException()","position":"org.apache.commons.collections4.list.AbstractLinkedList:801","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:143","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((int) == 0) {\n    throw new java.util.NoSuchElementException(\"Map is empty\");\n} ","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:325","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterIterator:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:305","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.getValue()","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:64","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return 1","position":"org.apache.commons.collections4.map.SingletonMap:491","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:268","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.size()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2050","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.AbstractBagDecorator<E>.decorated().getCount(java.lang.Object)","position":"org.apache.commons.collections4.bag.AbstractBagDecorator:69","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this","index":"index"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().get(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSet<E>(java.util.Set<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSet:60","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:132","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.Transformer<T, T>[] org.apache.commons.collections4.Transformer<T, T>[] = java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.toArray(new org.apache.commons.collections4.Transformer[java.util.Collection<? extends org.apache.commons.collections4.Transformer<T, T>>.size()])","position":"org.apache.commons.collections4.functors.ChainedTransformer:78","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Factory must not be null\")","position":"org.apache.commons.collections4.functors.FactoryTransformer:49","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"java.util.Iterator<? extends E> = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:249","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.FilterIterator:142","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:144","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean = org.apache.commons.collections4.MapIterator<K, V>.hasNext()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1380","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.Iterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterIterator:175","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((K)(java.lang.Object))","position":"org.apache.commons.collections4.trie.AbstractBitwiseTrie:80","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.SynchronizedCollection:182","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ReverseComparator:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.IdentityPredicate<T>(T)","position":"org.apache.commons.collections4.functors.IdentityPredicate:50","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.TransformedSortedMap:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap.org.apache.commons.collections4.map.TransformedSortedMap.transformingSortedMap(java.util.SortedMap<K, V>, org.apache.commons.collections4.Transformer<? super K, ? extends K>, org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.MapUtils:1573","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int++","position":"org.apache.commons.collections4.bag.AbstractMapBag:477","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return -1","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:57","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return T[]","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:161","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:220","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>))","position":"org.apache.commons.collections4.iterators.PushbackIterator:62","type":"CtLocalVariableImpl"},"status":-2},{"failures":[21,23,24,25,33,29,30,31,32],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:130","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) - 1","position":"org.apache.commons.collections4.iterators.FilterListIterator:157","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:87","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return java.util.Map<K, V>","position":"org.apache.commons.collections4.map.AbstractMapDecorator:73","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Map<? super K, ?> != null) {\n    final java.lang.Object java.lang.Object = java.util.Map<? super K, ?>.get(K);\n    if ((java.lang.Object != null) && (java.lang.Object instanceof java.util.Map)) {\n        return ((java.util.Map<?, ?>)(java.lang.Object));\n    } \n} ","position":"org.apache.commons.collections4.MapUtils:341","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final K K = java.util.Map.Entry<K, V>.getKey()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2020","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)) | boolean","position":"org.apache.commons.collections4.list.GrowthList:157","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.MapUtils:978","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.List<E>.size()) - 1","position":"org.apache.commons.collections4.iterators.LoopingListIterator:172","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:184","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.Flat3Map:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.nextEntry().getKey()","position":"org.apache.commons.collections4.map.AbstractLinkedMap:357","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:138","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"public enum Criterion {\nEQUAL, GREATER, LESS, GREATER_OR_EQUAL, LESS_OR_EQUAL;}","position":"org.apache.commons.collections4.functors.ComparatorPredicate:83","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(org.apache.commons.collections4.bag.TreeBag<E>.comparator())","position":"org.apache.commons.collections4.bag.TreeBag:118","type":"CtInvocationImpl"},"status":-2},{"failures":[34],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Equator<T>) != null) {\n    return org.apache.commons.collections4.Equator<T>.equate(T, T);\n} else {\n    return T.equals(T);\n}","position":"org.apache.commons.collections4.functors.EqualPredicate:109","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"int -= int","position":"org.apache.commons.collections4.bag.AbstractMapBag:327","type":"CtOperatorAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"(int)++","position":"org.apache.commons.collections4.iterators.FilterListIterator:134","type":"CtUnaryOperatorImpl"},"status":-2},{"failures":[35],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(int))","position":"org.apache.commons.collections4.list.FixedSizeList:123","type":"CtReturnImpl"},"status":-1},{"failures":[36],"variableMapping":{"iterator":"iterator","obj":"obj"},"name":"add","transplant":{"sourceCode":"this.java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.set(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:97","type":"CtInvocationImpl"},"status":-1},{"failures":[],"binaryOperator":"(\"Couldn\\'t get the node: \" + \"index (\")","name":"math","position":"org.apache.commons.collections4.list.AbstractLinkedList:547","type":"mutation","status":-2},{"failures":[37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76],"variableMapping":{"obj":"object","this":"object"},"name":"replace","transplant":{"sourceCode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.AbstractMapDecorator:127","type":"CtIfImpl"},"status":-1},{"failures":[77,78,79,80],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{"value":"object"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.containsKey(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2070","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:109","type":"CtIfImpl"},"status":-2},{"failures":[81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final int int = org.apache.commons.collections4.trie.AbstractBitwiseTrie<K, V>.lengthInBits(K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1053","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.trie.AbstractPatriciaTrie.PrefixRangeEntrySet(this)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2221","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.entrySet()","position":"org.apache.commons.collections4.map.AbstractInputCheckedMapDecorator:102","type":"CtReturnImpl"},"status":-2},{"failures":[119,120,121,122,123],"variableMapping":{"value":"element"},"name":"replace","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.list.AbstractLinkedList:832","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>nonePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:405","type":"CtLocalVariableImpl"},"status":-2},{"failures":[124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180],"binaryOperator":"int > int","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:113","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return ","position":"org.apache.commons.collections4.functors.SwitchClosure:149","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    return ;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:137","type":"CtIfImpl"},"status":-2},{"failures":[21,22,23,24,25,26,27,28,29,30,31,32],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasNext()) {\n    final E E = java.util.ListIterator<? extends E>.next();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:231","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated()","position":"org.apache.commons.collections4.list.AbstractListDecorator:79","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"this.E = E","position":"org.apache.commons.collections4.list.AbstractLinkedList:694","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:149","type":"CtAssignmentImpl"},"status":-2},{"failures":[181],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()","position":"org.apache.commons.collections4.map.AbstractHashedMap:1324","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (java.util.Collection<?>.isEmpty()) {\n    return true;\n} else {\n    final java.util.Iterator<?> java.util.Iterator<?> = java.util.Collection<?>.iterator();\n    final java.util.Set<java.lang.Object> java.util.Set<java.lang.Object> = new java.util.HashSet<java.lang.Object>();\n    for (final java.lang.Object java.lang.Object : java.util.Collection<?>) {\n        if (java.util.Set<java.lang.Object>.contains(java.lang.Object)) {\n            continue;\n        } \n        boolean boolean = false;\n        while (java.util.Iterator<?>.hasNext()) {\n            final java.lang.Object java.lang.Object = java.util.Iterator<?>.next();\n            java.util.Set<java.lang.Object>.add(java.lang.Object);\n            if (java.lang.Object == null ? java.lang.Object == null : java.lang.Object.equals(java.lang.Object)) {\n                boolean = true;\n                break;\n            } \n        }\n        if (boolean) {\n            continue;\n        } else {\n            return false;\n        }\n    }\n    return true;\n}","position":"org.apache.commons.collections4.CollectionUtils:367","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:367","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:322","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.MapIterator<? extends K, ? extends V>.hasNext()","position":"org.apache.commons.collections4.iterators.UnmodifiableMapIterator:71","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.Map<E, ? super V>.isEmpty()","position":"org.apache.commons.collections4.set.MapBackedSet:101","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:146","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return this.E[][this.int]","position":"org.apache.commons.collections4.iterators.ObjectArrayListIterator:113","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw java.lang.RuntimeException","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:62","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"for (final E E : E[]) {\n    org.apache.commons.collections4.queue.TransformedQueue<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.queue.TransformedQueue:81","type":"CtForEachImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.bag.PredicatedSortedBag<E>(org.apache.commons.collections4.SortedBag<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:61","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][--int]","position":"org.apache.commons.collections4.map.AbstractHashedMap:1174","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ExceptionPredicate.org.apache.commons.collections4.functors.ExceptionPredicate.<T>exceptionPredicate()","position":"org.apache.commons.collections4.PredicateUtils:91","type":"CtReturnImpl"},"status":-2},{"failures":[77,78,79,182,183,184,185,186,187,188,189],"variableMapping":{"lastUsedIterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"if ((this.java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> != (java.util.Iterator<? extends E>)) {\n    if ((java.util.Iterator<? extends E>) != null) {\n        org.apache.commons.collections4.ArrayStack<java.util.Iterator<? extends E>>.push(java.util.Iterator<? extends E>);\n    } \n    java.util.Iterator<? extends E> = java.util.Iterator<? extends E>;\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:179","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Map<K, V> java.util.Map<K, V> = ((java.util.Map<K, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bidimap.DualHashBidiMap:103","type":"CtLocalVariableImpl"},"status":-2},{"failures":[190,191],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.comparators.ComparatorChain:334","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<java.util.Map.Entry<K, V>>.hasNext()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:77","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.TreeList.AVLNode<E>.setLeft(this, null)","position":"org.apache.commons.collections4.list.TreeList:750","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.PassiveExpiringMap:359","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.Map<K, V> java.util.Map<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.transformMap(java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:96","type":"CtLocalVariableImpl"},"status":-2},{"failures":[119,120],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies(((int - int) + 1), null))","position":"org.apache.commons.collections4.list.GrowthList:184","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (!(java.lang.Object.getClass().equals(java.lang.Object.getClass()))) {\n    return false;\n} ","position":"org.apache.commons.collections4.comparators.NullComparator:172","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:144","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 3 :\n    if ((K) == null) {\n        return V;\n    } ","position":"org.apache.commons.collections4.map.Flat3Map:133","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((int <= 0) || (org.apache.commons.collections4.Closure<? super E> == null)) {\n    return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure();\n} ","position":"org.apache.commons.collections4.functors.ForClosure:52","type":"CtIfImpl"},"status":-2},{"failures":[77,78,79,182,183,192,184,185,186,187,193,188,189],"variableMapping":{"this":"this","currentIterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while ((java.util.Iterator<? extends E>.hasNext()) && ((boolean) == false)) {\n    E E = java.util.Iterator<? extends E>.next();\n    if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) != null) {\n        E = org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E);\n    } \n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:187","type":"CtWhileImpl"},"status":-1},{"failures":[194,195],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().lastKey()","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().nextKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:76","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return ((java.util.SortedMap<V, K>)(java.util.Map<V, K>)).comparator()","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:136","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().comparator()","position":"org.apache.commons.collections4.map.LazySortedMap:139","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.SortedBidiMap<K, ? extends V> instanceof org.apache.commons.collections4.Unmodifiable) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.SortedBidiMap<K, V> org.apache.commons.collections4.SortedBidiMap<K, V> = ((org.apache.commons.collections4.SortedBidiMap<K, V>)(org.apache.commons.collections4.SortedBidiMap<K, ? extends V>));\n    return org.apache.commons.collections4.SortedBidiMap<K, V>;\n} ","position":"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMap:58","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().firstKey()","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:70","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.sequence.SequencesComparator<T>.this(java.util.List<T>, java.util.List<T>, org.apache.commons.collections4.functors.DefaultEquator.org.apache.commons.collections4.functors.DefaultEquator.defaultEquator())","position":"org.apache.commons.collections4.sequence.SequencesComparator:89","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().size()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:188","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":27,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testEqualsNull":71,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":101,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":125,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":70,"org.apache.commons.collections4.list.FixedSizeListTest.testListIteratorSet":36,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet2":120,"org.apache.commons.collections4.list.GrowthListTest.testGrowthSet1":119,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":193,"org.apache.commons.collections4.map.UnmodifiableMapTest.testEqualsNull":49,"org.apache.commons.collections4.map.MultiKeyMapTest.testEqualsNull":75,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":35,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":155,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFullIterator":16,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":4,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":144,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":52,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testEqualsNull":61,"org.apache.commons.collections4.functors.EqualPredicateTest.objectFactoryUsesEqualsForTest":34,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":11,"org.apache.commons.collections4.map.MultiValueMapTest.testRemoveAllViaEntryIterator":17,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFalsePredicate":33,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":141,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":128,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":21,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":146,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":26,"org.apache.commons.collections4.EnumerationUtilsTest.testToListWithHashtable":181,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":8,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":142,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testEqualsNull":51,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":41,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":104,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":54,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":164,"org.apache.commons.collections4.map.ListOrderedMap2Test.testEqualsNull":65,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":162,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":131,"org.apache.commons.collections4.map.TransformedMapTest.testEqualsNull":44,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":23,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testEqualsNull":38,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":114,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":145,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":45,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":159,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":185,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":37,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":127,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":180,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":173,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":105,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":186,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testEqualsNull":42,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":30,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":126,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":178,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking2":122,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":152,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":0,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":103,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":56,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":189,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":111,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":48,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":81,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":132,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":150,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":6,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":112,"org.apache.commons.collections4.splitmap.TransformedSplitMapTest.testMapIterator":191,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":116,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":102,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":160,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testIterator":15,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":82,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":25,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":187,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testNextKey":194,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":135,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":171,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":84,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":94,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":2,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":60,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":68,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":107,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEqualsNull":46,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testFirstIteratorIsEmptyBug":13,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":24,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":109,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":113,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":89,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":179,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testEqualsNull":53,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":188,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":184,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":58,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":83,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":95,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":96,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":108,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":183,"org.apache.commons.collections4.SplitMapUtilsTest.testReadableMap":190,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":117,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":130,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":163,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":168,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":3,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":87,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":124,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":29,"org.apache.commons.collections4.map.DefaultedMapTest.testEqualsNull":57,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":133,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":172,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testEqualsNull":40,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":50,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":7,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":93,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":169,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":182,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":134,"org.apache.commons.collections4.map.PredicatedMapTest.testEqualsNull":73,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":115,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":100,"org.apache.commons.collections4.list.GrowthListTest.testGrowthAddAll":12,"org.apache.commons.collections4.map.MultiValueMapTest.testEqualsNull":76,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenSet":20,"org.apache.commons.collections4.map.FixedSizeMapTest.testEqualsNull":63,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndexBoundsChecking":121,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":99,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":118,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":156,"org.apache.commons.collections4.map.LazySortedMapTest.testEqualsNull":69,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":137,"org.apache.commons.collections4.map.SingletonMapTest.testEqualsNull":47,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":66,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":1,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":170,"org.apache.commons.collections4.map.ListOrderedMapTest.testEqualsNull":55,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":28,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":80,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":175,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":9,"org.apache.commons.collections4.list.GrowthListTest.testListSetByIndex":123,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":161,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":5,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":143,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":77,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":78,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":79,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":90,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":10,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":62,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":91,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":72,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":85,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":64,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":151,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":97,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":92,"org.apache.commons.collections4.ClosureUtilsTest.testDoWhileClosure":19,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":149,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":32,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":165,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":129,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":31,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":86,"org.apache.commons.collections4.map.LazyMapTest.testEqualsNull":59,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":157,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":136,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":148,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":43,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":147,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":39,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator":18,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":140,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":106,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":158,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":166,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemove":14,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEqualsNull":67,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":174,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testNextKey":195,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":74,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":138,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":139,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":192,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":153,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":110,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":154,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":167,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":98}}]
