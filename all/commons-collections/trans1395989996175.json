[{"failures":[0],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"mutation","return":"return 0","status":-1},{"failures":[1],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:356","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<K>.get((int - 1))","position":"org.apache.commons.collections4.map.ListOrderedMap:211","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:112","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) == java.lang.Object) || (((org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V) != null) && (org.apache.commons.collections4.map.StaticBucketMap.Node<K, V>.V.equals(java.lang.Object)))) {\n    return true;\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:252","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"for (final org.apache.commons.collections4.MapIterator<?, ?> org.apache.commons.collections4.MapIterator<?, ?> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getMapIterator(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement) ; org.apache.commons.collections4.MapIterator<?, ?>.hasNext() ; ) {\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.next();\n    final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue();\n    int += (java.lang.Object.hashCode()) ^ (java.lang.Object.hashCode());\n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1361","type":"CtForImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return false","position":"org.apache.commons.collections4.iterators.FilterListIterator:229","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return (((java.util.Enumeration<?>)(java.lang.Object)).hasMoreElements()) == false","position":"org.apache.commons.collections4.CollectionUtils:1394","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.LazySortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends V>)","position":"org.apache.commons.collections4.map.LazySortedMap:93","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Math.java.lang.Math.max(org.apache.commons.collections4.CollectionUtils.CardinalityHelper<O>.freqA(java.lang.Object), org.apache.commons.collections4.CollectionUtils.CardinalityHelper<O>.freqB(java.lang.Object))","position":"org.apache.commons.collections4.CollectionUtils:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Collection<E>","position":"org.apache.commons.collections4.collection.SynchronizedCollection:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.bag.TreeBag<E>.(comparator()) == null) && (!(E instanceof java.lang.Comparable))) {\n    throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"));\n} ","position":"org.apache.commons.collections4.bag.TreeBag:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isNullBitKey(int)) {\n    if (!(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty())) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry();\n    } else if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) > 1) {\n        return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.firstEntry());\n    } else {\n        return null;\n    }\n} else if (org.apache.commons.collections4.trie.KeyAnalyzer.org.apache.commons.collections4.trie.KeyAnalyzer.isEqualBitKey(int)) {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.nextEntry(org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>);\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:916","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.SplitMapUtils.WrappedGet<K, V>(org.apache.commons.collections4.Get<K, V>)","position":"org.apache.commons.collections4.SplitMapUtils:218","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:67","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object instanceof java.util.Collection) {\n    return ((java.util.Collection<?>)(java.lang.Object)).iterator();\n} ","position":"org.apache.commons.collections4.IteratorUtils:1059","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Enumeration<? extends E>.hasMoreElements()","position":"org.apache.commons.collections4.iterators.EnumerationIterator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"currentIterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = java.util.Iterator<? extends E>","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:97","type":"CtAssignmentImpl"},"status":0},{"failures":[2,3,4,5,6,7,8,9,10,11],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:146","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject()","position":"org.apache.commons.collections4.iterators.FilterListIterator:152","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"sub":"map"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.bidimap.DualTreeBidiMap.ViewMap<K, V>(this , java.util.SortedMap<K, V>)","position":"org.apache.commons.collections4.bidimap.DualTreeBidiMap:204","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:110","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"-1675486811351124386L","position":"org.apache.commons.collections4.set.TransformedSortedSet:40","type":"CtUnaryOperatorImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (int > int) {\n    org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(java.util.Collections.java.util.Collections.<E>nCopies((int - int), null));\n    boolean = true;\n} ","position":"org.apache.commons.collections4.list.GrowthList:153","type":"CtIfImpl"},"status":-2},{"failures":[12,13,14,15,16,17],"binaryOperator":"(java.util.Collection<? extends E>.size()) == 0","name":"negateConditional","position":"org.apache.commons.collections4.iterators.LoopingIterator:84","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return K","position":"org.apache.commons.collections4.map.ListOrderedMap:756","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map.Entry<K, V>.equals(java.lang.Object)","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:76","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return V","position":"org.apache.commons.collections4.map.Flat3Map:330","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.ReverseListIterator:161","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.comparators.BooleanComparator.org.apache.commons.collections4.comparators.BooleanComparator.booleanComparator(boolean)","position":"org.apache.commons.collections4.ComparatorUtils:136","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.EnumerationIterator<E>(java.util.Enumeration<? extends E> , java.util.Collection<? super E>)","position":"org.apache.commons.collections4.IteratorUtils:877","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return 0","position":"org.apache.commons.collections4.comparators.ComparatorChain:292","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().hashCode()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal java.util.Comparator<? super E> java.util.Comparator<? super E> = ((java.util.Comparator<? super E>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.bag.TreeBag:128","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.ReverseListIterator:108","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<K, V> == null) || (((K) != null) && (!org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.RangeMap.(inFromRange(K, false))))) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1913","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().entrySet()","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:72","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.UnmodifiableSet.org.apache.commons.collections4.set.UnmodifiableSet.<E>unmodifiableSet(java.util.Set<E>)","position":"org.apache.commons.collections4.bag.UnmodifiableBag:155","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isRed(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.isLeftChild(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateRight(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeBlack(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.makeRed(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.(getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.rotateLeft(org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.getGrandParent(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement), org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:915","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (T) == T","position":"org.apache.commons.collections4.functors.IdentityPredicate:72","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[186,0,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,117,118,212,119,120,121,213,122,123,126,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324],"name":"returnValue","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:37","type":"mutation","return":"return false","status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (boolean) || org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())","position":"org.apache.commons.collections4.iterators.FilterListIterator:125","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.StringBuilder.toString()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1389","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-2},{"failures":[325],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"java.util.ListIterator<E>.remove()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:196","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:102","type":"CtInvocationImpl"},"status":-1},{"failures":[326],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Predicate must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:56","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IndexOutOfBoundsException((\"Index cannot be negative: \" + int))","position":"org.apache.commons.collections4.CollectionUtils:1253","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.util.ListIterator<?>.nextIndex()","position":"org.apache.commons.collections4.iterators.ListIteratorWrapper:163","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.CollatingIterator:354","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:135","type":"CtLocalVariableImpl"},"status":0},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().remove(java.lang.Object);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:169","type":"CtSynchronizedImpl"},"status":-2},{"failures":[327],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return \"ComparableComparator\".hashCode()","position":"org.apache.commons.collections4.comparators.ComparableComparator:106","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().lastIndexOf(java.lang.Object)","position":"org.apache.commons.collections4.list.FixedSizeList:113","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstantiateTransformer<T>()","position":"org.apache.commons.collections4.functors.InstantiateTransformer:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantTransformer.org.apache.commons.collections4.functors.ConstantTransformer.<I,O>nullTransformer()","position":"org.apache.commons.collections4.functors.MapTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collections.java.util.Collections.unmodifiableSet(org.apache.commons.collections4.Trie<K, V>.entrySet())","position":"org.apache.commons.collections4.trie.UnmodifiableTrie:82","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = java.util.ListIterator<E>.next()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:147","type":"CtAssignmentImpl"},"status":-2},{"failures":[2,328,3,4,5,329,6,7,8,9,10,11],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<? extends E>.hasPrevious()) {\n    final E E = java.util.ListIterator<? extends E>.previous();\n    if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n        E = E;\n        boolean = true;\n        return true;\n    } \n}","position":"org.apache.commons.collections4.iterators.FilterListIterator:263","type":"CtWhileImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:183","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().remove(java.lang.Object)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:120","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"case 2 :\n    if (((int) == int) && (java.lang.Object.equals(K))) {\n        final V V = V;\n        int = 0;\n        K = null;\n        V = null;\n        int = 1;\n        return V;\n    } \n    if (((int) == int) && (java.lang.Object.equals(K))) {\n        final V V = V;\n        int = int;\n        K = K;\n        V = V;\n        int = 0;\n        K = null;\n        V = null;\n        int = 1;\n        return V;\n    } \n    return null;","position":"org.apache.commons.collections4.map.Flat3Map:545","type":"CtCaseImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:105","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"((((((\"Entry.after=null, header.after\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:259","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceBaseIterator<K, java.lang.Object>.nextEntry().getKey()","position":"org.apache.commons.collections4.map.AbstractReferenceMap:876","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().addAll(int, java.util.Collection<? extends E>)","position":"org.apache.commons.collections4.list.AbstractListDecorator:75","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:145","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().hashCode()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:154","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"List is fixed size\")","position":"org.apache.commons.collections4.list.FixedSizeList:133","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"PrototypeCloneFactory: The clone method must exist and be public \")","position":"org.apache.commons.collections4.functors.PrototypeFactory:120","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap.this.clear()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2120","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:119","type":"CtInvocationImpl"},"status":-2},{"failures":[330,331,332,333,334,335,336,337,338,339,340,341],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E>.evaluate(E)) {\n    E = E;\n    boolean = true;\n    return true;\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:176","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Iterator<java.util.Map.Entry<K, V>>.remove()","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:95","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.IteratorIterable<E>(java.util.Iterator<? extends E> , true)","position":"org.apache.commons.collections4.IteratorUtils:924","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.PredicatedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Predicate<? super K> , org.apache.commons.collections4.Predicate<? super V>)","position":"org.apache.commons.collections4.map.PredicatedSortedMap:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.ComparatorChain:337","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:228","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LoopingIterator<E>.reset()","position":"org.apache.commons.collections4.iterators.LoopingIterator:88","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.clear()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1434","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends I>.remove()","position":"org.apache.commons.collections4.iterators.TransformIterator:90","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"E E = null","position":"org.apache.commons.collections4.iterators.LoopingListIterator:145","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> = org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.lookupValue(java.util.Map.Entry<?, ?>.getKey())","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1580","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"int int = 0","position":"org.apache.commons.collections4.CollectionUtils:1333","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"Map is fixed size\")","position":"org.apache.commons.collections4.map.FixedSizeMap:140","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:109","type":"CtThrowImpl"},"status":0},{"failures":[],"binaryOperator":"(((((((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K) + \" value=\") + V) + \" size=\") + (int))","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.util.Map<? extends K, ? extends V> = org.apache.commons.collections4.map.TransformedMap<K, V>.transformMap(java.util.Map<? extends K, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedMap:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"try {\n    org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E);\n} catch (final java.lang.RuntimeException java.lang.RuntimeException) {\n    throw java.lang.RuntimeException;\n} catch (final java.lang.Throwable java.lang.Throwable) {\n    throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable);\n}","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:59","type":"CtTryImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super E> == null) {\n    throw new java.lang.IllegalArgumentException(\"Predicate must not be null\");\n} ","position":"org.apache.commons.collections4.functors.WhileClosure:55","type":"CtIfImpl"},"status":-2},{"failures":[342],"variableMapping":{"hit":"iCount"},"name":"add","transplant":{"sourceCode":"if ((this.int) != 1) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:2319","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"for (int int = 0 ; int < (int) ; int++) {\n    org.apache.commons.collections4.Closure<? super E>.execute(E);\n}","position":"org.apache.commons.collections4.functors.ForClosure:80","type":"CtForImpl"},"status":-1},{"failures":[],"name":"inlineConstant","inlineConstant":"boolean boolean = false","position":"org.apache.commons.collections4.list.GrowthList:152","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) != (org.apache.commons.collections4.map.AbstractLinkedMap<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)","position":"org.apache.commons.collections4.map.AbstractLinkedMap:547","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return int","position":"org.apache.commons.collections4.MapUtils:785","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList.FixedSizeListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator(0))","position":"org.apache.commons.collections4.list.FixedSizeList:118","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.Flat3Map<K, V>.put(java.util.Map.Entry<? extends K, ? extends V>.getKey(), java.util.Map.Entry<? extends K, ? extends V>.getValue())","position":"org.apache.commons.collections4.map.Flat3Map:385","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final java.lang.Object java.lang.Object = org.apache.commons.collections4.MapIterator<?, ?>.getValue()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1338","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(java.lang.Throwable)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:64","type":"CtThrowImpl"},"status":-2},{"failures":[343,344],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().firstKey()","position":"org.apache.commons.collections4.map.LazySortedMap:131","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.LazySortedMap<K, V>.getSortedMap().lastKey()","position":"org.apache.commons.collections4.map.LazySortedMap:135","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.map.AbstractHashedMap:1105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.ListIterator<E>.hasNext()) {\n    E = java.util.ListIterator<E>.next();\n}","position":"org.apache.commons.collections4.iterators.LoopingListIterator:146","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return java.lang.Integer == null","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:208","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final E E = java.util.ArrayList<E>.get(int)","position":"org.apache.commons.collections4.iterators.CollatingIterator:364","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.UniquePredicate.org.apache.commons.collections4.functors.UniquePredicate.<T>uniquePredicate()","position":"org.apache.commons.collections4.PredicateUtils:191","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.set.PredicatedSortedSet<E>(java.util.SortedSet<E> , org.apache.commons.collections4.Predicate<? super E>)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:110","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Collection<E>.clear()","position":"org.apache.commons.collections4.set.CompositeSet:320","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Iterator<I>","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:54","type":"CtReturnImpl"},"status":-2},{"failures":[345],"variableMapping":{"object":"input"},"name":"replace","transplant":{"sourceCode":"if (T == null) {\n    throw new org.apache.commons.collections4.FunctorException(\"Input Object must not be null\");\n} ","position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.Closure<? super T>.execute(T)","position":"org.apache.commons.collections4.functors.ClosureTransformer:72","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.List<E>.isEmpty()) {\n    throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\");\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:86","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(\"Unknown unknownObjectBehavior: \" + (org.apache.commons.collections4.comparators.FixedOrderComparator.UnknownObjectBehavior))","name":"math","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:242","type":"mutation","status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().tailSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:114","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return T == null ? org.apache.commons.collections4.functors.DefaultEquator.int : T.hashCode()","position":"org.apache.commons.collections4.functors.DefaultEquator:76","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException(\"There are no elements for this iterator to loop on\")","position":"org.apache.commons.collections4.iterators.LoopingListIterator:87","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (((org.apache.commons.collections4.Transformer<? super E, ? extends E> != null) && (java.util.SortedSet<E> != null)) && ((java.util.SortedSet<E>.size()) > 0)) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final E[] E[] = ((E[])(java.util.SortedSet<E>.toArray()));\n    java.util.SortedSet<E>.clear();\n    for (final E E : E[]) {\n        org.apache.commons.collections4.set.TransformedSortedSet<E>.decorated().add(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n    }\n} ","position":"org.apache.commons.collections4.set.TransformedSortedSet:80","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().containsAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:130","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDelete(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:543","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<E, org.apache.commons.collections4.bag.AbstractMapBag.MutableInteger>)(org.apache.commons.collections4.bag.AbstractMapBag<E>.getMap()))","position":"org.apache.commons.collections4.bag.TreeBag:109","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Time unit must not be null\")","position":"org.apache.commons.collections4.map.PassiveExpiringMap:197","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.util.NoSuchElementException()","position":"org.apache.commons.collections4.iterators.FilterIterator:100","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.StaticBucketMap:525","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator(java.util.List<E>.size())","position":"org.apache.commons.collections4.iterators.ReverseListIterator:171","type":"CtAssignmentImpl"},"status":-2},{"failures":[346,347,348,349],"variableMapping":{"preds":"predicates"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NonePredicate<T>(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.functors.NonePredicate:74","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-1},{"failures":[346,347,348,350,351,349],"variableMapping":{"preds":"predicates"},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.AllPredicate<T>(org.apache.commons.collections4.Predicate<T>[])","position":"org.apache.commons.collections4.functors.AllPredicate:87","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"status":-2},{"failures":[352],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().add(E)","position":"org.apache.commons.collections4.list.LazyList:131","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{"removed":"previousObjectSet","beforeFirst":"previousObjectSet"},"name":"replace","transplant":{"sourceCode":"return (!(this.boolean)) && (!(this.boolean))","position":"org.apache.commons.collections4.iterators.SingletonListIterator:66","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.MapIterator<K, V> org.apache.commons.collections4.MapIterator<K, V> = org.apache.commons.collections4.bidimap.AbstractBidiMapDecorator<K, V>.decorated().mapIterator()","position":"org.apache.commons.collections4.bidimap.UnmodifiableBidiMap:123","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    if (java.lang.Object == this) {\n        return true;\n    } \n    return (java.lang.Object == this) || (org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().equals(java.lang.Object));\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:194","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int int = java.io.ObjectInputStream.readInt()","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:1419","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) == null) {\n    org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>[][org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement.ordinal()] = null;\n} else {\n    if (org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.org.apache.commons.collections4.bidimap.TreeBidiMap.isBlack(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) {\n        org.apache.commons.collections4.bidimap.TreeBidiMap<K, V>.doRedBlackDeleteFixup(org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n    if ((org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement)) != null) {\n        if (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V> == (org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).getLeft(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement))) {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setLeft(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        } else {\n            org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.getParent(org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement).setRight(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n        }\n        org.apache.commons.collections4.bidimap.TreeBidiMap.Node<K, V>.setParent(null, org.apache.commons.collections4.bidimap.TreeBidiMap.DataElement);\n    } \n}","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:980","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.IdentityPredicate.org.apache.commons.collections4.functors.IdentityPredicate.<T>identityPredicate(T)","position":"org.apache.commons.collections4.PredicateUtils:161","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.list.TreeList.AVLNode<E>.indexOf(java.lang.Object, (int + (org.apache.commons.collections4.list.TreeList.AVLNode<E>.int)))","position":"org.apache.commons.collections4.list.TreeList:441","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<E>.previous()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:77","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Predicate<T>","position":"org.apache.commons.collections4.PredicateUtils:406","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.lang.Object instanceof java.util.Map.Entry) == false) {\n    return false;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntry:69","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(org.apache.commons.collections4.Predicate<? super T>[])","position":"org.apache.commons.collections4.PredicateUtils:422","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return K[].clone()","position":"org.apache.commons.collections4.keyvalue.MultiKey:181","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NotPredicate.org.apache.commons.collections4.functors.NotPredicate.notPredicate(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:452","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().toArray()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:128","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceEntrySet<K, V>.toArray(new java.lang.Object[org.apache.commons.collections4.map.AbstractHashedMap.EntrySet<K, V>.size()])","position":"org.apache.commons.collections4.map.AbstractReferenceMap:517","type":"CtReturnImpl"},"status":-2},{"failures":[353,354,355,356,357,358,359,360,361,362,363,364,365,366,367,368,369,370,371,372,373],"name":"returnValue","position":"org.apache.commons.collections4.map.AbstractMapDecorator:128","type":"mutation","return":"return true","status":-1},{"failures":[],"variableMapping":{"type":"type"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.InstanceofPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.functors.InstanceofPredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.InstanceofPredicate.org.apache.commons.collections4.functors.InstanceofPredicate.instanceOfPredicate(java.lang.Class<?>)","position":"org.apache.commons.collections4.PredicateUtils:175","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":6,"org.apache.commons.collections4.map.TransformedSortedMapTest.testObjectEqualsSelf":363,"org.apache.commons.collections4.map.DefaultedMapTest.testMapSize":147,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapHashCode":177,"org.apache.commons.collections4.collection.CompositeCollectionTest.testUnsupportedAdd":192,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPutAll":60,"org.apache.commons.collections4.map.HashedMapTest.testMapEquals":273,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":19,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":81,"org.apache.commons.collections4.map.DefaultedMapTest.testMapIsEmpty":150,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSimpleSerialization":209,"org.apache.commons.collections4.map.LRUMapTest.testMapEquals":245,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapToString":238,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsKey":243,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":165,"org.apache.commons.collections4.ClosureUtilsTest.testForClosure":342,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":70,"org.apache.commons.collections4.map.LRUMapTest.testMapHashCode":247,"org.apache.commons.collections4.CollectionUtilsTest.getNegative":326,"org.apache.commons.collections4.map.HashedMapTest.testMapGet":274,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapClear":212,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":22,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsKey":84,"org.apache.commons.collections4.map.LRUMapTest.testSimpleSerialization":252,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionClear":291,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsContract":299,"org.apache.commons.collections4.map.LRUMapTest.testSerializeDeserializeThenCompare":253,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":68,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":138,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPut":32,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapHashCode":160,"org.apache.commons.collections4.map.LazyMapTest.testMapSize":129,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapSize":231,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetIterator":335,"org.apache.commons.collections4.map.LazySortedMapTest.testLastKey":344,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapIsEmpty":155,"org.apache.commons.collections4.set.MapBackedSetTest.testSerializeDeserializeThenCompare":313,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapEquals":159,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyMapIterator":187,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":166,"org.apache.commons.collections4.map.Flat3MapTest.testSerializeDeserializeThenCompare":229,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":333,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContains":289,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":73,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemove":293,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToString":305,"org.apache.commons.collections4.map.LinkedMapTest.testMapClear":256,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapGet":236,"org.apache.commons.collections4.map.LinkedMapTest.testMapGet":260,"org.apache.commons.collections4.map.LazyMapTest.testMapRemove":135,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapToString":58,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPutAll":151,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":2,"org.apache.commons.collections4.map.PredicatedMapTest.testMapHashCode":35,"org.apache.commons.collections4.map.LinkedMapTest.testMapToString":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":74,"org.apache.commons.collections4.ListUtilsTest.testLazyList":352,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapHashCode":87,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsValue":234,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIteratorRemove":306,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":329,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":40,"org.apache.commons.collections4.map.PredicatedMapTest.testObjectEqualsSelf":355,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":51,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapGet":203,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":339,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetEquals":282,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIsEmpty":309,"org.apache.commons.collections4.map.UnmodifiableMapTest.testObjectEqualsSelf":356,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":41,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapToString":123,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":176,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapEquals":86,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapRemove":239,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":71,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":48,"org.apache.commons.collections4.map.LRUMapTest.testMapSize":241,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":142,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapClear":232,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsSelfHashCode":265,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testObjectEqualsSelf":373,"org.apache.commons.collections4.map.MultiKeyMapTest.testSimpleSerialization":216,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":43,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapEquals":202,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectHashCodeEqualsSelfHashCode":300,"org.apache.commons.collections4.map.LazyMapTest.testMapPutAll":133,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":102,"org.apache.commons.collections4.map.LinkedMapTest.testMapRemove":263,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsKey":271,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":3,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapHashCode":18,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":24,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContains":308,"org.apache.commons.collections4.map.DefaultedMapTest.testMapRemove":153,"org.apache.commons.collections4.map.LazyMapTest.testMapHashCode":127,"org.apache.commons.collections4.map.MultiValueMapTest.testObjectEqualsSelf":361,"org.apache.commons.collections4.map.LRUMapTest.testMapGet":246,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray2":285,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectEqualsSelf":316,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapRemove":61,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":106,"org.apache.commons.collections4.map.Flat3MapTest.testMapIsEmpty":219,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":103,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsKey":128,"org.apache.commons.collections4.map.LazySortedMapTest.testMapToString":28,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapIsEmpty":82,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":185,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapSize":53,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsKey":54,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":139,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsKey":26,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapHashCode":204,"org.apache.commons.collections4.set.MapBackedSetTest.testSetEquals":301,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":324,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":183,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":144,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyIterator":186,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsValue":158,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapIsEmpty":197,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":173,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapToString":205,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":42,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":111,"org.apache.commons.collections4.list.FixedSizeListTest.testListLastIndexOf":327,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":78,"org.apache.commons.collections4.map.HashedMapTest.testMapToString":276,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicate":351,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":116,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsValue":223,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionIterator":315,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":9,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsContract":318,"org.apache.commons.collections4.map.LazySortedMapTest.testMapHashCode":25,"org.apache.commons.collections4.map.TransformedMapTest.testMapHashCode":72,"org.apache.commons.collections4.map.Flat3MapTest.testSimpleSerialization":228,"org.apache.commons.collections4.set.MapBackedSetTest.testSetHashCode":302,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":168,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":334,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsKey":119,"org.apache.commons.collections4.map.LinkedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":75,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":328,"org.apache.commons.collections4.map.Flat3MapTest.testMapEquals":224,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapEquals":235,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.LazySortedMapTest.testMapRemove":33,"org.apache.commons.collections4.map.DefaultedMapTest.testMapEquals":149,"org.apache.commons.collections4.map.HashedMapTest.testMapContainsValue":272,"org.apache.commons.collections4.map.LazySortedMapTest.testMapIsEmpty":30,"org.apache.commons.collections4.map.LinkedMapTest.testMapEquals":259,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":49,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRemoveAll":288,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":107,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":321,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedHasNext":337,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testObjectEqualsSelf":358,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testSize":16,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContainsAll":190,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testObjectEqualsSelf":364,"org.apache.commons.collections4.map.SingletonMapTest.testObjectEqualsSelf":367,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapHashCode":184,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapToString":88,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsContract":214,"org.apache.commons.collections4.map.Flat3MapTest.testMapClear":221,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToArray":295,"org.apache.commons.collections4.map.HashedMapTest.testMapIsEmpty":268,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":322,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":105,"org.apache.commons.collections4.map.TransformedMapTest.testObjectEqualsSelf":359,"org.apache.commons.collections4.map.LinkedMapTest.testSerializeDeserializeThenCompare":267,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":99,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":5,"org.apache.commons.collections4.map.LinkedMapTest.testMapHashCode":261,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsContract":207,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray2":304,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapIsEmpty":230,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":93,"org.apache.commons.collections4.map.Flat3MapTest.testMapGet":225,"org.apache.commons.collections4.map.HashedMapTest.testSerializeDeserializeThenCompare":281,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIterator":296,"org.apache.commons.collections4.TransformerUtilsTest.testExecutorTransformer":345,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapHashCode":114,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionToArray":314,"org.apache.commons.collections4.map.DefaultedMapTest.testMapPut":152,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionContainsAll":284,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIteratorRemove":287,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":331,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":113,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray":195,"org.apache.commons.collections4.map.LazySortedMapTest.testMapEquals":29,"org.apache.commons.collections4.map.LazyMapTest.testObjectEqualsSelf":366,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapHashCode":45,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testSerializeDeserializeThenCompare":210,"org.apache.commons.collections4.map.Flat3MapTest.testMapToString":226,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testReset":15,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":325,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":4,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":98,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapSize":198,"org.apache.commons.collections4.map.DefaultedMapTest.testObjectEqualsSelf":369,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapSize":156,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapClear":199,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsKey":146,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPutAll":125,"org.apache.commons.collections4.map.HashedMapTest.testMapSize":269,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionContains":193,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":47,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":178,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":323,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapIsEmpty":117,"org.apache.commons.collections4.map.LazyMapTest.testMapEquals":131,"org.apache.commons.collections4.set.MapBackedSet2Test.testObjectEqualsSelf":297,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicate":350,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":174,"org.apache.commons.collections4.map.Flat3MapTest.testSerialisation0":218,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedIterator":188,"org.apache.commons.collections4.map.ListOrderedMap2Test.testObjectEqualsSelf":357,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapSize":118,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapHashCode":237,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapRemove":126,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapContainsValue":120,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIterator":196,"org.apache.commons.collections4.map.ListOrderedMapTest.testObjectEqualsSelf":360,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapRemove":91,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":332,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsSelfHashCode":279,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyListIterator":0,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":143,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":23,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":8,"org.apache.commons.collections4.map.LazySortedMapTest.testMapContainsValue":34,"org.apache.commons.collections4.map.LazySortedMapTest.testSortOrder":343,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":96,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionToArray2":191,"org.apache.commons.collections4.iterators.FilterIteratorTest.testSetPredicate":338,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapToString":161,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapHashCode":122,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapRemove":206,"org.apache.commons.collections4.map.LRUMapTest.testMapIsEmpty":240,"org.apache.commons.collections4.map.HashedMapTest.testMapRemove":277,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":20,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapIsEmpty":52,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":50,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionClear":310,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":38,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":64,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":69,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapContainsValue":85,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapContainsKey":157,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":94,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPut":89,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectEqualsSelf":365,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapPutAll":90,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":110,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapHashCode":104,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":66,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":167,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":79,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":140,"org.apache.commons.collections4.map.LinkedMapTest.testObjectHashCodeEqualsContract":264,"org.apache.commons.collections4.map.LinkedMapTest.testSimpleSerialization":266,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":330,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapPut":59,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":100,"org.apache.commons.collections4.set.MapBackedSetTest.testObjectHashCodeEqualsSelfHashCode":319,"org.apache.commons.collections4.map.Flat3MapTest.testMapRemove":227,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":115,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":7,"org.apache.commons.collections4.map.LRUMapTest.testMapClear":242,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testObjectEqualsSelf":372,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPutAll":163,"org.apache.commons.collections4.map.ReferenceIdentityMapTest.testMapContainsKey":233,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testRemoving1":17,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":36,"org.apache.commons.collections4.map.LazySortedMapTest.testObjectEqualsSelf":354,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapRemove":164,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":340,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionToString":286,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":101,"org.apache.commons.collections4.map.LazyMapTest.testMapPut":134,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemove":312,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapContainsValue":55,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapGet":213,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":336,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":97,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":112,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRetainAll":311,"org.apache.commons.collections4.map.DefaultedMapTest.testMapToString":148,"org.apache.commons.collections4.set.MapBackedSetTest.testSimpleSerialization":317,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":80,"org.apache.commons.collections4.map.DefaultedMapTest.testMapHashCode":145,"org.apache.commons.collections4.map.DefaultedMapTest.testMapContainsValue":154,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsKey":200,"org.apache.commons.collections4.map.LRUMapTest.testMapContainsValue":244,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testObjectEqualsSelf":353,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":44,"org.apache.commons.collections4.map.LazySortedMapTest.testMapPutAll":31,"org.apache.commons.collections4.map.MultiValueMapTest.testIterator_Key":211,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsContract":250,"org.apache.commons.collections4.map.HashedMapTest.testObjectHashCodeEqualsContract":278,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":77,"org.apache.commons.collections4.map.LazyMapTest.testMapContainsValue":136,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionContainsAll":303,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":37,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":46,"org.apache.commons.collections4.map.Flat3MapTest.testMapContainsKey":222,"org.apache.commons.collections4.map.MultiKeyMapTest.testObjectHashCodeEqualsSelfHashCode":215,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":341,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":141,"org.apache.commons.collections4.map.HashedMapTest.testSimpleSerialization":280,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapHashCode":92,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":39,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapHashCode":170,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapEquals":56,"org.apache.commons.collections4.IteratorUtilsTest.testEmptyOrderedMapIterator":189,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":171,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testMapPut":162,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testMapContainsValue":201,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testObjectEqualsSelf":362,"org.apache.commons.collections4.map.Flat3MapTest.testMapSize":220,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":108,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":11,"org.apache.commons.collections4.PredicateUtilsTest.testNeitherPredicateEx":349,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":10,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":63,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionRetainAll":292,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapPut":124,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsValue":258,"org.apache.commons.collections4.map.HashedMapTest.testMapHashCode":275,"org.apache.commons.collections4.set.MapBackedSet2Test.testSimpleSerialization":298,"org.apache.commons.collections4.set.MapBackedSet2Test.testCollectionIsEmpty":290,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":65,"org.apache.commons.collections4.iterators.IteratorChainTest.testEmptyChain":320,"org.apache.commons.collections4.map.LazySortedMapTest.testMapSize":27,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":76,"org.apache.commons.collections4.map.ListOrderedMapTest.testMapSize":83,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":169,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.map.CaseInsensitiveMapTest.testObjectHashCodeEqualsSelfHashCode":208,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapHashCode":62,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":67,"org.apache.commons.collections4.PredicateUtilsTest.testEitherPredicate":1,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testObjectEqualsSelf":371,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping1":12,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping2":13,"org.apache.commons.collections4.iterators.LoopingIteratorTest.testLooping3":14,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":109,"org.apache.commons.collections4.map.MultiKeyMapTest.testSerializeDeserializeThenCompare":217,"org.apache.commons.collections4.map.HashedMapTest.testMapClear":270,"org.apache.commons.collections4.map.LRUMapTest.testObjectHashCodeEqualsSelfHashCode":251,"org.apache.commons.collections4.collection.CompositeCollectionTest.testCollectionIsEmpty":194,"org.apache.commons.collections4.map.ListOrderedMap2Test.testMapHashCode":57,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx2":347,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx1":346,"org.apache.commons.collections4.map.LazyMapTest.testMapToString":130,"org.apache.commons.collections4.map.LazyMapTest.testMapIsEmpty":132,"org.apache.commons.collections4.PredicateUtilsTest.testNonePredicateEx3":348,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":180,"org.apache.commons.collections4.map.LinkedMapTest.testMapContainsKey":257,"org.apache.commons.collections4.map.MultiKeyMapTest.testMapEquals":121,"org.apache.commons.collections4.set.MapBackedSetTest.testCollectionRemoveAll":307,"org.apache.commons.collections4.map.PassiveExpiringMapTest.testObjectEqualsSelf":370,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":95,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":21,"org.apache.commons.collections4.map.LinkedMapTest.testMapSize":255,"org.apache.commons.collections4.map.FixedSizeMapTest.testObjectEqualsSelf":368,"org.apache.commons.collections4.map.LRUMapTest.testMapRemove":249,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapHashCode":137,"org.apache.commons.collections4.set.MapBackedSet2Test.testSerializeDeserializeThenCompare":294,"org.apache.commons.collections4.map.LRUMapTest.testMapToString":248,"org.apache.commons.collections4.set.MapBackedSet2Test.testSetHashCode":283}}]
