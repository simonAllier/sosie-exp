[{"failures":[0],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"throw new java.lang.UnsupportedOperationException(\"remove() method not supported for a NodeListIterator.\")","position":"org.apache.commons.collections4.iterators.NodeListIterator:85","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\")","position":"org.apache.commons.collections4.iterators.ReverseListIterator:129","type":"CtThrowImpl"},"status":-1},{"failures":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17],"binaryOperator":"(boolean) == false","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:221","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.List<E>.toArray(T[])","position":"org.apache.commons.collections4.set.ListOrderedSet:258","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (org.apache.commons.collections4.Factory<? extends O> == null) {\n    throw new java.lang.IllegalArgumentException(\"Factory must not be null\");\n} ","position":"org.apache.commons.collections4.functors.FactoryTransformer:48","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.comparators.FixedOrderComparator<T>.checkLocked()","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:163","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().set(int, E)","position":"org.apache.commons.collections4.list.GrowthList:186","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().element()","position":"org.apache.commons.collections4.queue.PredicatedQueue:111","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.queue.PredicatedQueue<E>.decorated().peek()","position":"org.apache.commons.collections4.queue.PredicatedQueue:107","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if (java.util.Map<K, V> == null) {\n    throw new java.lang.IllegalArgumentException(\"Map must not be null\");\n} ","position":"org.apache.commons.collections4.MapUtils:1757","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.io.ObjectOutputStream.writeObject(java.util.Map<K, V>)","position":"org.apache.commons.collections4.map.DefaultedMap:181","type":"CtInvocationImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsKey(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.splitmap.AbstractIterableGetMapDecorator:68","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.UniquePredicate<T>()","position":"org.apache.commons.collections4.functors.UniquePredicate:48","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NonePredicate.org.apache.commons.collections4.functors.NonePredicate.nonePredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:438","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.CloneNotSupportedException java.lang.CloneNotSupportedException","position":"org.apache.commons.collections4.map.AbstractHashedMap:1297","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator remove() cannot be called at this time\");\n} ","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:245","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"/** \n * Unknown object behavior enum.\n * @since 4.0\n */\npublic static enum UnknownObjectBehavior {\nBEFORE, AFTER, EXCEPTION;}","position":"org.apache.commons.collections4.comparators.FixedOrderComparator:58","type":"CtEnumImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().clear()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:104","type":"CtInvocationImpl"},"status":-2},{"failures":[18],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.AbstractHashedMap<K, V>.clear()","position":"org.apache.commons.collections4.map.AbstractHashedMap:848","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:137","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.bidimap.TreeBidiMap.this.remove(java.lang.Object)","position":"org.apache.commons.collections4.bidimap.TreeBidiMap:2116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final E E = java.util.ListIterator<? extends E>.next()","position":"org.apache.commons.collections4.iterators.FilterListIterator:232","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"/** \n * MapIterator implementation.\n */\nprotected static class LinkMapIterator<K, V> extends org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V> implements org.apache.commons.collections4.OrderedMapIterator<K, V> , org.apache.commons.collections4.ResettableIterator<K> {\n    protected LinkMapIterator(final org.apache.commons.collections4.map.AbstractLinkedMap<K, V> parent) {\n        org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.super(org.apache.commons.collections4.map.AbstractLinkedMap<K, V>);\n    }\n\n    public K next() {\n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.nextEntry().getKey();\n    }\n\n    public K previous() {\n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.previousEntry().getKey();\n    }\n\n    public K getKey() {\n        final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.currentEntry();\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getKey();\n    }\n\n    public V getValue() {\n        final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.currentEntry();\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.getValue();\n    }\n\n    public V setValue(final V value) {\n        final org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> = org.apache.commons.collections4.map.AbstractLinkedMap.LinkIterator<K, V>.currentEntry();\n        if (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == null) {\n            throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n        } \n        return org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.setValue(V);\n    }\n}","position":"org.apache.commons.collections4.map.AbstractLinkedMap:349","type":"CtClassImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterIterator:178","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiValueMap.this.clear()","position":"org.apache.commons.collections4.map.MultiValueMap:502","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:125","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.list.AbstractLinkedList.LinkedListIterator<E>.getLastNodeReturned().setValue(E)","position":"org.apache.commons.collections4.list.AbstractLinkedList:877","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.(size()) == 0) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:781","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null) {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E);\n} else {\n    org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(org.apache.commons.collections4.Transformer<? super E, ? extends E>.transform(E));\n}","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"int = java.util.Collection<? extends E>.size()","position":"org.apache.commons.collections4.list.TreeList:88","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final java.util.SortedMap<K, V> java.util.SortedMap<K, V> = org.apache.commons.collections4.map.TransformedSortedMap<K, V>.getSortedMap().tailMap(K)","position":"org.apache.commons.collections4.map.TransformedSortedMap:155","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{"entry":"entry","iterator":"iterator"},"name":"add","transplant":{"sourceCode":"this.java.util.Map.Entry<K, V> = this.java.util.Iterator<java.util.Map.Entry<K, V>>.previous()","position":"org.apache.commons.collections4.map.AbstractSortedMapDecorator:159","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((org.apache.commons.collections4.Predicate<T>)(org.apache.commons.collections4.functors.TruePredicate.org.apache.commons.collections4.Predicate))","position":"org.apache.commons.collections4.functors.TruePredicate:47","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.TransformedSortedMap<K, V>","position":"org.apache.commons.collections4.map.TransformedSortedMap:100","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"while (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> != null) {\n    if (((org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.int) == int) && org.apache.commons.collections4.map.MultiKeyMap<K, V>.(isEqualKey(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object))) {\n        return org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.getValue();\n    } \n    org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>.org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>;\n}","position":"org.apache.commons.collections4.map.MultiKeyMap:408","type":"CtWhileImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated()","position":"org.apache.commons.collections4.set.PredicatedSortedSet:96","type":"CtInvocationImpl"},"status":-2},{"failures":[19,20,21,22],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"InstantiateTransformer: Input object was not an instanceof Class, it was a null object\")","position":"org.apache.commons.collections4.functors.InstantiateTransformer:112","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"End index must not be less than start index.\")","position":"org.apache.commons.collections4.iterators.ArrayIterator:100","type":"CtThrowImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.lang.reflect.Constructor<? extends T> java.lang.reflect.Constructor<? extends T> = java.lang.Class<? extends T>.getConstructor(java.lang.Class<?>[])","position":"org.apache.commons.collections4.functors.InstantiateTransformer:115","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().removeAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:140","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(org.apache.commons.collections4.map.AbstractHashedMap.java.lang.String);\n} ","position":"org.apache.commons.collections4.map.ListOrderedMap:744","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().firstKey()","position":"org.apache.commons.collections4.bag.TreeBag:96","type":"CtReturnImpl"},"status":-2},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().isEmpty();\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:136","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{"iterator":"iterator"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.iterators.PushbackIterator<E>(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.PushbackIterator:65","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (java.util.Iterator<? extends E> instanceof org.apache.commons.collections4.iterators.PushbackIterator<?>) {\n    @java.lang.SuppressWarnings(value = \"unchecked\")\n    final org.apache.commons.collections4.iterators.PushbackIterator<E> org.apache.commons.collections4.iterators.PushbackIterator<E> = ((org.apache.commons.collections4.iterators.PushbackIterator<E>)(java.util.Iterator<? extends E>));\n    return org.apache.commons.collections4.iterators.PushbackIterator<E>;\n} ","position":"org.apache.commons.collections4.iterators.PushbackIterator:60","type":"CtIfImpl"},"status":-2},{"failures":[23,24,25,26,27,28,29,30,31,32,33,34],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().first()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:92","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.PredicatedSortedBag<E>.decorated().last()","position":"org.apache.commons.collections4.bag.PredicatedSortedBag:96","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{"object":"object"},"name":"replace","transplant":{"sourceCode":"return T == null","position":"org.apache.commons.collections4.functors.NullPredicate:64","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Set<T>.add(T)","position":"org.apache.commons.collections4.functors.UniquePredicate:67","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,8],"binaryOperator":"(org.apache.commons.collections4.Transformer<? super E, ? extends E>) == null","name":"negateConditional","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:144","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"if (null == E) {\n    throw new java.lang.NullPointerException(\"Attempted to add null object to queue\");\n} ","position":"org.apache.commons.collections4.queue.CircularFifoQueue:226","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == this) {\n    return true;\n} ","position":"org.apache.commons.collections4.keyvalue.AbstractMapEntryDecorator:73","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AnyPredicate.org.apache.commons.collections4.functors.AnyPredicate.anyPredicate(java.util.Collection<? extends org.apache.commons.collections4.Predicate<T>>)","position":"org.apache.commons.collections4.PredicateUtils:338","type":"CtReturnImpl"},"status":-2},{"failures":[35,36],"variableMapping":{"iterator":"currentIterator"},"name":"replace","transplant":{"sourceCode":"this.java.util.Iterator<? extends E> = java.util.Iterator<? extends I>","position":"org.apache.commons.collections4.iterators.TransformIterator:110","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<? extends E> = org.apache.commons.collections4.iterators.EmptyIterator.org.apache.commons.collections4.iterators.EmptyIterator.<E>emptyIterator()","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:86","type":"CtAssignmentImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"java.util.ListIterator<E> = java.util.List<E>.listIterator()","position":"org.apache.commons.collections4.iterators.LoopingListIterator:242","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"while (java.util.Iterator<? extends E>.hasNext()) {\n    java.util.List<E>.add(java.util.Iterator<? extends E>.next());\n}","position":"org.apache.commons.collections4.IteratorUtils:1025","type":"CtWhileImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().iterator()","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:116","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableIterator.org.apache.commons.collections4.iterators.UnmodifiableIterator.unmodifiableIterator(org.apache.commons.collections4.map.LinkedMap<K, ?>.keySet().iterator())","position":"org.apache.commons.collections4.map.LinkedMap:284","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"NPE, entry=\" + org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>) + \" entryIsHeader=\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V> == (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>))) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:325","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Iterable<T> instanceof java.util.List<?>) {\n    return ((java.util.List<T>)(java.lang.Iterable<T>)).get(int);\n} ","position":"org.apache.commons.collections4.CollectionUtils:1214","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.functors.CatchAndRethrowClosure<E>.executeAndThrow(E)","position":"org.apache.commons.collections4.functors.CatchAndRethrowClosure:60","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated().removeMapping(org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>, int, org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)","position":"org.apache.commons.collections4.map.MultiKeyMap:638","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterListIterator:244","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (java.lang.Object == null) {\n    return org.apache.commons.collections4.IteratorUtils.org.apache.commons.collections4.IteratorUtils.emptyIterator();\n} ","position":"org.apache.commons.collections4.IteratorUtils:1053","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().get(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:94","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if ((java.util.Collection<V>) == null) {\n    java.util.Collection<V> = new org.apache.commons.collections4.trie.AbstractPatriciaTrie.Values();\n} ","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:407","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.TransformerClosure<E>(org.apache.commons.collections4.Transformer<? super E, ?>)","position":"org.apache.commons.collections4.functors.TransformerClosure:52","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"throw new org.apache.commons.collections4.FunctorException(\"ExceptionClosure invoked\")","position":"org.apache.commons.collections4.functors.ExceptionClosure:65","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException((((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\"))","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"CtThrowImpl"},"status":-2},{"failures":[37,38,39,40,41,18,42,43,44,45,46,47,48],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"if (!(org.apache.commons.collections4.iterators.FilterListIterator<E>.setNextObject())) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:222","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearPreviousObject();\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setNextObject())) {\n        return false;\n    } \n    org.apache.commons.collections4.iterators.FilterListIterator<E>.clearNextObject();\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:220","type":"CtIfImpl"},"status":-1},{"failures":[49,50,51,52],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return null","position":"org.apache.commons.collections4.map.Flat3Map:347","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return ((java.util.SortedMap<K, V>)(java.util.Map<K, V>))","position":"org.apache.commons.collections4.map.PredicatedSortedMap:92","type":"CtReturnImpl"},"status":-1},{"failures":[53,54,55,56],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"boolean = true","position":"org.apache.commons.collections4.iterators.FilterListIterator:235","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (boolean) {\n    throw new java.lang.IllegalStateException(\"remove() cannot be called\");\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:119","type":"CtIfImpl"},"status":-1},{"failures":[],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"E = null","position":"org.apache.commons.collections4.iterators.FilterIterator:164","type":"CtAssignmentImpl"},"status":0},{"failures":[57],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<E>.hasPrevious()) == false) {\n    return (java.util.List<E>.size()) - 1;\n} ","position":"org.apache.commons.collections4.iterators.LoopingListIterator:171","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.current().getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:56","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>.getKey()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:85","type":"CtReturnImpl"},"status":-2},{"failures":[58,59],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().retainAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:181","type":"CtSynchronizedImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().removeAll(java.util.Collection<?>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:175","type":"CtSynchronizedImpl"},"status":-1},{"failures":[],"variableMapping":{"this":"this"},"name":"add","transplant":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().last()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:85","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.set.AbstractSortedSetDecorator<E>.decorated().first()","position":"org.apache.commons.collections4.set.AbstractSortedSetDecorator:81","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return false","position":"org.apache.commons.collections4.comparators.TransformingComparator:119","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.list.FixedSizeList<E>(java.util.List<E>)","position":"org.apache.commons.collections4.list.FixedSizeList:56","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.functors.ComparatorPredicate:167","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:100","type":"CtAssignmentImpl"},"status":0},{"failures":[19,20,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112],"binaryOperator":"int < 0","name":"conditionalBoundary","position":"org.apache.commons.collections4.iterators.ArrayIterator:119","type":"mutation","status":-1},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return new org.apache.commons.collections4.map.AbstractReferenceMap.ReferenceMapIterator<K, V>(this)","position":"org.apache.commons.collections4.map.AbstractReferenceMap:307","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter<K, V>(java.util.Map<K, V>.entrySet())","position":"org.apache.commons.collections4.map.AbstractIterableMap:34","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.comparator()","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1707","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bag.TreeBag<E>.getMap().comparator()","position":"org.apache.commons.collections4.bag.TreeBag:104","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.ChainedClosure<E>(org.apache.commons.collections4.Closure<? super E>[])","position":"org.apache.commons.collections4.functors.ChainedClosure:52","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Iterator<? extends E>) == null) {\n    org.apache.commons.collections4.iterators.LazyIteratorChain<E>.updateCurrentIterator();\n} ","position":"org.apache.commons.collections4.iterators.LazyIteratorChain:144","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"prototype":"constantToReturn"},"name":"replace","transplant":{"sourceCode":"try {\n    T.getClass().getConstructor(new java.lang.Class<?>[]{ T.getClass() });\n    return new org.apache.commons.collections4.functors.InstantiateFactory<T>(((java.lang.Class<T>)(T.getClass())) , new java.lang.Class<?>[]{ T.getClass() } , new java.lang.Object[]{ T });\n} catch (final java.lang.NoSuchMethodException java.lang.NoSuchMethodException) {\n    if (T instanceof java.io.Serializable) {\n        return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n    } \n}","position":"org.apache.commons.collections4.functors.PrototypeFactory:67","type":"CtTryImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.ConstantFactory.org.apache.commons.collections4.functors.ConstantFactory.constantFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:84","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"boolean boolean = false","position":"org.apache.commons.collections4.list.AbstractLinkedList:256","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.ReverseListIterator:97","type":"CtReturnImpl"},"status":-2},{"failures":[113,114,115,54,116,117,100,118,56],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n    throw new java.util.NoSuchElementException();\n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:99","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceReaction","transplant":{"sourceCode":"java.util.Map.Entry<K, V> = null","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:96","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Map.Entry<K, V> = java.util.Iterator<java.util.Map.Entry<K, V>>.next()","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:84","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.entrySet()","position":"org.apache.commons.collections4.map.PassiveExpiringMap:369","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"@java.lang.SuppressWarnings(value = \"unchecked\")\nfinal org.apache.commons.collections4.Predicate<T> org.apache.commons.collections4.Predicate<T> = org.apache.commons.collections4.PredicateUtils.org.apache.commons.collections4.PredicateUtils.<T>onePredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:355","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.iterators.CollatingIterator:398","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.ListIterator<? extends E>) == null) {\n    return false;\n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:260","type":"CtIfImpl"},"status":-2},{"failures":[],"binaryOperator":"(((((\"Entry.next=null, data[removeIndex]=\" + (org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>[][int])) + \" previous=\") + org.apache.commons.collections4.map.AbstractHashedMap.HashEntry<K, V>) + \" key=\") + K)","name":"math","position":"org.apache.commons.collections4.map.LRUMap:312","type":"mutation","status":-2},{"failures":[119,120,121,122,123,124,125,126,127,128,129],"variableMapping":{"this":"this"},"name":"replace","transplant":{"sourceCode":"return org.apache.commons.collections4.iterators.UnmodifiableListIterator.umodifiableListIterator(org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator())","position":"org.apache.commons.collections4.list.UnmodifiableList:114","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().listIterator()","position":"org.apache.commons.collections4.list.AbstractListDecorator:91","type":"CtReturnImpl"},"status":-1},{"failures":[130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167],"name":"delete","type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.Iterator<I>.remove()","position":"org.apache.commons.collections4.iterators.AbstractUntypedIteratorDecorator:62","type":"CtInvocationImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return ((java.lang.Number)(java.lang.Object))","position":"org.apache.commons.collections4.MapUtils:188","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"final org.apache.commons.collections4.map.TransformedSortedMap<K, V> org.apache.commons.collections4.map.TransformedSortedMap<K, V> = new org.apache.commons.collections4.map.TransformedSortedMap<K, V>(java.util.SortedMap<K, V> , org.apache.commons.collections4.Transformer<? super K, ? extends K> , org.apache.commons.collections4.Transformer<? super V, ? extends V>)","position":"org.apache.commons.collections4.map.TransformedSortedMap:93","type":"CtLocalVariableImpl"},"status":-2},{"failures":[],"binaryOperator":"(((\"Objects of type \" + (E.getClass())) + \" cannot be added to \") + \"a naturally ordered TreeBag as it does not implement Comparable\")","name":"math","position":"org.apache.commons.collections4.bag.TreeBag:87","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replace","transplant":{"sourceCode":"return \"Iterator[]\"","position":"org.apache.commons.collections4.map.AbstractHashedMap:1203","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().toString()","position":"org.apache.commons.collections4.collection.SynchronizedCollection:212","type":"CtReturnImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"add","transplant":{"sourceCode":"org.apache.commons.collections4.map.StaticBucketMap.this.clear()","position":"org.apache.commons.collections4.map.StaticBucketMap:566","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().clear()","position":"org.apache.commons.collections4.map.AbstractMapDecorator:78","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.util.Collection<E>.iterator().next()","position":"org.apache.commons.collections4.CollectionUtils:1787","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return 0","position":"org.apache.commons.collections4.iterators.AbstractEmptyIterator:53","type":"CtReturnImpl"},"status":-2},{"failures":[1,2,3,5,6,7,9,10,12,14,15,16,17],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Cannot delete root Entry!\")","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:501","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNextByIterator(java.util.Iterator<? extends E>)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:152","type":"CtInvocationImpl"},"status":-1},{"failures":[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,52,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Put must not be null\")","position":"org.apache.commons.collections4.SplitMapUtils:236","type":"CtThrowImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.collection.AbstractCollectionDecorator<E>.decorated().containsAll(java.util.Collection<?>)","position":"org.apache.commons.collections4.collection.AbstractCollectionDecorator:136","type":"CtReturnImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>.isEmpty()) {\n    return null;\n} else {\n    return org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V>;\n}","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1218","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractOrderedMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.map.AbstractOrderedMapDecorator:82","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"final java.util.SortedSet<E> java.util.SortedSet<E> = org.apache.commons.collections4.set.PredicatedSortedSet<E>.decorated().headSet(E)","position":"org.apache.commons.collections4.set.PredicatedSortedSet:109","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.NOPClosure.org.apache.commons.collections4.functors.NOPClosure.<E>nopClosure()","position":"org.apache.commons.collections4.functors.ForClosure:53","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"java.util.Map<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V> = ((java.util.Map<org.apache.commons.collections4.keyvalue.MultiKey<? extends K>, V>)(java.io.ObjectInputStream.readObject()))","position":"org.apache.commons.collections4.map.MultiKeyMap:904","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.Transformer<? super K, ? extends V>.transform(((K)(java.lang.Object)))","position":"org.apache.commons.collections4.map.DefaultedMap:203","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"flag":"nextObjectSet","removed":"nextObjectSet"},"name":"add","transplant":{"sourceCode":"this.boolean = boolean","position":"org.apache.commons.collections4.map.Flat3Map:802","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"boolean = false","position":"org.apache.commons.collections4.iterators.FilterIterator:165","type":"CtAssignmentImpl"},"status":0},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return org.apache.commons.collections4.trie.AbstractPatriciaTrie.this.get(java.lang.Object)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:1734","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.Map<K, V>.get(java.lang.Object)","position":"org.apache.commons.collections4.map.DefaultedMap:205","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsFalsePredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsFalsePredicate:49","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.OrPredicate.org.apache.commons.collections4.functors.OrPredicate.<T>orPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:306","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"predicate":"predicate"},"name":"add","transplant":{"sourceCode":"return new org.apache.commons.collections4.functors.NullIsExceptionPredicate<T>(org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.functors.NullIsExceptionPredicate:50","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.TransformedPredicate.org.apache.commons.collections4.functors.TransformedPredicate.<T>transformedPredicate(org.apache.commons.collections4.Transformer<? super T, ? extends T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:537","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"root":"object"},"name":"replace","transplant":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:111","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"E = E","position":"org.apache.commons.collections4.iterators.FilterListIterator:234","type":"CtAssignmentImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"java.lang.Object = java.util.Map<?, ?>.get(K)","position":"org.apache.commons.collections4.map.Flat3Map:1167","type":"CtAssignmentImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"synchronized(java.lang.Object) {\n    return org.apache.commons.collections4.collection.SynchronizedCollection<E>.decorated().addAll(java.util.Collection<? extends E>);\n}","position":"org.apache.commons.collections4.collection.SynchronizedCollection:112","type":"CtSynchronizedImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return E","position":"org.apache.commons.collections4.iterators.LoopingListIterator:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.AndPredicate.org.apache.commons.collections4.functors.AndPredicate.<T>andPredicate(org.apache.commons.collections4.Predicate<? super T>, org.apache.commons.collections4.Predicate<? super T>)","position":"org.apache.commons.collections4.PredicateUtils:258","type":"CtReturnImpl"},"status":-2},{"failures":[],"binaryOperator":"(int - int)","name":"math","position":"org.apache.commons.collections4.list.GrowthList:154","type":"mutation","status":0},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"org.apache.commons.collections4.map.MultiKeyMap<K, V>.decorated()","position":"org.apache.commons.collections4.map.MultiKeyMap:604","type":"CtInvocationImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (java.util.Collection<? extends E>.size()) > 0","position":"org.apache.commons.collections4.iterators.LoopingIterator:71","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.MultiMap<K, C>.containsKey(org.apache.commons.collections4.Transformer<C, K>.transform(((C)(java.lang.Object))))","position":"org.apache.commons.collections4.collection.IndexedCollection:148","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"org.apache.commons.collections4.iterators.ObjectGraphIterator<E>.findNext(E)","position":"org.apache.commons.collections4.iterators.ObjectGraphIterator:192","type":"CtInvocationImpl"},"status":-2},{"failures":[348,349,120,350,351,352,353,354,355,356,357],"variableMapping":{"iterator":"iterator"},"name":"replace","transplant":{"sourceCode":"return this.java.util.ListIterator<E>.hasNext()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:62","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return java.util.ListIterator<E>.hasPrevious()","position":"org.apache.commons.collections4.iterators.AbstractListIteratorDecorator:77","type":"CtReturnImpl"},"status":-1},{"failures":[],"binaryOperator":"((((((\"reuse=null, header.after=\" + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" header.before\") + (org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>.org.apache.commons.collections4.map.AbstractLinkedMap.LinkEntry<K, V>)) + \" key=\") + K) + \" value=\")","name":"math","position":"org.apache.commons.collections4.map.LRUMap:271","type":"mutation","status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"final org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> org.apache.commons.collections4.trie.AbstractPatriciaTrie.TrieEntry<K, V> = org.apache.commons.collections4.trie.AbstractPatriciaTrie<K, V>.getEntry(K)","position":"org.apache.commons.collections4.trie.AbstractPatriciaTrie:813","type":"CtLocalVariableImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"throw new java.lang.IllegalArgumentException(\"Closure must not be null\")","position":"org.apache.commons.collections4.functors.WhileClosure:59","type":"CtThrowImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addReaction","transplant":{"sourceCode":"if ((boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot set to list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:142","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterListIterator<E>.(setPreviousObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterListIterator:145","type":"CtIfImpl"},"status":-2},{"failures":[],"variableMapping":{"startIndex":"endIndex","index":"index"},"name":"add","transplant":{"sourceCode":"return (this.int) > (this.int)","position":"org.apache.commons.collections4.iterators.ArrayListIterator:105","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return (int) < (int)","position":"org.apache.commons.collections4.iterators.ArrayIterator:135","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"if (org.apache.commons.collections4.Predicate<? super T> == null) {\n    throw new java.lang.IllegalArgumentException(\"The predicate to call must not be null\");\n} ","position":"org.apache.commons.collections4.functors.TransformedPredicate:56","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return new org.apache.commons.collections4.functors.FactoryTransformer<I, O>(org.apache.commons.collections4.Factory<? extends O>)","position":"org.apache.commons.collections4.functors.FactoryTransformer:51","type":"CtReturnImpl"},"status":-2},{"failures":[18],"name":"returnValue","position":"org.apache.commons.collections4.iterators.FilterListIterator:261","type":"mutation","return":"return false","status":-1},{"failures":[113,114,115,54,116,117,100,118,56],"variableMapping":{"validForUpdate":"nextObjectSet"},"name":"replace","transplant":{"sourceCode":"if ((this.boolean) == false) {\n    throw new java.lang.IllegalStateException(\"Cannot remove from list until next() or previous() called\");\n} ","position":"org.apache.commons.collections4.iterators.ReverseListIterator:128","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if (!(boolean)) {\n    if (!org.apache.commons.collections4.iterators.FilterIterator<E>.(setNextObject())) {\n        throw new java.util.NoSuchElementException();\n    } \n} ","position":"org.apache.commons.collections4.iterators.FilterIterator:98","type":"CtIfImpl"},"status":-1},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return true","position":"org.apache.commons.collections4.list.AbstractLinkedList:326","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator<K, V>.decorated().previousKey(K)","position":"org.apache.commons.collections4.bidimap.AbstractOrderedBidiMapDecorator:80","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{"last":"entry"},"name":"add","transplant":{"sourceCode":"if ((this.java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException(\"Iterator setValue() can only be called after next() and before remove()\");\n} ","position":"org.apache.commons.collections4.iterators.EntrySetMapIterator:140","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"if ((java.util.Map.Entry<K, V>) == null) {\n    throw new java.lang.IllegalStateException();\n} ","position":"org.apache.commons.collections4.map.EntrySetToMapIteratorAdapter:108","type":"CtIfImpl"},"status":0},{"failures":[],"variableMapping":{"prototype":"prototype"},"name":"replace","transplant":{"sourceCode":"if (T instanceof java.io.Serializable) {\n    return ((org.apache.commons.collections4.Factory<T>)(new org.apache.commons.collections4.functors.PrototypeFactory.PrototypeSerializationFactory<java.io.Serializable>(((java.io.Serializable)(T)))));\n} ","position":"org.apache.commons.collections4.functors.PrototypeFactory:74","type":"CtIfImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.functors.PrototypeFactory.org.apache.commons.collections4.functors.PrototypeFactory.<T>prototypeFactory(T)","position":"org.apache.commons.collections4.FactoryUtils:106","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceRandom","transplant":{"sourceCode":"return org.apache.commons.collections4.queue.TransformedQueue<E>.getQueue().offer(org.apache.commons.collections4.collection.TransformedCollection<E>.transform(E))","position":"org.apache.commons.collections4.queue.TransformedQueue:115","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.map.AbstractMapDecorator<K, V>.decorated().containsValue(java.lang.Object)","position":"org.apache.commons.collections4.map.AbstractMapDecorator:86","type":"CtReturnImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"addRandom","transplant":{"sourceCode":"return java.lang.reflect.Array.((E)(java.lang.reflect.Array.get(java.lang.Object, (int)++)))","position":"org.apache.commons.collections4.iterators.ArrayIterator:150","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"java.util.ListIterator<E>.add(E)","position":"org.apache.commons.collections4.iterators.LoopingListIterator:215","type":"CtInvocationImpl"},"status":-2},{"failures":[],"variableMapping":{},"name":"replaceWittgenstein","transplant":{"sourceCode":"return org.apache.commons.collections4.list.AbstractListDecorator<E>.decorated().remove(int)","position":"org.apache.commons.collections4.list.AbstractListDecorator:99","type":"CtReturnImpl"},"type":"adrStmt","transplantationPoint":{"sourceCode":"return org.apache.commons.collections4.list.TransformedList<E>.getList().get(int)","position":"org.apache.commons.collections4.list.TransformedList:120","type":"CtReturnImpl"},"status":-2},{"failureDictionary":{"org.apache.commons.collections4.collection.TransformedCollectionTest.testCollectionContainsAll":342,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testPreviousChangesNext":43,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapSize":224,"org.apache.commons.collections4.iterators.LoopingListIteratorTest.testNextAndPreviousIndex":57,"org.apache.commons.collections4.collection.UnmodifiableBoundedCollectionTest.testCollectionContainsAll":340,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapToString":218,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsKey":304,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorPreviousRemovePrevious":352,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemovePrevious":128,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveChangesMap":152,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsValue":296,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorByIndex":356,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIterator":73,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapIsEmpty":179,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPut":195,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapRemove":284,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapGet":217,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapEquals":307,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapClear":313,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testEmptyIterator":15,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testLastKey":50,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPutAll":52,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsKey":268,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIteratorByIndex":348,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testFullIterator":90,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null_next":4,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testCollections360":18,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemoveAll":32,"org.apache.commons.collections4.map.SingletonMapTest.testMapIsEmpty":322,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEqualsNull":67,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapSize":180,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIterator":351,"org.apache.commons.collections4.iterators.IteratorChainTest.testRemoveFromFilteredIterator":53,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testRemove":64,"org.apache.commons.collections4.map.TransformedMapTest.testMapContainsKey":286,"org.apache.commons.collections4.list.GrowthListTest.testCollectionContainsAll":345,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testRemove":76,"org.apache.commons.collections4.list.TransformedListTest.testListListIterator":354,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testTruePredicate":37,"org.apache.commons.collections4.list.PredicatedListTest.testListListIterator":357,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSimpleSerialization":69,"org.apache.commons.collections4.map.TransformedMapTest.testMapSize":287,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNextChangesPrevious":42,"org.apache.commons.collections4.map.SingletonMapTest.testMapGet":327,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapIsEmpty":199,"org.apache.commons.collections4.map.PredicatedMapTest.testMapIsEmpty":254,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPut":219,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsValue":303,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectEqualsSelf":65,"org.apache.commons.collections4.iterators.FilterIteratorTest.testReturnValues":117,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapClear":189,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapGet":239,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRetainAll":33,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testBagContainsAll":168,"org.apache.commons.collections4.map.PredicatedMapTest.testMapGet":256,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPutAll":255,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testSortOrder":23,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesIteratorRemoveChangesMap":155,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapEquals":238,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSerializeDeserializeThenCompare":99,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPut":231,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsValue":285,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapToString":299,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapIsEmpty":272,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapEquals":192,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsContract":97,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapClear":201,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsValue":203,"org.apache.commons.collections4.set.ListOrderedSet2Test.testCollectionContainsAll":244,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapSize":212,"org.apache.commons.collections4.map.PredicatedMapTest.testMapRemove":258,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEqualsNull":79,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapEquals":228,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsValue":315,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testEvens":39,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapContainsValue":310,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsValue":215,"org.apache.commons.collections4.set.UnmodifiableSetTest.testCollectionContainsAll":248,"org.apache.commons.collections4.map.PredicatedMapTest.testEntrySetIteratorRemoveChangesMap":148,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPut":319,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalEmptyCollectionExists":68,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapEquals":316,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapToString":178,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEqualsNull":94,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapSize":269,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_WithEmptyIterators":10,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testFullIterator":75,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapEquals":176,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapContainsValue":275,"org.apache.commons.collections4.IteratorUtilsTest.testArrayListIterator":20,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalEmptyCollectionExists":108,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetRemoveChangesMap":156,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorRemove":12,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapSize":235,"org.apache.commons.collections4.map.PredicatedMapTest.testMapPut":257,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsKey":262,"org.apache.commons.collections4.map.TransformedMapTest.testMapPutAll":292,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapGet":302,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapPut":267,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIsEmpty":28,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes":46,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapPutAll":220,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testEmptyIterator":74,"org.apache.commons.collections4.iterators.FilterIteratorTest.testEmptyIterator":100,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testReset":87,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testRemoveFromFilteredIterator":55,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsValue":182,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiMapIteratorSet":186,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFailingHasNextBug":38,"org.apache.commons.collections4.map.TransformedMapTest.testMapToString":289,"org.apache.commons.collections4.map.SingletonMapTest.testMapSize":323,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRetainAll":154,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsKey":174,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIteratorRemove":30,"org.apache.commons.collections4.map.SingletonMapTest.testMapToString":328,"org.apache.commons.collections4.queue.PredicatedQueueTest.testCollectionContainsAll":338,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testRemove":17,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetRemoveChangesMap":162,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionIterator":29,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorNextRemoveNext":129,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapEquals":300,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSerializeDeserializeThenCompare":112,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByHeadMap":139,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalEmptyCollectionExists":80,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIterator":85,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapRemove":197,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyChain":35,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapPutAll":320,"org.apache.commons.collections4.map.ListOrderedMap2Test.testKeySetIteratorRemoveChangesMap":163,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapGet":184,"org.apache.commons.collections4.list.UnmodifiableListTest.testCollectionContainsAll":346,"org.apache.commons.collections4.collection.SynchronizedCollectionTest.testCollectionRemoveAll":59,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsSelfHashCode":111,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAll":165,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContains":26,"org.apache.commons.collections4.map.ListOrderedMapTest.testValuesRemoveAll":153,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapGet":317,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapPutAll":232,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalEmptyCollectionExists":95,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearByTailMap":140,"org.apache.commons.collections4.iterators.LazyIteratorChainTest.testEmptyIterator":36,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapClear":213,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapToString":318,"org.apache.commons.collections4.collection.PredicatedCollectionTest.testCollectionContainsAll":339,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapIsEmpty":311,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_SimpleNoHasNext":14,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testOdds":41,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPutAll":208,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapContainsKey":214,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemovePrevious":122,"org.apache.commons.collections4.set.TransformedSetTest.testCollectionContainsAll":245,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsSelfHashCode":83,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsKey":329,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testCanonicalFullCollectionExists":106,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapGet":265,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testEmptyIterator":114,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemoveNext":127,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testKeySetIteratorRemoveChangesMap":134,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testValuesIteratorRemoveChangesMap":142,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testFullIterator":115,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapEquals":264,"org.apache.commons.collections4.list.PredicatedListTest.testListListIteratorPreviousRemovePrevious":355,"org.apache.commons.collections4.list.FixedSizeListTest.testListListIterator":349,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveChangesMap":158,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapGet":177,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapGet":193,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemovePrevious":120,"org.apache.commons.collections4.list.SetUniqueListTest.testListIteratorAdd":119,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testFours":40,"org.apache.commons.collections4.map.TransformedMapTest.testMapClear":288,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapContainsValue":335,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsValue":227,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testEntrySetIteratorRemoveChangesMap":149,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRetainAll":160,"org.apache.commons.collections4.bag.TransformedSortedBagTest.testBagContainsAll":171,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionToArray2":34,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":147,"org.apache.commons.collections4.IteratorUtilsTest.testArrayIterator":19,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testFullIterator":16,"org.apache.commons.collections4.bag.PredicatedBagTest.testBagContainsAll":169,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIteratorsWithEmptyIterators":9,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapToString":240,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapSize":298,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapIsEmpty":187,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsKey":236,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapGet":282,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testEntrySetIteratorRemoveChangesMap":135,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiClearBySubMap":141,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapIsEmpty":211,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testValuesIteratorRemoveChangesMap":136,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesRemoveAll":159,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Simple":6,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionIteratorRemove":166,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testCanonicalFullCollectionExists":78,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectHashCodeEqualsSelfHashCode":98,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapToString":194,"org.apache.commons.collections4.map.PredicatedMapTest.testMapClear":251,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testFullIterator":103,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapIsEmpty":172,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testRemove":54,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testValuesIteratorRemoveChangesMap":145,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapGet":205,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapContainsKey":226,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapSize":188,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapPut":274,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapIsEmpty":308,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testIndexedArray":21,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testThrees":45,"org.apache.commons.collections4.map.SingletonMapTest.testMapEquals":326,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSimpleSerialization":81,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEqualsNull":107,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapEquals":332,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testValuesIteratorRemoveChangesMap":133,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testRemove":104,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_IteratorOfIterators":5,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectHashCodeEqualsContract":82,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsKey":324,"org.apache.commons.collections4.list.SetUniqueListTest.testRetainAllWithInitialList":164,"org.apache.commons.collections4.map.TransformedSortedMapTest.testEntrySetIteratorRemoveChangesMap":151,"org.apache.commons.collections4.bag.SynchronizedBagTest.testBagRemoveAll":58,"org.apache.commons.collections4.bag.TransformedBagTest.testBagContainsAll":170,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapSize":305,"org.apache.commons.collections4.list.TransformedListTest.testListListIteratorByIndex":353,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapIsEmpty":301,"org.apache.commons.collections4.map.PredicatedMapTest.testMapToString":252,"org.apache.commons.collections4.map.TransformedMapTest.testEntrySetIteratorRemoveChangesMap":150,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapSize":277,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapPut":283,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testRemove":91,"org.apache.commons.collections4.list.SetUniqueListTest.testCollectionRetainAll":167,"org.apache.commons.collections4.set.PredicatedSetTest.testCollectionContainsAll":242,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapSize":330,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorByIndex":350,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapSize":261,"org.apache.commons.collections4.list.FixedSizeListTest.testCollectionContainsAll":343,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapContainsValue":237,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testReset":60,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapContainsKey":181,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapEquals":280,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapToString":270,"org.apache.commons.collections4.map.TransformedMapTest.testMapPut":294,"org.apache.commons.collections4.iterators.UniqueFilterIteratorTest.testIterator":113,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectEqualsSelf":105,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapToString":230,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapContainsKey":202,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAdd":24,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapRemove":221,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapSize":312,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapToString":266,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testManual":44,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapPut":207,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsKey":249,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNoTransformer":8,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testObjectHashCodeEqualsContract":110,"org.apache.commons.collections4.iterators.FilterIteratorTest.testFullIterator":118,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionContainsAll":27,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapClear":278,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapGet":273,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testSimpleSerialization":96,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapContainsKey":314,"org.apache.commons.collections4.bidimap.UnmodifiableBidiMapTest.testMapIsEmpty":234,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testSortOrder":49,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRepeatedNext":116,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorNextRemoveNext":123,"org.apache.commons.collections4.set.PredicatedSortedSetTest.testCollectionContainsAll":241,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionAddAll":25,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapContainsValue":263,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapIsEmpty":333,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapGet":229,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testCanonicalFullCollectionExists":66,"org.apache.commons.collections4.map.TransformedMapTest.testMapRemove":295,"org.apache.commons.collections4.queue.TransformedQueueTest.testCollectionContainsAll":336,"org.apache.commons.collections4.map.TransformedMapTest.testMapGet":293,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsValue":191,"org.apache.commons.collections4.map.PredicatedMapTest.testMapContainsValue":259,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapPutAll":196,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapIsEmpty":223,"org.apache.commons.collections4.map.TransformedMapTest.testMapIsEmpty":291,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapToString":206,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed1":1,"org.apache.commons.collections4.map.PredicatedMapTest.testMapSize":250,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed2":2,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_Transformed3":3,"org.apache.commons.collections4.bag.PredicatedSortedBagTest.testCollectionRemove":31,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapClear":225,"org.apache.commons.collections4.map.UnmodifiableMapTest.testMapContainsKey":297,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapEquals":204,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByHeadMap":130,"org.apache.commons.collections4.iterators.FilterIteratorTest.testRemove":56,"org.apache.commons.collections4.list.SetUniqueListTest.testListListIteratorPreviousRemoveNext":121,"org.apache.commons.collections4.map.FixedSizeMapTest.testMapEquals":271,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearByTailMap":131,"org.apache.commons.collections4.set.ListOrderedSetTest.testCollectionContainsAll":247,"org.apache.commons.collections4.map.PredicatedMapTest.testMapEquals":253,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testKeySetIteratorRemoveChangesMap":143,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testListIteratorSet":86,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorAdd":125,"org.apache.commons.collections4.list.GrowthListTest.testListListIteratorPreviousRemovePrevious":124,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapToString":185,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testKeySetIteratorRemoveChangesMap":137,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testBidiClearBySubMap":132,"org.apache.commons.collections4.map.TransformedSortedMapTest.testMapRemove":321,"org.apache.commons.collections4.collection.UnmodifiableCollectionTest.testCollectionContainsAll":341,"org.apache.commons.collections4.list.PredicatedListTest.testCollectionContainsAll":347,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testSerializeDeserializeThenCompare":72,"org.apache.commons.collections4.list.TransformedListTest.testCollectionContainsAll":344,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes3":48,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testMapRemove":233,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIndexedArray":22,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testObjectEqualsSelf":77,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapSize":200,"org.apache.commons.collections4.iterators.FilterListIteratorTest.testNestedSixes2":47,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapContainsKey":276,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testEntrySetIteratorRemoveChangesMap":144,"org.apache.commons.collections4.bidimap.DualTreeBidiMapTest.testMapContainsKey":190,"org.apache.commons.collections4.queue.UnmodifiableQueueTest.testCollectionContainsAll":337,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testObjectEqualsSelf":92,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapToString":279,"org.apache.commons.collections4.iterators.ArrayListIterator2Test.testSerializeDeserializeThenCompare":84,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteration_RootNull":11,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testFirstKey":51,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsSelfHashCode":71,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testObjectHashCodeEqualsContract":70,"org.apache.commons.collections4.map.TransformedMapTest.testMapEquals":290,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapGet":309,"org.apache.commons.collections4.bidimap.UnmodifiableSortedBidiMapTest.testMapEquals":183,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapContainsValue":175,"org.apache.commons.collections4.map.PredicatedSortedMapTest.testMapIsEmpty":281,"org.apache.commons.collections4.set.TransformedSortedSetTest.testCollectionContainsAll":246,"org.apache.commons.collections4.iterators.ReverseListIteratorTest.testAddThenRemove":0,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testFullIterator":63,"org.apache.commons.collections4.map.FixedSizeSortedMapTest.testMapIsEmpty":260,"org.apache.commons.collections4.map.ListOrderedMapTest.testKeySetIteratorRemoveChangesMap":157,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testMapRemove":209,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testBidiMapIteratorSet":198,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testCanonicalFullCollectionExists":93,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testIterator":101,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testSimpleSerialization":109,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testKeySetIteratorRemoveChangesMap":146,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testMapEquals":216,"org.apache.commons.collections4.bidimap.UnmodifiableOrderedBidiMapTest.testMapSize":173,"org.apache.commons.collections4.set.UnmodifiableSortedSetTest.testCollectionContainsAll":243,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructor_null1":13,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapToString":331,"org.apache.commons.collections4.list.GrowthListTest.testListIteratorSet":126,"org.apache.commons.collections4.map.UnmodifiableSortedMapTest.testMapToString":306,"org.apache.commons.collections4.bidimap.DualTreeBidiMap2Test.testBidiMapIteratorSet":210,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testIterator":61,"org.apache.commons.collections4.iterators.ObjectGraphIteratorTest.testIteratorConstructorIteration_Empty":7,"org.apache.commons.collections4.iterators.ArrayIteratorTest.testEmptyIterator":62,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testIterator":88,"org.apache.commons.collections4.bidimap.DualHashBidiMapTest.testBidiMapIteratorSet":222,"org.apache.commons.collections4.iterators.ArrayListIteratorTest.testEmptyIterator":89,"org.apache.commons.collections4.map.ListOrderedMap2Test.testValuesIteratorRemoveChangesMap":161,"org.apache.commons.collections4.iterators.ArrayIterator2Test.testEmptyIterator":102,"org.apache.commons.collections4.map.SingletonMapTest.testMapContainsValue":325,"org.apache.commons.collections4.bidimap.DualLinkedHashBidiMapTest.testEntrySetIteratorRemoveChangesMap":138,"org.apache.commons.collections4.map.UnmodifiableOrderedMapTest.testMapGet":334}}]
